.global _start
.text
_start:
	mov %rsp,%rbp
	mov $malloc_SB_block_SB_head_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_first_SB_free_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_page_SB_tail_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_large_SB_size_CL_U64, %r15
	movq $1024, 0(%r15)
	mov $point_SB_of_SB_interest_CL_U64, %r15
	movq $0, 0(%r15)
	mov $rc_SB_magic_SB_number_CL_U64, %r15
	movq $423809104, 0(%r15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_text_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_init_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_data_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	mov $assemble_SB_final_CL_String, %r15
	movq $uuid_000000000007b6a7, 0(%r15)
	mov $assemble_SB_argv_SB_referenced_CL_U8, %r15
	movb $0, 0(%r15)
	mov $main_SB_with_SB_argv_CL_U8, %r15
	movb $0, 0(%r15)
	mov $main_SB_with_CL_U8, %r15
	movb $0, 0(%r15)
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	movb $0, 0(%r15)
	mov $config_SB_strict_CL_U8, %r15
	movb $1, 0(%r15)
	mov $config_SB_preprocess_CL_U8, %r15
	movb $1, 0(%r15)
	mov $config_SB_target_CL_String, %r15
	movq $uuid_000000000007b71d, 0(%r15)
	pushq $1
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
	pushq $0
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	movq $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	movq $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $global_SB_ctx_CL_FContextFContextCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	popq 168(%R15)
	popq 176(%R15)
	popq 184(%R15)
	popq 192(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	popq 168(%R15)
	popq 176(%R15)
	popq 184(%R15)
	popq 192(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	mov $unknown_SB_index_SB_of_SB_tag_CL_U64, %r15
	movq $99999, 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	mov $types_SB_have_SB_changed_CL_U8, %r15
	movb $1, 0(%r15)
	pushq $0
	pushq $0
	pushq $1
	movq $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	mov $uuid_SB_counter_CL_U64, %r15
	movq $0, 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	mov %rbp,%rsp
	popq %r8
	movq %rsp, %r9
	push %rbp
	mov %rsp, %rbp
	pushq %r8
	pushq %r9
	call main
	mov %rbp, %rsp
	pop %rbp
	mov $60, %rax
	mov $0, %rdi
	syscall
_EQ__EQ__CL_ArrowU64ConsStringString:
	pushq $0
	pushq $0
	pushq $0
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp $0,%R8
	je uuid_000000000007b54d
	cmp $0,%R8
	je uuid_000000000007b54e
	cmp $0,%R9
	je uuid_000000000007b54e
uuid_000000000007b54c:
	mov %R8, %r14
	movb 0(%r14), %r15b
	movb %r15b, -32(%rbp)
	mov %R9, %r14
	movb 0(%r14), %r15b
	movb %r15b, -40(%rbp)
	mov -32(%RBP), %R13B
	mov -40(%RBP), %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	movq %R13, -48(%rbp)
	mov -48(%rbp), %R10
	cmp $0,%R10
	je uuid_000000000007b54e
	mov -32(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	movq %R13, -48(%rbp)
	mov -48(%rbp), %R10
	cmp $0,%R10
	jne uuid_000000000007b54d
	inc %R8
	inc %R9
	jmp uuid_000000000007b54c
uuid_000000000007b54d:
	mov $1, %RAX
	jmp uuid_000000000007b54f
uuid_000000000007b54e:
	mov $0, %RAX
	jmp uuid_000000000007b54f
uuid_000000000007b54f:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsStringString:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowSConsSS:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b553
	jmp uuid_000000000007b555
uuid_000000000007b553:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b550
	movq -48(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b552
uuid_000000000007b550:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b552:
	mov -72(%RBP),%RSP
	add $-72, %RSP
uuid_000000000007b555:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
deep_SB_hash_CL_ArrowU64U64:
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
non_SB_zero_CL_ArrowU64S:
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b55b
	push %RBP
	jmp uuid_000000000007b558
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b557
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b55a
uuid_000000000007b558:
uuid_000000000007b55a:
	mov -104(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007b55d
uuid_000000000007b55b:
	movq $0, -40(%rbp)
uuid_000000000007b55d:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64String:
	pushq $0
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b55e
	jmp uuid_000000000007b560
uuid_000000000007b55e:
	movq $1, -24(%rbp)
uuid_000000000007b560:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsSS:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b567
	jmp uuid_000000000007b569
uuid_000000000007b567:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b564
	jmp uuid_000000000007b566
uuid_000000000007b564:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b561
	jmp uuid_000000000007b563
uuid_000000000007b561:
	movb $1, -192(%rbp)
uuid_000000000007b563:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b566:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b569:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5c5
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b57c
	jmp uuid_000000000007b57e
uuid_000000000007b57c:
	push %RBP
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b56d
	jmp uuid_000000000007b56f
uuid_000000000007b56d:
	push %RBP
	mov -368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b56a
	jmp uuid_000000000007b56c
uuid_000000000007b56a:
	movb $1, -384(%rbp)
uuid_000000000007b56c:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007b56f:
	mov -392(%RBP),%RSP
	add $-408, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b579
	jmp uuid_000000000007b57b
uuid_000000000007b579:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b573
	jmp uuid_000000000007b575
uuid_000000000007b573:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b570
	jmp uuid_000000000007b572
uuid_000000000007b570:
	movb $1, -448(%rbp)
uuid_000000000007b572:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007b575:
	mov -456(%RBP),%RSP
	add $-472, %RSP
	mov -448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b576
	jmp uuid_000000000007b578
uuid_000000000007b576:
	movb $1, -336(%rbp)
uuid_000000000007b578:
	mov -416(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007b57b:
	mov -352(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007b57e:
	mov -344(%RBP),%RSP
	add $-472, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5c2
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b597
	jmp uuid_000000000007b599
uuid_000000000007b597:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b585
	jmp uuid_000000000007b587
uuid_000000000007b585:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b582
	jmp uuid_000000000007b584
uuid_000000000007b582:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b57f
	jmp uuid_000000000007b581
uuid_000000000007b57f:
	movb $1, -592(%rbp)
uuid_000000000007b581:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007b584:
	mov -608(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007b587:
	mov -600(%RBP),%RSP
	add $-664, %RSP
	mov -592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b594
	jmp uuid_000000000007b596
uuid_000000000007b594:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b58e
	jmp uuid_000000000007b590
uuid_000000000007b58e:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b58b
	jmp uuid_000000000007b58d
uuid_000000000007b58b:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b588
	jmp uuid_000000000007b58a
uuid_000000000007b588:
	movb $1, -704(%rbp)
uuid_000000000007b58a:
	mov -752(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b58d:
	mov -720(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b590:
	mov -712(%RBP),%RSP
	add $-776, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b591
	jmp uuid_000000000007b593
uuid_000000000007b591:
	movb $1, -544(%rbp)
uuid_000000000007b593:
	mov -672(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b596:
	mov -560(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b599:
	mov -552(%RBP),%RSP
	add $-776, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5bf
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5b2
	jmp uuid_000000000007b5b4
uuid_000000000007b5b2:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5a3
	jmp uuid_000000000007b5a5
uuid_000000000007b5a3:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b5a0
	jmp uuid_000000000007b5a2
uuid_000000000007b5a0:
	movb $1, -896(%rbp)
uuid_000000000007b5a2:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007b5a5:
	mov -904(%RBP),%RSP
	add $-920, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5af
	jmp uuid_000000000007b5b1
uuid_000000000007b5af:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5a9
	jmp uuid_000000000007b5ab
uuid_000000000007b5a9:
	push %RBP
	mov -944(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b5a6
	jmp uuid_000000000007b5a8
uuid_000000000007b5a6:
	movb $1, -960(%rbp)
uuid_000000000007b5a8:
	mov -976(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007b5ab:
	mov -968(%RBP),%RSP
	add $-984, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5ac
	jmp uuid_000000000007b5ae
uuid_000000000007b5ac:
	movb $1, -848(%rbp)
uuid_000000000007b5ae:
	mov -928(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007b5b1:
	mov -864(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007b5b4:
	mov -856(%RBP),%RSP
	add $-984, %RSP
	mov -848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5bc
	push %RBP
	jmp uuid_000000000007b5b9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b5b8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b5bb
uuid_000000000007b5b9:
uuid_000000000007b5bb:
	mov -992(%RBP),%RSP
	add $-992, %RSP
	jmp uuid_000000000007b5be
uuid_000000000007b5bc:
	push %RBP
	movq -984(%RBP), %RAX
	movq -920(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5b5
	jmp uuid_000000000007b5b7
uuid_000000000007b5b5:
	movq $1, -64(%rbp)
uuid_000000000007b5b7:
	mov -992(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007b5be:
	mov -784(%RBP),%RSP
	add $-992, %RSP
	jmp uuid_000000000007b5c1
uuid_000000000007b5bf:
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b59d
	jmp uuid_000000000007b59f
uuid_000000000007b59d:
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b59a
	jmp uuid_000000000007b59c
uuid_000000000007b59a:
	movq $1, -64(%rbp)
uuid_000000000007b59c:
	mov -792(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007b59f:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007b5c1:
	mov -480(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007b5c4
uuid_000000000007b5c2:
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007b5c4:
	mov -272(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007b5c7
uuid_000000000007b5c5:
	movq $1, -64(%rbp)
uuid_000000000007b5c7:
	mov -128(%RBP),%RSP
	add $-264, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsSS:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
print_CL_ArrowNilS:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5ed
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5cc
	jmp uuid_000000000007b5ce
uuid_000000000007b5cc:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b5c9
	jmp uuid_000000000007b5cb
uuid_000000000007b5c9:
	movb $1, -128(%rbp)
uuid_000000000007b5cb:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007b5ce:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5ea
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5d5
	jmp uuid_000000000007b5d7
uuid_000000000007b5d5:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b5d2
	jmp uuid_000000000007b5d4
uuid_000000000007b5d2:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b5cf
	jmp uuid_000000000007b5d1
uuid_000000000007b5cf:
	movb $1, -192(%rbp)
uuid_000000000007b5d1:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b5d4:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b5d7:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5e7
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5de
	jmp uuid_000000000007b5e0
uuid_000000000007b5de:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b5db
	jmp uuid_000000000007b5dd
uuid_000000000007b5db:
	movb $1, -304(%rbp)
uuid_000000000007b5dd:
	mov -320(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007b5e0:
	mov -312(%RBP),%RSP
	add $-328, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b5e4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b5e3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b5e6
uuid_000000000007b5e4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5e1
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5e2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b5e6:
	mov -272(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007b5e9
uuid_000000000007b5e7:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b5e9:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007b5ec
uuid_000000000007b5ea:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b5ec:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007b5ef
uuid_000000000007b5ed:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5c8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b5ef:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
fail_CL_ArrowNilString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fail_CL_ArrowNilConsStringString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5f0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
exit_CL_ArrowNilU64:
	mov $60, %RAX
	mov -8(%rbp), %RDI
	syscall
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilString:
	mov -8(%rbp), %R15
	mov $0, %RDX
uuid_000000000007b5f1:
	mov 0(%R15), %R14B
	cmp $0,%R14B
	je uuid_000000000007b5f2
	inc %RDX
	inc %R15
	jmp uuid_000000000007b5f1
uuid_000000000007b5f2:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	pushq -8(%rbp)
	push %RDX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
eprint_CL_ArrowNilString:
	mov -8(%rbp), %R15
	mov $0, %RDX
uuid_000000000007b5f3:
	mov 0(%R15), %R14B
	cmp $0,%R14B
	je uuid_000000000007b5f4
	inc %RDX
	inc %R15
	jmp uuid_000000000007b5f3
uuid_000000000007b5f4:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $2
	pushq -8(%rbp)
	push %RDX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU64:
	pushq $0
	mov -8(%rbp), %R15
	mov $0, %R14
uuid_000000000007b5f5:
	mov	%R15, %RAX
	mov $0, %RDX
	mov $10, %RCX
	div %RCX
	push %RDX
	inc %R14
	mov	%RAX, %R15
	cmp $0,%R15
	jne uuid_000000000007b5f5
uuid_000000000007b5f6:
	pop %RDX
	movb %DL, -24(%rbp)
	addb $48, -24(%rbp)
	dec %R14
	mov $1, %RAX
	mov $1, %RDI
	mov	%rbp, %r12
	addq $-24, %r12
	mov	%R12, %RSI
	mov $1, %RDX
	syscall
	cmp $0,%R14
	jne uuid_000000000007b5f6
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilASCII:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	mov	%rbp, %r12
	addq $0, %r12
	push %R12
	pushq $1
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
print_CL_ArrowNilI64:
	pushq $0
	mov -8(%rbp), %R15
	mov $0, %R14
	cmp $0,%R15
	jge uuid_000000000007b5f7
	neg %R15
	movb $45, -24(%rbp)
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	mov	%rbp, %r12
	addq $-24, %r12
	push %R12
	pushq $1
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b5f7:
	mov	%R15, %RAX
	mov $0, %RDX
	mov $10, %RCX
	div %RCX
	push %RDX
	inc %R14
	mov	%RAX, %R15
	cmp $0,%R15
	jne uuid_000000000007b5f7
uuid_000000000007b5f8:
	pop %RDX
	movb %DL, -24(%rbp)
	addb $48, -24(%rbp)
	dec %R14
	mov $1, %RAX
	mov $1, %RDI
	mov	%rbp, %r12
	addq $-24, %r12
	mov	%R12, %RSI
	mov $1, %RDX
	syscall
	cmp $0,%R14
	jne uuid_000000000007b5f8
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU32:
	mov $0, %R15
	mov -8(%rbp), %R15D
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU16:
	mov $0, %R15
	mov -8(%rbp), %R15W
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU8:
	mov $0, %R15
	mov -8(%rbp), %R15B
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI32:
	mov $0, %R15
	mov -8(%rbp), %R15D
	movsx %R15D,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI16:
	mov $0, %R15
	mov -8(%rbp), %R15W
	movsx %R15W,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI8:
	mov $0, %R15
	mov -8(%rbp), %R15B
	movsx %R15B,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64:
	mov -8(%rbp), %RAX
	mov -16(%rbp), %RDI
	mov -24(%rbp), %RSI
	mov -32(%rbp), %RDX
	syscall
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
read_SB_file_CL_ArrowStringString:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	pushq -8(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5fe
	jmp uuid_000000000007b600
uuid_000000000007b5fe:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fc
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b600:
	mov -32(%RBP),%RSP
	add $-32, %RSP
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1025
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $1024
uuid_000000000007b606:
	movq -56(%RBP), %RAX
	movq $1024, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b607
	jmp uuid_000000000007b608
uuid_000000000007b607:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -24(%rbp)
	movq -40(%RBP), %RAX
	movq -48(%RBP), %R14
	addq %R14, %RAX
	push %RAX
	pushq $1024
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -56(%rbp)
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b603
	jmp uuid_000000000007b605
uuid_000000000007b603:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b601
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b602
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b605:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	movq -48(%RBP), %RAX
	movq -56(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	movq -48(%RBP), %RAX
	movq $1025, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	add $8, %RSP
	jmp uuid_000000000007b606
uuid_000000000007b608:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $3
	pushq -24(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov -48(%RBP), %R13
	mov -40(%RBP), %R15
	add %R13, %R15
	movb $0, 0(%R15)
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
clone_SB_rope_CL_ArrowStringS:
#call function malloc : Arrow<Cons<U64,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $1024
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	mov -48(%RBP), %R13
	mov -40(%RBP), %R15
	add %R13, %R15
	movb $0, 0(%R15)
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b622
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b60f
	jmp uuid_000000000007b611
uuid_000000000007b60f:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b60c
	jmp uuid_000000000007b60e
uuid_000000000007b60c:
	push %RBP
	mov -120(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b609
	jmp uuid_000000000007b60b
uuid_000000000007b609:
	movb $1, -144(%rbp)
uuid_000000000007b60b:
	mov -192(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007b60e:
	mov -160(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007b611:
	mov -152(%RBP),%RSP
	add $-216, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b61f
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b615
	jmp uuid_000000000007b617
uuid_000000000007b615:
	push %RBP
	mov -240(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b612
	jmp uuid_000000000007b614
uuid_000000000007b612:
	movb $1, -256(%rbp)
uuid_000000000007b614:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007b617:
	mov -264(%RBP),%RSP
	add $-280, %RSP
	mov -256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b61c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b61b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b61e
uuid_000000000007b61c:
	pushq $0
	mov -280(%RBP), %R15
	mov -288(%RBP), %R14
	add %R14, %R15
	mov 0(%R15), %R15B
	mov %R15B, %AL
	push %RAX
uuid_000000000007b618:
	mov -296(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B, %R13B
	setne %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b619
	jmp uuid_000000000007b61a
uuid_000000000007b619:
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -296(%RBP), %R14B
	mov -40(%RBP), %R13
	mov -8(%RBP), %R15
	add %R13, %R15
	movb %R14B, 0(%R15)
	movq -288(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -288(%rbp)
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
	mov -280(%RBP), %R15
	mov -288(%RBP), %R14
	add %R14, %R15
	mov 0(%R15), %R15B
	movb %R15B, -296(%rbp)
	jmp uuid_000000000007b618
uuid_000000000007b61a:
uuid_000000000007b61e:
	mov -224(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007b621
uuid_000000000007b61f:
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b621:
	mov -112(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007b624
uuid_000000000007b622:
uuid_000000000007b624:
	mov -80(%RBP),%RSP
	add $-104, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
clone_SB_rope_CL_ArrowStringU8:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %r14
	mov -8(%rbp),%r15b
	mov %r15b, 0(%r14)
	mov -24(%rbp), %r15
	movb $0, 1(%r15)
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
length_CL_ArrowU64String:
	pushq $0
uuid_000000000007b625:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b626
	jmp uuid_000000000007b627
uuid_000000000007b626:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007b625
uuid_000000000007b627:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
write_SB_file_CL_ArrowNilConsStringString:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	pushq -8(%rbp)
	pushq $577
	pushq $420
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq -32(%rbp)
	pushq -16(%rbp)
#call function length : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call length_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $3
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
to_SB_string_CL_ArrowStringU64:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
uuid_000000000007b628:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b629
	jmp uuid_000000000007b62a
uuid_000000000007b629:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $48, %R14
	addq %R14, %RAX
	push %RAX
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -56(%rbp), %R8
	movb %R8B, -48(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	add $8, %rsp
	jmp uuid_000000000007b628
uuid_000000000007b62a:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b62c
	pushq $0
	pushq $uuid_000000000007b62b
	pushq $2
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007b62e
uuid_000000000007b62c:
uuid_000000000007b62e:
	mov -56(%RBP),%RSP
	add $-56, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringI64:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b630
	jmp uuid_000000000007b632
uuid_000000000007b630:
	pushq $0
	pushq $uuid_000000000007b62f
	pushq $2
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_000000000007b632:
	mov -72(%RBP),%RSP
	add $-72, %RSP
	pushq $0
uuid_000000000007b633:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b634
	jmp uuid_000000000007b635
uuid_000000000007b634:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function % : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _MD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $48
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function / : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _DV__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -88(%rbp), %R8
	movb %R8B, -80(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	add $8, %rsp
	jmp uuid_000000000007b633
uuid_000000000007b635:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b636
	pushq $0
	pushq $uuid_000000000007b62b
	pushq $2
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007b638
uuid_000000000007b636:
uuid_000000000007b638:
	mov -88(%RBP),%RSP
	add $-88, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_i64_CL_ArrowI64String:
	pushq $0
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $45, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b639
	jmp uuid_000000000007b63b
uuid_000000000007b639:
	movb $1, -24(%rbp)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
uuid_000000000007b63b:
	mov -32(%RBP),%RSP
	add $-32, %RSP
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	mov -24(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b63c
	jmp uuid_000000000007b63e
uuid_000000000007b63c:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b63e:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_u64_CL_ArrowU64String:
	pushq $0
uuid_000000000007b661:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b662
	jmp uuid_000000000007b663
uuid_000000000007b662:
#call function * : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _ML__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %R13B
	mov $48, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b65e
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %R13B
	mov $49, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b65b
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %R13B
	mov $50, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b658
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %R13B
	mov $51, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b655
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %R13B
	mov $52, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b652
	push %RBP
	pushq -32(%rbp)
	mov -128(%RBP), %R13B
	mov $53, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b64f
	push %RBP
	pushq -32(%rbp)
	mov -144(%RBP), %R13B
	mov $54, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b64c
	push %RBP
	pushq -32(%rbp)
	mov -160(%RBP), %R13B
	mov $55, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b649
	push %RBP
	pushq -32(%rbp)
	mov -176(%RBP), %R13B
	mov $56, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b646
	push %RBP
	pushq -32(%rbp)
	mov -192(%RBP), %R13B
	mov $57, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b643
	push %RBP
	jmp uuid_000000000007b640
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b63f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b642
uuid_000000000007b640:
uuid_000000000007b642:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007b645
uuid_000000000007b643:
	movq -24(%RBP), %RAX
	movq $9, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b645:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007b648
uuid_000000000007b646:
	movq -24(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b648:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b64b
uuid_000000000007b649:
	movq -24(%RBP), %RAX
	movq $7, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b64b:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007b64e
uuid_000000000007b64c:
	movq -24(%RBP), %RAX
	movq $6, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b64e:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007b651
uuid_000000000007b64f:
	movq -24(%RBP), %RAX
	movq $5, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b651:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007b654
uuid_000000000007b652:
	movq -24(%RBP), %RAX
	movq $4, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b654:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b657
uuid_000000000007b655:
	movq -24(%RBP), %RAX
	movq $3, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b657:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b65a
uuid_000000000007b658:
	movq -24(%RBP), %RAX
	movq $2, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b65a:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007b65d
uuid_000000000007b65b:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007b65d:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007b660
uuid_000000000007b65e:
uuid_000000000007b660:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007b661
uuid_000000000007b663:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_hex_CL_ArrowStringU64:
	pushq $0
	pushq $0
	pushq $3
	pushq $16
uuid_000000000007b6a4:
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6a5
	jmp uuid_000000000007b6a6
uuid_000000000007b6a5:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $16
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	pushq -56(%rbp)
	movq -72(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6a1
	push %RBP
	pushq -56(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b69e
	push %RBP
	pushq -56(%rbp)
	movq -104(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b69b
	push %RBP
	pushq -56(%rbp)
	movq -120(%RBP), %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b698
	push %RBP
	pushq -56(%rbp)
	movq -136(%RBP), %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b695
	push %RBP
	pushq -56(%rbp)
	movq -152(%RBP), %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b692
	push %RBP
	pushq -56(%rbp)
	movq -168(%RBP), %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b68f
	push %RBP
	pushq -56(%rbp)
	movq -184(%RBP), %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b68c
	push %RBP
	pushq -56(%rbp)
	movq -200(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b689
	push %RBP
	pushq -56(%rbp)
	movq -216(%RBP), %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b686
	push %RBP
	pushq -56(%rbp)
	movq -232(%RBP), %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b683
	push %RBP
	pushq -56(%rbp)
	movq -248(%RBP), %RAX
	movq $11, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b680
	push %RBP
	pushq -56(%rbp)
	movq -264(%RBP), %RAX
	movq $12, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b67d
	push %RBP
	pushq -56(%rbp)
	movq -280(%RBP), %RAX
	movq $13, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b67a
	push %RBP
	pushq -56(%rbp)
	movq -296(%RBP), %RAX
	movq $14, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b677
	push %RBP
	pushq -56(%rbp)
	movq -312(%RBP), %RAX
	movq $15, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b674
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b673
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b676
uuid_000000000007b674:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b672
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b676:
	mov -304(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007b679
uuid_000000000007b677:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b671
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b679:
	mov -288(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007b67c
uuid_000000000007b67a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b670
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b67c:
	mov -272(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007b67f
uuid_000000000007b67d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b66f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b67f:
	mov -256(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007b682
uuid_000000000007b680:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b66e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b682:
	mov -240(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007b685
uuid_000000000007b683:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b66d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b685:
	mov -224(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007b688
uuid_000000000007b686:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b66c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b688:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007b68b
uuid_000000000007b689:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b66b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b68b:
	mov -192(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007b68e
uuid_000000000007b68c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b66a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b68e:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007b691
uuid_000000000007b68f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b669
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b691:
	mov -160(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007b694
uuid_000000000007b692:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b668
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b694:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007b697
uuid_000000000007b695:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b667
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b697:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007b69a
uuid_000000000007b698:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b666
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b69a:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007b69d
uuid_000000000007b69b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b665
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b69d:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007b6a0
uuid_000000000007b69e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b664
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b6a0:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_000000000007b6a3
uuid_000000000007b6a1:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b62b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b6a3:
	mov -64(%RBP),%RSP
	add $-72, %RSP
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $16
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007b6a4
uuid_000000000007b6a6:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
has_SB_prefix_CL_ArrowU64ConsStringString:
	pushq $1
uuid_000000000007b6ae:
	mov -16(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b6af
	jmp uuid_000000000007b6b0
uuid_000000000007b6af:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b6ab
	movq $0, -32(%rbp)
	movq $uuid_000000000007b6a7, -16(%rbp)
	jmp uuid_000000000007b6ad
uuid_000000000007b6ab:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov -16(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	mov -48(%RBP), %R13B
	mov -56(%RBP), %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b6a8
	movq $0, -32(%rbp)
	movq $uuid_000000000007b6a7, -16(%rbp)
	jmp uuid_000000000007b6aa
uuid_000000000007b6a8:
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	mov -16(%RBP), %RAX
	inc %RAX
	movq %RAX, -16(%rbp)
uuid_000000000007b6aa:
	mov -64(%RBP),%RSP
	add $-64, %RSP
uuid_000000000007b6ad:
	mov -40(%RBP),%RSP
	add $-64, %RSP
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b6ae
uuid_000000000007b6b0:
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
remove_SB_prefix_CL_ArrowStringConsStringString:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6b4
	jmp uuid_000000000007b6b6
uuid_000000000007b6b4:
uuid_000000000007b6b1:
	mov -16(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b6b2
	jmp uuid_000000000007b6b3
uuid_000000000007b6b2:
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	mov -16(%RBP), %RAX
	inc %RAX
	movq %RAX, -16(%rbp)
	jmp uuid_000000000007b6b1
uuid_000000000007b6b3:
uuid_000000000007b6b6:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
replace_CL_ArrowStringConsStringConsStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b6ba:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b6bb
	jmp uuid_000000000007b6bc
uuid_000000000007b6bb:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6b7
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007b6b9
uuid_000000000007b6b7:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -24(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function remove-prefix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call remove_SB_prefix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_000000000007b6b9:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	add $8, %RSP
	jmp uuid_000000000007b6ba
uuid_000000000007b6bc:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_suffix_CL_ArrowU64ConsStringString:
	pushq $0
uuid_000000000007b6c0:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b6c1
	jmp uuid_000000000007b6c2
uuid_000000000007b6c1:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6bd
	jmp uuid_000000000007b6bf
uuid_000000000007b6bd:
	movq $1, -32(%rbp)
uuid_000000000007b6bf:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %RSP
	jmp uuid_000000000007b6c0
uuid_000000000007b6c2:
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
remove_SB_suffix_CL_ArrowStringConsStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b6c6:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b6c7
	jmp uuid_000000000007b6c8
uuid_000000000007b6c7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6c3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	jmp uuid_000000000007b6c5
uuid_000000000007b6c3:
	movq $uuid_000000000007b62b, -8(%rbp)
uuid_000000000007b6c5:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %RSP
	jmp uuid_000000000007b6c6
uuid_000000000007b6c8:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
deep_SB_hash_CL_ArrowU64String:
	pushq $0
	pushq $0
uuid_000000000007b6c9:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b6ca
	jmp uuid_000000000007b6cb
uuid_000000000007b6ca:
	mov $0, %R14
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov -40(%rbp), %R14B
	movq %R14, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	mov -32(%RBP),%RAX
	shl $10,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shr $6,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	jmp uuid_000000000007b6c9
uuid_000000000007b6cb:
	mov -32(%RBP),%RAX
	shl $3,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shr $11,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shl $15,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_ML__CL_ArrowStringConsU64String:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b6cc:
	movq -16(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6cd
	jmp uuid_000000000007b6ce
uuid_000000000007b6cd:
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	movq -16(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -16(%rbp)
	jmp uuid_000000000007b6cc
uuid_000000000007b6ce:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jb uuid_000000000007b6cf
	mov $0, %RAX
uuid_000000000007b6cf:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jl uuid_000000000007b6d0
	mov $0, %RAX
uuid_000000000007b6d0:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jbe uuid_000000000007b6d1
	mov $0, %RAX
uuid_000000000007b6d1:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jle uuid_000000000007b6d2
	mov $0, %RAX
uuid_000000000007b6d2:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	ja uuid_000000000007b6d3
	mov $0, %RAX
uuid_000000000007b6d3:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jg uuid_000000000007b6d4
	mov $0, %RAX
uuid_000000000007b6d4:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jae uuid_000000000007b6d5
	mov $0, %RAX
uuid_000000000007b6d5:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jge uuid_000000000007b6d6
	mov $0, %RAX
uuid_000000000007b6d6:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	je uuid_000000000007b6d7
	mov $0, %RAX
uuid_000000000007b6d7:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	je uuid_000000000007b6d8
	mov $0, %RAX
uuid_000000000007b6d8:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jne uuid_000000000007b6d9
	mov $0, %RAX
uuid_000000000007b6d9:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AM__AM__CL_ArrowU64ConsU64U64:
	mov $0, %RAX
	mov -8(%rbp), %R8
	cmp $0,%R8
	je uuid_000000000007b6da
	mov -16(%rbp), %R8
	cmp $0,%R8
	je uuid_000000000007b6da
	mov $1, %RAX
uuid_000000000007b6da:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_BR__BR__CL_ArrowU64ConsU64U64:
	mov $0, %RAX
	mov -8(%rbp), %R8
	cmp $0,%R8
	jne uuid_000000000007b6dc
	mov -16(%rbp), %R8
	cmp $0,%R8
	jne uuid_000000000007b6dc
	jmp uuid_000000000007b6db
uuid_000000000007b6dc:
	mov $1, %RAX
uuid_000000000007b6db:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jne uuid_000000000007b6dd
	mov $0, %RAX
uuid_000000000007b6dd:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowU64ConsU64U64:
	mov -8(%rbp), %R8
	mov -16(%rbp), %RAX
	addq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowI64ConsI64I64:
	mov -8(%rbp), %R8
	mov -16(%rbp), %RAX
	addq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_SB__CL_ArrowI64ConsI64I64:
	mov -16(%rbp), %R8
	mov -8(%rbp), %RAX
	subq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_HT__CL_ArrowU64ConsU64U64:
	mov -16(%rbp), %R8
	mov -8(%rbp), %RAX
	xor %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_MD__CL_ArrowU64ConsU64U64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	div %R8
	mov	%RDX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_MD__CL_ArrowI64ConsI64I64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	idiv %R8
	mov	%RDX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DV__CL_ArrowU64ConsU64U64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	div %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DV__CL_ArrowI64ConsI64I64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	idiv %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_ML__CL_ArrowU64ConsU64U64:
	mov -16(%rbp), %RAX
	mov -8(%rbp), %R8
	mul %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_ML__CL_ArrowI64ConsI64I64:
	mov -16(%rbp), %RAX
	mov -8(%rbp), %R8
	imul %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsU8U8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007b6df
	jmp uuid_000000000007b6de
uuid_000000000007b6de:
	mov $1, %RAX
	jmp uuid_000000000007b6e0
uuid_000000000007b6df:
	mov $0, %RAX
	jmp uuid_000000000007b6e0
uuid_000000000007b6e0:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU8U8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007b6e1
	jmp uuid_000000000007b6e2
uuid_000000000007b6e1:
	mov $1, %RAX
	jmp uuid_000000000007b6e3
uuid_000000000007b6e2:
	mov $0, %RAX
	jmp uuid_000000000007b6e3
uuid_000000000007b6e3:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU16U16:
	push %R14
	push %R15
	mov -8(%rbp), %R14W
	mov -16(%rbp), %R15W
	cmp %R14W,%R15W
	je uuid_000000000007b6e4
	jmp uuid_000000000007b6e5
uuid_000000000007b6e4:
	mov $1, %RAX
	jmp uuid_000000000007b6e6
uuid_000000000007b6e5:
	mov $0, %RAX
	jmp uuid_000000000007b6e6
uuid_000000000007b6e6:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU32U32:
	push %R14
	push %R15
	mov -8(%rbp), %R14D
	mov -16(%rbp), %R15D
	cmp %R14D,%R15D
	je uuid_000000000007b6e7
	jmp uuid_000000000007b6e8
uuid_000000000007b6e7:
	mov $1, %RAX
	jmp uuid_000000000007b6e9
uuid_000000000007b6e8:
	mov $0, %RAX
	jmp uuid_000000000007b6e9
uuid_000000000007b6e9:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
not_CL_ArrowU64U64:
	pushq $0
	push %RBP
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6ea
	jmp uuid_000000000007b6ec
uuid_000000000007b6ea:
	movq $1, -24(%rbp)
uuid_000000000007b6ec:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
not_CL_ArrowU64U8:
	pushq $0
	push %RBP
	mov -8(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b6ed
	jmp uuid_000000000007b6ef
uuid_000000000007b6ed:
	movq $1, -24(%rbp)
uuid_000000000007b6ef:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI8I8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_000000000007b6f0
	jmp uuid_000000000007b6f1
uuid_000000000007b6f0:
	mov $1, %RAX
	jmp uuid_000000000007b6f2
uuid_000000000007b6f1:
	mov $0, %RAX
	jmp uuid_000000000007b6f2
uuid_000000000007b6f2:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI16I16:
	push %R14
	push %R15
	mov -8(%rbp), %R14W
	mov -16(%rbp), %R15W
	cmp %R14W,%R15W
	je uuid_000000000007b6f3
	jmp uuid_000000000007b6f4
uuid_000000000007b6f3:
	mov $1, %RAX
	jmp uuid_000000000007b6f5
uuid_000000000007b6f4:
	mov $0, %RAX
	jmp uuid_000000000007b6f5
uuid_000000000007b6f5:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI32I32:
	push %R14
	push %R15
	mov -8(%rbp), %R14D
	mov -16(%rbp), %R15D
	cmp %R14D,%R15D
	je uuid_000000000007b6f6
	jmp uuid_000000000007b6f7
uuid_000000000007b6f6:
	mov $1, %RAX
	jmp uuid_000000000007b6f8
uuid_000000000007b6f7:
	mov $0, %RAX
	jmp uuid_000000000007b6f8
uuid_000000000007b6f8:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $0, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_prev_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $8, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $16, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock:
	movq -8(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 0(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 8(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 16(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
malloc_SB_new_SB_page_CL_ArrowNilNil:
	mov $12, %RAX
	mov $0, %RDI
	syscall
	mov	%RAX, %R8
	movq %R8, %r15
	movq $malloc_SB_block_SB_head_CL_U64, %r14
	movq %r15, 0(%r14)
	movq %R8, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	mov $12, %RAX
	mov	%R8, %RDI
	syscall
	movq %R8, %r15
	movq $malloc_SB_page_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_:
	movq -8(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function <= : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
#call function .free-space : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _LT__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setge %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6ff
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	movq -56(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
	pushq $0
uuid_000000000007b6fc:
	movq -72(%RBP), %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6fd
	jmp uuid_000000000007b6fe
uuid_000000000007b6fd:
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %R15B, %R14B
	mov -72(%RBP), %R13
	mov -80(%RBP), %R15
	add %R13, %R15
	mov %R14B, 0(%R15)
	movq -72(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -72(%rbp)
	add $8, %rsp
	add $8, %rsp
	jmp uuid_000000000007b6fc
uuid_000000000007b6fe:
#call function free : Arrow<Array<?,?>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call free_CL_ArrowNilArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -64(%rbp), %r15
	movq %r15, -32(%rbp)
	mov -64(%rbp), %r15
	mov %r15, -32(%rbp)
	jmp uuid_000000000007b701
uuid_000000000007b6ff:
#call function set.block-size : Arrow<Cons<Array<MallocBlock,?>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6f9
	jmp uuid_000000000007b6fb
uuid_000000000007b6f9:
	movq $malloc_SB_block_SB_tail_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq -40(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
uuid_000000000007b6fb:
	mov -56(%RBP),%RSP
	add $-56, %RSP
uuid_000000000007b701:
	mov -48(%RBP),%RSP
	add $-56, %RSP
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock:
	pushq $0
	push %RBP
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b702
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq $24, %RAX
	addq %R14, %RAX
	movq %RAX, %R14
	movq -8(%RBP), %RAX
	addq %R14, %RAX
	pushq %RAX
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
	jmp uuid_000000000007b704
uuid_000000000007b702:
	movq $1073741824, -24(%rbp)
uuid_000000000007b704:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
free_CL_ArrowNilArray_QM__QM_:
	movq -8(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
#call function .block-prev : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_prev_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -32(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b705
	jmp uuid_000000000007b707
uuid_000000000007b705:
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b707:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b708
	jmp uuid_000000000007b70a
uuid_000000000007b708:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b70a:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov %rbp, %rsp
	sub $16, %rsp
	ret
malloc_CL_ArrowArray_QM__QM_U64:
#call function malloc : Arrow<Cons<U64,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
malloc_CL_ArrowArray_QM__QM_ConsU64U64:
	push %RBP
	movq $malloc_SB_block_SB_head_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b70b
	jmp uuid_000000000007b70d
uuid_000000000007b70b:
#call function malloc-new-page : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call malloc_SB_new_SB_page_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b70d:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov $malloc_SB_first_SB_free_CL_U64, %r15
	pushq 0(%r15)
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b70e
	jmp uuid_000000000007b710
uuid_000000000007b70e:
	mov $malloc_SB_block_SB_head_CL_U64, %r14
	movq 0(%r14), %r15
	movq %r15, -40(%rbp)
	mov 0(%r14), %r15
	mov %r15, -40(%rbp)
uuid_000000000007b710:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	pushq $0
uuid_000000000007b714:
#call function .free-space : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b715
	jmp uuid_000000000007b716
uuid_000000000007b715:
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	mov $malloc_SB_first_SB_free_CL_U64, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	mov -40(%rbp), %r15
	mov %r15, 0(%r14)
	push %RBP
	movq -16(%RBP), %RAX
	movq $malloc_SB_large_SB_size_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	setge %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b711
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
	jmp uuid_000000000007b713
uuid_000000000007b711:
uuid_000000000007b713:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	add $8, %RSP
	jmp uuid_000000000007b714
uuid_000000000007b716:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	pushq 0(%r15)
	pushq $8
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq $8, %RAX
	movq -64(%RBP), %R14
	subq %R14, %RAX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	movq $malloc_SB_block_SB_tail_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq -72(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	pushq 0(%r15)
	movq -80(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	push %RAX
	movq -88(%RBP), %RAX
	movq -8(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -96(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b717
	jmp uuid_000000000007b719
uuid_000000000007b717:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b719:
	mov -104(%RBP),%RSP
	add $-104, %RSP
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function set.block-size : Arrow<Cons<Array<MallocBlock,?>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $0
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
	movq -80(%RBP), %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b71a
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b71c
uuid_000000000007b71a:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $0
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b71c:
	mov -112(%RBP),%RSP
	add $-112, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
non_SB_zero_CL_ArrowU64Type:
	mov $3, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64AST:
	mov $10, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64FragmentKV:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64FragmentList:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
non_SB_zero_CL_ArrowU64Context:
	mov $2, %RAX
	pushq %RAX
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
non_SB_zero_CL_ArrowU64TContext:
	mov $2, %RAX
	pushq %RAX
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
non_SB_zero_CL_ArrowU64FContext:
	mov $1, %RAX
	pushq %RAX
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
non_SB_zero_CL_ArrowU64STypeList:
	mov $1, %RAX
	pushq %RAX
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
non_SB_zero_CL_ArrowU64StringTypeList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64StringList:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64StringU64List:
	mov $1, %RAX
	pushq %RAX
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
non_SB_zero_CL_ArrowU64StringStringList:
	mov $1, %RAX
	pushq %RAX
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
non_SB_zero_CL_ArrowU64StringSList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64MacroList:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
non_SB_zero_CL_ArrowU64SfxList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
mangle_SB_identifier_CL_ArrowSString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b782:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b783
	jmp uuid_000000000007b784
uuid_000000000007b783:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -48(%rbp)
	mov -64(%RBP), %R13B
	mov $33, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b77f
	push %RBP
	pushq -48(%rbp)
	mov -80(%RBP), %R13B
	mov $36, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b77c
	push %RBP
	pushq -48(%rbp)
	mov -96(%RBP), %R13B
	mov $37, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b779
	push %RBP
	pushq -48(%rbp)
	mov -112(%RBP), %R13B
	mov $38, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b776
	push %RBP
	pushq -48(%rbp)
	mov -128(%RBP), %R13B
	mov $42, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b773
	push %RBP
	pushq -48(%rbp)
	mov -144(%RBP), %R13B
	mov $43, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b770
	push %RBP
	pushq -48(%rbp)
	mov -160(%RBP), %R13B
	mov $45, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b76d
	push %RBP
	pushq -48(%rbp)
	mov -176(%RBP), %R13B
	mov $46, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b76a
	push %RBP
	pushq -48(%rbp)
	mov -192(%RBP), %R13B
	mov $47, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b767
	push %RBP
	pushq -48(%rbp)
	mov -208(%RBP), %R13B
	mov $58, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b764
	push %RBP
	pushq -48(%rbp)
	mov -224(%RBP), %R13B
	mov $59, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b761
	push %RBP
	pushq -48(%rbp)
	mov -240(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b75e
	push %RBP
	pushq -48(%rbp)
	mov -256(%RBP), %R13B
	mov $61, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b75b
	push %RBP
	pushq -48(%rbp)
	mov -272(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b758
	push %RBP
	pushq -48(%rbp)
	mov -288(%RBP), %R13B
	mov $63, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b755
	push %RBP
	pushq -48(%rbp)
	mov -304(%RBP), %R13B
	mov $64, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b752
	push %RBP
	pushq -48(%rbp)
	mov -320(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b74f
	push %RBP
	pushq -48(%rbp)
	mov -336(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b74c
	push %RBP
	pushq -48(%rbp)
	mov -352(%RBP), %R13B
	mov $94, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b749
	push %RBP
	pushq -48(%rbp)
	mov -368(%RBP), %R13B
	mov $95, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b746
	push %RBP
	pushq -48(%rbp)
	mov -384(%RBP), %R13B
	mov $96, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b743
	push %RBP
	pushq -48(%rbp)
	mov -400(%RBP), %R13B
	mov $124, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b740
	push %RBP
	pushq -48(%rbp)
	mov -416(%RBP), %R13B
	mov $126, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b73d
	push %RBP
	pushq -48(%rbp)
	jmp uuid_000000000007b73a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b739
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b73c
uuid_000000000007b73a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b73c:
	mov -424(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007b73f
uuid_000000000007b73d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b738
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b73f:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007b742
uuid_000000000007b740:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b737
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b742:
	mov -392(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007b745
uuid_000000000007b743:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b736
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b745:
	mov -376(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007b748
uuid_000000000007b746:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b735
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b748:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007b74b
uuid_000000000007b749:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b734
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b74b:
	mov -344(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007b74e
uuid_000000000007b74c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b733
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b74e:
	mov -328(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007b751
uuid_000000000007b74f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b732
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b751:
	mov -312(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007b754
uuid_000000000007b752:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b731
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b754:
	mov -296(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007b757
uuid_000000000007b755:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b730
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b757:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b75a
uuid_000000000007b758:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b72f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b75a:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007b75d
uuid_000000000007b75b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b72e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b75d:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b760
uuid_000000000007b75e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b72d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b760:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b763
uuid_000000000007b761:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b72c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b763:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007b766
uuid_000000000007b764:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b72b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b766:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007b769
uuid_000000000007b767:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b72a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b769:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007b76c
uuid_000000000007b76a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b729
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b76c:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b76f
uuid_000000000007b76d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b728
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b76f:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007b772
uuid_000000000007b770:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b727
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b772:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007b775
uuid_000000000007b773:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b726
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b775:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007b778
uuid_000000000007b776:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b725
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b778:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b77b
uuid_000000000007b779:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b724
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b77b:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b77e
uuid_000000000007b77c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b723
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b77e:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007b781
uuid_000000000007b77f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b722
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b781:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007b782
uuid_000000000007b784:
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mangle_SB_identifier_CL_ArrowSType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7b8
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b789
	jmp uuid_000000000007b78b
uuid_000000000007b789:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b786
	jmp uuid_000000000007b788
uuid_000000000007b786:
	movb $1, -152(%rbp)
uuid_000000000007b788:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b78b:
	mov -160(%RBP),%RSP
	add $-176, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7b5
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b792
	jmp uuid_000000000007b794
uuid_000000000007b792:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b78f
	jmp uuid_000000000007b791
uuid_000000000007b78f:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b78c
	jmp uuid_000000000007b78e
uuid_000000000007b78c:
	movb $1, -216(%rbp)
uuid_000000000007b78e:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b791:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b794:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7b2
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7ab
	jmp uuid_000000000007b7ad
uuid_000000000007b7ab:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7a8
	jmp uuid_000000000007b7aa
uuid_000000000007b7a8:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7a5
	jmp uuid_000000000007b7a7
uuid_000000000007b7a5:
	movb $1, -328(%rbp)
uuid_000000000007b7a7:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007b7aa:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007b7ad:
	mov -336(%RBP),%RSP
	add $-400, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7af
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b7ae
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b7b1
uuid_000000000007b7af:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b7b1:
	mov -296(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007b7b4
uuid_000000000007b7b2:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b7a2:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b7a3
	jmp uuid_000000000007b7a4
uuid_000000000007b7a3:
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b79b
	jmp uuid_000000000007b79d
uuid_000000000007b79b:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b798
	jmp uuid_000000000007b79a
uuid_000000000007b798:
	push %RBP
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	jmp uuid_000000000007b795
	jmp uuid_000000000007b797
uuid_000000000007b795:
	movb $1, -384(%rbp)
uuid_000000000007b797:
	mov -448(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007b79a:
	mov -400(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007b79d:
	mov -392(%RBP),%RSP
	add $-472, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b79f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b79e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b7a1
uuid_000000000007b79f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	movq -440(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -240(%rbp)
uuid_000000000007b7a1:
	mov -336(%RBP),%RSP
	add $-472, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b7a2
uuid_000000000007b7a4:
uuid_000000000007b7b4:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b7b7
uuid_000000000007b7b5:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b7b7:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b7ba
uuid_000000000007b7b8:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b785
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b7ba:
	mov -88(%RBP),%RSP
	add $-112, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mangle_SB_identifier_CL_ArrowStringConsTypeString:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b72b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
escape_SB_string_CL_ArrowStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b7e0:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b7e1
	jmp uuid_000000000007b7e2
uuid_000000000007b7e1:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $92, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7dd
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007b7df
uuid_000000000007b7dd:
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -56(%rbp)
	mov -72(%RBP), %R13B
	mov $58, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7da
	push %RBP
	pushq -56(%rbp)
	mov -88(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7d7
	push %RBP
	pushq -56(%rbp)
	mov -104(%RBP), %R13B
	mov $92, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7d4
	push %RBP
	pushq -56(%rbp)
	mov -120(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7d1
	push %RBP
	pushq -56(%rbp)
	mov -136(%RBP), %R13B
	mov $96, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7ce
	push %RBP
	pushq -56(%rbp)
	mov -152(%RBP), %R13B
	mov $110, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7cb
	push %RBP
	pushq -56(%rbp)
	mov -168(%RBP), %R13B
	mov $111, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7c8
	push %RBP
	pushq -56(%rbp)
	mov -184(%RBP), %R13B
	mov $116, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7c5
	push %RBP
	pushq -56(%rbp)
	mov -200(%RBP), %R13B
	mov $115, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7c2
	push %RBP
	pushq -56(%rbp)
	jmp uuid_000000000007b7bf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b7be
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b7c1
uuid_000000000007b7bf:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b7bc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U8,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b7bd
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b7c1:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007b7c4
uuid_000000000007b7c2:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $32
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7c4:
	mov -192(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007b7c7
uuid_000000000007b7c5:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $9
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7c7:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007b7ca
uuid_000000000007b7c8:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $35
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7ca:
	mov -160(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007b7cd
uuid_000000000007b7cb:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $10
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7cd:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007b7d0
uuid_000000000007b7ce:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $39
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7d0:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007b7d3
uuid_000000000007b7d1:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $41
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7d3:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007b7d6
uuid_000000000007b7d4:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b7bb
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7d6:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007b7d9
uuid_000000000007b7d7:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7d9:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_000000000007b7dc
uuid_000000000007b7da:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $59
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b7dc:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
uuid_000000000007b7df:
	mov -48(%RBP),%RSP
	add $-72, %RSP
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b7e0
uuid_000000000007b7e2:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
escape_SB_literal_CL_ArrowStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b81f:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b820
	jmp uuid_000000000007b821
uuid_000000000007b820:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -48(%rbp)
	mov -64(%RBP), %R13B
	mov $34, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b81c
	push %RBP
	pushq -48(%rbp)
	mov -80(%RBP), %R13B
	mov $92, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b819
	push %RBP
	pushq -48(%rbp)
	mov -96(%RBP), %R13B
	mov $10, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b816
	push %RBP
	pushq -48(%rbp)
	jmp uuid_000000000007b813
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b812
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b815
uuid_000000000007b813:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b815:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b818
uuid_000000000007b816:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b811
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b818:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b81b
uuid_000000000007b819:
	pushq $uuid_000000000007b6a7
	mov -8(%RBP), %RAX
	inc %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $58, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b80a
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b807
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %R13B
	mov $92, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b804
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b801
	push %RBP
	pushq -96(%rbp)
	mov -176(%RBP), %R13B
	mov $96, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7fe
	push %RBP
	pushq -96(%rbp)
	mov -192(%RBP), %R13B
	mov $108, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7fb
	push %RBP
	pushq -96(%rbp)
	mov -208(%RBP), %R13B
	mov $110, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7f8
	push %RBP
	pushq -96(%rbp)
	mov -224(%RBP), %R13B
	mov $111, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7f5
	push %RBP
	pushq -96(%rbp)
	mov -240(%RBP), %R13B
	mov $115, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7f2
	push %RBP
	pushq -96(%rbp)
	mov -256(%RBP), %R13B
	mov $116, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b7ef
	push %RBP
	jmp uuid_000000000007b7ec
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b7eb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b7ee
uuid_000000000007b7ec:
uuid_000000000007b7ee:
	mov -264(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007b7f1
uuid_000000000007b7ef:
	movq $uuid_000000000007b7ea, -88(%rbp)
uuid_000000000007b7f1:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b7f4
uuid_000000000007b7f2:
	movq $uuid_000000000007b5d9, -88(%rbp)
uuid_000000000007b7f4:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b7f7
uuid_000000000007b7f5:
	movq $uuid_000000000007b7e9, -88(%rbp)
uuid_000000000007b7f7:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007b7fa
uuid_000000000007b7f8:
	movq $uuid_000000000007b7e8, -88(%rbp)
uuid_000000000007b7fa:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007b7fd
uuid_000000000007b7fb:
	movq $uuid_000000000007b7e7, -88(%rbp)
uuid_000000000007b7fd:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007b800
uuid_000000000007b7fe:
	movq $uuid_000000000007b7e6, -88(%rbp)
uuid_000000000007b800:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b803
uuid_000000000007b801:
	movq $uuid_000000000007b5da, -88(%rbp)
uuid_000000000007b803:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007b806
uuid_000000000007b804:
	movq $uuid_000000000007b7e5, -88(%rbp)
uuid_000000000007b806:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007b809
uuid_000000000007b807:
	movq $uuid_000000000007b5d8, -88(%rbp)
uuid_000000000007b809:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007b80c
uuid_000000000007b80a:
	movq $uuid_000000000007b7e4, -88(%rbp)
uuid_000000000007b80c:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	mov -88(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b80e
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b80d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007b810
uuid_000000000007b80e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -88(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
uuid_000000000007b810:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007b81b:
	mov -72(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007b81e
uuid_000000000007b81c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b7e3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007b81e:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007b81f
uuid_000000000007b821:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
escape_SB_string_CL_ArrowSS:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b825
	jmp uuid_000000000007b827
uuid_000000000007b825:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b822
	jmp uuid_000000000007b824
uuid_000000000007b822:
	movb $1, -96(%rbp)
uuid_000000000007b824:
	mov -112(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007b827:
	mov -104(%RBP),%RSP
	add $-120, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b838
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b82e
	jmp uuid_000000000007b830
uuid_000000000007b82e:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b82b
	jmp uuid_000000000007b82d
uuid_000000000007b82b:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b828
	jmp uuid_000000000007b82a
uuid_000000000007b828:
	movb $1, -160(%rbp)
uuid_000000000007b82a:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b82d:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007b830:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b835
	push %RBP
	jmp uuid_000000000007b832
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b831
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b834
uuid_000000000007b832:
uuid_000000000007b834:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b837
uuid_000000000007b835:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b837:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007b83a
uuid_000000000007b838:
	pushq $0
#call function escape-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b83a:
	mov -64(%RBP),%RSP
	add $-120, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
exit_SB_error_CL_ArrowNilConsASTString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b85a
	jmp uuid_000000000007b85c
uuid_000000000007b85a:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b847
	jmp uuid_000000000007b849
uuid_000000000007b847:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b83e
	jmp uuid_000000000007b840
uuid_000000000007b83e:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007b83b
	jmp uuid_000000000007b83d
uuid_000000000007b83b:
	movb $1, -440(%rbp)
uuid_000000000007b83d:
	mov -456(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007b840:
	mov -448(%RBP),%RSP
	add $-480, %RSP
	mov -440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b844
	jmp uuid_000000000007b846
uuid_000000000007b844:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b841
	jmp uuid_000000000007b843
uuid_000000000007b841:
	movb $1, -344(%rbp)
uuid_000000000007b843:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b846:
	mov -360(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b849:
	mov -352(%RBP),%RSP
	add $-560, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b857
	jmp uuid_000000000007b859
uuid_000000000007b857:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b851
	jmp uuid_000000000007b853
uuid_000000000007b851:
	push %RBP
	jmp uuid_000000000007b84e
	jmp uuid_000000000007b850
uuid_000000000007b84e:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b84b
	jmp uuid_000000000007b84d
uuid_000000000007b84b:
	movb $1, -648(%rbp)
uuid_000000000007b84d:
	mov -672(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007b850:
	mov -664(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007b853:
	mov -656(%RBP),%RSP
	add $-680, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b854
	jmp uuid_000000000007b856
uuid_000000000007b854:
	movb $1, -248(%rbp)
uuid_000000000007b856:
	mov -568(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007b859:
	mov -264(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007b85c:
	mov -256(%RBP),%RSP
	add $-680, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b872
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b866
	jmp uuid_000000000007b868
uuid_000000000007b866:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b863
	jmp uuid_000000000007b865
uuid_000000000007b863:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b860
	jmp uuid_000000000007b862
uuid_000000000007b860:
	movb $1, -768(%rbp)
uuid_000000000007b862:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007b865:
	mov -784(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007b868:
	mov -776(%RBP),%RSP
	add $-936, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b86f
	push %RBP
	jmp uuid_000000000007b86c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b86b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b86e
uuid_000000000007b86c:
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b86e:
	mov -944(%RBP),%RSP
	add $-944, %RSP
	jmp uuid_000000000007b871
uuid_000000000007b86f:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b869
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b85e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b85e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b86a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b871:
	mov -688(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007b874
uuid_000000000007b872:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b85d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b85e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b85f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b874:
	mov -168(%RBP),%RSP
	add $-680, %RSP
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
is_SB_variable_CL_ArrowU64String:
	pushq $0
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %R13B
	mov $33, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b910
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %R13B
	mov $36, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b90d
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %R13B
	mov $37, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b90a
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %R13B
	mov $38, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b907
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %R13B
	mov $42, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b904
	push %RBP
	pushq -32(%rbp)
	mov -128(%RBP), %R13B
	mov $43, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b901
	push %RBP
	pushq -32(%rbp)
	mov -144(%RBP), %R13B
	mov $45, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8fe
	push %RBP
	pushq -32(%rbp)
	mov -160(%RBP), %R13B
	mov $46, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8fb
	push %RBP
	pushq -32(%rbp)
	mov -176(%RBP), %R13B
	mov $47, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8f8
	push %RBP
	pushq -32(%rbp)
	mov -192(%RBP), %R13B
	mov $58, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8f5
	push %RBP
	pushq -32(%rbp)
	mov -208(%RBP), %R13B
	mov $59, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8f2
	push %RBP
	pushq -32(%rbp)
	mov -224(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8ef
	push %RBP
	pushq -32(%rbp)
	mov -240(%RBP), %R13B
	mov $61, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8ec
	push %RBP
	pushq -32(%rbp)
	mov -256(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8e9
	push %RBP
	pushq -32(%rbp)
	mov -272(%RBP), %R13B
	mov $63, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8e6
	push %RBP
	pushq -32(%rbp)
	mov -288(%RBP), %R13B
	mov $64, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8e3
	push %RBP
	pushq -32(%rbp)
	mov -304(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8e0
	push %RBP
	pushq -32(%rbp)
	mov -320(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8dd
	push %RBP
	pushq -32(%rbp)
	mov -336(%RBP), %R13B
	mov $94, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8da
	push %RBP
	pushq -32(%rbp)
	mov -352(%RBP), %R13B
	mov $95, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8d7
	push %RBP
	pushq -32(%rbp)
	mov -368(%RBP), %R13B
	mov $97, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8d4
	push %RBP
	pushq -32(%rbp)
	mov -384(%RBP), %R13B
	mov $98, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8d1
	push %RBP
	pushq -32(%rbp)
	mov -400(%RBP), %R13B
	mov $99, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8ce
	push %RBP
	pushq -32(%rbp)
	mov -416(%RBP), %R13B
	mov $100, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8cb
	push %RBP
	pushq -32(%rbp)
	mov -432(%RBP), %R13B
	mov $101, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8c8
	push %RBP
	pushq -32(%rbp)
	mov -448(%RBP), %R13B
	mov $102, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8c5
	push %RBP
	pushq -32(%rbp)
	mov -464(%RBP), %R13B
	mov $103, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8c2
	push %RBP
	pushq -32(%rbp)
	mov -480(%RBP), %R13B
	mov $104, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8bf
	push %RBP
	pushq -32(%rbp)
	mov -496(%RBP), %R13B
	mov $105, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8bc
	push %RBP
	pushq -32(%rbp)
	mov -512(%RBP), %R13B
	mov $106, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8b9
	push %RBP
	pushq -32(%rbp)
	mov -528(%RBP), %R13B
	mov $107, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8b6
	push %RBP
	pushq -32(%rbp)
	mov -544(%RBP), %R13B
	mov $108, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8b3
	push %RBP
	pushq -32(%rbp)
	mov -560(%RBP), %R13B
	mov $109, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8b0
	push %RBP
	pushq -32(%rbp)
	mov -576(%RBP), %R13B
	mov $110, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8ad
	push %RBP
	pushq -32(%rbp)
	mov -592(%RBP), %R13B
	mov $111, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8aa
	push %RBP
	pushq -32(%rbp)
	mov -608(%RBP), %R13B
	mov $112, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8a7
	push %RBP
	pushq -32(%rbp)
	mov -624(%RBP), %R13B
	mov $113, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8a4
	push %RBP
	pushq -32(%rbp)
	mov -640(%RBP), %R13B
	mov $114, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b8a1
	push %RBP
	pushq -32(%rbp)
	mov -656(%RBP), %R13B
	mov $115, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b89e
	push %RBP
	pushq -32(%rbp)
	mov -672(%RBP), %R13B
	mov $116, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b89b
	push %RBP
	pushq -32(%rbp)
	mov -688(%RBP), %R13B
	mov $117, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b898
	push %RBP
	pushq -32(%rbp)
	mov -704(%RBP), %R13B
	mov $118, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b895
	push %RBP
	pushq -32(%rbp)
	mov -720(%RBP), %R13B
	mov $119, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b892
	push %RBP
	pushq -32(%rbp)
	mov -736(%RBP), %R13B
	mov $120, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b88f
	push %RBP
	pushq -32(%rbp)
	mov -752(%RBP), %R13B
	mov $121, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b88c
	push %RBP
	pushq -32(%rbp)
	mov -768(%RBP), %R13B
	mov $122, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b889
	push %RBP
	pushq -32(%rbp)
	mov -784(%RBP), %R13B
	mov $124, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b886
	push %RBP
	pushq -32(%rbp)
	mov -800(%RBP), %R13B
	mov $126, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b883
	push %RBP
	jmp uuid_000000000007b880
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b87f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b882
uuid_000000000007b880:
uuid_000000000007b882:
	mov -808(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007b885
uuid_000000000007b883:
	movb $1, -24(%rbp)
uuid_000000000007b885:
	mov -792(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007b888
uuid_000000000007b886:
	movb $1, -24(%rbp)
uuid_000000000007b888:
	mov -776(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007b88b
uuid_000000000007b889:
	movb $1, -24(%rbp)
uuid_000000000007b88b:
	mov -760(%RBP),%RSP
	add $-768, %RSP
	jmp uuid_000000000007b88e
uuid_000000000007b88c:
	movb $1, -24(%rbp)
uuid_000000000007b88e:
	mov -744(%RBP),%RSP
	add $-752, %RSP
	jmp uuid_000000000007b891
uuid_000000000007b88f:
	movb $1, -24(%rbp)
uuid_000000000007b891:
	mov -728(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_000000000007b894
uuid_000000000007b892:
	movb $1, -24(%rbp)
uuid_000000000007b894:
	mov -712(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_000000000007b897
uuid_000000000007b895:
	movb $1, -24(%rbp)
uuid_000000000007b897:
	mov -696(%RBP),%RSP
	add $-704, %RSP
	jmp uuid_000000000007b89a
uuid_000000000007b898:
	movb $1, -24(%rbp)
uuid_000000000007b89a:
	mov -680(%RBP),%RSP
	add $-688, %RSP
	jmp uuid_000000000007b89d
uuid_000000000007b89b:
	movb $1, -24(%rbp)
uuid_000000000007b89d:
	mov -664(%RBP),%RSP
	add $-672, %RSP
	jmp uuid_000000000007b8a0
uuid_000000000007b89e:
	movb $1, -24(%rbp)
uuid_000000000007b8a0:
	mov -648(%RBP),%RSP
	add $-656, %RSP
	jmp uuid_000000000007b8a3
uuid_000000000007b8a1:
	movb $1, -24(%rbp)
uuid_000000000007b8a3:
	mov -632(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007b8a6
uuid_000000000007b8a4:
	movb $1, -24(%rbp)
uuid_000000000007b8a6:
	mov -616(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007b8a9
uuid_000000000007b8a7:
	movb $1, -24(%rbp)
uuid_000000000007b8a9:
	mov -600(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007b8ac
uuid_000000000007b8aa:
	movb $1, -24(%rbp)
uuid_000000000007b8ac:
	mov -584(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007b8af
uuid_000000000007b8ad:
	movb $1, -24(%rbp)
uuid_000000000007b8af:
	mov -568(%RBP),%RSP
	add $-576, %RSP
	jmp uuid_000000000007b8b2
uuid_000000000007b8b0:
	movb $1, -24(%rbp)
uuid_000000000007b8b2:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007b8b5
uuid_000000000007b8b3:
	movb $1, -24(%rbp)
uuid_000000000007b8b5:
	mov -536(%RBP),%RSP
	add $-544, %RSP
	jmp uuid_000000000007b8b8
uuid_000000000007b8b6:
	movb $1, -24(%rbp)
uuid_000000000007b8b8:
	mov -520(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007b8bb
uuid_000000000007b8b9:
	movb $1, -24(%rbp)
uuid_000000000007b8bb:
	mov -504(%RBP),%RSP
	add $-512, %RSP
	jmp uuid_000000000007b8be
uuid_000000000007b8bc:
	movb $1, -24(%rbp)
uuid_000000000007b8be:
	mov -488(%RBP),%RSP
	add $-496, %RSP
	jmp uuid_000000000007b8c1
uuid_000000000007b8bf:
	movb $1, -24(%rbp)
uuid_000000000007b8c1:
	mov -472(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_000000000007b8c4
uuid_000000000007b8c2:
	movb $1, -24(%rbp)
uuid_000000000007b8c4:
	mov -456(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007b8c7
uuid_000000000007b8c5:
	movb $1, -24(%rbp)
uuid_000000000007b8c7:
	mov -440(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_000000000007b8ca
uuid_000000000007b8c8:
	movb $1, -24(%rbp)
uuid_000000000007b8ca:
	mov -424(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007b8cd
uuid_000000000007b8cb:
	movb $1, -24(%rbp)
uuid_000000000007b8cd:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007b8d0
uuid_000000000007b8ce:
	movb $1, -24(%rbp)
uuid_000000000007b8d0:
	mov -392(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007b8d3
uuid_000000000007b8d1:
	movb $1, -24(%rbp)
uuid_000000000007b8d3:
	mov -376(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007b8d6
uuid_000000000007b8d4:
	movb $1, -24(%rbp)
uuid_000000000007b8d6:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007b8d9
uuid_000000000007b8d7:
	movb $1, -24(%rbp)
uuid_000000000007b8d9:
	mov -344(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007b8dc
uuid_000000000007b8da:
	movb $1, -24(%rbp)
uuid_000000000007b8dc:
	mov -328(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007b8df
uuid_000000000007b8dd:
	movb $1, -24(%rbp)
uuid_000000000007b8df:
	mov -312(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007b8e2
uuid_000000000007b8e0:
	movb $1, -24(%rbp)
uuid_000000000007b8e2:
	mov -296(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007b8e5
uuid_000000000007b8e3:
	movb $1, -24(%rbp)
uuid_000000000007b8e5:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007b8e8
uuid_000000000007b8e6:
	movb $1, -24(%rbp)
uuid_000000000007b8e8:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007b8eb
uuid_000000000007b8e9:
	movb $1, -24(%rbp)
uuid_000000000007b8eb:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007b8ee
uuid_000000000007b8ec:
	movb $1, -24(%rbp)
uuid_000000000007b8ee:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007b8f1
uuid_000000000007b8ef:
	movb $1, -24(%rbp)
uuid_000000000007b8f1:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007b8f4
uuid_000000000007b8f2:
	movb $1, -24(%rbp)
uuid_000000000007b8f4:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007b8f7
uuid_000000000007b8f5:
	push %RBP
	mov -8(%RBP), %RAX
	inc %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $58, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b879
	jmp uuid_000000000007b87b
uuid_000000000007b879:
	movb $1, -24(%rbp)
uuid_000000000007b87b:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	inc %RAX
	push %RAX
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b87c
	jmp uuid_000000000007b87e
uuid_000000000007b87c:
	movb $1, -24(%rbp)
uuid_000000000007b87e:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007b8f7:
	mov -184(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007b8fa
uuid_000000000007b8f8:
	movb $1, -24(%rbp)
uuid_000000000007b8fa:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b8fd
uuid_000000000007b8fb:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007b875
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b876
	movb $1, -24(%rbp)
	jmp uuid_000000000007b878
uuid_000000000007b876:
uuid_000000000007b878:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b8fd:
	mov -152(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007b900
uuid_000000000007b8fe:
	movb $1, -24(%rbp)
uuid_000000000007b900:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007b903
uuid_000000000007b901:
	movb $1, -24(%rbp)
uuid_000000000007b903:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007b906
uuid_000000000007b904:
	movb $1, -24(%rbp)
uuid_000000000007b906:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b909
uuid_000000000007b907:
	movb $1, -24(%rbp)
uuid_000000000007b909:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b90c
uuid_000000000007b90a:
	movb $1, -24(%rbp)
uuid_000000000007b90c:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007b90f
uuid_000000000007b90d:
	movb $1, -24(%rbp)
uuid_000000000007b90f:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007b912
uuid_000000000007b910:
	movb $1, -24(%rbp)
uuid_000000000007b912:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007b913
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b914
	jmp uuid_000000000007b916
uuid_000000000007b914:
	movb $0, -24(%rbp)
uuid_000000000007b916:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov -24(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	mov	%R13,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringIsUsed:
	pushq $uuid_000000000007b6a7
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b929
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b926
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b923
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b920
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b91d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b91c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b91f
uuid_000000000007b91d:
	movq $uuid_000000000007b91b, -24(%rbp)
uuid_000000000007b91f:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007b922
uuid_000000000007b920:
	movq $uuid_000000000007b91a, -24(%rbp)
uuid_000000000007b922:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007b925
uuid_000000000007b923:
	movq $uuid_000000000007b919, -24(%rbp)
uuid_000000000007b925:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007b928
uuid_000000000007b926:
	movq $uuid_000000000007b918, -24(%rbp)
uuid_000000000007b928:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007b92b
uuid_000000000007b929:
	movq $uuid_000000000007b917, -24(%rbp)
uuid_000000000007b92b:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringType:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
to_SB_string_CL_ArrowSListType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b948
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b934
	jmp uuid_000000000007b936
uuid_000000000007b934:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b931
	jmp uuid_000000000007b933
uuid_000000000007b931:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	jmp uuid_000000000007b92e
	jmp uuid_000000000007b930
uuid_000000000007b92e:
	movb $1, -216(%rbp)
uuid_000000000007b930:
	mov -280(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007b933:
	mov -232(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007b936:
	mov -224(%RBP),%RSP
	add $-304, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b945
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b93d
	jmp uuid_000000000007b93f
uuid_000000000007b93d:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b93a
	jmp uuid_000000000007b93c
uuid_000000000007b93a:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	jmp uuid_000000000007b937
	jmp uuid_000000000007b939
uuid_000000000007b937:
	movb $1, -360(%rbp)
uuid_000000000007b939:
	mov -424(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007b93c:
	mov -376(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007b93f:
	mov -368(%RBP),%RSP
	add $-448, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b942
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b941
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b944
uuid_000000000007b942:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<List<Type>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowSListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b940
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007b944:
	mov -312(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_000000000007b947
uuid_000000000007b945:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007b947:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007b94a
uuid_000000000007b948:
uuid_000000000007b94a:
	mov -120(%RBP),%RSP
	add $-160, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
to_SB_string_SB_impl_CL_ArrowSType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b992
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b94e
	jmp uuid_000000000007b950
uuid_000000000007b94e:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b94b
	jmp uuid_000000000007b94d
uuid_000000000007b94b:
	movb $1, -152(%rbp)
uuid_000000000007b94d:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007b950:
	mov -160(%RBP),%RSP
	add $-176, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b98f
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b957
	jmp uuid_000000000007b959
uuid_000000000007b957:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b954
	jmp uuid_000000000007b956
uuid_000000000007b954:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b951
	jmp uuid_000000000007b953
uuid_000000000007b951:
	movb $1, -216(%rbp)
uuid_000000000007b953:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b956:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b959:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b98c
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b961
	jmp uuid_000000000007b963
uuid_000000000007b961:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b95e
	jmp uuid_000000000007b960
uuid_000000000007b95e:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b95b
	jmp uuid_000000000007b95d
uuid_000000000007b95b:
	movb $1, -328(%rbp)
uuid_000000000007b95d:
	mov -392(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007b960:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007b963:
	mov -336(%RBP),%RSP
	add $-400, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b989
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b974
	jmp uuid_000000000007b976
uuid_000000000007b974:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b96a
	jmp uuid_000000000007b96c
uuid_000000000007b96a:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b967
	jmp uuid_000000000007b969
uuid_000000000007b967:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	jmp uuid_000000000007b964
	jmp uuid_000000000007b966
uuid_000000000007b964:
	movb $1, -504(%rbp)
uuid_000000000007b966:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007b969:
	mov -520(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007b96c:
	mov -512(%RBP),%RSP
	add $-592, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b971
	jmp uuid_000000000007b973
uuid_000000000007b971:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b96e
	jmp uuid_000000000007b970
uuid_000000000007b96e:
	movb $1, -440(%rbp)
uuid_000000000007b970:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007b973:
	mov -456(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007b976:
	mov -448(%RBP),%RSP
	add $-608, %RSP
	mov -440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b986
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b97d
	jmp uuid_000000000007b97f
uuid_000000000007b97d:
	push %RBP
	mov -632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b97a
	jmp uuid_000000000007b97c
uuid_000000000007b97a:
	push %RBP
	mov -624(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b977
	jmp uuid_000000000007b979
uuid_000000000007b977:
	movb $1, -648(%rbp)
uuid_000000000007b979:
	mov -712(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007b97c:
	mov -664(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007b97f:
	mov -656(%RBP),%RSP
	add $-720, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b983
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b982
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b985
uuid_000000000007b983:
	pushq $0
	pushq -720(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b980
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<List<Type>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowSListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b981
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b985:
	mov -616(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_000000000007b988
uuid_000000000007b986:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b96d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b988:
	mov -408(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007b98b
uuid_000000000007b989:
	pushq $0
	pushq -400(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b98b:
	mov -296(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007b98e
uuid_000000000007b98c:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b95a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b98e:
	mov -184(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007b991
uuid_000000000007b98f:
	pushq $0
	pushq -176(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b991:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b994
uuid_000000000007b992:
	pushq $0
	pushq $uuid_000000000007b785
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007b994:
	mov -88(%RBP),%RSP
	add $-112, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b99b
	jmp uuid_000000000007b99d
uuid_000000000007b99b:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b998
	jmp uuid_000000000007b99a
uuid_000000000007b998:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b995
	jmp uuid_000000000007b997
uuid_000000000007b995:
	movb $1, -192(%rbp)
uuid_000000000007b997:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b99a:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b99d:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba02
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9b0
	jmp uuid_000000000007b9b2
uuid_000000000007b9b0:
	push %RBP
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9a1
	jmp uuid_000000000007b9a3
uuid_000000000007b9a1:
	push %RBP
	mov -368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b99e
	jmp uuid_000000000007b9a0
uuid_000000000007b99e:
	movb $1, -384(%rbp)
uuid_000000000007b9a0:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007b9a3:
	mov -392(%RBP),%RSP
	add $-408, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9ad
	jmp uuid_000000000007b9af
uuid_000000000007b9ad:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9a7
	jmp uuid_000000000007b9a9
uuid_000000000007b9a7:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b9a4
	jmp uuid_000000000007b9a6
uuid_000000000007b9a4:
	movb $1, -448(%rbp)
uuid_000000000007b9a6:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007b9a9:
	mov -456(%RBP),%RSP
	add $-472, %RSP
	mov -448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9aa
	jmp uuid_000000000007b9ac
uuid_000000000007b9aa:
	movb $1, -336(%rbp)
uuid_000000000007b9ac:
	mov -416(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007b9af:
	mov -352(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007b9b2:
	mov -344(%RBP),%RSP
	add $-472, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9ff
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9cb
	jmp uuid_000000000007b9cd
uuid_000000000007b9cb:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9b9
	jmp uuid_000000000007b9bb
uuid_000000000007b9b9:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9b6
	jmp uuid_000000000007b9b8
uuid_000000000007b9b6:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9b3
	jmp uuid_000000000007b9b5
uuid_000000000007b9b3:
	movb $1, -592(%rbp)
uuid_000000000007b9b5:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007b9b8:
	mov -608(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007b9bb:
	mov -600(%RBP),%RSP
	add $-664, %RSP
	mov -592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9c8
	jmp uuid_000000000007b9ca
uuid_000000000007b9c8:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9c2
	jmp uuid_000000000007b9c4
uuid_000000000007b9c2:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9bf
	jmp uuid_000000000007b9c1
uuid_000000000007b9bf:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9bc
	jmp uuid_000000000007b9be
uuid_000000000007b9bc:
	movb $1, -704(%rbp)
uuid_000000000007b9be:
	mov -752(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b9c1:
	mov -720(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b9c4:
	mov -712(%RBP),%RSP
	add $-776, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9c5
	jmp uuid_000000000007b9c7
uuid_000000000007b9c5:
	movb $1, -544(%rbp)
uuid_000000000007b9c7:
	mov -672(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b9ca:
	mov -560(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b9cd:
	mov -552(%RBP),%RSP
	add $-776, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9fc
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9ec
	jmp uuid_000000000007b9ee
uuid_000000000007b9ec:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9da
	jmp uuid_000000000007b9dc
uuid_000000000007b9da:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9d7
	jmp uuid_000000000007b9d9
uuid_000000000007b9d7:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b9d4
	jmp uuid_000000000007b9d6
uuid_000000000007b9d4:
	movb $1, -896(%rbp)
uuid_000000000007b9d6:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b9d9:
	mov -912(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b9dc:
	mov -904(%RBP),%RSP
	add $-968, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9e9
	jmp uuid_000000000007b9eb
uuid_000000000007b9e9:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9e3
	jmp uuid_000000000007b9e5
uuid_000000000007b9e3:
	push %RBP
	mov -992(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9e0
	jmp uuid_000000000007b9e2
uuid_000000000007b9e0:
	push %RBP
	mov -984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b9dd
	jmp uuid_000000000007b9df
uuid_000000000007b9dd:
	movb $1, -1008(%rbp)
uuid_000000000007b9df:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007b9e2:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007b9e5:
	mov -1016(%RBP),%RSP
	add $-1080, %RSP
	mov -1008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9e6
	jmp uuid_000000000007b9e8
uuid_000000000007b9e6:
	movb $1, -848(%rbp)
uuid_000000000007b9e8:
	mov -976(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007b9eb:
	mov -864(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007b9ee:
	mov -856(%RBP),%RSP
	add $-1080, %RSP
	mov -848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007b9f9
	push %RBP
	jmp uuid_000000000007b9f6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007b9f5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b9f8
uuid_000000000007b9f6:
uuid_000000000007b9f8:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_000000000007b9fb
uuid_000000000007b9f9:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9f2
	jmp uuid_000000000007b9f4
uuid_000000000007b9f2:
	push %RBP
#call function == : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9ef
	jmp uuid_000000000007b9f1
uuid_000000000007b9ef:
	movq $1, -64(%rbp)
uuid_000000000007b9f1:
	mov -1096(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007b9f4:
	mov -1088(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007b9fb:
	mov -784(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007b9fe
uuid_000000000007b9fc:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9d1
	jmp uuid_000000000007b9d3
uuid_000000000007b9d1:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9ce
	jmp uuid_000000000007b9d0
uuid_000000000007b9ce:
	movq $1, -64(%rbp)
uuid_000000000007b9d0:
	mov -792(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007b9d3:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007b9fe:
	mov -480(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007ba01
uuid_000000000007b9ff:
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007ba01:
	mov -272(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007ba04
uuid_000000000007ba02:
	movq $1, -64(%rbp)
uuid_000000000007ba04:
	mov -128(%RBP),%RSP
	add $-264, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
typeof_CL_ArrowTypeAST:
#call function .lookup : Arrow<Cons<Cons<BTreeIs<AST,Type>,AST>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %r15
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsASTBTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
ascript_CL_ArrowNilConsTypeAST:
#call function .bind : Arrow<Cons<Cons<Array<BTreeIs<AST,Type>,?>,AST>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsASTArray_QM_BTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd01
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcfe
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba18
	jmp uuid_000000000007ba1a
uuid_000000000007ba18:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba15
	jmp uuid_000000000007ba17
uuid_000000000007ba15:
	push %RBP
	mov -536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba12
	jmp uuid_000000000007ba14
uuid_000000000007ba12:
	movb $1, -560(%rbp)
uuid_000000000007ba14:
	mov -656(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007ba17:
	mov -576(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007ba1a:
	mov -568(%RBP),%RSP
	add $-728, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcfb
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba21
	jmp uuid_000000000007ba23
uuid_000000000007ba21:
	push %RBP
	jmp uuid_000000000007ba1e
	jmp uuid_000000000007ba20
uuid_000000000007ba1e:
	push %RBP
	jmp uuid_000000000007ba1b
	jmp uuid_000000000007ba1d
uuid_000000000007ba1b:
	movb $1, -816(%rbp)
uuid_000000000007ba1d:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007ba20:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007ba23:
	mov -824(%RBP),%RSP
	add $-840, %RSP
	mov -816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcf8
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba2a
	jmp uuid_000000000007ba2c
uuid_000000000007ba2a:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba27
	jmp uuid_000000000007ba29
uuid_000000000007ba27:
	push %RBP
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	jmp uuid_000000000007ba24
	jmp uuid_000000000007ba26
uuid_000000000007ba24:
	movb $1, -928(%rbp)
uuid_000000000007ba26:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007ba29:
	mov -944(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007ba2c:
	mov -936(%RBP),%RSP
	add $-1080, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcf5
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba5e
	jmp uuid_000000000007ba60
uuid_000000000007ba5e:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba4b
	jmp uuid_000000000007ba4d
uuid_000000000007ba4b:
	push %RBP
	mov -1248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba39
	jmp uuid_000000000007ba3b
uuid_000000000007ba39:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	jmp uuid_000000000007ba36
	jmp uuid_000000000007ba38
uuid_000000000007ba36:
	movb $1, -1360(%rbp)
uuid_000000000007ba38:
	mov -1376(%RBP),%RSP
	add $-1400, %RSP
uuid_000000000007ba3b:
	mov -1368(%RBP),%RSP
	add $-1400, %RSP
	mov -1360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba48
	jmp uuid_000000000007ba4a
uuid_000000000007ba48:
	push %RBP
	mov -1240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba42
	jmp uuid_000000000007ba44
uuid_000000000007ba42:
	push %RBP
	jmp uuid_000000000007ba3f
	jmp uuid_000000000007ba41
uuid_000000000007ba3f:
	push %RBP
	jmp uuid_000000000007ba3c
	jmp uuid_000000000007ba3e
uuid_000000000007ba3c:
	movb $1, -1488(%rbp)
uuid_000000000007ba3e:
	mov -1512(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007ba41:
	mov -1504(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007ba44:
	mov -1496(%RBP),%RSP
	add $-1512, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba45
	jmp uuid_000000000007ba47
uuid_000000000007ba45:
	movb $1, -1264(%rbp)
uuid_000000000007ba47:
	mov -1408(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007ba4a:
	mov -1280(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007ba4d:
	mov -1272(%RBP),%RSP
	add $-1512, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba5b
	jmp uuid_000000000007ba5d
uuid_000000000007ba5b:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba55
	jmp uuid_000000000007ba57
uuid_000000000007ba55:
	push %RBP
	jmp uuid_000000000007ba52
	jmp uuid_000000000007ba54
uuid_000000000007ba52:
	push %RBP
	mov -1528(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba4f
	jmp uuid_000000000007ba51
uuid_000000000007ba4f:
	movb $1, -1600(%rbp)
uuid_000000000007ba51:
	mov -1624(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007ba54:
	mov -1616(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007ba57:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
	mov -1600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba58
	jmp uuid_000000000007ba5a
uuid_000000000007ba58:
	movb $1, -1168(%rbp)
uuid_000000000007ba5a:
	mov -1520(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007ba5d:
	mov -1184(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007ba60:
	mov -1176(%RBP),%RSP
	add $-1632, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcf2
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1712(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba9b
	jmp uuid_000000000007ba9d
uuid_000000000007ba9b:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba89
	jmp uuid_000000000007ba8b
uuid_000000000007ba89:
	push %RBP
	mov -1800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba80
	jmp uuid_000000000007ba82
uuid_000000000007ba80:
	push %RBP
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	jmp uuid_000000000007ba7d
	jmp uuid_000000000007ba7f
uuid_000000000007ba7d:
	movb $1, -1912(%rbp)
uuid_000000000007ba7f:
	mov -1928(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007ba82:
	mov -1920(%RBP),%RSP
	add $-1952, %RSP
	mov -1912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba86
	jmp uuid_000000000007ba88
uuid_000000000007ba86:
	push %RBP
	mov -1792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba83
	jmp uuid_000000000007ba85
uuid_000000000007ba83:
	movb $1, -1816(%rbp)
uuid_000000000007ba85:
	mov -1960(%RBP),%RSP
	add $-2032, %RSP
uuid_000000000007ba88:
	mov -1832(%RBP),%RSP
	add $-2032, %RSP
uuid_000000000007ba8b:
	mov -1824(%RBP),%RSP
	add $-2032, %RSP
	mov -1816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba98
	jmp uuid_000000000007ba9a
uuid_000000000007ba98:
	push %RBP
	mov -1696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2112(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba92
	jmp uuid_000000000007ba94
uuid_000000000007ba92:
	push %RBP
	jmp uuid_000000000007ba8f
	jmp uuid_000000000007ba91
uuid_000000000007ba8f:
	push %RBP
	mov -2048(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba8c
	jmp uuid_000000000007ba8e
uuid_000000000007ba8c:
	movb $1, -2120(%rbp)
uuid_000000000007ba8e:
	mov -2144(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007ba91:
	mov -2136(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007ba94:
	mov -2128(%RBP),%RSP
	add $-2152, %RSP
	mov -2120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba95
	jmp uuid_000000000007ba97
uuid_000000000007ba95:
	movb $1, -1720(%rbp)
uuid_000000000007ba97:
	mov -2040(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007ba9a:
	mov -1736(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007ba9d:
	mov -1728(%RBP),%RSP
	add $-2152, %RSP
	mov -1720(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcef
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2232(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baca
	jmp uuid_000000000007bacc
uuid_000000000007baca:
	push %RBP
	mov -2224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2328(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bab7
	jmp uuid_000000000007bab9
uuid_000000000007bab7:
	push %RBP
	jmp uuid_000000000007bab4
	jmp uuid_000000000007bab6
uuid_000000000007bab4:
	push %RBP
	mov -2264(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bab1
	jmp uuid_000000000007bab3
uuid_000000000007bab1:
	movb $1, -2336(%rbp)
uuid_000000000007bab3:
	mov -2360(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007bab6:
	mov -2352(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007bab9:
	mov -2344(%RBP),%RSP
	add $-2368, %RSP
	mov -2336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bac7
	jmp uuid_000000000007bac9
uuid_000000000007bac7:
	push %RBP
	mov -2216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2448(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bac1
	jmp uuid_000000000007bac3
uuid_000000000007bac1:
	push %RBP
	jmp uuid_000000000007babe
	jmp uuid_000000000007bac0
uuid_000000000007babe:
	push %RBP
	mov -2384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2488(%rbp)
	pushq $uuid_000000000007baba
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007babb
	jmp uuid_000000000007babd
uuid_000000000007babb:
	movb $1, -2456(%rbp)
uuid_000000000007babd:
	mov -2480(%RBP),%RSP
	add $-2488, %RSP
uuid_000000000007bac0:
	mov -2472(%RBP),%RSP
	add $-2488, %RSP
uuid_000000000007bac3:
	mov -2464(%RBP),%RSP
	add $-2488, %RSP
	mov -2456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bac4
	jmp uuid_000000000007bac6
uuid_000000000007bac4:
	movb $1, -2240(%rbp)
uuid_000000000007bac6:
	mov -2376(%RBP),%RSP
	add $-2488, %RSP
uuid_000000000007bac9:
	mov -2256(%RBP),%RSP
	add $-2488, %RSP
uuid_000000000007bacc:
	mov -2248(%RBP),%RSP
	add $-2488, %RSP
	mov -2240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcec
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2568(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bae7
	jmp uuid_000000000007bae9
uuid_000000000007bae7:
	push %RBP
	mov -2560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bad4
	jmp uuid_000000000007bad6
uuid_000000000007bad4:
	push %RBP
	jmp uuid_000000000007bad1
	jmp uuid_000000000007bad3
uuid_000000000007bad1:
	push %RBP
	mov -2600(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bace
	jmp uuid_000000000007bad0
uuid_000000000007bace:
	movb $1, -2672(%rbp)
uuid_000000000007bad0:
	mov -2696(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007bad3:
	mov -2688(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007bad6:
	mov -2680(%RBP),%RSP
	add $-2704, %RSP
	mov -2672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bae4
	jmp uuid_000000000007bae6
uuid_000000000007bae4:
	push %RBP
	mov -2552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bade
	jmp uuid_000000000007bae0
uuid_000000000007bade:
	push %RBP
	jmp uuid_000000000007badb
	jmp uuid_000000000007badd
uuid_000000000007badb:
	push %RBP
	mov -2720(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2824(%rbp)
	pushq $uuid_000000000007bad7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bad8
	jmp uuid_000000000007bada
uuid_000000000007bad8:
	movb $1, -2792(%rbp)
uuid_000000000007bada:
	mov -2816(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007badd:
	mov -2808(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007bae0:
	mov -2800(%RBP),%RSP
	add $-2824, %RSP
	mov -2792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bae1
	jmp uuid_000000000007bae3
uuid_000000000007bae1:
	movb $1, -2576(%rbp)
uuid_000000000007bae3:
	mov -2712(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007bae6:
	mov -2592(%RBP),%RSP
	add $-2824, %RSP
uuid_000000000007bae9:
	mov -2584(%RBP),%RSP
	add $-2824, %RSP
	mov -2576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bce9
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2904(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb0c
	jmp uuid_000000000007bb0e
uuid_000000000007bb0c:
	push %RBP
	mov -2896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb09
	jmp uuid_000000000007bb0b
uuid_000000000007bb09:
	push %RBP
	mov -2888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3080(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb03
	jmp uuid_000000000007bb05
uuid_000000000007bb03:
	push %RBP
	mov -3072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb00
	jmp uuid_000000000007bb02
uuid_000000000007bb00:
	push %RBP
	mov -3064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bafa
	jmp uuid_000000000007bafc
uuid_000000000007bafa:
	push %RBP
	mov -3248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007baf7
	jmp uuid_000000000007baf9
uuid_000000000007baf7:
	push %RBP
	mov -3240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3432(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baf1
	jmp uuid_000000000007baf3
uuid_000000000007baf1:
	push %RBP
	jmp uuid_000000000007baee
	jmp uuid_000000000007baf0
uuid_000000000007baee:
	push %RBP
	mov -3368(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3472(%rbp)
	pushq $uuid_000000000007baea
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007baeb
	jmp uuid_000000000007baed
uuid_000000000007baeb:
	movb $1, -3440(%rbp)
uuid_000000000007baed:
	mov -3464(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007baf0:
	mov -3456(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007baf3:
	mov -3448(%RBP),%RSP
	add $-3472, %RSP
	mov -3440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007baf4
	jmp uuid_000000000007baf6
uuid_000000000007baf4:
	movb $1, -3264(%rbp)
uuid_000000000007baf6:
	mov -3360(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007baf9:
	mov -3280(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007bafc:
	mov -3272(%RBP),%RSP
	add $-3472, %RSP
	mov -3264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bafd
	jmp uuid_000000000007baff
uuid_000000000007bafd:
	movb $1, -3088(%rbp)
uuid_000000000007baff:
	mov -3184(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007bb02:
	mov -3104(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007bb05:
	mov -3096(%RBP),%RSP
	add $-3472, %RSP
	mov -3088(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb06
	jmp uuid_000000000007bb08
uuid_000000000007bb06:
	movb $1, -2912(%rbp)
uuid_000000000007bb08:
	mov -3008(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007bb0b:
	mov -2928(%RBP),%RSP
	add $-3472, %RSP
uuid_000000000007bb0e:
	mov -2920(%RBP),%RSP
	add $-3472, %RSP
	mov -2912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bce6
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -3552(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb30
	jmp uuid_000000000007bb32
uuid_000000000007bb30:
	push %RBP
	mov -3544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3648(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb1e
	jmp uuid_000000000007bb20
uuid_000000000007bb1e:
	push %RBP
	mov -3640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3744(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb15
	jmp uuid_000000000007bb17
uuid_000000000007bb15:
	push %RBP
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	jmp uuid_000000000007bb12
	jmp uuid_000000000007bb14
uuid_000000000007bb12:
	movb $1, -3752(%rbp)
uuid_000000000007bb14:
	mov -3768(%RBP),%RSP
	add $-3792, %RSP
uuid_000000000007bb17:
	mov -3760(%RBP),%RSP
	add $-3792, %RSP
	mov -3752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb1b
	jmp uuid_000000000007bb1d
uuid_000000000007bb1b:
	push %RBP
	mov -3632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb18
	jmp uuid_000000000007bb1a
uuid_000000000007bb18:
	movb $1, -3656(%rbp)
uuid_000000000007bb1a:
	mov -3800(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007bb1d:
	mov -3672(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007bb20:
	mov -3664(%RBP),%RSP
	add $-3872, %RSP
	mov -3656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb2d
	jmp uuid_000000000007bb2f
uuid_000000000007bb2d:
	push %RBP
	mov -3536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3952(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb27
	jmp uuid_000000000007bb29
uuid_000000000007bb27:
	push %RBP
	jmp uuid_000000000007bb24
	jmp uuid_000000000007bb26
uuid_000000000007bb24:
	push %RBP
	mov -3888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3992(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb21
	jmp uuid_000000000007bb23
uuid_000000000007bb21:
	movb $1, -3960(%rbp)
uuid_000000000007bb23:
	mov -3984(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007bb26:
	mov -3976(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007bb29:
	mov -3968(%RBP),%RSP
	add $-3992, %RSP
	mov -3960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb2a
	jmp uuid_000000000007bb2c
uuid_000000000007bb2a:
	movb $1, -3560(%rbp)
uuid_000000000007bb2c:
	mov -3880(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007bb2f:
	mov -3576(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007bb32:
	mov -3568(%RBP),%RSP
	add $-3992, %RSP
	mov -3560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bce3
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb76
	jmp uuid_000000000007bb78
uuid_000000000007bb76:
	push %RBP
	mov -4064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4168(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb63
	jmp uuid_000000000007bb65
uuid_000000000007bb63:
	push %RBP
	jmp uuid_000000000007bb60
	jmp uuid_000000000007bb62
uuid_000000000007bb60:
	movb $1, -4176(%rbp)
uuid_000000000007bb62:
	mov -4192(%RBP),%RSP
	add $-4192, %RSP
uuid_000000000007bb65:
	mov -4184(%RBP),%RSP
	add $-4192, %RSP
	mov -4176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb73
	jmp uuid_000000000007bb75
uuid_000000000007bb73:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4272(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb6d
	jmp uuid_000000000007bb6f
uuid_000000000007bb6d:
	push %RBP
	jmp uuid_000000000007bb6a
	jmp uuid_000000000007bb6c
uuid_000000000007bb6a:
	push %RBP
	mov -4208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq $uuid_000000000007bb66
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb67
	jmp uuid_000000000007bb69
uuid_000000000007bb67:
	movb $1, -4280(%rbp)
uuid_000000000007bb69:
	mov -4304(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007bb6c:
	mov -4296(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007bb6f:
	mov -4288(%RBP),%RSP
	add $-4312, %RSP
	mov -4280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb70
	jmp uuid_000000000007bb72
uuid_000000000007bb70:
	movb $1, -4080(%rbp)
uuid_000000000007bb72:
	mov -4200(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007bb75:
	mov -4096(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007bb78:
	mov -4088(%RBP),%RSP
	add $-4312, %RSP
	mov -4080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bce0
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb97
	jmp uuid_000000000007bb99
uuid_000000000007bb97:
	push %RBP
	mov -4384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb94
	jmp uuid_000000000007bb96
uuid_000000000007bb94:
	push %RBP
	mov -4376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb8e
	jmp uuid_000000000007bb90
uuid_000000000007bb8e:
	push %RBP
	jmp uuid_000000000007bb8b
	jmp uuid_000000000007bb8d
uuid_000000000007bb8b:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	pushq $uuid_000000000007bb87
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb88
	jmp uuid_000000000007bb8a
uuid_000000000007bb88:
	movb $1, -4576(%rbp)
uuid_000000000007bb8a:
	mov -4600(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007bb8d:
	mov -4592(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007bb90:
	mov -4584(%RBP),%RSP
	add $-4608, %RSP
	mov -4576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb91
	jmp uuid_000000000007bb93
uuid_000000000007bb91:
	movb $1, -4400(%rbp)
uuid_000000000007bb93:
	mov -4496(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007bb96:
	mov -4416(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007bb99:
	mov -4408(%RBP),%RSP
	add $-4608, %RSP
	mov -4400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcdd
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbaa
	jmp uuid_000000000007bbac
uuid_000000000007bbaa:
	push %RBP
	mov -4680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bba7
	jmp uuid_000000000007bba9
uuid_000000000007bba7:
	push %RBP
	mov -4672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4864(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bba1
	jmp uuid_000000000007bba3
uuid_000000000007bba1:
	push %RBP
	jmp uuid_000000000007bb9e
	jmp uuid_000000000007bba0
uuid_000000000007bb9e:
	push %RBP
	mov -4800(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq $uuid_000000000007bb9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb9b
	jmp uuid_000000000007bb9d
uuid_000000000007bb9b:
	movb $1, -4872(%rbp)
uuid_000000000007bb9d:
	mov -4896(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007bba0:
	mov -4888(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007bba3:
	mov -4880(%RBP),%RSP
	add $-4904, %RSP
	mov -4872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bba4
	jmp uuid_000000000007bba6
uuid_000000000007bba4:
	movb $1, -4696(%rbp)
uuid_000000000007bba6:
	mov -4792(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007bba9:
	mov -4712(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007bbac:
	mov -4704(%RBP),%RSP
	add $-4904, %RSP
	mov -4696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcda
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4984(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc0b
	jmp uuid_000000000007bc0d
uuid_000000000007bc0b:
	push %RBP
	mov -4976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc08
	jmp uuid_000000000007bc0a
uuid_000000000007bc08:
	push %RBP
	mov -4968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5160(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc02
	jmp uuid_000000000007bc04
uuid_000000000007bc02:
	push %RBP
	pushq -5136(%RBP)
	pushq -5144(%RBP)
	pushq -5152(%RBP)
	jmp uuid_000000000007bbff
	jmp uuid_000000000007bc01
uuid_000000000007bbff:
	push %RBP
	mov -5128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5288(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbfc
	jmp uuid_000000000007bbfe
uuid_000000000007bbfc:
	push %RBP
	mov -5120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbf6
	jmp uuid_000000000007bbf8
uuid_000000000007bbf6:
	push %RBP
	jmp uuid_000000000007bbf3
	jmp uuid_000000000007bbf5
uuid_000000000007bbf3:
	push %RBP
	mov -5304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bbf0
	jmp uuid_000000000007bbf2
uuid_000000000007bbf0:
	movb $1, -5376(%rbp)
uuid_000000000007bbf2:
	mov -5400(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007bbf5:
	mov -5392(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007bbf8:
	mov -5384(%RBP),%RSP
	add $-5408, %RSP
	mov -5376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbf9
	jmp uuid_000000000007bbfb
uuid_000000000007bbf9:
	movb $1, -5168(%rbp)
uuid_000000000007bbfb:
	mov -5296(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007bbfe:
	mov -5216(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007bc01:
	mov -5184(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007bc04:
	mov -5176(%RBP),%RSP
	add $-5408, %RSP
	mov -5168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc05
	jmp uuid_000000000007bc07
uuid_000000000007bc05:
	movb $1, -4992(%rbp)
uuid_000000000007bc07:
	mov -5088(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007bc0a:
	mov -5008(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007bc0d:
	mov -5000(%RBP),%RSP
	add $-5408, %RSP
	mov -4992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcd7
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -5488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc39
	jmp uuid_000000000007bc3b
uuid_000000000007bc39:
	push %RBP
	mov -5480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc36
	jmp uuid_000000000007bc38
uuid_000000000007bc36:
	push %RBP
	mov -5472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc33
	jmp uuid_000000000007bc35
uuid_000000000007bc33:
	movb $1, -5496(%rbp)
uuid_000000000007bc35:
	mov -5592(%RBP),%RSP
	add $-5664, %RSP
uuid_000000000007bc38:
	mov -5512(%RBP),%RSP
	add $-5664, %RSP
uuid_000000000007bc3b:
	mov -5504(%RBP),%RSP
	add $-5664, %RSP
	mov -5496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcd4
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -5744(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc6f
	jmp uuid_000000000007bc71
uuid_000000000007bc6f:
	push %RBP
	pushq -5720(%RBP)
	pushq -5728(%RBP)
	pushq -5736(%RBP)
	jmp uuid_000000000007bc6c
	jmp uuid_000000000007bc6e
uuid_000000000007bc6c:
	push %RBP
	mov -5712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc69
	jmp uuid_000000000007bc6b
uuid_000000000007bc69:
	push %RBP
	mov -5704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc66
	jmp uuid_000000000007bc68
uuid_000000000007bc66:
	movb $1, -5752(%rbp)
uuid_000000000007bc68:
	mov -5880(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007bc6b:
	mov -5800(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007bc6e:
	mov -5768(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007bc71:
	mov -5760(%RBP),%RSP
	add $-5952, %RSP
	mov -5752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcd1
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6032(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bca5
	jmp uuid_000000000007bca7
uuid_000000000007bca5:
	push %RBP
	pushq -5976(%RBP)
	pushq -5984(%RBP)
	pushq -5992(%RBP)
	pushq -6000(%RBP)
	pushq -6008(%RBP)
	pushq -6016(%RBP)
	pushq -6024(%RBP)
	jmp uuid_000000000007bca2
	jmp uuid_000000000007bca4
uuid_000000000007bca2:
	push %RBP
	mov -5968(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bc9f
	jmp uuid_000000000007bca1
uuid_000000000007bc9f:
	movb $1, -6040(%rbp)
uuid_000000000007bca1:
	mov -6120(%RBP),%RSP
	add $-6128, %RSP
uuid_000000000007bca4:
	mov -6056(%RBP),%RSP
	add $-6128, %RSP
uuid_000000000007bca7:
	mov -6048(%RBP),%RSP
	add $-6128, %RSP
	mov -6040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcce
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6208(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcae
	jmp uuid_000000000007bcb0
uuid_000000000007bcae:
	push %RBP
	jmp uuid_000000000007bcab
	jmp uuid_000000000007bcad
uuid_000000000007bcab:
	push %RBP
	mov -6144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bca8
	jmp uuid_000000000007bcaa
uuid_000000000007bca8:
	movb $1, -6216(%rbp)
uuid_000000000007bcaa:
	mov -6240(%RBP),%RSP
	add $-6248, %RSP
uuid_000000000007bcad:
	mov -6232(%RBP),%RSP
	add $-6248, %RSP
uuid_000000000007bcb0:
	mov -6224(%RBP),%RSP
	add $-6248, %RSP
	mov -6216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bccb
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcc0
	jmp uuid_000000000007bcc2
uuid_000000000007bcc0:
	push %RBP
	jmp uuid_000000000007bcbd
	jmp uuid_000000000007bcbf
uuid_000000000007bcbd:
	movb $1, -6336(%rbp)
uuid_000000000007bcbf:
	mov -6352(%RBP),%RSP
	add $-6352, %RSP
uuid_000000000007bcc2:
	mov -6344(%RBP),%RSP
	add $-6352, %RSP
	mov -6336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bcc8
	push %RBP
	jmp uuid_000000000007bcc5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bcc4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bcc7
uuid_000000000007bcc5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bcc3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcc7:
	mov -6360(%RBP),%RSP
	add $-6360, %RSP
	jmp uuid_000000000007bcca
uuid_000000000007bcc8:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcca:
	mov -6256(%RBP),%RSP
	add $-6352, %RSP
	jmp uuid_000000000007bccd
uuid_000000000007bccb:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcba
#call function typeof-tag : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6248(%rbp)
	mov %RBX, %RBP
	call typeof_SB_tag_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcb7
	jmp uuid_000000000007bcb9
uuid_000000000007bcb7:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcb1
	jmp uuid_000000000007bcb3
uuid_000000000007bcb1:
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6280(%RBP)
	popq -6272(%RBP)
	popq -6264(%RBP)
uuid_000000000007bcb3:
	mov -6296(%RBP),%RSP
	add $-6296, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcb4
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc5b
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007bc5b
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6312(%rbp)
	pushq -6320(%rbp)
	pushq -6328(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_000000000007bcb6
uuid_000000000007bcb4:
uuid_000000000007bcb6:
	mov -6304(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007bcb9:
	mov -6288(%RBP),%RSP
	add $-6304, %RSP
	jmp uuid_000000000007bcbc
uuid_000000000007bcba:
uuid_000000000007bcbc:
	mov -6256(%RBP),%RSP
	add $-6256, %RSP
uuid_000000000007bccd:
	mov -6136(%RBP),%RSP
	add $-6256, %RSP
	jmp uuid_000000000007bcd0
uuid_000000000007bcce:
#call function typeof-var : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6128(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function typeof-var : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6128(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcd0:
	mov -5960(%RBP),%RSP
	add $-6152, %RSP
	jmp uuid_000000000007bcd3
uuid_000000000007bcd1:
#call function infer-ctx : Arrow<Cons<TContext,AST>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5888(%rbp)
	pushq -5896(%rbp)
	pushq -5904(%rbp)
	pushq -5912(%rbp)
	pushq -5920(%rbp)
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	mov %RBX, %RBP
	call infer_SB_ctx_CL_ArrowTContextConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc97
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	jmp uuid_000000000007bc99
uuid_000000000007bc97:
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	push %RBP
	pushq -5968(%rbp)
	pushq -5976(%rbp)
	pushq -5984(%rbp)
	pushq -5992(%rbp)
	pushq -6000(%rbp)
	pushq -6008(%rbp)
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
	pushq $0
	push %RBP
	mov -6112(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc90
	jmp uuid_000000000007bc92
uuid_000000000007bc90:
	push %RBP
	mov -6104(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6208(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc7e
	jmp uuid_000000000007bc80
uuid_000000000007bc7e:
	push %RBP
	mov -6200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6304(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc75
	jmp uuid_000000000007bc77
uuid_000000000007bc75:
	push %RBP
	pushq -6280(%RBP)
	pushq -6288(%RBP)
	pushq -6296(%RBP)
	jmp uuid_000000000007bc72
	jmp uuid_000000000007bc74
uuid_000000000007bc72:
	movb $1, -6312(%rbp)
uuid_000000000007bc74:
	mov -6328(%RBP),%RSP
	add $-6352, %RSP
uuid_000000000007bc77:
	mov -6320(%RBP),%RSP
	add $-6352, %RSP
	mov -6312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc7b
	jmp uuid_000000000007bc7d
uuid_000000000007bc7b:
	push %RBP
	mov -6192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc78
	jmp uuid_000000000007bc7a
uuid_000000000007bc78:
	movb $1, -6216(%rbp)
uuid_000000000007bc7a:
	mov -6360(%RBP),%RSP
	add $-6432, %RSP
uuid_000000000007bc7d:
	mov -6232(%RBP),%RSP
	add $-6432, %RSP
uuid_000000000007bc80:
	mov -6224(%RBP),%RSP
	add $-6432, %RSP
	mov -6216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc8d
	jmp uuid_000000000007bc8f
uuid_000000000007bc8d:
	push %RBP
	mov -6096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc87
	jmp uuid_000000000007bc89
uuid_000000000007bc87:
	push %RBP
	jmp uuid_000000000007bc84
	jmp uuid_000000000007bc86
uuid_000000000007bc84:
	push %RBP
	mov -6448(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6552(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc81
	jmp uuid_000000000007bc83
uuid_000000000007bc81:
	movb $1, -6520(%rbp)
uuid_000000000007bc83:
	mov -6544(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007bc86:
	mov -6536(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007bc89:
	mov -6528(%RBP),%RSP
	add $-6552, %RSP
	mov -6520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc8a
	jmp uuid_000000000007bc8c
uuid_000000000007bc8a:
	movb $1, -6120(%rbp)
uuid_000000000007bc8c:
	mov -6440(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007bc8f:
	mov -6136(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007bc92:
	mov -6128(%RBP),%RSP
	add $-6552, %RSP
	mov -6120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc94
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bc93
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc96
uuid_000000000007bc94:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6368(%rbp)
	pushq -6376(%rbp)
	pushq -6384(%rbp)
	pushq -6392(%rbp)
	pushq -6400(%rbp)
	pushq -6408(%rbp)
	pushq -6416(%rbp)
	pushq -6424(%rbp)
	pushq -6432(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq -6336(%rbp)
	pushq -6344(%rbp)
	pushq -6352(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bc96:
	mov -6040(%RBP),%RSP
	add $-6552, %RSP
uuid_000000000007bc99:
	mov -5960(%RBP),%RSP
	add $-6552, %RSP
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5888(%rbp)
	pushq -5896(%rbp)
	pushq -5904(%rbp)
	pushq -5912(%rbp)
	pushq -5920(%rbp)
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function enrich : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc9a
	pushq -6560(%rbp)
	pushq -6568(%rbp)
	pushq -6576(%rbp)
	pushq -6584(%rbp)
	pushq -6592(%rbp)
	pushq -6600(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call enrich_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc9c
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc9b
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007bc9b
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6584(%rbp)
	pushq -6592(%rbp)
	pushq -6600(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_000000000007bc9e
uuid_000000000007bc9c:
uuid_000000000007bc9e:
	mov -6608(%RBP),%RSP
	add $-6608, %RSP
uuid_000000000007bcd3:
	mov -5672(%RBP),%RSP
	add $-6608, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $24, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007bcd6
uuid_000000000007bcd4:
	pushq $3
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc3c
	jmp uuid_000000000007bc3e
uuid_000000000007bc3c:
	pushq $0
	popq -5672(%RBP)
uuid_000000000007bc3e:
	mov -5680(%RBP),%RSP
	add $-5680, %RSP
	pushq $4
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc3f
	jmp uuid_000000000007bc41
uuid_000000000007bc3f:
	pushq $3
	popq -5688(%RBP)
uuid_000000000007bc41:
	mov -5696(%RBP),%RSP
	add $-5696, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -5672(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc42
	jmp uuid_000000000007bc44
uuid_000000000007bc42:
	pushq $0
	popq -5688(%RBP)
uuid_000000000007bc44:
	mov -5704(%RBP),%RSP
	add $-5704, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -5688(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function apply-or-cons-and-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call apply_SB_or_SB_cons_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5672(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc45
	jmp uuid_000000000007bc47
uuid_000000000007bc45:
#call function implicit-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call implicit_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -5728(%RBP)
	popq -5720(%RBP)
	popq -5712(%RBP)
uuid_000000000007bc47:
	mov -5736(%RBP),%RSP
	add $-5736, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $uuid_000000000007bc48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc4b
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007bc4d
uuid_000000000007bc4b:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc49
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007bc49
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc48
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007bc4a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007bc4d:
	mov -5744(%RBP),%RSP
	add $-5768, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc63
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007bc65
uuid_000000000007bc63:
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	push %RBP
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq $0
	push %RBP
	mov -5952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc54
	jmp uuid_000000000007bc56
uuid_000000000007bc54:
	push %RBP
	jmp uuid_000000000007bc51
	jmp uuid_000000000007bc53
uuid_000000000007bc51:
	push %RBP
	mov -5888(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bc4e
	jmp uuid_000000000007bc50
uuid_000000000007bc4e:
	movb $1, -5960(%rbp)
uuid_000000000007bc50:
	mov -5984(%RBP),%RSP
	add $-5992, %RSP
uuid_000000000007bc53:
	mov -5976(%RBP),%RSP
	add $-5992, %RSP
uuid_000000000007bc56:
	mov -5968(%RBP),%RSP
	add $-5992, %RSP
	mov -5960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc60
	push %RBP
	jmp uuid_000000000007bc5d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bc5c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc5f
uuid_000000000007bc5d:
uuid_000000000007bc5f:
	mov -6000(%RBP),%RSP
	add $-6000, %RSP
	mov %RSP, %R14
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007bc62
uuid_000000000007bc60:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc57
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc58
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5992(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc59
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6008(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc5a
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6000(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc5b
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007bc5b
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007bc62:
	mov -5880(%RBP),%RSP
	add $-6056, %RSP
uuid_000000000007bc65:
	mov -5800(%RBP),%RSP
	add $-6056, %RSP
uuid_000000000007bcd6:
	mov -5416(%RBP),%RSP
	add $-6056, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007bcd9
uuid_000000000007bcd7:
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5408(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc12
	jmp uuid_000000000007bc14
uuid_000000000007bc12:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc0f
	jmp uuid_000000000007bc11
uuid_000000000007bc0f:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc0e
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bc11:
	mov -5448(%RBP),%RSP
	add $-5448, %RSP
uuid_000000000007bc14:
	mov -5440(%RBP),%RSP
	add $-5448, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc16
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc15
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc18
uuid_000000000007bc16:
uuid_000000000007bc18:
	mov -5480(%RBP),%RSP
	add $-5480, %RSP
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -5472(%RBP)
	popq -5464(%RBP)
	popq -5456(%RBP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq $0
	push %RBP
	mov -5632(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc2b
	jmp uuid_000000000007bc2d
uuid_000000000007bc2b:
	push %RBP
	jmp uuid_000000000007bc28
	jmp uuid_000000000007bc2a
uuid_000000000007bc28:
	push %RBP
	mov -5616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5736(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc22
	jmp uuid_000000000007bc24
uuid_000000000007bc22:
	push %RBP
	jmp uuid_000000000007bc1f
	jmp uuid_000000000007bc21
uuid_000000000007bc1f:
	push %RBP
	jmp uuid_000000000007bc1c
	jmp uuid_000000000007bc1e
uuid_000000000007bc1c:
	push %RBP
	mov -5696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc19
	jmp uuid_000000000007bc1b
uuid_000000000007bc19:
	movb $1, -5744(%rbp)
uuid_000000000007bc1b:
	mov -5776(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007bc1e:
	mov -5768(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007bc21:
	mov -5760(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007bc24:
	mov -5752(%RBP),%RSP
	add $-5848, %RSP
	mov -5744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc25
	jmp uuid_000000000007bc27
uuid_000000000007bc25:
	movb $1, -5640(%rbp)
uuid_000000000007bc27:
	mov -5664(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007bc2a:
	mov -5656(%RBP),%RSP
	add $-5848, %RSP
uuid_000000000007bc2d:
	mov -5648(%RBP),%RSP
	add $-5848, %RSP
	mov -5640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bc2f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bc2e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc31
uuid_000000000007bc2f:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bc31:
	mov -5560(%RBP),%RSP
	add $-5848, %RSP
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -5408(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc32
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007bc32
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007bcd9:
	mov -4912(%RBP),%RSP
	add $-5872, %RSP
	jmp uuid_000000000007bcdc
uuid_000000000007bcda:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq $0
	push %RBP
	mov -4984(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbc6
	jmp uuid_000000000007bbc8
uuid_000000000007bbc6:
	push %RBP
	mov -4976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbbd
	jmp uuid_000000000007bbbf
uuid_000000000007bbbd:
	push %RBP
	mov -5040(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbb4
	jmp uuid_000000000007bbb6
uuid_000000000007bbb4:
	push %RBP
	mov -5104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5176(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbb1
	jmp uuid_000000000007bbb3
uuid_000000000007bbb1:
	push %RBP
	pushq -5080(%RBP)
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	mov -5208(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbae
	jmp uuid_000000000007bbb0
uuid_000000000007bbae:
	movb $1, -5120(%rbp)
uuid_000000000007bbb0:
	mov -5184(%RBP),%RSP
	add $-5208, %RSP
uuid_000000000007bbb3:
	mov -5136(%RBP),%RSP
	add $-5208, %RSP
uuid_000000000007bbb6:
	mov -5128(%RBP),%RSP
	add $-5208, %RSP
	mov -5120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbba
	jmp uuid_000000000007bbbc
uuid_000000000007bbba:
	push %RBP
	jmp uuid_000000000007bbb7
	jmp uuid_000000000007bbb9
uuid_000000000007bbb7:
	movb $1, -5056(%rbp)
uuid_000000000007bbb9:
	mov -5216(%RBP),%RSP
	add $-5216, %RSP
uuid_000000000007bbbc:
	mov -5072(%RBP),%RSP
	add $-5216, %RSP
uuid_000000000007bbbf:
	mov -5064(%RBP),%RSP
	add $-5216, %RSP
	mov -5056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbc3
	jmp uuid_000000000007bbc5
uuid_000000000007bbc3:
	push %RBP
	mov -4968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5232(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbc0
	jmp uuid_000000000007bbc2
uuid_000000000007bbc0:
	movb $1, -4992(%rbp)
uuid_000000000007bbc2:
	mov -5224(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007bbc5:
	mov -5008(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007bbc8:
	mov -5000(%RBP),%RSP
	add $-5232, %RSP
	mov -4992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbed
	push %RBP
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq $0
	push %RBP
	mov -5264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbe1
	jmp uuid_000000000007bbe3
uuid_000000000007bbe1:
	push %RBP
	mov -5256(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbd8
	jmp uuid_000000000007bbda
uuid_000000000007bbd8:
	push %RBP
	mov -5320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbcf
	jmp uuid_000000000007bbd1
uuid_000000000007bbcf:
	push %RBP
	mov -5384(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbcc
	jmp uuid_000000000007bbce
uuid_000000000007bbcc:
	push %RBP
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	jmp uuid_000000000007bbc9
	jmp uuid_000000000007bbcb
uuid_000000000007bbc9:
	movb $1, -5400(%rbp)
uuid_000000000007bbcb:
	mov -5464(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007bbce:
	mov -5416(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007bbd1:
	mov -5408(%RBP),%RSP
	add $-5488, %RSP
	mov -5400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbd5
	jmp uuid_000000000007bbd7
uuid_000000000007bbd5:
	push %RBP
	pushq -5296(%RBP)
	pushq -5304(%RBP)
	pushq -5312(%RBP)
	mov -5520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bbd2
	jmp uuid_000000000007bbd4
uuid_000000000007bbd2:
	movb $1, -5336(%rbp)
uuid_000000000007bbd4:
	mov -5496(%RBP),%RSP
	add $-5520, %RSP
uuid_000000000007bbd7:
	mov -5352(%RBP),%RSP
	add $-5520, %RSP
uuid_000000000007bbda:
	mov -5344(%RBP),%RSP
	add $-5520, %RSP
	mov -5336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbde
	jmp uuid_000000000007bbe0
uuid_000000000007bbde:
	push %RBP
	mov -5248(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5536(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbdb
	jmp uuid_000000000007bbdd
uuid_000000000007bbdb:
	movb $1, -5272(%rbp)
uuid_000000000007bbdd:
	mov -5528(%RBP),%RSP
	add $-5536, %RSP
uuid_000000000007bbe0:
	mov -5288(%RBP),%RSP
	add $-5536, %RSP
uuid_000000000007bbe3:
	mov -5280(%RBP),%RSP
	add $-5536, %RSP
	mov -5272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bbea
	push %RBP
	jmp uuid_000000000007bbe7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bbe6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bbe9
uuid_000000000007bbe7:
uuid_000000000007bbe9:
	mov -5544(%RBP),%RSP
	add $-5544, %RSP
	jmp uuid_000000000007bbec
uuid_000000000007bbea:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbe4
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007bbe4
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -4928(%RBP)
	popq -4920(%RBP)
	popq -4912(%RBP)
uuid_000000000007bbec:
	mov -5240(%RBP),%RSP
	add $-5536, %RSP
	jmp uuid_000000000007bbef
uuid_000000000007bbed:
uuid_000000000007bbef:
	mov -4960(%RBP),%RSP
	add $-5232, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcdc:
	mov -4616(%RBP),%RSP
	add $-5232, %RSP
	jmp uuid_000000000007bcdf
uuid_000000000007bcdd:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq $1
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcdf:
	mov -4320(%RBP),%RSP
	add $-4608, %RSP
	jmp uuid_000000000007bce2
uuid_000000000007bce0:
#call function as-constant : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb79
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call as_SB_constant_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq $0
	push %RBP
	mov -4488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb80
	jmp uuid_000000000007bb82
uuid_000000000007bb80:
	push %RBP
	jmp uuid_000000000007bb7d
	jmp uuid_000000000007bb7f
uuid_000000000007bb7d:
	push %RBP
	mov -4472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb7a
	jmp uuid_000000000007bb7c
uuid_000000000007bb7a:
	movb $1, -4496(%rbp)
uuid_000000000007bb7c:
	mov -4520(%RBP),%RSP
	add $-4592, %RSP
uuid_000000000007bb7f:
	mov -4512(%RBP),%RSP
	add $-4592, %RSP
uuid_000000000007bb82:
	mov -4504(%RBP),%RSP
	add $-4592, %RSP
	mov -4496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb84
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bb83
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb86
uuid_000000000007bb84:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bb86:
	mov -4416(%RBP),%RSP
	add $-4592, %RSP
uuid_000000000007bce2:
	mov -4000(%RBP),%RSP
	add $-4592, %RSP
	jmp uuid_000000000007bce5
uuid_000000000007bce3:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	push %RBP
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq $0
	push %RBP
	mov -4168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb39
	jmp uuid_000000000007bb3b
uuid_000000000007bb39:
	push %RBP
	jmp uuid_000000000007bb36
	jmp uuid_000000000007bb38
uuid_000000000007bb36:
	push %RBP
	mov -4104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb33
	jmp uuid_000000000007bb35
uuid_000000000007bb33:
	movb $1, -4176(%rbp)
uuid_000000000007bb35:
	mov -4200(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007bb38:
	mov -4192(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007bb3b:
	mov -4184(%RBP),%RSP
	add $-4208, %RSP
	mov -4176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bb50
	push %RBP
	jmp uuid_000000000007bb4d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bb4c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb4f
uuid_000000000007bb4d:
uuid_000000000007bb4f:
	mov -4216(%RBP),%RSP
	add $-4216, %RSP
	jmp uuid_000000000007bb52
uuid_000000000007bb50:
	push %RBP
#call function is-reg8 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb3d
	jmp uuid_000000000007bb3f
uuid_000000000007bb3d:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb3c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007bb3f:
	mov -4216(%RBP),%RSP
	add $-4216, %RSP
	push %RBP
#call function is-reg16 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb41
	jmp uuid_000000000007bb43
uuid_000000000007bb41:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb40
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007bb43:
	mov -4224(%RBP),%RSP
	add $-4224, %RSP
	push %RBP
#call function is-reg32 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb45
	jmp uuid_000000000007bb47
uuid_000000000007bb45:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb44
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007bb47:
	mov -4232(%RBP),%RSP
	add $-4232, %RSP
	push %RBP
#call function is-reg64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb49
	jmp uuid_000000000007bb4b
uuid_000000000007bb49:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb48
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007bb4b:
	mov -4240(%RBP),%RSP
	add $-4240, %RSP
uuid_000000000007bb52:
	mov -4096(%RBP),%RSP
	add $-4240, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb5d
	jmp uuid_000000000007bb5f
uuid_000000000007bb5d:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb53
	jmp uuid_000000000007bb55
uuid_000000000007bb53:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
uuid_000000000007bb55:
	mov -4280(%RBP),%RSP
	add $-4280, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq $uuid_000000000007bb56
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb5a
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb57
	jmp uuid_000000000007bb59
uuid_000000000007bb57:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
uuid_000000000007bb59:
	mov -4320(%RBP),%RSP
	add $-4320, %RSP
#call function with-fields : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	mov %RBX, %RBP
	call with_SB_fields_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
	jmp uuid_000000000007bb5c
uuid_000000000007bb5a:
uuid_000000000007bb5c:
	mov -4288(%RBP),%RSP
	add $-4288, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bb5f:
	mov -4248(%RBP),%RSP
	add $-4288, %RSP
uuid_000000000007bce5:
	mov -3480(%RBP),%RSP
	add $-4288, %RSP
	jmp uuid_000000000007bce8
uuid_000000000007bce6:
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb0f
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	pushq -3328(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	mov %RSP, %R14
	movq 112(%R14), %R15
	movq %R15, 112(%RSP)
	movq 104(%R14), %R15
	movq %R15, 104(%RSP)
	movq 96(%R14), %R15
	movq %R15, 96(%RSP)
	movq 88(%R14), %R15
	movq %R15, 88(%RSP)
	movq 80(%R14), %R15
	movq %R15, 80(%RSP)
	movq 72(%R14), %R15
	movq %R15, 72(%RSP)
	movq 64(%R14), %R15
	movq %R15, 64(%RSP)
	movq 56(%R14), %R15
	movq %R15, 56(%RSP)
	movq 48(%R14), %R15
	movq %R15, 48(%RSP)
	movq 40(%R14), %R15
	movq %R15, 40(%RSP)
	movq 32(%R14), %R15
	movq %R15, 32(%RSP)
	movq 24(%R14), %R15
	movq %R15, 24(%RSP)
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007bb11
uuid_000000000007bb0f:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	pushq -3328(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3488(%rbp)
	pushq -3496(%rbp)
	pushq -3504(%rbp)
	pushq -3512(%rbp)
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3568(%rbp)
	pushq -3576(%rbp)
	pushq -3584(%rbp)
	pushq -3592(%rbp)
	pushq -3600(%rbp)
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
uuid_000000000007bb11:
	mov -3480(%RBP),%RSP
	add $-3720, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bce8:
	mov -2832(%RBP),%RSP
	add $-3720, %RSP
	jmp uuid_000000000007bceb
uuid_000000000007bce9:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bceb:
	mov -2496(%RBP),%RSP
	add $-2824, %RSP
	jmp uuid_000000000007bcee
uuid_000000000007bcec:
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2368(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bacd
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bcee:
	mov -2160(%RBP),%RSP
	add $-2488, %RSP
	jmp uuid_000000000007bcf1
uuid_000000000007bcef:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq $0
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007baae
	jmp uuid_000000000007bab0
uuid_000000000007baae:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba9e
	jmp uuid_000000000007baa0
uuid_000000000007ba9e:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	movq -2240(%rbp), %r15
	movq %r15, -1952(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -1944(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -1936(%rbp)
uuid_000000000007baa0:
	mov -2216(%RBP),%RSP
	add $-2240, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq $0
	push %RBP
	mov -2392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baa7
	jmp uuid_000000000007baa9
uuid_000000000007baa7:
	push %RBP
	mov -2384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007baa4
	jmp uuid_000000000007baa6
uuid_000000000007baa4:
	push %RBP
	mov -2376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007baa1
	jmp uuid_000000000007baa3
uuid_000000000007baa1:
	movb $1, -2400(%rbp)
uuid_000000000007baa3:
	mov -2496(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007baa6:
	mov -2416(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007baa9:
	mov -2408(%RBP),%RSP
	add $-2568, %RSP
	mov -2400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007baab
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007baaa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007baad
uuid_000000000007baab:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007baad:
	mov -2320(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007bab0:
	mov -2184(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007bcf1:
	mov -1640(%RBP),%RSP
	add $-2568, %RSP
	jmp uuid_000000000007bcf4
uuid_000000000007bcf2:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq $0
	push %RBP
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba70
	jmp uuid_000000000007ba72
uuid_000000000007ba70:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1880(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba67
	jmp uuid_000000000007ba69
uuid_000000000007ba67:
	push %RBP
	jmp uuid_000000000007ba64
	jmp uuid_000000000007ba66
uuid_000000000007ba64:
	push %RBP
	mov -1864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba61
	jmp uuid_000000000007ba63
uuid_000000000007ba61:
	movb $1, -1888(%rbp)
uuid_000000000007ba63:
	mov -1912(%RBP),%RSP
	add $-1984, %RSP
uuid_000000000007ba66:
	mov -1904(%RBP),%RSP
	add $-1984, %RSP
uuid_000000000007ba69:
	mov -1896(%RBP),%RSP
	add $-1984, %RSP
	mov -1888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba6d
	jmp uuid_000000000007ba6f
uuid_000000000007ba6d:
	push %RBP
	jmp uuid_000000000007ba6a
	jmp uuid_000000000007ba6c
uuid_000000000007ba6a:
	movb $1, -1792(%rbp)
uuid_000000000007ba6c:
	mov -1992(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007ba6f:
	mov -1808(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007ba72:
	mov -1800(%RBP),%RSP
	add $-1992, %RSP
	mov -1792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ba7a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ba79
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ba7c
uuid_000000000007ba7a:
	push %RBP
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba73
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	jmp uuid_000000000007ba75
uuid_000000000007ba73:
uuid_000000000007ba75:
	mov -2000(%RBP),%RSP
	add $-2000, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba76
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ba78
uuid_000000000007ba76:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
uuid_000000000007ba78:
	mov -2032(%RBP),%RSP
	add $-2032, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ba7c:
	mov -1712(%RBP),%RSP
	add $-2032, %RSP
uuid_000000000007bcf4:
	mov -1088(%RBP),%RSP
	add $-2032, %RSP
	jmp uuid_000000000007bcf7
uuid_000000000007bcf5:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba33
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba30
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2d
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2e
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007ba2e
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_000000000007ba32
uuid_000000000007ba30:
uuid_000000000007ba32:
	mov -1120(%RBP),%RSP
	add $-1120, %RSP
	jmp uuid_000000000007ba35
uuid_000000000007ba33:
uuid_000000000007ba35:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007bcf7:
	mov -848(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_000000000007bcfa
uuid_000000000007bcf8:
uuid_000000000007bcfa:
	mov -736(%RBP),%RSP
	add $-840, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	movq 112(%R14), %R15
	movq %R15, 112(%RSP)
	movq 104(%R14), %R15
	movq %R15, 104(%RSP)
	movq 96(%R14), %R15
	movq %R15, 96(%RSP)
	movq 88(%R14), %R15
	movq %R15, 88(%RSP)
	movq 80(%R14), %R15
	movq %R15, 80(%RSP)
	movq 72(%R14), %R15
	movq %R15, 72(%RSP)
	movq 64(%R14), %R15
	movq %R15, 64(%RSP)
	movq 56(%R14), %R15
	movq %R15, 56(%RSP)
	movq 48(%R14), %R15
	movq %R15, 48(%RSP)
	movq 40(%R14), %R15
	movq %R15, 40(%RSP)
	movq 32(%R14), %R15
	movq %R15, 32(%RSP)
	movq 24(%R14), %R15
	movq %R15, 24(%RSP)
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007bcfd
uuid_000000000007bcfb:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
uuid_000000000007bcfd:
	mov -480(%RBP),%RSP
	add $-848, %RSP
	jmp uuid_000000000007bd00
uuid_000000000007bcfe:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bd00:
	mov -400(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007bd03
uuid_000000000007bd01:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bd03:
	mov -320(%RBP),%RSP
	add $-392, %RSP
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd04
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_000000000007bd06
uuid_000000000007bd04:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc5b
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007bc5b
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_000000000007bd06:
	mov -400(%RBP),%RSP
	add $-424, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $240, %rsp
	ret
add_SB_alias_CL_ArrowNilConsTypeConsStringString:
#call function cons : Arrow<Cons<Tuple<Tuple<String,String>,Type>,List<Tuple<Tuple<String,String>,Type>>>,List<Tuple<Tuple<String,String>,Type>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListTupleTypeTupleStringStringConsListTupleTypeTupleStringStringTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $48, %rsp
	ret
find_SB_alias_CL_ArrowStringConsTypeString:
	pushq -8(%rbp)
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007bd66:
#call function non-zero : Arrow<List<Tuple<Tuple<String,String>,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd67
	jmp uuid_000000000007bd68
uuid_000000000007bd67:
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd2b
	jmp uuid_000000000007bd2d
uuid_000000000007bd2b:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd28
	jmp uuid_000000000007bd2a
uuid_000000000007bd28:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	jmp uuid_000000000007bd25
	jmp uuid_000000000007bd27
uuid_000000000007bd25:
	movb $1, -280(%rbp)
uuid_000000000007bd27:
	mov -376(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007bd2a:
	mov -296(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007bd2d:
	mov -288(%RBP),%RSP
	add $-432, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd63
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bd62
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd65
uuid_000000000007bd63:
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	push %RBP
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd58
	jmp uuid_000000000007bd5a
uuid_000000000007bd58:
	push %RBP
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd46
	jmp uuid_000000000007bd48
uuid_000000000007bd46:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd3d
	jmp uuid_000000000007bd3f
uuid_000000000007bd3d:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd34
	jmp uuid_000000000007bd36
uuid_000000000007bd34:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd31
	jmp uuid_000000000007bd33
uuid_000000000007bd31:
	push %RBP
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	jmp uuid_000000000007bd2e
	jmp uuid_000000000007bd30
uuid_000000000007bd2e:
	movb $1, -736(%rbp)
uuid_000000000007bd30:
	mov -800(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007bd33:
	mov -752(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007bd36:
	mov -744(%RBP),%RSP
	add $-824, %RSP
	mov -736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd3a
	jmp uuid_000000000007bd3c
uuid_000000000007bd3a:
	push %RBP
	jmp uuid_000000000007bd37
	jmp uuid_000000000007bd39
uuid_000000000007bd37:
	movb $1, -672(%rbp)
uuid_000000000007bd39:
	mov -832(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bd3c:
	mov -688(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bd3f:
	mov -680(%RBP),%RSP
	add $-832, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd43
	jmp uuid_000000000007bd45
uuid_000000000007bd43:
	push %RBP
	mov -584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd40
	jmp uuid_000000000007bd42
uuid_000000000007bd40:
	movb $1, -608(%rbp)
uuid_000000000007bd42:
	mov -840(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007bd45:
	mov -624(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007bd48:
	mov -616(%RBP),%RSP
	add $-848, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd55
	jmp uuid_000000000007bd57
uuid_000000000007bd55:
	push %RBP
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd4f
	jmp uuid_000000000007bd51
uuid_000000000007bd4f:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bd4c
	jmp uuid_000000000007bd4e
uuid_000000000007bd4c:
	push %RBP
	mov -864(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bd49
	jmp uuid_000000000007bd4b
uuid_000000000007bd49:
	movb $1, -888(%rbp)
uuid_000000000007bd4b:
	mov -920(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007bd4e:
	mov -904(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007bd51:
	mov -896(%RBP),%RSP
	add $-928, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd52
	jmp uuid_000000000007bd54
uuid_000000000007bd52:
	movb $1, -560(%rbp)
uuid_000000000007bd54:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007bd57:
	mov -576(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007bd5a:
	mov -568(%RBP),%RSP
	add $-928, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd5f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bd5e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd61
uuid_000000000007bd5f:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -928(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd5b
	jmp uuid_000000000007bd5d
uuid_000000000007bd5b:
	movq -912(%rbp), %r15
	movq %r15, -48(%rbp)
	mov -912(%rbp), %r15
	mov %r15, -48(%rbp)
uuid_000000000007bd5d:
	mov -936(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007bd61:
	mov -496(%RBP),%RSP
	add $-936, %RSP
	movq -368(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007bd65:
	mov -200(%RBP),%RSP
	add $-936, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $56, %rsp
	add $56, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bd66
uuid_000000000007bd68:
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
find_SB_alias_SB_type_CL_ArrowTypeString:
	pushq $0
	pushq $0
	pushq $3
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007bd9e:
#call function non-zero : Arrow<List<Tuple<Tuple<String,String>,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd9f
	jmp uuid_000000000007bda0
uuid_000000000007bd9f:
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd7b
	jmp uuid_000000000007bd7d
uuid_000000000007bd7b:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd78
	jmp uuid_000000000007bd7a
uuid_000000000007bd78:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	jmp uuid_000000000007bd75
	jmp uuid_000000000007bd77
uuid_000000000007bd75:
	movb $1, -272(%rbp)
uuid_000000000007bd77:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007bd7a:
	mov -288(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007bd7d:
	mov -280(%RBP),%RSP
	add $-424, %RSP
	mov -272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd9b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bd9a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd9d
uuid_000000000007bd9b:
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd8d
	jmp uuid_000000000007bd8f
uuid_000000000007bd8d:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007bd8a
	jmp uuid_000000000007bd8c
uuid_000000000007bd8a:
	push %RBP
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd84
	jmp uuid_000000000007bd86
uuid_000000000007bd84:
	push %RBP
	mov -616(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bd81
	jmp uuid_000000000007bd83
uuid_000000000007bd81:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bd7e
	jmp uuid_000000000007bd80
uuid_000000000007bd7e:
	movb $1, -632(%rbp)
uuid_000000000007bd80:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007bd83:
	mov -648(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007bd86:
	mov -640(%RBP),%RSP
	add $-672, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd87
	jmp uuid_000000000007bd89
uuid_000000000007bd87:
	movb $1, -552(%rbp)
uuid_000000000007bd89:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007bd8c:
	mov -568(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007bd8f:
	mov -560(%RBP),%RSP
	add $-672, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bd97
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bd96
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd99
uuid_000000000007bd97:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -672(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd93
	jmp uuid_000000000007bd95
uuid_000000000007bd93:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd90
	movq -592(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -24(%rbp)
	jmp uuid_000000000007bd92
uuid_000000000007bd90:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007bd92:
	mov -688(%RBP),%RSP
	add $-688, %RSP
uuid_000000000007bd95:
	mov -680(%RBP),%RSP
	add $-688, %RSP
uuid_000000000007bd99:
	mov -488(%RBP),%RSP
	add $-688, %RSP
	movq -360(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -296(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_000000000007bd9d:
	mov -192(%RBP),%RSP
	add $-688, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $56, %rsp
	add $56, %rsp
	add $8, %rsp
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bd9e
uuid_000000000007bda0:
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mark_SB_class_SB_exists_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mark_SB_parameter_SB_flat_CL_ArrowNilConsU64ConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,?>,Tuple<Tuple<String,U64>,U64>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleU64TupleU64StringArray_QM_BTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,Tuple<Tuple<String,U64>,U64>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mark_SB_as_SB_special_CL_ArrowNilConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<String,Type>,U64>,?>,Tuple<String,Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
is_SB_special_CL_ArrowU64ConsTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<String,Type>,U64>,Tuple<String,Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
index_SB_lone_SB_tag_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_lone_SB_tag_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_tag_SB_is_SB_fragment_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_fragment_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_fragment_CL_ArrowU64Type:
#call function is-fragment : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call is_SB_fragment_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $uuid_000000000007bded
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function global-is-seen : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call global_SB_is_SB_seen_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdf0
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<String,Type>,U64>,?>,Tuple<String,Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bdf2
uuid_000000000007bdf0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdee
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bdf2:
	mov -72(%RBP),%RSP
	add $-72, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
global_SB_is_SB_seen_CL_ArrowU64ConsTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<String,Type>,U64>,Tuple<String,Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
has_SB_only_SB_child_CL_ArrowNilConsStringString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,String>,?>,String>,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsStringConsStringArray_QM_BTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
get_SB_only_SB_child_CL_ArrowStringString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,String>,String>,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $uuid_000000000007b6a7
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowStringConsStringConsStringBTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_of_SB_tag_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	mov $unknown_SB_index_SB_of_SB_tag_CL_U64, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
size_SB_of_SB_class_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be2d
	jmp uuid_000000000007be2f
uuid_000000000007be2d:
	push %RBP
	jmp uuid_000000000007be2a
	jmp uuid_000000000007be2c
uuid_000000000007be2a:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007be27
	jmp uuid_000000000007be29
uuid_000000000007be27:
	movb $1, -104(%rbp)
uuid_000000000007be29:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007be2c:
	mov -120(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007be2f:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be35
	push %RBP
	jmp uuid_000000000007be32
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007be31
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be34
uuid_000000000007be32:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be30
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be34:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007be37
uuid_000000000007be35:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be37:
	mov -72(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $40, %rsp
	ret
class_SB_of_SB_tag_CL_ArrowTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Type>,String>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -128(%RSP)
	push -128(%RSP)
	push -128(%RSP)
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_class_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Tuple<Type,Type>>,?>,String>,Tuple<Type,Type>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $64, %rsp
	ret
fields_SB_of_SB_tag_CL_ArrowTupleTypeTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Tuple<Type,Type>>,String>,Tuple<Type,Type>>,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	subq $56, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fields_SB_of_SB_tag_CL_ArrowTypeConsTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be77
	jmp uuid_000000000007be79
uuid_000000000007be77:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be6d
	jmp uuid_000000000007be6f
uuid_000000000007be6d:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be6a
	jmp uuid_000000000007be6c
uuid_000000000007be6a:
	push %RBP
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be64
	jmp uuid_000000000007be66
uuid_000000000007be64:
	push %RBP
	jmp uuid_000000000007be61
	jmp uuid_000000000007be63
uuid_000000000007be61:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007be5e
	jmp uuid_000000000007be60
uuid_000000000007be5e:
	movb $1, -304(%rbp)
uuid_000000000007be60:
	mov -328(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007be63:
	mov -320(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007be66:
	mov -312(%RBP),%RSP
	add $-336, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be67
	jmp uuid_000000000007be69
uuid_000000000007be67:
	movb $1, -208(%rbp)
uuid_000000000007be69:
	mov -272(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007be6c:
	mov -224(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007be6f:
	mov -216(%RBP),%RSP
	add $-336, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be74
	jmp uuid_000000000007be76
uuid_000000000007be74:
	push %RBP
	mov -120(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $uuid_000000000007be70
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be71
	jmp uuid_000000000007be73
uuid_000000000007be71:
	movb $1, -144(%rbp)
uuid_000000000007be73:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007be76:
	mov -160(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007be79:
	mov -152(%RBP),%RSP
	add $-352, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be98
	push %RBP
	jmp uuid_000000000007be95
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007be94
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be97
uuid_000000000007be95:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be93
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be97:
	mov -360(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_000000000007be9a
uuid_000000000007be98:
#call function fields-of-tag : Arrow<String,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_tag_CL_ArrowTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be80
	jmp uuid_000000000007be82
uuid_000000000007be80:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be7d
	jmp uuid_000000000007be7f
uuid_000000000007be7d:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be7a
	jmp uuid_000000000007be7c
uuid_000000000007be7a:
	movb $1, -480(%rbp)
uuid_000000000007be7c:
	mov -528(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007be7f:
	mov -496(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007be82:
	mov -488(%RBP),%RSP
	add $-552, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be90
	push %RBP
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be89
	jmp uuid_000000000007be8b
uuid_000000000007be89:
	push %RBP
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_000000000007be86
	jmp uuid_000000000007be88
uuid_000000000007be86:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_000000000007be83
	jmp uuid_000000000007be85
uuid_000000000007be83:
	movb $1, -624(%rbp)
uuid_000000000007be85:
	mov -672(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007be88:
	mov -640(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007be8b:
	mov -632(%RBP),%RSP
	add $-696, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007be8d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007be8c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be8f
uuid_000000000007be8d:
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007be8f:
	mov -560(%RBP),%RSP
	add $-696, %RSP
	jmp uuid_000000000007be92
uuid_000000000007be90:
uuid_000000000007be92:
	mov -416(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007be9a:
	mov -112(%RBP),%RSP
	add $-552, %RSP
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $uuid_000000000007be9b
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fields-of-type : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb79
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc59
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b66b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call fields_SB_of_SB_type_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
set_SB_type_SB_fields_CL_ArrowNilConsTypeType:
	pushq $uuid_000000000007b6a7
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007beb0
	jmp uuid_000000000007beb2
uuid_000000000007beb0:
	push %RBP
	jmp uuid_000000000007bead
	jmp uuid_000000000007beaf
uuid_000000000007bead:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007beaa
	jmp uuid_000000000007beac
uuid_000000000007beaa:
	movb $1, -128(%rbp)
uuid_000000000007beac:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007beaf:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007beb2:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007beb8
	push %RBP
	jmp uuid_000000000007beb5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007beb4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007beb7
uuid_000000000007beb5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007beb3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007beb7:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007beba
uuid_000000000007beb8:
	movq -160(%rbp), %r15
	movq %r15, -64(%rbp)
	mov -160(%rbp), %r15
	mov %r15, -64(%rbp)
uuid_000000000007beba:
	mov -96(%RBP),%RSP
	add $-160, %RSP
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Tuple<Type,Type>>,?>,String>,Tuple<Type,Type>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r12
	push %R12
	pushq -64(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
get_SB_vararg_SB_inner_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bec1
	jmp uuid_000000000007bec3
uuid_000000000007bec1:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bebe
	jmp uuid_000000000007bec0
uuid_000000000007bebe:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bebb
	jmp uuid_000000000007bebd
uuid_000000000007bebb:
	movb $1, -120(%rbp)
uuid_000000000007bebd:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007bec0:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007bec3:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bee3
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bed9
	jmp uuid_000000000007bedb
uuid_000000000007bed9:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bed0
	jmp uuid_000000000007bed2
uuid_000000000007bed0:
	push %RBP
	jmp uuid_000000000007becd
	jmp uuid_000000000007becf
uuid_000000000007becd:
	push %RBP
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	jmp uuid_000000000007beca
	jmp uuid_000000000007becc
uuid_000000000007beca:
	movb $1, -296(%rbp)
uuid_000000000007becc:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007becf:
	mov -312(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007bed2:
	mov -304(%RBP),%RSP
	add $-344, %RSP
	mov -296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bed6
	jmp uuid_000000000007bed8
uuid_000000000007bed6:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bed3
	jmp uuid_000000000007bed5
uuid_000000000007bed3:
	movb $1, -232(%rbp)
uuid_000000000007bed5:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007bed8:
	mov -248(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007bedb:
	mov -240(%RBP),%RSP
	add $-360, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bee0
	push %RBP
	jmp uuid_000000000007bedd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bedc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bedf
uuid_000000000007bedd:
uuid_000000000007bedf:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007bee2
uuid_000000000007bee0:
	movq -344(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007bee2:
	mov -200(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_000000000007bee5
uuid_000000000007bee3:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bec4
	jmp uuid_000000000007bec6
uuid_000000000007bec4:
	movq -192(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007bec6:
	mov -200(%RBP),%RSP
	add $-200, %RSP
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bec7
	jmp uuid_000000000007bec9
uuid_000000000007bec7:
	movq -160(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -152(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -144(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007bec9:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007bee5:
	mov -88(%RBP),%RSP
	add $-208, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
is_SB_constructor_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007beec
	jmp uuid_000000000007beee
uuid_000000000007beec:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bee9
	jmp uuid_000000000007beeb
uuid_000000000007bee9:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bee6
	jmp uuid_000000000007bee8
uuid_000000000007bee6:
	movb $1, -104(%rbp)
uuid_000000000007bee8:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007beeb:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007beee:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf17
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bef5
	jmp uuid_000000000007bef7
uuid_000000000007bef5:
	push %RBP
	jmp uuid_000000000007bef2
	jmp uuid_000000000007bef4
uuid_000000000007bef2:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bc57
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007beef
	jmp uuid_000000000007bef1
uuid_000000000007beef:
	movb $1, -216(%rbp)
uuid_000000000007bef1:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bef4:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bef7:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf14
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007befe
	jmp uuid_000000000007bf00
uuid_000000000007befe:
	push %RBP
	jmp uuid_000000000007befb
	jmp uuid_000000000007befd
uuid_000000000007befb:
	push %RBP
	mov -264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bef8
	jmp uuid_000000000007befa
uuid_000000000007bef8:
	movb $1, -288(%rbp)
uuid_000000000007befa:
	mov -312(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007befd:
	mov -304(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007bf00:
	mov -296(%RBP),%RSP
	add $-320, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf11
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf07
	jmp uuid_000000000007bf09
uuid_000000000007bf07:
	push %RBP
	jmp uuid_000000000007bf04
	jmp uuid_000000000007bf06
uuid_000000000007bf04:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf01
	jmp uuid_000000000007bf03
uuid_000000000007bf01:
	movb $1, -360(%rbp)
uuid_000000000007bf03:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007bf06:
	mov -376(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007bf09:
	mov -368(%RBP),%RSP
	add $-392, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf0e
	push %RBP
	jmp uuid_000000000007bf0b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bf0a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf0d
uuid_000000000007bf0b:
uuid_000000000007bf0d:
	mov -400(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007bf10
uuid_000000000007bf0e:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007bf10:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007bf13
uuid_000000000007bf11:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007bf13:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007bf16
uuid_000000000007bf14:
	movq $1, -40(%rbp)
uuid_000000000007bf16:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bf19
uuid_000000000007bf17:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bf19:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_simple_SB_constructor_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf20
	jmp uuid_000000000007bf22
uuid_000000000007bf20:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf1d
	jmp uuid_000000000007bf1f
uuid_000000000007bf1d:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf1a
	jmp uuid_000000000007bf1c
uuid_000000000007bf1a:
	movb $1, -104(%rbp)
uuid_000000000007bf1c:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bf1f:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bf22:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf33
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf29
	jmp uuid_000000000007bf2b
uuid_000000000007bf29:
	push %RBP
	jmp uuid_000000000007bf26
	jmp uuid_000000000007bf28
uuid_000000000007bf26:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bc57
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf23
	jmp uuid_000000000007bf25
uuid_000000000007bf23:
	movb $1, -216(%rbp)
uuid_000000000007bf25:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bf28:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bf2b:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf30
	push %RBP
	jmp uuid_000000000007bf2d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bf2c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf2f
uuid_000000000007bf2d:
uuid_000000000007bf2f:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bf32
uuid_000000000007bf30:
	movq $1, -40(%rbp)
uuid_000000000007bf32:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bf35
uuid_000000000007bf33:
#call function is-simple-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_simple_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-simple-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_simple_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bf35:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_tag_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf3c
	jmp uuid_000000000007bf3e
uuid_000000000007bf3c:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf39
	jmp uuid_000000000007bf3b
uuid_000000000007bf39:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf36
	jmp uuid_000000000007bf38
uuid_000000000007bf36:
	movb $1, -104(%rbp)
uuid_000000000007bf38:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bf3b:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bf3e:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf4f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf45
	jmp uuid_000000000007bf47
uuid_000000000007bf45:
	push %RBP
	jmp uuid_000000000007bf42
	jmp uuid_000000000007bf44
uuid_000000000007bf42:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007be70
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf3f
	jmp uuid_000000000007bf41
uuid_000000000007bf3f:
	movb $1, -216(%rbp)
uuid_000000000007bf41:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bf44:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bf47:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf4c
	push %RBP
	jmp uuid_000000000007bf49
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bf48
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf4b
uuid_000000000007bf49:
uuid_000000000007bf4b:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bf4e
uuid_000000000007bf4c:
	movq $1, -40(%rbp)
uuid_000000000007bf4e:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bf51
uuid_000000000007bf4f:
#call function is-tag : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_tag_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-tag : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_tag_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bf51:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_open_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfe8
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf55
	jmp uuid_000000000007bf57
uuid_000000000007bf55:
	push %RBP
	jmp uuid_000000000007bf52
	jmp uuid_000000000007bf54
uuid_000000000007bf52:
	movb $1, -136(%rbp)
uuid_000000000007bf54:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007bf57:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfe5
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf5e
	jmp uuid_000000000007bf60
uuid_000000000007bf5e:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf5b
	jmp uuid_000000000007bf5d
uuid_000000000007bf5b:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf58
	jmp uuid_000000000007bf5a
uuid_000000000007bf58:
	movb $1, -192(%rbp)
uuid_000000000007bf5a:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bf5d:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bf60:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfe2
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf7f
	jmp uuid_000000000007bf81
uuid_000000000007bf7f:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf76
	jmp uuid_000000000007bf78
uuid_000000000007bf76:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf6d
	jmp uuid_000000000007bf6f
uuid_000000000007bf6d:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf6a
	jmp uuid_000000000007bf6c
uuid_000000000007bf6a:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf67
	jmp uuid_000000000007bf69
uuid_000000000007bf67:
	movb $1, -432(%rbp)
uuid_000000000007bf69:
	mov -496(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007bf6c:
	mov -448(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007bf6f:
	mov -440(%RBP),%RSP
	add $-520, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf73
	jmp uuid_000000000007bf75
uuid_000000000007bf73:
	push %RBP
	jmp uuid_000000000007bf70
	jmp uuid_000000000007bf72
uuid_000000000007bf70:
	movb $1, -368(%rbp)
uuid_000000000007bf72:
	mov -528(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007bf75:
	mov -384(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007bf78:
	mov -376(%RBP),%RSP
	add $-528, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf7c
	jmp uuid_000000000007bf7e
uuid_000000000007bf7c:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf79
	jmp uuid_000000000007bf7b
uuid_000000000007bf79:
	movb $1, -304(%rbp)
uuid_000000000007bf7b:
	mov -536(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007bf7e:
	mov -320(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007bf81:
	mov -312(%RBP),%RSP
	add $-544, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfdf
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf9a
	jmp uuid_000000000007bf9c
uuid_000000000007bf9a:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf91
	jmp uuid_000000000007bf93
uuid_000000000007bf91:
	push %RBP
	mov -632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf88
	jmp uuid_000000000007bf8a
uuid_000000000007bf88:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf85
	jmp uuid_000000000007bf87
uuid_000000000007bf85:
	push %RBP
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007bf82
	jmp uuid_000000000007bf84
uuid_000000000007bf82:
	movb $1, -712(%rbp)
uuid_000000000007bf84:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007bf87:
	mov -728(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007bf8a:
	mov -720(%RBP),%RSP
	add $-800, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf8e
	jmp uuid_000000000007bf90
uuid_000000000007bf8e:
	push %RBP
	jmp uuid_000000000007bf8b
	jmp uuid_000000000007bf8d
uuid_000000000007bf8b:
	movb $1, -648(%rbp)
uuid_000000000007bf8d:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007bf90:
	mov -664(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007bf93:
	mov -656(%RBP),%RSP
	add $-808, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bf97
	jmp uuid_000000000007bf99
uuid_000000000007bf97:
	push %RBP
	mov -560(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf94
	jmp uuid_000000000007bf96
uuid_000000000007bf94:
	movb $1, -584(%rbp)
uuid_000000000007bf96:
	mov -816(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007bf99:
	mov -600(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007bf9c:
	mov -592(%RBP),%RSP
	add $-824, %RSP
	mov -584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfdc
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfb6
	jmp uuid_000000000007bfb8
uuid_000000000007bfb6:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfac
	jmp uuid_000000000007bfae
uuid_000000000007bfac:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfa3
	jmp uuid_000000000007bfa5
uuid_000000000007bfa3:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfa0
	jmp uuid_000000000007bfa2
uuid_000000000007bfa0:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007bf9d
	jmp uuid_000000000007bf9f
uuid_000000000007bf9d:
	movb $1, -992(%rbp)
uuid_000000000007bf9f:
	mov -1056(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007bfa2:
	mov -1008(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007bfa5:
	mov -1000(%RBP),%RSP
	add $-1080, %RSP
	mov -992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfa9
	jmp uuid_000000000007bfab
uuid_000000000007bfa9:
	push %RBP
	jmp uuid_000000000007bfa6
	jmp uuid_000000000007bfa8
uuid_000000000007bfa6:
	movb $1, -928(%rbp)
uuid_000000000007bfa8:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007bfab:
	mov -944(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007bfae:
	mov -936(%RBP),%RSP
	add $-1088, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfb3
	jmp uuid_000000000007bfb5
uuid_000000000007bfb3:
	push %RBP
	mov -840(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $uuid_000000000007bfaf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bfb0
	jmp uuid_000000000007bfb2
uuid_000000000007bfb0:
	movb $1, -864(%rbp)
uuid_000000000007bfb2:
	mov -1096(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007bfb5:
	mov -880(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007bfb8:
	mov -872(%RBP),%RSP
	add $-1104, %RSP
	mov -864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfd9
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfbf
	jmp uuid_000000000007bfc1
uuid_000000000007bfbf:
	push %RBP
	mov -1128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfbc
	jmp uuid_000000000007bfbe
uuid_000000000007bfbc:
	push %RBP
	jmp uuid_000000000007bfb9
	jmp uuid_000000000007bfbb
uuid_000000000007bfb9:
	movb $1, -1144(%rbp)
uuid_000000000007bfbb:
	mov -1208(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007bfbe:
	mov -1160(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007bfc1:
	mov -1152(%RBP),%RSP
	add $-1208, %RSP
	mov -1144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfd6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bfd5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bfd8
uuid_000000000007bfd6:
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
uuid_000000000007bfd2:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bfd3
	jmp uuid_000000000007bfd4
uuid_000000000007bfd3:
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	push %RBP
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $0
	push %RBP
	mov -1336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfc8
	jmp uuid_000000000007bfca
uuid_000000000007bfc8:
	push %RBP
	mov -1328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfc5
	jmp uuid_000000000007bfc7
uuid_000000000007bfc5:
	push %RBP
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_000000000007bfc2
	jmp uuid_000000000007bfc4
uuid_000000000007bfc2:
	movb $1, -1344(%rbp)
uuid_000000000007bfc4:
	mov -1408(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007bfc7:
	mov -1360(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007bfca:
	mov -1352(%RBP),%RSP
	add $-1432, %RSP
	mov -1344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bfcf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007bfce
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bfd1
uuid_000000000007bfcf:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bfcb
	jmp uuid_000000000007bfcd
uuid_000000000007bfcb:
	movq $1, -40(%rbp)
uuid_000000000007bfcd:
	mov -1440(%RBP),%RSP
	add $-1440, %RSP
	movq -1400(%rbp), %r15
	movq %r15, -1248(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -1240(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -1232(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -1224(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -1216(%rbp)
uuid_000000000007bfd1:
	mov -1296(%RBP),%RSP
	add $-1440, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bfd2
uuid_000000000007bfd4:
uuid_000000000007bfd8:
	mov -1112(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007bfdb
uuid_000000000007bfd9:
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007bfdb:
	mov -832(%RBP),%RSP
	add $-1104, %RSP
	jmp uuid_000000000007bfde
uuid_000000000007bfdc:
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007bfde:
	mov -552(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007bfe1
uuid_000000000007bfdf:
uuid_000000000007bfe1:
	mov -272(%RBP),%RSP
	add $-544, %RSP
	jmp uuid_000000000007bfe4
uuid_000000000007bfe2:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf61
	jmp uuid_000000000007bf63
uuid_000000000007bf61:
	movq $1, -40(%rbp)
uuid_000000000007bf63:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf64
	jmp uuid_000000000007bf66
uuid_000000000007bf64:
	movq $1, -40(%rbp)
uuid_000000000007bf66:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007bfe4:
	mov -160(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007bfe7
uuid_000000000007bfe5:
	movq $1, -40(%rbp)
uuid_000000000007bfe7:
	mov -104(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007bfea
uuid_000000000007bfe8:
	movq $1, -40(%rbp)
uuid_000000000007bfea:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_vararg_CL_ArrowU64Type:
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_parameterized_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bffa
	jmp uuid_000000000007bffc
uuid_000000000007bffa:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bff1
	jmp uuid_000000000007bff3
uuid_000000000007bff1:
	push %RBP
	jmp uuid_000000000007bfee
	jmp uuid_000000000007bff0
uuid_000000000007bfee:
	push %RBP
	jmp uuid_000000000007bfeb
	jmp uuid_000000000007bfed
uuid_000000000007bfeb:
	movb $1, -168(%rbp)
uuid_000000000007bfed:
	mov -192(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007bff0:
	mov -184(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007bff3:
	mov -176(%RBP),%RSP
	add $-192, %RSP
	mov -168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007bff7
	jmp uuid_000000000007bff9
uuid_000000000007bff7:
	push %RBP
	jmp uuid_000000000007bff4
	jmp uuid_000000000007bff6
uuid_000000000007bff4:
	movb $1, -104(%rbp)
uuid_000000000007bff6:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007bff9:
	mov -120(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007bffc:
	mov -112(%RBP),%RSP
	add $-200, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c013
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c003
	jmp uuid_000000000007c005
uuid_000000000007c003:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c000
	jmp uuid_000000000007c002
uuid_000000000007c000:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bffd
	jmp uuid_000000000007bfff
uuid_000000000007bffd:
	movb $1, -240(%rbp)
uuid_000000000007bfff:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007c002:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007c005:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c010
	push %RBP
	jmp uuid_000000000007c00d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c00c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c00f
uuid_000000000007c00d:
uuid_000000000007c00f:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007c012
uuid_000000000007c010:
	push %RBP
#call function is-parameterized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_parameterized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c006
	jmp uuid_000000000007c008
uuid_000000000007c006:
	movq $1, -40(%rbp)
uuid_000000000007c008:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	push %RBP
#call function is-parameterized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call is_SB_parameterized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c009
	jmp uuid_000000000007c00b
uuid_000000000007c009:
	movq $1, -40(%rbp)
uuid_000000000007c00b:
	mov -328(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007c012:
	mov -208(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007c015
uuid_000000000007c013:
	movq $1, -40(%rbp)
uuid_000000000007c015:
	mov -72(%RBP),%RSP
	add $-200, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_sized_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c04a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c01c
	jmp uuid_000000000007c01e
uuid_000000000007c01c:
	push %RBP
	jmp uuid_000000000007c019
	jmp uuid_000000000007c01b
uuid_000000000007c019:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c016
	jmp uuid_000000000007c018
uuid_000000000007c016:
	movb $1, -136(%rbp)
uuid_000000000007c018:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007c01b:
	mov -152(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007c01e:
	mov -144(%RBP),%RSP
	add $-168, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c047
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c025
	jmp uuid_000000000007c027
uuid_000000000007c025:
	push %RBP
	jmp uuid_000000000007c022
	jmp uuid_000000000007c024
uuid_000000000007c022:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c01f
	jmp uuid_000000000007c021
uuid_000000000007c01f:
	movb $1, -208(%rbp)
uuid_000000000007c021:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007c024:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007c027:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c044
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c02e
	jmp uuid_000000000007c030
uuid_000000000007c02e:
	push %RBP
	jmp uuid_000000000007c02b
	jmp uuid_000000000007c02d
uuid_000000000007c02b:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007bc59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c028
	jmp uuid_000000000007c02a
uuid_000000000007c028:
	movb $1, -280(%rbp)
uuid_000000000007c02a:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007c02d:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007c030:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c041
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c037
	jmp uuid_000000000007c039
uuid_000000000007c037:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c034
	jmp uuid_000000000007c036
uuid_000000000007c034:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c031
	jmp uuid_000000000007c033
uuid_000000000007c031:
	movb $1, -352(%rbp)
uuid_000000000007c033:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007c036:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007c039:
	mov -360(%RBP),%RSP
	add $-424, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c03e
	push %RBP
	jmp uuid_000000000007c03b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c03a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c03d
uuid_000000000007c03b:
uuid_000000000007c03d:
	mov -432(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007c040
uuid_000000000007c03e:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c040:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007c043
uuid_000000000007c041:
	movq $1, -40(%rbp)
uuid_000000000007c043:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007c046
uuid_000000000007c044:
	movq $1, -40(%rbp)
uuid_000000000007c046:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007c049
uuid_000000000007c047:
	movq $1, -40(%rbp)
uuid_000000000007c049:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007c04c
uuid_000000000007c04a:
	movq $1, -40(%rbp)
uuid_000000000007c04c:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_representation_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c053
	jmp uuid_000000000007c055
uuid_000000000007c053:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c050
	jmp uuid_000000000007c052
uuid_000000000007c050:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c04d
	jmp uuid_000000000007c04f
uuid_000000000007c04d:
	movb $1, -104(%rbp)
uuid_000000000007c04f:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c052:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c055:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0a3
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c05d
	jmp uuid_000000000007c05f
uuid_000000000007c05d:
	push %RBP
	jmp uuid_000000000007c05a
	jmp uuid_000000000007c05c
uuid_000000000007c05a:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007c056
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c057
	jmp uuid_000000000007c059
uuid_000000000007c057:
	movb $1, -216(%rbp)
uuid_000000000007c059:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007c05c:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007c05f:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0a0
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c066
	jmp uuid_000000000007c068
uuid_000000000007c066:
	push %RBP
	jmp uuid_000000000007c063
	jmp uuid_000000000007c065
uuid_000000000007c063:
	push %RBP
	mov -264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $uuid_000000000007bb3c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c060
	jmp uuid_000000000007c062
uuid_000000000007c060:
	movb $1, -288(%rbp)
uuid_000000000007c062:
	mov -312(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007c065:
	mov -304(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007c068:
	mov -296(%RBP),%RSP
	add $-320, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c09d
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c06f
	jmp uuid_000000000007c071
uuid_000000000007c06f:
	push %RBP
	jmp uuid_000000000007c06c
	jmp uuid_000000000007c06e
uuid_000000000007c06c:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007bb40
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c069
	jmp uuid_000000000007c06b
uuid_000000000007c069:
	movb $1, -360(%rbp)
uuid_000000000007c06b:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007c06e:
	mov -376(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007c071:
	mov -368(%RBP),%RSP
	add $-392, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c09a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c078
	jmp uuid_000000000007c07a
uuid_000000000007c078:
	push %RBP
	jmp uuid_000000000007c075
	jmp uuid_000000000007c077
uuid_000000000007c075:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $uuid_000000000007bb44
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c072
	jmp uuid_000000000007c074
uuid_000000000007c072:
	movb $1, -432(%rbp)
uuid_000000000007c074:
	mov -456(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007c077:
	mov -448(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007c07a:
	mov -440(%RBP),%RSP
	add $-464, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c097
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c081
	jmp uuid_000000000007c083
uuid_000000000007c081:
	push %RBP
	jmp uuid_000000000007c07e
	jmp uuid_000000000007c080
uuid_000000000007c07e:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $uuid_000000000007bb48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c07b
	jmp uuid_000000000007c07d
uuid_000000000007c07b:
	movb $1, -504(%rbp)
uuid_000000000007c07d:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c080:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c083:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c094
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c08a
	jmp uuid_000000000007c08c
uuid_000000000007c08a:
	push %RBP
	jmp uuid_000000000007c087
	jmp uuid_000000000007c089
uuid_000000000007c087:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c084
	jmp uuid_000000000007c086
uuid_000000000007c084:
	movb $1, -576(%rbp)
uuid_000000000007c086:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007c089:
	mov -592(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007c08c:
	mov -584(%RBP),%RSP
	add $-608, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c091
	push %RBP
	jmp uuid_000000000007c08e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c08d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c090
uuid_000000000007c08e:
uuid_000000000007c090:
	mov -616(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_000000000007c093
uuid_000000000007c091:
	movq $1, -40(%rbp)
uuid_000000000007c093:
	mov -544(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007c096
uuid_000000000007c094:
	movq $1, -40(%rbp)
uuid_000000000007c096:
	mov -472(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_000000000007c099
uuid_000000000007c097:
	movq $1, -40(%rbp)
uuid_000000000007c099:
	mov -400(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007c09c
uuid_000000000007c09a:
	movq $1, -40(%rbp)
uuid_000000000007c09c:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007c09f
uuid_000000000007c09d:
	movq $1, -40(%rbp)
uuid_000000000007c09f:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007c0a2
uuid_000000000007c0a0:
	movq $1, -40(%rbp)
uuid_000000000007c0a2:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007c0a5
uuid_000000000007c0a3:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c0a5:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
guess_SB_representation_CL_ArrowTypeType:
	push %RBP
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c0b9
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -48(%rbp)
	push %RBP
	pushq -56(%rbp)
	movq -72(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0b6
	push %RBP
	pushq -56(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0b3
	push %RBP
	pushq -56(%rbp)
	movq -104(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0b0
	push %RBP
	pushq -56(%rbp)
	movq -120(%RBP), %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0ad
	push %RBP
	pushq -56(%rbp)
	movq -136(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0aa
	push %RBP
	jmp uuid_000000000007c0a7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c0a6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0a9
uuid_000000000007c0a7:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0a9:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c0ac
uuid_000000000007c0aa:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb48
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0ac:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007c0af
uuid_000000000007c0ad:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb44
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0af:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007c0b2
uuid_000000000007c0b0:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb40
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0b2:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007c0b5
uuid_000000000007c0b3:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb3c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0b5:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_000000000007c0b8
uuid_000000000007c0b6:
uuid_000000000007c0b8:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	jmp uuid_000000000007c0bb
uuid_000000000007c0b9:
uuid_000000000007c0bb:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
as_SB_local_SB_variable_CL_ArrowTypeType:
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c0bd
	jmp uuid_000000000007c0bf
uuid_000000000007c0bd:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c0bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0bf:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
as_SB_constant_CL_ArrowTypeType:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c0c0
	jmp uuid_000000000007c0c2
uuid_000000000007c0c0:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c056
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0c2:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
deep_SB_hash_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0e5
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0c6
	jmp uuid_000000000007c0c8
uuid_000000000007c0c6:
	push %RBP
	mov -120(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c0c3
	jmp uuid_000000000007c0c5
uuid_000000000007c0c3:
	movb $1, -136(%rbp)
uuid_000000000007c0c5:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007c0c8:
	mov -144(%RBP),%RSP
	add $-160, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0e2
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0cf
	jmp uuid_000000000007c0d1
uuid_000000000007c0cf:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c0cc
	jmp uuid_000000000007c0ce
uuid_000000000007c0cc:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c0c9
	jmp uuid_000000000007c0cb
uuid_000000000007c0c9:
	movb $1, -200(%rbp)
uuid_000000000007c0cb:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007c0ce:
	mov -216(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007c0d1:
	mov -208(%RBP),%RSP
	add $-272, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0df
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0d8
	jmp uuid_000000000007c0da
uuid_000000000007c0d8:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c0d5
	jmp uuid_000000000007c0d7
uuid_000000000007c0d5:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c0d2
	jmp uuid_000000000007c0d4
uuid_000000000007c0d2:
	movb $1, -312(%rbp)
uuid_000000000007c0d4:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007c0d7:
	mov -328(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007c0da:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0dc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c0db
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0de
uuid_000000000007c0dc:
#call function deep-hash : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c0de:
	mov -280(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007c0e1
uuid_000000000007c0df:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c0e1:
	mov -168(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007c0e4
uuid_000000000007c0e2:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c0e4:
	mov -104(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007c0e7
uuid_000000000007c0e5:
uuid_000000000007c0e7:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
deep_SB_hash_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0f7
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0f0
	jmp uuid_000000000007c0f2
uuid_000000000007c0f0:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c0ed
	jmp uuid_000000000007c0ef
uuid_000000000007c0ed:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007c0ea
	jmp uuid_000000000007c0ec
uuid_000000000007c0ea:
	movb $1, -200(%rbp)
uuid_000000000007c0ec:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c0ef:
	mov -216(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c0f2:
	mov -208(%RBP),%RSP
	add $-288, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c0f4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c0f3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0f6
uuid_000000000007c0f4:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007c0f6:
	mov -152(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007c0f9
uuid_000000000007c0f7:
uuid_000000000007c0f9:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
ascript_SB_normal_CL_ArrowNilConsTypeAST:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c105
	jmp uuid_000000000007c107
uuid_000000000007c105:
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c102
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov $types_SB_have_SB_changed_CL_U8, %r15
	movb $1, 0(%r15)
	jmp uuid_000000000007c104
uuid_000000000007c102:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c0ff
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0fc
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c0fa
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c0fb
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0fe
uuid_000000000007c0fc:
uuid_000000000007c0fe:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007c101
uuid_000000000007c0ff:
uuid_000000000007c101:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007c104:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007c107:
	mov -112(%RBP),%RSP
	add $-152, %RSP
	mov %rbp, %rsp
	sub $104, %rsp
	ret
typeof_CL_ArrowTypeFragmentList:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c10e
	jmp uuid_000000000007c110
uuid_000000000007c10e:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007c10b
	jmp uuid_000000000007c10d
uuid_000000000007c10b:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c108
	jmp uuid_000000000007c10a
uuid_000000000007c108:
	movb $1, -552(%rbp)
uuid_000000000007c10a:
	mov -728(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007c10d:
	mov -568(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007c110:
	mov -560(%RBP),%RSP
	add $-896, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c118
	push %RBP
	jmp uuid_000000000007c115
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c114
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c117
uuid_000000000007c115:
uuid_000000000007c117:
	mov -904(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_000000000007c11a
uuid_000000000007c118:
#call function typeof : Arrow<FragmentList,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c111
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	jmp uuid_000000000007c113
uuid_000000000007c111:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007c113:
	mov -904(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c11a:
	mov -376(%RBP),%RSP
	add $-904, %RSP
	subq $24, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
to_SB_s_CL_ArrowSAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c121
	jmp uuid_000000000007c123
uuid_000000000007c121:
	push %RBP
	jmp uuid_000000000007c11e
	jmp uuid_000000000007c120
uuid_000000000007c11e:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c11b
	jmp uuid_000000000007c11d
uuid_000000000007c11b:
	movb $1, -264(%rbp)
uuid_000000000007c11d:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007c120:
	mov -280(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007c123:
	mov -272(%RBP),%RSP
	add $-296, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c19b
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c12b
	jmp uuid_000000000007c12d
uuid_000000000007c12b:
	push %RBP
	jmp uuid_000000000007c128
	jmp uuid_000000000007c12a
uuid_000000000007c128:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c125
	jmp uuid_000000000007c127
uuid_000000000007c125:
	movb $1, -384(%rbp)
uuid_000000000007c127:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007c12a:
	mov -400(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007c12d:
	mov -392(%RBP),%RSP
	add $-416, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c198
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c14d
	jmp uuid_000000000007c14f
uuid_000000000007c14d:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c13b
	jmp uuid_000000000007c13d
uuid_000000000007c13b:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c132
	jmp uuid_000000000007c134
uuid_000000000007c132:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007c12f
	jmp uuid_000000000007c131
uuid_000000000007c12f:
	movb $1, -696(%rbp)
uuid_000000000007c131:
	mov -712(%RBP),%RSP
	add $-736, %RSP
uuid_000000000007c134:
	mov -704(%RBP),%RSP
	add $-736, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c138
	jmp uuid_000000000007c13a
uuid_000000000007c138:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c135
	jmp uuid_000000000007c137
uuid_000000000007c135:
	movb $1, -600(%rbp)
uuid_000000000007c137:
	mov -744(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007c13a:
	mov -616(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007c13d:
	mov -608(%RBP),%RSP
	add $-816, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c14a
	jmp uuid_000000000007c14c
uuid_000000000007c14a:
	push %RBP
	mov -480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c144
	jmp uuid_000000000007c146
uuid_000000000007c144:
	push %RBP
	jmp uuid_000000000007c141
	jmp uuid_000000000007c143
uuid_000000000007c141:
	push %RBP
	mov -832(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -936(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c13e
	jmp uuid_000000000007c140
uuid_000000000007c13e:
	movb $1, -904(%rbp)
uuid_000000000007c140:
	mov -928(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007c143:
	mov -920(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007c146:
	mov -912(%RBP),%RSP
	add $-936, %RSP
	mov -904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c147
	jmp uuid_000000000007c149
uuid_000000000007c147:
	movb $1, -504(%rbp)
uuid_000000000007c149:
	mov -824(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007c14c:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007c14f:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c195
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c16e
	jmp uuid_000000000007c170
uuid_000000000007c16e:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c15c
	jmp uuid_000000000007c15e
uuid_000000000007c15c:
	push %RBP
	mov -1104(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c153
	jmp uuid_000000000007c155
uuid_000000000007c153:
	push %RBP
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	jmp uuid_000000000007c150
	jmp uuid_000000000007c152
uuid_000000000007c150:
	movb $1, -1216(%rbp)
uuid_000000000007c152:
	mov -1232(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007c155:
	mov -1224(%RBP),%RSP
	add $-1256, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c159
	jmp uuid_000000000007c15b
uuid_000000000007c159:
	push %RBP
	mov -1096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c156
	jmp uuid_000000000007c158
uuid_000000000007c156:
	movb $1, -1120(%rbp)
uuid_000000000007c158:
	mov -1264(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007c15b:
	mov -1136(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007c15e:
	mov -1128(%RBP),%RSP
	add $-1336, %RSP
	mov -1120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c16b
	jmp uuid_000000000007c16d
uuid_000000000007c16b:
	push %RBP
	mov -1000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c165
	jmp uuid_000000000007c167
uuid_000000000007c165:
	push %RBP
	jmp uuid_000000000007c162
	jmp uuid_000000000007c164
uuid_000000000007c162:
	push %RBP
	mov -1352(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c15f
	jmp uuid_000000000007c161
uuid_000000000007c15f:
	movb $1, -1424(%rbp)
uuid_000000000007c161:
	mov -1448(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c164:
	mov -1440(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c167:
	mov -1432(%RBP),%RSP
	add $-1456, %RSP
	mov -1424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c168
	jmp uuid_000000000007c16a
uuid_000000000007c168:
	movb $1, -1024(%rbp)
uuid_000000000007c16a:
	mov -1344(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c16d:
	mov -1040(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c170:
	mov -1032(%RBP),%RSP
	add $-1456, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c192
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c177
	jmp uuid_000000000007c179
uuid_000000000007c177:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c174
	jmp uuid_000000000007c176
uuid_000000000007c174:
	push %RBP
	mov -1520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c171
	jmp uuid_000000000007c173
uuid_000000000007c171:
	movb $1, -1544(%rbp)
uuid_000000000007c173:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007c176:
	mov -1560(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007c179:
	mov -1552(%RBP),%RSP
	add $-1712, %RSP
	mov -1544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c18f
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c184
	jmp uuid_000000000007c186
uuid_000000000007c184:
	push %RBP
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	jmp uuid_000000000007c181
	jmp uuid_000000000007c183
uuid_000000000007c181:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c17e
	jmp uuid_000000000007c180
uuid_000000000007c17e:
	push %RBP
	mov -1752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c17b
	jmp uuid_000000000007c17d
uuid_000000000007c17b:
	movb $1, -1800(%rbp)
uuid_000000000007c17d:
	mov -1928(%RBP),%RSP
	add $-2000, %RSP
uuid_000000000007c180:
	mov -1848(%RBP),%RSP
	add $-2000, %RSP
uuid_000000000007c183:
	mov -1816(%RBP),%RSP
	add $-2000, %RSP
uuid_000000000007c186:
	mov -1808(%RBP),%RSP
	add $-2000, %RSP
	mov -1800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c18c
	push %RBP
	jmp uuid_000000000007c189
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c188
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c18b
uuid_000000000007c189:
uuid_000000000007c18b:
	mov -2008(%RBP),%RSP
	add $-2008, %RSP
	jmp uuid_000000000007c18e
uuid_000000000007c18c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c187
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c18e:
	mov -1720(%RBP),%RSP
	add $-2000, %RSP
	jmp uuid_000000000007c191
uuid_000000000007c18f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c17a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c191:
	mov -1464(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_000000000007c194
uuid_000000000007c192:
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c194:
	mov -944(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_000000000007c197
uuid_000000000007c195:
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c197:
	mov -424(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007c19a
uuid_000000000007c198:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c12e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -416(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c19a:
	mov -304(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007c19d
uuid_000000000007c19b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c124
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -296(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c19d:
	mov -184(%RBP),%RSP
	add $-296, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
domain_CL_ArrowTypeType:
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
range_CL_ArrowTypeType:
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
t1_CL_ArrowTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
t2_CL_ArrowTypeConsTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
t3_CL_ArrowTypeConsTypeConsTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
p_CL_ArrowTypeConsU64Type:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1b0
	jmp uuid_000000000007c1b2
uuid_000000000007c1b0:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c1ad
	jmp uuid_000000000007c1af
uuid_000000000007c1ad:
	push %RBP
	jmp uuid_000000000007c1aa
	jmp uuid_000000000007c1ac
uuid_000000000007c1aa:
	movb $1, -104(%rbp)
uuid_000000000007c1ac:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007c1af:
	mov -120(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007c1b2:
	mov -112(%RBP),%RSP
	add $-168, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1b7
	push %RBP
	jmp uuid_000000000007c1b4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c1b3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c1b6
uuid_000000000007c1b4:
uuid_000000000007c1b6:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007c1b9
uuid_000000000007c1b7:
#call function .nth : Arrow<Cons<Cons<List<Type>,U64>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_nth_CL_ArrowTypeConsTypeConsU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1b9:
	mov -72(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
p1_CL_ArrowTypeType:
#call function p : Arrow<Cons<Type,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call p_CL_ArrowTypeConsU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
p2_CL_ArrowTypeType:
#call function p : Arrow<Cons<Type,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $1
	mov %RBX, %RBP
	call p_CL_ArrowTypeConsU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
and_CL_ArrowTContextConsTContextTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq $0
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1c0
	jmp uuid_000000000007c1c2
uuid_000000000007c1c0:
	push %RBP
	jmp uuid_000000000007c1bd
	jmp uuid_000000000007c1bf
uuid_000000000007c1bd:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1ba
	jmp uuid_000000000007c1bc
uuid_000000000007c1ba:
	movb $1, -760(%rbp)
uuid_000000000007c1bc:
	mov -784(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c1bf:
	mov -776(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c1c2:
	mov -768(%RBP),%RSP
	add $-904, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1d3
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1c9
	jmp uuid_000000000007c1cb
uuid_000000000007c1c9:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1c6
	jmp uuid_000000000007c1c8
uuid_000000000007c1c6:
	push %RBP
	jmp uuid_000000000007c1c3
	jmp uuid_000000000007c1c5
uuid_000000000007c1c3:
	movb $1, -1168(%rbp)
uuid_000000000007c1c5:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007c1c8:
	mov -1184(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007c1cb:
	mov -1176(%RBP),%RSP
	add $-1312, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1d0
	push %RBP
	jmp uuid_000000000007c1cd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c1cc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c1cf
uuid_000000000007c1cd:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1cf:
	mov -1320(%RBP),%RSP
	add $-1320, %RSP
	jmp uuid_000000000007c1d2
uuid_000000000007c1d0:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1d2:
	mov -912(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_000000000007c1d5
uuid_000000000007c1d3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1d5:
	mov -504(%RBP),%RSP
	add $-904, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $248, %rsp
	ret
and_CL_ArrowTypeConsTypeType:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	subq $24, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
union_CL_ArrowTContextConsTContextTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1ec
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1e9
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1e2
	jmp uuid_000000000007c1e4
uuid_000000000007c1e2:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007c1df
	jmp uuid_000000000007c1e1
uuid_000000000007c1df:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007c1dc
	jmp uuid_000000000007c1de
uuid_000000000007c1dc:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c1d9
	jmp uuid_000000000007c1db
uuid_000000000007c1d9:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c1d6
	jmp uuid_000000000007c1d8
uuid_000000000007c1d6:
	movb $1, -760(%rbp)
uuid_000000000007c1d8:
	mov -904(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007c1db:
	mov -888(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007c1de:
	mov -856(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007c1e1:
	mov -776(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007c1e4:
	mov -768(%RBP),%RSP
	add $-1024, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c1e6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c1e5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c1e8
uuid_000000000007c1e6:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -896(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c1e8:
	mov -632(%RBP),%RSP
	add $-1024, %RSP
	jmp uuid_000000000007c1eb
uuid_000000000007c1e9:
uuid_000000000007c1eb:
	mov -504(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007c1ee
uuid_000000000007c1ec:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007c1ee:
	mov -376(%RBP),%RSP
	add $-496, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $248, %rsp
	ret
union_CL_ArrowContextConsContextContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1ef
	jmp uuid_000000000007c1f1
uuid_000000000007c1ef:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_000000000007c1f1:
	mov -304(%RBP),%RSP
	add $-304, %RSP
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c205
	jmp uuid_000000000007c207
uuid_000000000007c205:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1fb
	jmp uuid_000000000007c1fd
uuid_000000000007c1fb:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007c1f8
	jmp uuid_000000000007c1fa
uuid_000000000007c1f8:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c1f5
	jmp uuid_000000000007c1f7
uuid_000000000007c1f5:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c1f2
	jmp uuid_000000000007c1f4
uuid_000000000007c1f2:
	movb $1, -520(%rbp)
uuid_000000000007c1f4:
	mov -632(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007c1f7:
	mov -616(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007c1fa:
	mov -536(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007c1fd:
	mov -528(%RBP),%RSP
	add $-728, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c202
	push %RBP
	jmp uuid_000000000007c1ff
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c1fe
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c201
uuid_000000000007c1ff:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007c201:
	mov -736(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_000000000007c204
uuid_000000000007c202:
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -624(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq $0
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_000000000007c204:
	mov -416(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007c207:
	mov -312(%RBP),%RSP
	add $-728, %RSP
	subq $96, %rsp
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
union_CL_ArrowFContextConsTContextFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
uuid_000000000007c21f:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c220
	jmp uuid_000000000007c221
uuid_000000000007c220:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	push %RBP
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c21c
	push %RBP
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $0
	push %RBP
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c214
	jmp uuid_000000000007c216
uuid_000000000007c214:
	push %RBP
	jmp uuid_000000000007c211
	jmp uuid_000000000007c213
uuid_000000000007c211:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007c20e
	jmp uuid_000000000007c210
uuid_000000000007c20e:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c20b
	jmp uuid_000000000007c20d
uuid_000000000007c20b:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c208
	jmp uuid_000000000007c20a
uuid_000000000007c208:
	movb $1, -912(%rbp)
uuid_000000000007c20a:
	mov -984(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c20d:
	mov -968(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c210:
	mov -936(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c213:
	mov -928(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c216:
	mov -920(%RBP),%RSP
	add $-1104, %RSP
	mov -912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c219
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c218
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c21b
uuid_000000000007c219:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $uuid_000000000007c217
	pushq $0
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1256(%RBP)
	popq -1248(%RBP)
	popq -1240(%RBP)
	popq -1232(%RBP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -976(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $0
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	movq -1104(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -208(%rbp)
uuid_000000000007c21b:
	mov -784(%RBP),%RSP
	add $-1256, %RSP
	jmp uuid_000000000007c21e
uuid_000000000007c21c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_000000000007c21e:
	mov -656(%RBP),%RSP
	add $-776, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007c21f
uuid_000000000007c221:
	subq $200, %rsp
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
tag_SB_of_CL_ArrowStringType:
	pushq $uuid_000000000007b6a7
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c228
	jmp uuid_000000000007c22a
uuid_000000000007c228:
	push %RBP
	jmp uuid_000000000007c225
	jmp uuid_000000000007c227
uuid_000000000007c225:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c222
	jmp uuid_000000000007c224
uuid_000000000007c222:
	movb $1, -104(%rbp)
uuid_000000000007c224:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007c227:
	mov -120(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007c22a:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c22f
	push %RBP
	jmp uuid_000000000007c22c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c22b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c22e
uuid_000000000007c22c:
uuid_000000000007c22e:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c231
uuid_000000000007c22f:
	movq -136(%rbp), %r15
	movq %r15, -40(%rbp)
	mov -136(%rbp), %r15
	mov %r15, -40(%rbp)
uuid_000000000007c231:
	mov -72(%RBP),%RSP
	add $-136, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
can_SB_unify_CL_ArrowU64ConsListTypeListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c23d
	jmp uuid_000000000007c23f
uuid_000000000007c23d:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c23a
	jmp uuid_000000000007c23c
uuid_000000000007c23a:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c237
	jmp uuid_000000000007c239
uuid_000000000007c237:
	movb $1, -288(%rbp)
uuid_000000000007c239:
	mov -352(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007c23c:
	mov -304(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007c23f:
	mov -296(%RBP),%RSP
	add $-392, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c268
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c258
	jmp uuid_000000000007c25a
uuid_000000000007c258:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c246
	jmp uuid_000000000007c248
uuid_000000000007c246:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c243
	jmp uuid_000000000007c245
uuid_000000000007c243:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007c240
	jmp uuid_000000000007c242
uuid_000000000007c240:
	movb $1, -560(%rbp)
uuid_000000000007c242:
	mov -624(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007c245:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007c248:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c255
	jmp uuid_000000000007c257
uuid_000000000007c255:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c24f
	jmp uuid_000000000007c251
uuid_000000000007c24f:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c24c
	jmp uuid_000000000007c24e
uuid_000000000007c24c:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007c249
	jmp uuid_000000000007c24b
uuid_000000000007c249:
	movb $1, -704(%rbp)
uuid_000000000007c24b:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007c24e:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007c251:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c252
	jmp uuid_000000000007c254
uuid_000000000007c252:
	movb $1, -496(%rbp)
uuid_000000000007c254:
	mov -656(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007c257:
	mov -512(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007c25a:
	mov -504(%RBP),%RSP
	add $-792, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c265
	push %RBP
	jmp uuid_000000000007c262
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c261
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c264
uuid_000000000007c262:
uuid_000000000007c264:
	mov -800(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007c267
uuid_000000000007c265:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c25e
	jmp uuid_000000000007c260
uuid_000000000007c25e:
	push %RBP
#call function can-unify : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c25b
	jmp uuid_000000000007c25d
uuid_000000000007c25b:
	movq $1, -96(%rbp)
uuid_000000000007c25d:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007c260:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007c267:
	mov -400(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007c26a
uuid_000000000007c268:
	movq $1, -96(%rbp)
uuid_000000000007c26a:
	mov -192(%RBP),%RSP
	add $-392, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
can_SB_unify_CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c271
	jmp uuid_000000000007c273
uuid_000000000007c271:
	push %RBP
	jmp uuid_000000000007c26e
	jmp uuid_000000000007c270
uuid_000000000007c26e:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c26b
	jmp uuid_000000000007c26d
uuid_000000000007c26b:
	movb $1, -192(%rbp)
uuid_000000000007c26d:
	mov -216(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007c270:
	mov -208(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007c273:
	mov -200(%RBP),%RSP
	add $-240, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c44b
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c28d
	jmp uuid_000000000007c28f
uuid_000000000007c28d:
	push %RBP
	jmp uuid_000000000007c28a
	jmp uuid_000000000007c28c
uuid_000000000007c28a:
	push %RBP
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c284
	jmp uuid_000000000007c286
uuid_000000000007c284:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c27a
	jmp uuid_000000000007c27c
uuid_000000000007c27a:
	push %RBP
	jmp uuid_000000000007c277
	jmp uuid_000000000007c279
uuid_000000000007c277:
	push %RBP
	jmp uuid_000000000007c274
	jmp uuid_000000000007c276
uuid_000000000007c274:
	movb $1, -432(%rbp)
uuid_000000000007c276:
	mov -456(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007c279:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007c27c:
	mov -440(%RBP),%RSP
	add $-456, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c281
	jmp uuid_000000000007c283
uuid_000000000007c281:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $uuid_000000000007c27d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c27e
	jmp uuid_000000000007c280
uuid_000000000007c27e:
	movb $1, -368(%rbp)
uuid_000000000007c280:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007c283:
	mov -384(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007c286:
	mov -376(%RBP),%RSP
	add $-472, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c287
	jmp uuid_000000000007c289
uuid_000000000007c287:
	movb $1, -312(%rbp)
uuid_000000000007c289:
	mov -336(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007c28c:
	mov -328(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007c28f:
	mov -320(%RBP),%RSP
	add $-472, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c448
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c29c
	jmp uuid_000000000007c29e
uuid_000000000007c29c:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	jmp uuid_000000000007c299
	jmp uuid_000000000007c29b
uuid_000000000007c299:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c293
	jmp uuid_000000000007c295
uuid_000000000007c293:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c290
	jmp uuid_000000000007c292
uuid_000000000007c290:
	movb $1, -624(%rbp)
uuid_000000000007c292:
	mov -640(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007c295:
	mov -632(%RBP),%RSP
	add $-648, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c296
	jmp uuid_000000000007c298
uuid_000000000007c296:
	movb $1, -544(%rbp)
uuid_000000000007c298:
	mov -592(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007c29b:
	mov -560(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007c29e:
	mov -552(%RBP),%RSP
	add $-648, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c445
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2ae
	jmp uuid_000000000007c2b0
uuid_000000000007c2ae:
	push %RBP
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	jmp uuid_000000000007c2ab
	jmp uuid_000000000007c2ad
uuid_000000000007c2ab:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2a5
	jmp uuid_000000000007c2a7
uuid_000000000007c2a5:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c2a2
	jmp uuid_000000000007c2a4
uuid_000000000007c2a2:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c29f
	jmp uuid_000000000007c2a1
uuid_000000000007c29f:
	movb $1, -800(%rbp)
uuid_000000000007c2a1:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c2a4:
	mov -816(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c2a7:
	mov -808(%RBP),%RSP
	add $-872, %RSP
	mov -800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2a8
	jmp uuid_000000000007c2aa
uuid_000000000007c2a8:
	movb $1, -720(%rbp)
uuid_000000000007c2aa:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c2ad:
	mov -736(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c2b0:
	mov -728(%RBP),%RSP
	add $-872, %RSP
	mov -720(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c442
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2c6
	jmp uuid_000000000007c2c8
uuid_000000000007c2c6:
	push %RBP
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2bd
	jmp uuid_000000000007c2bf
uuid_000000000007c2bd:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c2ba
	jmp uuid_000000000007c2bc
uuid_000000000007c2ba:
	push %RBP
	mov -968(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c2b7
	jmp uuid_000000000007c2b9
uuid_000000000007c2b7:
	movb $1, -992(%rbp)
uuid_000000000007c2b9:
	mov -1040(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007c2bc:
	mov -1008(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007c2bf:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
	mov -992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2c3
	jmp uuid_000000000007c2c5
uuid_000000000007c2c3:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	jmp uuid_000000000007c2c0
	jmp uuid_000000000007c2c2
uuid_000000000007c2c0:
	movb $1, -944(%rbp)
uuid_000000000007c2c2:
	mov -1072(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007c2c5:
	mov -960(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007c2c8:
	mov -952(%RBP),%RSP
	add $-1096, %RSP
	mov -944(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c43f
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c31d
	jmp uuid_000000000007c31f
uuid_000000000007c31d:
	push %RBP
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2e7
	jmp uuid_000000000007c2e9
uuid_000000000007c2e7:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2de
	jmp uuid_000000000007c2e0
uuid_000000000007c2de:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2d5
	jmp uuid_000000000007c2d7
uuid_000000000007c2d5:
	push %RBP
	mov -1328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2d2
	jmp uuid_000000000007c2d4
uuid_000000000007c2d2:
	push %RBP
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_000000000007c2cf
	jmp uuid_000000000007c2d1
uuid_000000000007c2cf:
	movb $1, -1344(%rbp)
uuid_000000000007c2d1:
	mov -1408(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007c2d4:
	mov -1360(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007c2d7:
	mov -1352(%RBP),%RSP
	add $-1432, %RSP
	mov -1344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2db
	jmp uuid_000000000007c2dd
uuid_000000000007c2db:
	push %RBP
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	jmp uuid_000000000007c2d8
	jmp uuid_000000000007c2da
uuid_000000000007c2d8:
	movb $1, -1280(%rbp)
uuid_000000000007c2da:
	mov -1440(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007c2dd:
	mov -1296(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007c2e0:
	mov -1288(%RBP),%RSP
	add $-1464, %RSP
	mov -1280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2e4
	jmp uuid_000000000007c2e6
uuid_000000000007c2e4:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2e1
	jmp uuid_000000000007c2e3
uuid_000000000007c2e1:
	movb $1, -1216(%rbp)
uuid_000000000007c2e3:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007c2e6:
	mov -1232(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007c2e9:
	mov -1224(%RBP),%RSP
	add $-1480, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c31a
	jmp uuid_000000000007c31c
uuid_000000000007c31a:
	push %RBP
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq $0
	push %RBP
	mov -1512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c314
	jmp uuid_000000000007c316
uuid_000000000007c314:
	push %RBP
	mov -1504(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1576(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c30b
	jmp uuid_000000000007c30d
uuid_000000000007c30b:
	push %RBP
	mov -1568(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2f0
	jmp uuid_000000000007c2f2
uuid_000000000007c2f0:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2ed
	jmp uuid_000000000007c2ef
uuid_000000000007c2ed:
	push %RBP
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	jmp uuid_000000000007c2ea
	jmp uuid_000000000007c2ec
uuid_000000000007c2ea:
	movb $1, -1648(%rbp)
uuid_000000000007c2ec:
	mov -1712(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007c2ef:
	mov -1664(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007c2f2:
	mov -1656(%RBP),%RSP
	add $-1736, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c308
	jmp uuid_000000000007c30a
uuid_000000000007c308:
	push %RBP
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c302
	jmp uuid_000000000007c304
uuid_000000000007c302:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1832(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2f9
	jmp uuid_000000000007c2fb
uuid_000000000007c2f9:
	push %RBP
	mov -1824(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2f6
	jmp uuid_000000000007c2f8
uuid_000000000007c2f6:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007c2f3
	jmp uuid_000000000007c2f5
uuid_000000000007c2f3:
	movb $1, -1840(%rbp)
uuid_000000000007c2f5:
	mov -1904(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007c2f8:
	mov -1856(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007c2fb:
	mov -1848(%RBP),%RSP
	add $-1928, %RSP
	mov -1840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c2ff
	jmp uuid_000000000007c301
uuid_000000000007c2ff:
	push %RBP
	mov -1752(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1944(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2fc
	jmp uuid_000000000007c2fe
uuid_000000000007c2fc:
	movb $1, -1776(%rbp)
uuid_000000000007c2fe:
	mov -1936(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007c301:
	mov -1792(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007c304:
	mov -1784(%RBP),%RSP
	add $-1944, %RSP
	mov -1776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c305
	jmp uuid_000000000007c307
uuid_000000000007c305:
	movb $1, -1584(%rbp)
uuid_000000000007c307:
	mov -1744(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007c30a:
	mov -1600(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007c30d:
	mov -1592(%RBP),%RSP
	add $-1944, %RSP
	mov -1584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c311
	jmp uuid_000000000007c313
uuid_000000000007c311:
	push %RBP
	mov -1496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c30e
	jmp uuid_000000000007c310
uuid_000000000007c30e:
	movb $1, -1520(%rbp)
uuid_000000000007c310:
	mov -1952(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c313:
	mov -1536(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c316:
	mov -1528(%RBP),%RSP
	add $-1960, %RSP
	mov -1520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c317
	jmp uuid_000000000007c319
uuid_000000000007c317:
	movb $1, -1168(%rbp)
uuid_000000000007c319:
	mov -1488(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c31c:
	mov -1184(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c31f:
	mov -1176(%RBP),%RSP
	add $-1960, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c43c
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -2024(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c356
	jmp uuid_000000000007c358
uuid_000000000007c356:
	push %RBP
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	jmp uuid_000000000007c353
	jmp uuid_000000000007c355
uuid_000000000007c353:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq $0
	push %RBP
	mov -2104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c34d
	jmp uuid_000000000007c34f
uuid_000000000007c34d:
	push %RBP
	mov -2096(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c344
	jmp uuid_000000000007c346
uuid_000000000007c344:
	push %RBP
	mov -2160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c329
	jmp uuid_000000000007c32b
uuid_000000000007c329:
	push %RBP
	mov -2224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c326
	jmp uuid_000000000007c328
uuid_000000000007c326:
	push %RBP
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	jmp uuid_000000000007c323
	jmp uuid_000000000007c325
uuid_000000000007c323:
	movb $1, -2240(%rbp)
uuid_000000000007c325:
	mov -2304(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007c328:
	mov -2256(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007c32b:
	mov -2248(%RBP),%RSP
	add $-2328, %RSP
	mov -2240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c341
	jmp uuid_000000000007c343
uuid_000000000007c341:
	push %RBP
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq $0
	push %RBP
	mov -2360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c33b
	jmp uuid_000000000007c33d
uuid_000000000007c33b:
	push %RBP
	mov -2352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c332
	jmp uuid_000000000007c334
uuid_000000000007c332:
	push %RBP
	mov -2416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c32f
	jmp uuid_000000000007c331
uuid_000000000007c32f:
	push %RBP
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	jmp uuid_000000000007c32c
	jmp uuid_000000000007c32e
uuid_000000000007c32c:
	movb $1, -2432(%rbp)
uuid_000000000007c32e:
	mov -2496(%RBP),%RSP
	add $-2520, %RSP
uuid_000000000007c331:
	mov -2448(%RBP),%RSP
	add $-2520, %RSP
uuid_000000000007c334:
	mov -2440(%RBP),%RSP
	add $-2520, %RSP
	mov -2432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c338
	jmp uuid_000000000007c33a
uuid_000000000007c338:
	push %RBP
	mov -2344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2536(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c335
	jmp uuid_000000000007c337
uuid_000000000007c335:
	movb $1, -2368(%rbp)
uuid_000000000007c337:
	mov -2528(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007c33a:
	mov -2384(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007c33d:
	mov -2376(%RBP),%RSP
	add $-2536, %RSP
	mov -2368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c33e
	jmp uuid_000000000007c340
uuid_000000000007c33e:
	movb $1, -2176(%rbp)
uuid_000000000007c340:
	mov -2336(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007c343:
	mov -2192(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007c346:
	mov -2184(%RBP),%RSP
	add $-2536, %RSP
	mov -2176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c34a
	jmp uuid_000000000007c34c
uuid_000000000007c34a:
	push %RBP
	mov -2088(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2552(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c347
	jmp uuid_000000000007c349
uuid_000000000007c347:
	movb $1, -2112(%rbp)
uuid_000000000007c349:
	mov -2544(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007c34c:
	mov -2128(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007c34f:
	mov -2120(%RBP),%RSP
	add $-2552, %RSP
	mov -2112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c350
	jmp uuid_000000000007c352
uuid_000000000007c350:
	movb $1, -2032(%rbp)
uuid_000000000007c352:
	mov -2080(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007c355:
	mov -2048(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007c358:
	mov -2040(%RBP),%RSP
	add $-2552, %RSP
	mov -2032(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c439
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -2616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c38f
	jmp uuid_000000000007c391
uuid_000000000007c38f:
	push %RBP
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c374
	jmp uuid_000000000007c376
uuid_000000000007c374:
	push %RBP
	mov -2656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c36b
	jmp uuid_000000000007c36d
uuid_000000000007c36b:
	push %RBP
	mov -2720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c362
	jmp uuid_000000000007c364
uuid_000000000007c362:
	push %RBP
	mov -2784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c35f
	jmp uuid_000000000007c361
uuid_000000000007c35f:
	push %RBP
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	jmp uuid_000000000007c35c
	jmp uuid_000000000007c35e
uuid_000000000007c35c:
	movb $1, -2800(%rbp)
uuid_000000000007c35e:
	mov -2864(%RBP),%RSP
	add $-2888, %RSP
uuid_000000000007c361:
	mov -2816(%RBP),%RSP
	add $-2888, %RSP
uuid_000000000007c364:
	mov -2808(%RBP),%RSP
	add $-2888, %RSP
	mov -2800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c368
	jmp uuid_000000000007c36a
uuid_000000000007c368:
	push %RBP
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	jmp uuid_000000000007c365
	jmp uuid_000000000007c367
uuid_000000000007c365:
	movb $1, -2736(%rbp)
uuid_000000000007c367:
	mov -2896(%RBP),%RSP
	add $-2920, %RSP
uuid_000000000007c36a:
	mov -2752(%RBP),%RSP
	add $-2920, %RSP
uuid_000000000007c36d:
	mov -2744(%RBP),%RSP
	add $-2920, %RSP
	mov -2736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c371
	jmp uuid_000000000007c373
uuid_000000000007c371:
	push %RBP
	mov -2648(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c36e
	jmp uuid_000000000007c370
uuid_000000000007c36e:
	movb $1, -2672(%rbp)
uuid_000000000007c370:
	mov -2928(%RBP),%RSP
	add $-2936, %RSP
uuid_000000000007c373:
	mov -2688(%RBP),%RSP
	add $-2936, %RSP
uuid_000000000007c376:
	mov -2680(%RBP),%RSP
	add $-2936, %RSP
	mov -2672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c38c
	jmp uuid_000000000007c38e
uuid_000000000007c38c:
	push %RBP
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq $0
	push %RBP
	mov -2968(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c386
	jmp uuid_000000000007c388
uuid_000000000007c386:
	push %RBP
	mov -2960(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c37d
	jmp uuid_000000000007c37f
uuid_000000000007c37d:
	push %RBP
	mov -3024(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c37a
	jmp uuid_000000000007c37c
uuid_000000000007c37a:
	push %RBP
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	jmp uuid_000000000007c377
	jmp uuid_000000000007c379
uuid_000000000007c377:
	movb $1, -3040(%rbp)
uuid_000000000007c379:
	mov -3104(%RBP),%RSP
	add $-3128, %RSP
uuid_000000000007c37c:
	mov -3056(%RBP),%RSP
	add $-3128, %RSP
uuid_000000000007c37f:
	mov -3048(%RBP),%RSP
	add $-3128, %RSP
	mov -3040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c383
	jmp uuid_000000000007c385
uuid_000000000007c383:
	push %RBP
	mov -2952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3144(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c380
	jmp uuid_000000000007c382
uuid_000000000007c380:
	movb $1, -2976(%rbp)
uuid_000000000007c382:
	mov -3136(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007c385:
	mov -2992(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007c388:
	mov -2984(%RBP),%RSP
	add $-3144, %RSP
	mov -2976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c389
	jmp uuid_000000000007c38b
uuid_000000000007c389:
	movb $1, -2624(%rbp)
uuid_000000000007c38b:
	mov -2944(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007c38e:
	mov -2640(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007c391:
	mov -2632(%RBP),%RSP
	add $-3144, %RSP
	mov -2624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c436
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3b6
	jmp uuid_000000000007c3b8
uuid_000000000007c3b6:
	push %RBP
	pushq -3184(%RBP)
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c39b
	jmp uuid_000000000007c39d
uuid_000000000007c39b:
	push %RBP
	mov -3248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c398
	jmp uuid_000000000007c39a
uuid_000000000007c398:
	push %RBP
	mov -3240(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c395
	jmp uuid_000000000007c397
uuid_000000000007c395:
	movb $1, -3264(%rbp)
uuid_000000000007c397:
	mov -3328(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007c39a:
	mov -3280(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007c39d:
	mov -3272(%RBP),%RSP
	add $-3336, %RSP
	mov -3264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3b3
	jmp uuid_000000000007c3b5
uuid_000000000007c3b3:
	push %RBP
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	pushq $0
	push %RBP
	mov -3368(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3ad
	jmp uuid_000000000007c3af
uuid_000000000007c3ad:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3432(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3a4
	jmp uuid_000000000007c3a6
uuid_000000000007c3a4:
	push %RBP
	mov -3424(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3a1
	jmp uuid_000000000007c3a3
uuid_000000000007c3a1:
	push %RBP
	pushq -3400(%RBP)
	pushq -3408(%RBP)
	pushq -3416(%RBP)
	jmp uuid_000000000007c39e
	jmp uuid_000000000007c3a0
uuid_000000000007c39e:
	movb $1, -3440(%rbp)
uuid_000000000007c3a0:
	mov -3504(%RBP),%RSP
	add $-3528, %RSP
uuid_000000000007c3a3:
	mov -3456(%RBP),%RSP
	add $-3528, %RSP
uuid_000000000007c3a6:
	mov -3448(%RBP),%RSP
	add $-3528, %RSP
	mov -3440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3aa
	jmp uuid_000000000007c3ac
uuid_000000000007c3aa:
	push %RBP
	mov -3352(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c3a7
	jmp uuid_000000000007c3a9
uuid_000000000007c3a7:
	movb $1, -3376(%rbp)
uuid_000000000007c3a9:
	mov -3536(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007c3ac:
	mov -3392(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007c3af:
	mov -3384(%RBP),%RSP
	add $-3544, %RSP
	mov -3376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3b0
	jmp uuid_000000000007c3b2
uuid_000000000007c3b0:
	movb $1, -3216(%rbp)
uuid_000000000007c3b2:
	mov -3344(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007c3b5:
	mov -3232(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007c3b8:
	mov -3224(%RBP),%RSP
	add $-3544, %RSP
	mov -3216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c433
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3608(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3d1
	jmp uuid_000000000007c3d3
uuid_000000000007c3d1:
	push %RBP
	pushq -3584(%RBP)
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	jmp uuid_000000000007c3ce
	jmp uuid_000000000007c3d0
uuid_000000000007c3ce:
	push %RBP
	pushq -3560(%RBP)
	pushq -3568(%RBP)
	pushq -3576(%RBP)
	pushq $0
	push %RBP
	mov -3688(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3c8
	jmp uuid_000000000007c3ca
uuid_000000000007c3c8:
	push %RBP
	mov -3680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3bf
	jmp uuid_000000000007c3c1
uuid_000000000007c3bf:
	push %RBP
	mov -3744(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3816(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3bc
	jmp uuid_000000000007c3be
uuid_000000000007c3bc:
	push %RBP
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	jmp uuid_000000000007c3b9
	jmp uuid_000000000007c3bb
uuid_000000000007c3b9:
	movb $1, -3760(%rbp)
uuid_000000000007c3bb:
	mov -3824(%RBP),%RSP
	add $-3848, %RSP
uuid_000000000007c3be:
	mov -3776(%RBP),%RSP
	add $-3848, %RSP
uuid_000000000007c3c1:
	mov -3768(%RBP),%RSP
	add $-3848, %RSP
	mov -3760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3c5
	jmp uuid_000000000007c3c7
uuid_000000000007c3c5:
	push %RBP
	mov -3672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3864(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c3c2
	jmp uuid_000000000007c3c4
uuid_000000000007c3c2:
	movb $1, -3696(%rbp)
uuid_000000000007c3c4:
	mov -3856(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007c3c7:
	mov -3712(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007c3ca:
	mov -3704(%RBP),%RSP
	add $-3864, %RSP
	mov -3696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3cb
	jmp uuid_000000000007c3cd
uuid_000000000007c3cb:
	movb $1, -3616(%rbp)
uuid_000000000007c3cd:
	mov -3664(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007c3d0:
	mov -3632(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007c3d3:
	mov -3624(%RBP),%RSP
	add $-3864, %RSP
	mov -3616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c430
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3928(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3ff
	jmp uuid_000000000007c401
uuid_000000000007c3ff:
	push %RBP
	pushq -3904(%RBP)
	pushq -3912(%RBP)
	pushq -3920(%RBP)
	pushq $0
	push %RBP
	mov -3976(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3da
	jmp uuid_000000000007c3dc
uuid_000000000007c3da:
	push %RBP
	mov -3968(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4040(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3d7
	jmp uuid_000000000007c3d9
uuid_000000000007c3d7:
	push %RBP
	mov -3960(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c3d4
	jmp uuid_000000000007c3d6
uuid_000000000007c3d4:
	movb $1, -3984(%rbp)
uuid_000000000007c3d6:
	mov -4048(%RBP),%RSP
	add $-4056, %RSP
uuid_000000000007c3d9:
	mov -4000(%RBP),%RSP
	add $-4056, %RSP
uuid_000000000007c3dc:
	mov -3992(%RBP),%RSP
	add $-4056, %RSP
	mov -3984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3fc
	jmp uuid_000000000007c3fe
uuid_000000000007c3fc:
	push %RBP
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	pushq $0
	push %RBP
	mov -4088(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3f6
	jmp uuid_000000000007c3f8
uuid_000000000007c3f6:
	push %RBP
	mov -4080(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3ec
	jmp uuid_000000000007c3ee
uuid_000000000007c3ec:
	push %RBP
	mov -4144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3e9
	jmp uuid_000000000007c3eb
uuid_000000000007c3e9:
	push %RBP
	pushq -4120(%RBP)
	pushq -4128(%RBP)
	pushq -4136(%RBP)
	pushq $0
	push %RBP
	mov -4248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3e3
	jmp uuid_000000000007c3e5
uuid_000000000007c3e3:
	push %RBP
	mov -4240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3e0
	jmp uuid_000000000007c3e2
uuid_000000000007c3e0:
	push %RBP
	mov -4232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c3dd
	jmp uuid_000000000007c3df
uuid_000000000007c3dd:
	movb $1, -4256(%rbp)
uuid_000000000007c3df:
	mov -4320(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007c3e2:
	mov -4272(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007c3e5:
	mov -4264(%RBP),%RSP
	add $-4328, %RSP
	mov -4256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3e6
	jmp uuid_000000000007c3e8
uuid_000000000007c3e6:
	movb $1, -4160(%rbp)
uuid_000000000007c3e8:
	mov -4224(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007c3eb:
	mov -4176(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007c3ee:
	mov -4168(%RBP),%RSP
	add $-4328, %RSP
	mov -4160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3f3
	jmp uuid_000000000007c3f5
uuid_000000000007c3f3:
	push %RBP
	mov -4072(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4344(%rbp)
	pushq $uuid_000000000007c3ef
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c3f0
	jmp uuid_000000000007c3f2
uuid_000000000007c3f0:
	movb $1, -4096(%rbp)
uuid_000000000007c3f2:
	mov -4336(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007c3f5:
	mov -4112(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007c3f8:
	mov -4104(%RBP),%RSP
	add $-4344, %RSP
	mov -4096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c3f9
	jmp uuid_000000000007c3fb
uuid_000000000007c3f9:
	movb $1, -3936(%rbp)
uuid_000000000007c3fb:
	mov -4064(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007c3fe:
	mov -3952(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007c401:
	mov -3944(%RBP),%RSP
	add $-4344, %RSP
	mov -3936(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c42d
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -4408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c41d
	jmp uuid_000000000007c41f
uuid_000000000007c41d:
	push %RBP
	pushq -4384(%RBP)
	pushq -4392(%RBP)
	pushq -4400(%RBP)
	pushq $0
	push %RBP
	mov -4456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c40b
	jmp uuid_000000000007c40d
uuid_000000000007c40b:
	push %RBP
	mov -4448(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c408
	jmp uuid_000000000007c40a
uuid_000000000007c408:
	push %RBP
	mov -4440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c405
	jmp uuid_000000000007c407
uuid_000000000007c405:
	movb $1, -4464(%rbp)
uuid_000000000007c407:
	mov -4528(%RBP),%RSP
	add $-4536, %RSP
uuid_000000000007c40a:
	mov -4480(%RBP),%RSP
	add $-4536, %RSP
uuid_000000000007c40d:
	mov -4472(%RBP),%RSP
	add $-4536, %RSP
	mov -4464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c41a
	jmp uuid_000000000007c41c
uuid_000000000007c41a:
	push %RBP
	pushq -4360(%RBP)
	pushq -4368(%RBP)
	pushq -4376(%RBP)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c414
	jmp uuid_000000000007c416
uuid_000000000007c414:
	push %RBP
	mov -4560(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c411
	jmp uuid_000000000007c413
uuid_000000000007c411:
	push %RBP
	mov -4552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c40e
	jmp uuid_000000000007c410
uuid_000000000007c40e:
	movb $1, -4576(%rbp)
uuid_000000000007c410:
	mov -4640(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007c413:
	mov -4592(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007c416:
	mov -4584(%RBP),%RSP
	add $-4648, %RSP
	mov -4576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c417
	jmp uuid_000000000007c419
uuid_000000000007c417:
	movb $1, -4416(%rbp)
uuid_000000000007c419:
	mov -4544(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007c41c:
	mov -4432(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007c41f:
	mov -4424(%RBP),%RSP
	add $-4648, %RSP
	mov -4416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c42a
	push %RBP
	jmp uuid_000000000007c427
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c426
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c429
uuid_000000000007c427:
uuid_000000000007c429:
	mov -4656(%RBP),%RSP
	add $-4656, %RSP
	jmp uuid_000000000007c42c
uuid_000000000007c42a:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4648(%rbp)
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c423
	jmp uuid_000000000007c425
uuid_000000000007c423:
	push %RBP
#call function can-unify : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c420
	jmp uuid_000000000007c422
uuid_000000000007c420:
	movq $1, -64(%rbp)
uuid_000000000007c422:
	mov -4664(%RBP),%RSP
	add $-4664, %RSP
uuid_000000000007c425:
	mov -4656(%RBP),%RSP
	add $-4664, %RSP
uuid_000000000007c42c:
	mov -4352(%RBP),%RSP
	add $-4664, %RSP
	jmp uuid_000000000007c42f
uuid_000000000007c42d:
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4056(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4328(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c402
	jmp uuid_000000000007c404
uuid_000000000007c402:
	movq $1, -64(%rbp)
uuid_000000000007c404:
	mov -4352(%RBP),%RSP
	add $-4352, %RSP
uuid_000000000007c42f:
	mov -3872(%RBP),%RSP
	add $-4352, %RSP
	jmp uuid_000000000007c432
uuid_000000000007c430:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3640(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007c432:
	mov -3552(%RBP),%RSP
	add $-3864, %RSP
	jmp uuid_000000000007c435
uuid_000000000007c433:
	movq $1, -64(%rbp)
uuid_000000000007c435:
	mov -3152(%RBP),%RSP
	add $-3544, %RSP
	jmp uuid_000000000007c438
uuid_000000000007c436:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c392
	jmp uuid_000000000007c394
uuid_000000000007c392:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007c394:
	mov -3152(%RBP),%RSP
	add $-3152, %RSP
uuid_000000000007c438:
	mov -2560(%RBP),%RSP
	add $-3152, %RSP
	jmp uuid_000000000007c43b
uuid_000000000007c439:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c359
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
	jmp uuid_000000000007c35b
uuid_000000000007c359:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007c35b:
	mov -2560(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c43b:
	mov -1968(%RBP),%RSP
	add $-2560, %RSP
	jmp uuid_000000000007c43e
uuid_000000000007c43c:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c320
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
	jmp uuid_000000000007c322
uuid_000000000007c320:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007c322:
	mov -1968(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007c43e:
	mov -1104(%RBP),%RSP
	add $-1968, %RSP
	jmp uuid_000000000007c441
uuid_000000000007c43f:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2c9
	jmp uuid_000000000007c2cb
uuid_000000000007c2c9:
	movq $1, -64(%rbp)
uuid_000000000007c2cb:
	mov -1104(%RBP),%RSP
	add $-1104, %RSP
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2cc
	jmp uuid_000000000007c2ce
uuid_000000000007c2cc:
	movq $1, -64(%rbp)
uuid_000000000007c2ce:
	mov -1112(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007c441:
	mov -880(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007c444
uuid_000000000007c442:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2b4
	jmp uuid_000000000007c2b6
uuid_000000000007c2b4:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2b1
	jmp uuid_000000000007c2b3
uuid_000000000007c2b1:
	movq $1, -64(%rbp)
uuid_000000000007c2b3:
	mov -888(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007c2b6:
	mov -880(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007c444:
	mov -656(%RBP),%RSP
	add $-888, %RSP
	jmp uuid_000000000007c447
uuid_000000000007c445:
	movq $1, -64(%rbp)
uuid_000000000007c447:
	mov -480(%RBP),%RSP
	add $-648, %RSP
	jmp uuid_000000000007c44a
uuid_000000000007c448:
	movq $1, -64(%rbp)
uuid_000000000007c44a:
	mov -248(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007c44d
uuid_000000000007c44b:
	movq $1, -64(%rbp)
uuid_000000000007c44d:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_CL_ArrowTContextConsTypeType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c44e
	jmp uuid_000000000007c450
uuid_000000000007c44e:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c450:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	subq $120, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_SB_inner_CL_ArrowTContextConsTypeType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c457
	jmp uuid_000000000007c459
uuid_000000000007c457:
	push %RBP
	jmp uuid_000000000007c454
	jmp uuid_000000000007c456
uuid_000000000007c454:
	push %RBP
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c451
	jmp uuid_000000000007c453
uuid_000000000007c451:
	movb $1, -304(%rbp)
uuid_000000000007c453:
	mov -328(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c456:
	mov -320(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c459:
	mov -312(%RBP),%RSP
	add $-352, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c691
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c46f
	jmp uuid_000000000007c471
uuid_000000000007c46f:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c460
	jmp uuid_000000000007c462
uuid_000000000007c460:
	push %RBP
	mov -456(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c45d
	jmp uuid_000000000007c45f
uuid_000000000007c45d:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c45a
	jmp uuid_000000000007c45c
uuid_000000000007c45a:
	movb $1, -472(%rbp)
uuid_000000000007c45c:
	mov -536(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007c45f:
	mov -488(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007c462:
	mov -480(%RBP),%RSP
	add $-544, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c46c
	jmp uuid_000000000007c46e
uuid_000000000007c46c:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c466
	jmp uuid_000000000007c468
uuid_000000000007c466:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c463
	jmp uuid_000000000007c465
uuid_000000000007c463:
	movb $1, -584(%rbp)
uuid_000000000007c465:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007c468:
	mov -592(%RBP),%RSP
	add $-608, %RSP
	mov -584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c469
	jmp uuid_000000000007c46b
uuid_000000000007c469:
	movb $1, -424(%rbp)
uuid_000000000007c46b:
	mov -552(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007c46e:
	mov -440(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007c471:
	mov -432(%RBP),%RSP
	add $-608, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c68e
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c48a
	jmp uuid_000000000007c48c
uuid_000000000007c48a:
	push %RBP
	jmp uuid_000000000007c487
	jmp uuid_000000000007c489
uuid_000000000007c487:
	push %RBP
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c481
	jmp uuid_000000000007c483
uuid_000000000007c481:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c478
	jmp uuid_000000000007c47a
uuid_000000000007c478:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c475
	jmp uuid_000000000007c477
uuid_000000000007c475:
	push %RBP
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	jmp uuid_000000000007c472
	jmp uuid_000000000007c474
uuid_000000000007c472:
	movb $1, -800(%rbp)
uuid_000000000007c474:
	mov -864(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007c477:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007c47a:
	mov -808(%RBP),%RSP
	add $-888, %RSP
	mov -800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c47e
	jmp uuid_000000000007c480
uuid_000000000007c47e:
	push %RBP
	mov -712(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq $uuid_000000000007c27d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c47b
	jmp uuid_000000000007c47d
uuid_000000000007c47b:
	movb $1, -736(%rbp)
uuid_000000000007c47d:
	mov -896(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c480:
	mov -752(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c483:
	mov -744(%RBP),%RSP
	add $-904, %RSP
	mov -736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c484
	jmp uuid_000000000007c486
uuid_000000000007c484:
	movb $1, -680(%rbp)
uuid_000000000007c486:
	mov -704(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c489:
	mov -696(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c48c:
	mov -688(%RBP),%RSP
	add $-904, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c68b
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c499
	jmp uuid_000000000007c49b
uuid_000000000007c499:
	push %RBP
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	jmp uuid_000000000007c496
	jmp uuid_000000000007c498
uuid_000000000007c496:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c490
	jmp uuid_000000000007c492
uuid_000000000007c490:
	push %RBP
	mov -1040(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c48d
	jmp uuid_000000000007c48f
uuid_000000000007c48d:
	movb $1, -1056(%rbp)
uuid_000000000007c48f:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007c492:
	mov -1064(%RBP),%RSP
	add $-1080, %RSP
	mov -1056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c493
	jmp uuid_000000000007c495
uuid_000000000007c493:
	movb $1, -976(%rbp)
uuid_000000000007c495:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007c498:
	mov -992(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007c49b:
	mov -984(%RBP),%RSP
	add $-1080, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c688
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4ab
	jmp uuid_000000000007c4ad
uuid_000000000007c4ab:
	push %RBP
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	jmp uuid_000000000007c4a8
	jmp uuid_000000000007c4aa
uuid_000000000007c4a8:
	push %RBP
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq $0
	push %RBP
	mov -1224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4a2
	jmp uuid_000000000007c4a4
uuid_000000000007c4a2:
	push %RBP
	mov -1216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c49f
	jmp uuid_000000000007c4a1
uuid_000000000007c49f:
	push %RBP
	mov -1208(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c49c
	jmp uuid_000000000007c49e
uuid_000000000007c49c:
	movb $1, -1232(%rbp)
uuid_000000000007c49e:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007c4a1:
	mov -1248(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007c4a4:
	mov -1240(%RBP),%RSP
	add $-1304, %RSP
	mov -1232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4a5
	jmp uuid_000000000007c4a7
uuid_000000000007c4a5:
	movb $1, -1152(%rbp)
uuid_000000000007c4a7:
	mov -1200(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007c4aa:
	mov -1168(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007c4ad:
	mov -1160(%RBP),%RSP
	add $-1304, %RSP
	mov -1152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c685
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4e2
	jmp uuid_000000000007c4e4
uuid_000000000007c4e2:
	push %RBP
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4d9
	jmp uuid_000000000007c4db
uuid_000000000007c4d9:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c4d6
	jmp uuid_000000000007c4d8
uuid_000000000007c4d6:
	push %RBP
	mov -1400(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c4d3
	jmp uuid_000000000007c4d5
uuid_000000000007c4d3:
	movb $1, -1424(%rbp)
uuid_000000000007c4d5:
	mov -1472(%RBP),%RSP
	add $-1496, %RSP
uuid_000000000007c4d8:
	mov -1440(%RBP),%RSP
	add $-1496, %RSP
uuid_000000000007c4db:
	mov -1432(%RBP),%RSP
	add $-1496, %RSP
	mov -1424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4df
	jmp uuid_000000000007c4e1
uuid_000000000007c4df:
	push %RBP
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	jmp uuid_000000000007c4dc
	jmp uuid_000000000007c4de
uuid_000000000007c4dc:
	movb $1, -1376(%rbp)
uuid_000000000007c4de:
	mov -1504(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007c4e1:
	mov -1392(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007c4e4:
	mov -1384(%RBP),%RSP
	add $-1528, %RSP
	mov -1376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c682
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c564
	jmp uuid_000000000007c566
uuid_000000000007c564:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c52e
	jmp uuid_000000000007c530
uuid_000000000007c52e:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c525
	jmp uuid_000000000007c527
uuid_000000000007c525:
	push %RBP
	mov -1696(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c51c
	jmp uuid_000000000007c51e
uuid_000000000007c51c:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1832(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c519
	jmp uuid_000000000007c51b
uuid_000000000007c519:
	push %RBP
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	jmp uuid_000000000007c516
	jmp uuid_000000000007c518
uuid_000000000007c516:
	movb $1, -1776(%rbp)
uuid_000000000007c518:
	mov -1840(%RBP),%RSP
	add $-1864, %RSP
uuid_000000000007c51b:
	mov -1792(%RBP),%RSP
	add $-1864, %RSP
uuid_000000000007c51e:
	mov -1784(%RBP),%RSP
	add $-1864, %RSP
	mov -1776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c522
	jmp uuid_000000000007c524
uuid_000000000007c522:
	push %RBP
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	jmp uuid_000000000007c51f
	jmp uuid_000000000007c521
uuid_000000000007c51f:
	movb $1, -1712(%rbp)
uuid_000000000007c521:
	mov -1872(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007c524:
	mov -1728(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007c527:
	mov -1720(%RBP),%RSP
	add $-1896, %RSP
	mov -1712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c52b
	jmp uuid_000000000007c52d
uuid_000000000007c52b:
	push %RBP
	mov -1624(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c528
	jmp uuid_000000000007c52a
uuid_000000000007c528:
	movb $1, -1648(%rbp)
uuid_000000000007c52a:
	mov -1904(%RBP),%RSP
	add $-1912, %RSP
uuid_000000000007c52d:
	mov -1664(%RBP),%RSP
	add $-1912, %RSP
uuid_000000000007c530:
	mov -1656(%RBP),%RSP
	add $-1912, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c561
	jmp uuid_000000000007c563
uuid_000000000007c561:
	push %RBP
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1944(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c55b
	jmp uuid_000000000007c55d
uuid_000000000007c55b:
	push %RBP
	mov -1936(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2008(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c552
	jmp uuid_000000000007c554
uuid_000000000007c552:
	push %RBP
	mov -2000(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2072(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c537
	jmp uuid_000000000007c539
uuid_000000000007c537:
	push %RBP
	mov -2064(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c534
	jmp uuid_000000000007c536
uuid_000000000007c534:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	jmp uuid_000000000007c531
	jmp uuid_000000000007c533
uuid_000000000007c531:
	movb $1, -2080(%rbp)
uuid_000000000007c533:
	mov -2144(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007c536:
	mov -2096(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007c539:
	mov -2088(%RBP),%RSP
	add $-2168, %RSP
	mov -2080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c54f
	jmp uuid_000000000007c551
uuid_000000000007c54f:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq $0
	push %RBP
	mov -2200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c549
	jmp uuid_000000000007c54b
uuid_000000000007c549:
	push %RBP
	mov -2192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c540
	jmp uuid_000000000007c542
uuid_000000000007c540:
	push %RBP
	mov -2256(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c53d
	jmp uuid_000000000007c53f
uuid_000000000007c53d:
	push %RBP
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	jmp uuid_000000000007c53a
	jmp uuid_000000000007c53c
uuid_000000000007c53a:
	movb $1, -2272(%rbp)
uuid_000000000007c53c:
	mov -2336(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007c53f:
	mov -2288(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007c542:
	mov -2280(%RBP),%RSP
	add $-2360, %RSP
	mov -2272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c546
	jmp uuid_000000000007c548
uuid_000000000007c546:
	push %RBP
	mov -2184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2376(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c543
	jmp uuid_000000000007c545
uuid_000000000007c543:
	movb $1, -2208(%rbp)
uuid_000000000007c545:
	mov -2368(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007c548:
	mov -2224(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007c54b:
	mov -2216(%RBP),%RSP
	add $-2376, %RSP
	mov -2208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c54c
	jmp uuid_000000000007c54e
uuid_000000000007c54c:
	movb $1, -2016(%rbp)
uuid_000000000007c54e:
	mov -2176(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007c551:
	mov -2032(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007c554:
	mov -2024(%RBP),%RSP
	add $-2376, %RSP
	mov -2016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c558
	jmp uuid_000000000007c55a
uuid_000000000007c558:
	push %RBP
	mov -1928(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2392(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c555
	jmp uuid_000000000007c557
uuid_000000000007c555:
	movb $1, -1952(%rbp)
uuid_000000000007c557:
	mov -2384(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007c55a:
	mov -1968(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007c55d:
	mov -1960(%RBP),%RSP
	add $-2392, %RSP
	mov -1952(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c55e
	jmp uuid_000000000007c560
uuid_000000000007c55e:
	movb $1, -1600(%rbp)
uuid_000000000007c560:
	mov -1920(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007c563:
	mov -1616(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007c566:
	mov -1608(%RBP),%RSP
	add $-2392, %RSP
	mov -1600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c67f
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -2456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c59d
	jmp uuid_000000000007c59f
uuid_000000000007c59d:
	push %RBP
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	jmp uuid_000000000007c59a
	jmp uuid_000000000007c59c
uuid_000000000007c59a:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq $0
	push %RBP
	mov -2536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c594
	jmp uuid_000000000007c596
uuid_000000000007c594:
	push %RBP
	mov -2528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c58b
	jmp uuid_000000000007c58d
uuid_000000000007c58b:
	push %RBP
	mov -2592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c570
	jmp uuid_000000000007c572
uuid_000000000007c570:
	push %RBP
	mov -2656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c56d
	jmp uuid_000000000007c56f
uuid_000000000007c56d:
	push %RBP
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	jmp uuid_000000000007c56a
	jmp uuid_000000000007c56c
uuid_000000000007c56a:
	movb $1, -2672(%rbp)
uuid_000000000007c56c:
	mov -2736(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007c56f:
	mov -2688(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007c572:
	mov -2680(%RBP),%RSP
	add $-2760, %RSP
	mov -2672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c588
	jmp uuid_000000000007c58a
uuid_000000000007c588:
	push %RBP
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c582
	jmp uuid_000000000007c584
uuid_000000000007c582:
	push %RBP
	mov -2784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c579
	jmp uuid_000000000007c57b
uuid_000000000007c579:
	push %RBP
	mov -2848(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2920(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c576
	jmp uuid_000000000007c578
uuid_000000000007c576:
	push %RBP
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	jmp uuid_000000000007c573
	jmp uuid_000000000007c575
uuid_000000000007c573:
	movb $1, -2864(%rbp)
uuid_000000000007c575:
	mov -2928(%RBP),%RSP
	add $-2952, %RSP
uuid_000000000007c578:
	mov -2880(%RBP),%RSP
	add $-2952, %RSP
uuid_000000000007c57b:
	mov -2872(%RBP),%RSP
	add $-2952, %RSP
	mov -2864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c57f
	jmp uuid_000000000007c581
uuid_000000000007c57f:
	push %RBP
	mov -2776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c57c
	jmp uuid_000000000007c57e
uuid_000000000007c57c:
	movb $1, -2800(%rbp)
uuid_000000000007c57e:
	mov -2960(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007c581:
	mov -2816(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007c584:
	mov -2808(%RBP),%RSP
	add $-2968, %RSP
	mov -2800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c585
	jmp uuid_000000000007c587
uuid_000000000007c585:
	movb $1, -2608(%rbp)
uuid_000000000007c587:
	mov -2768(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007c58a:
	mov -2624(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007c58d:
	mov -2616(%RBP),%RSP
	add $-2968, %RSP
	mov -2608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c591
	jmp uuid_000000000007c593
uuid_000000000007c591:
	push %RBP
	mov -2520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2984(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c58e
	jmp uuid_000000000007c590
uuid_000000000007c58e:
	movb $1, -2544(%rbp)
uuid_000000000007c590:
	mov -2976(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007c593:
	mov -2560(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007c596:
	mov -2552(%RBP),%RSP
	add $-2984, %RSP
	mov -2544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c597
	jmp uuid_000000000007c599
uuid_000000000007c597:
	movb $1, -2464(%rbp)
uuid_000000000007c599:
	mov -2512(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007c59c:
	mov -2480(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007c59f:
	mov -2472(%RBP),%RSP
	add $-2984, %RSP
	mov -2464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c67c
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -3048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5d6
	jmp uuid_000000000007c5d8
uuid_000000000007c5d6:
	push %RBP
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq $0
	push %RBP
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5bb
	jmp uuid_000000000007c5bd
uuid_000000000007c5bb:
	push %RBP
	mov -3088(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5b2
	jmp uuid_000000000007c5b4
uuid_000000000007c5b2:
	push %RBP
	mov -3152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5a9
	jmp uuid_000000000007c5ab
uuid_000000000007c5a9:
	push %RBP
	mov -3216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5a6
	jmp uuid_000000000007c5a8
uuid_000000000007c5a6:
	push %RBP
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq -3208(%RBP)
	jmp uuid_000000000007c5a3
	jmp uuid_000000000007c5a5
uuid_000000000007c5a3:
	movb $1, -3232(%rbp)
uuid_000000000007c5a5:
	mov -3296(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007c5a8:
	mov -3248(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007c5ab:
	mov -3240(%RBP),%RSP
	add $-3320, %RSP
	mov -3232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5af
	jmp uuid_000000000007c5b1
uuid_000000000007c5af:
	push %RBP
	pushq -3128(%RBP)
	pushq -3136(%RBP)
	pushq -3144(%RBP)
	jmp uuid_000000000007c5ac
	jmp uuid_000000000007c5ae
uuid_000000000007c5ac:
	movb $1, -3168(%rbp)
uuid_000000000007c5ae:
	mov -3328(%RBP),%RSP
	add $-3352, %RSP
uuid_000000000007c5b1:
	mov -3184(%RBP),%RSP
	add $-3352, %RSP
uuid_000000000007c5b4:
	mov -3176(%RBP),%RSP
	add $-3352, %RSP
	mov -3168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5b8
	jmp uuid_000000000007c5ba
uuid_000000000007c5b8:
	push %RBP
	mov -3080(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3368(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5b5
	jmp uuid_000000000007c5b7
uuid_000000000007c5b5:
	movb $1, -3104(%rbp)
uuid_000000000007c5b7:
	mov -3360(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007c5ba:
	mov -3120(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007c5bd:
	mov -3112(%RBP),%RSP
	add $-3368, %RSP
	mov -3104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5d3
	jmp uuid_000000000007c5d5
uuid_000000000007c5d3:
	push %RBP
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq $0
	push %RBP
	mov -3400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5cd
	jmp uuid_000000000007c5cf
uuid_000000000007c5cd:
	push %RBP
	mov -3392(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5c4
	jmp uuid_000000000007c5c6
uuid_000000000007c5c4:
	push %RBP
	mov -3456(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3528(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5c1
	jmp uuid_000000000007c5c3
uuid_000000000007c5c1:
	push %RBP
	pushq -3432(%RBP)
	pushq -3440(%RBP)
	pushq -3448(%RBP)
	jmp uuid_000000000007c5be
	jmp uuid_000000000007c5c0
uuid_000000000007c5be:
	movb $1, -3472(%rbp)
uuid_000000000007c5c0:
	mov -3536(%RBP),%RSP
	add $-3560, %RSP
uuid_000000000007c5c3:
	mov -3488(%RBP),%RSP
	add $-3560, %RSP
uuid_000000000007c5c6:
	mov -3480(%RBP),%RSP
	add $-3560, %RSP
	mov -3472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5ca
	jmp uuid_000000000007c5cc
uuid_000000000007c5ca:
	push %RBP
	mov -3384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3576(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5c7
	jmp uuid_000000000007c5c9
uuid_000000000007c5c7:
	movb $1, -3408(%rbp)
uuid_000000000007c5c9:
	mov -3568(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007c5cc:
	mov -3424(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007c5cf:
	mov -3416(%RBP),%RSP
	add $-3576, %RSP
	mov -3408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5d0
	jmp uuid_000000000007c5d2
uuid_000000000007c5d0:
	movb $1, -3056(%rbp)
uuid_000000000007c5d2:
	mov -3376(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007c5d5:
	mov -3072(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007c5d8:
	mov -3064(%RBP),%RSP
	add $-3576, %RSP
	mov -3056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c679
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -3640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5fd
	jmp uuid_000000000007c5ff
uuid_000000000007c5fd:
	push %RBP
	pushq -3616(%RBP)
	pushq -3624(%RBP)
	pushq -3632(%RBP)
	pushq $0
	push %RBP
	mov -3688(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5e2
	jmp uuid_000000000007c5e4
uuid_000000000007c5e2:
	push %RBP
	mov -3680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5df
	jmp uuid_000000000007c5e1
uuid_000000000007c5df:
	push %RBP
	mov -3672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3768(%rbp)
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5dc
	jmp uuid_000000000007c5de
uuid_000000000007c5dc:
	movb $1, -3696(%rbp)
uuid_000000000007c5de:
	mov -3760(%RBP),%RSP
	add $-3768, %RSP
uuid_000000000007c5e1:
	mov -3712(%RBP),%RSP
	add $-3768, %RSP
uuid_000000000007c5e4:
	mov -3704(%RBP),%RSP
	add $-3768, %RSP
	mov -3696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5fa
	jmp uuid_000000000007c5fc
uuid_000000000007c5fa:
	push %RBP
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	pushq $0
	push %RBP
	mov -3800(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5f4
	jmp uuid_000000000007c5f6
uuid_000000000007c5f4:
	push %RBP
	mov -3792(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5eb
	jmp uuid_000000000007c5ed
uuid_000000000007c5eb:
	push %RBP
	mov -3856(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3928(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5e8
	jmp uuid_000000000007c5ea
uuid_000000000007c5e8:
	push %RBP
	pushq -3832(%RBP)
	pushq -3840(%RBP)
	pushq -3848(%RBP)
	jmp uuid_000000000007c5e5
	jmp uuid_000000000007c5e7
uuid_000000000007c5e5:
	movb $1, -3872(%rbp)
uuid_000000000007c5e7:
	mov -3936(%RBP),%RSP
	add $-3960, %RSP
uuid_000000000007c5ea:
	mov -3888(%RBP),%RSP
	add $-3960, %RSP
uuid_000000000007c5ed:
	mov -3880(%RBP),%RSP
	add $-3960, %RSP
	mov -3872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5f1
	jmp uuid_000000000007c5f3
uuid_000000000007c5f1:
	push %RBP
	mov -3784(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3976(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5ee
	jmp uuid_000000000007c5f0
uuid_000000000007c5ee:
	movb $1, -3808(%rbp)
uuid_000000000007c5f0:
	mov -3968(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007c5f3:
	mov -3824(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007c5f6:
	mov -3816(%RBP),%RSP
	add $-3976, %RSP
	mov -3808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c5f7
	jmp uuid_000000000007c5f9
uuid_000000000007c5f7:
	movb $1, -3648(%rbp)
uuid_000000000007c5f9:
	mov -3776(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007c5fc:
	mov -3664(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007c5ff:
	mov -3656(%RBP),%RSP
	add $-3976, %RSP
	mov -3648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c676
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c618
	jmp uuid_000000000007c61a
uuid_000000000007c618:
	push %RBP
	pushq -4016(%RBP)
	pushq -4024(%RBP)
	pushq -4032(%RBP)
	jmp uuid_000000000007c615
	jmp uuid_000000000007c617
uuid_000000000007c615:
	push %RBP
	pushq -3992(%RBP)
	pushq -4000(%RBP)
	pushq -4008(%RBP)
	pushq $0
	push %RBP
	mov -4120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c60f
	jmp uuid_000000000007c611
uuid_000000000007c60f:
	push %RBP
	mov -4112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c606
	jmp uuid_000000000007c608
uuid_000000000007c606:
	push %RBP
	mov -4176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c603
	jmp uuid_000000000007c605
uuid_000000000007c603:
	push %RBP
	pushq -4152(%RBP)
	pushq -4160(%RBP)
	pushq -4168(%RBP)
	jmp uuid_000000000007c600
	jmp uuid_000000000007c602
uuid_000000000007c600:
	movb $1, -4192(%rbp)
uuid_000000000007c602:
	mov -4256(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007c605:
	mov -4208(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007c608:
	mov -4200(%RBP),%RSP
	add $-4280, %RSP
	mov -4192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c60c
	jmp uuid_000000000007c60e
uuid_000000000007c60c:
	push %RBP
	mov -4104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c609
	jmp uuid_000000000007c60b
uuid_000000000007c609:
	movb $1, -4128(%rbp)
uuid_000000000007c60b:
	mov -4288(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007c60e:
	mov -4144(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007c611:
	mov -4136(%RBP),%RSP
	add $-4296, %RSP
	mov -4128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c612
	jmp uuid_000000000007c614
uuid_000000000007c612:
	movb $1, -4048(%rbp)
uuid_000000000007c614:
	mov -4096(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007c617:
	mov -4064(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007c61a:
	mov -4056(%RBP),%RSP
	add $-4296, %RSP
	mov -4048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c673
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c645
	jmp uuid_000000000007c647
uuid_000000000007c645:
	push %RBP
	pushq -4336(%RBP)
	pushq -4344(%RBP)
	pushq -4352(%RBP)
	pushq $0
	push %RBP
	mov -4408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c621
	jmp uuid_000000000007c623
uuid_000000000007c621:
	push %RBP
	mov -4400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c61e
	jmp uuid_000000000007c620
uuid_000000000007c61e:
	push %RBP
	mov -4392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c61b
	jmp uuid_000000000007c61d
uuid_000000000007c61b:
	movb $1, -4416(%rbp)
uuid_000000000007c61d:
	mov -4480(%RBP),%RSP
	add $-4488, %RSP
uuid_000000000007c620:
	mov -4432(%RBP),%RSP
	add $-4488, %RSP
uuid_000000000007c623:
	mov -4424(%RBP),%RSP
	add $-4488, %RSP
	mov -4416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c642
	jmp uuid_000000000007c644
uuid_000000000007c642:
	push %RBP
	pushq -4312(%RBP)
	pushq -4320(%RBP)
	pushq -4328(%RBP)
	pushq $0
	push %RBP
	mov -4520(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c63c
	jmp uuid_000000000007c63e
uuid_000000000007c63c:
	push %RBP
	mov -4512(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4584(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c633
	jmp uuid_000000000007c635
uuid_000000000007c633:
	push %RBP
	mov -4576(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4648(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c630
	jmp uuid_000000000007c632
uuid_000000000007c630:
	push %RBP
	pushq -4552(%RBP)
	pushq -4560(%RBP)
	pushq -4568(%RBP)
	pushq $0
	push %RBP
	mov -4680(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c62a
	jmp uuid_000000000007c62c
uuid_000000000007c62a:
	push %RBP
	mov -4672(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4744(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c627
	jmp uuid_000000000007c629
uuid_000000000007c627:
	push %RBP
	mov -4664(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c624
	jmp uuid_000000000007c626
uuid_000000000007c624:
	movb $1, -4688(%rbp)
uuid_000000000007c626:
	mov -4752(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007c629:
	mov -4704(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007c62c:
	mov -4696(%RBP),%RSP
	add $-4760, %RSP
	mov -4688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c62d
	jmp uuid_000000000007c62f
uuid_000000000007c62d:
	movb $1, -4592(%rbp)
uuid_000000000007c62f:
	mov -4656(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007c632:
	mov -4608(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007c635:
	mov -4600(%RBP),%RSP
	add $-4760, %RSP
	mov -4592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c639
	jmp uuid_000000000007c63b
uuid_000000000007c639:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4776(%rbp)
	pushq $uuid_000000000007c3ef
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c636
	jmp uuid_000000000007c638
uuid_000000000007c636:
	movb $1, -4528(%rbp)
uuid_000000000007c638:
	mov -4768(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007c63b:
	mov -4544(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007c63e:
	mov -4536(%RBP),%RSP
	add $-4776, %RSP
	mov -4528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c63f
	jmp uuid_000000000007c641
uuid_000000000007c63f:
	movb $1, -4368(%rbp)
uuid_000000000007c641:
	mov -4496(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007c644:
	mov -4384(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007c647:
	mov -4376(%RBP),%RSP
	add $-4776, %RSP
	mov -4368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c670
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c663
	jmp uuid_000000000007c665
uuid_000000000007c663:
	push %RBP
	pushq -4816(%RBP)
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq $0
	push %RBP
	mov -4888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c651
	jmp uuid_000000000007c653
uuid_000000000007c651:
	push %RBP
	mov -4880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c64e
	jmp uuid_000000000007c650
uuid_000000000007c64e:
	push %RBP
	mov -4872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c64b
	jmp uuid_000000000007c64d
uuid_000000000007c64b:
	movb $1, -4896(%rbp)
uuid_000000000007c64d:
	mov -4960(%RBP),%RSP
	add $-4968, %RSP
uuid_000000000007c650:
	mov -4912(%RBP),%RSP
	add $-4968, %RSP
uuid_000000000007c653:
	mov -4904(%RBP),%RSP
	add $-4968, %RSP
	mov -4896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c660
	jmp uuid_000000000007c662
uuid_000000000007c660:
	push %RBP
	pushq -4792(%RBP)
	pushq -4800(%RBP)
	pushq -4808(%RBP)
	pushq $0
	push %RBP
	mov -5000(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c65a
	jmp uuid_000000000007c65c
uuid_000000000007c65a:
	push %RBP
	mov -4992(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c657
	jmp uuid_000000000007c659
uuid_000000000007c657:
	push %RBP
	mov -4984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c654
	jmp uuid_000000000007c656
uuid_000000000007c654:
	movb $1, -5008(%rbp)
uuid_000000000007c656:
	mov -5072(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007c659:
	mov -5024(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007c65c:
	mov -5016(%RBP),%RSP
	add $-5080, %RSP
	mov -5008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c65d
	jmp uuid_000000000007c65f
uuid_000000000007c65d:
	movb $1, -4848(%rbp)
uuid_000000000007c65f:
	mov -4976(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007c662:
	mov -4864(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007c665:
	mov -4856(%RBP),%RSP
	add $-5080, %RSP
	mov -4848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c66d
	push %RBP
	jmp uuid_000000000007c66a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c669
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c66c
uuid_000000000007c66a:
uuid_000000000007c66c:
	mov -5088(%RBP),%RSP
	add $-5088, %RSP
	jmp uuid_000000000007c66f
uuid_000000000007c66d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5080(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c666
	jmp uuid_000000000007c668
uuid_000000000007c666:
#call function unify : Arrow<Cons<List<Type>,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c668:
	mov -5088(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007c66f:
	mov -4784(%RBP),%RSP
	add $-5088, %RSP
	jmp uuid_000000000007c672
uuid_000000000007c670:
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4488(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4760(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c648
	jmp uuid_000000000007c64a
uuid_000000000007c648:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c64a:
	mov -4784(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007c672:
	mov -4304(%RBP),%RSP
	add $-4784, %RSP
	jmp uuid_000000000007c675
uuid_000000000007c673:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c675:
	mov -3984(%RBP),%RSP
	add $-4296, %RSP
	jmp uuid_000000000007c678
uuid_000000000007c676:
uuid_000000000007c678:
	mov -3584(%RBP),%RSP
	add $-3976, %RSP
	jmp uuid_000000000007c67b
uuid_000000000007c679:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5d9
	jmp uuid_000000000007c5db
uuid_000000000007c5d9:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c5db:
	mov -3584(%RBP),%RSP
	add $-3584, %RSP
uuid_000000000007c67b:
	mov -2992(%RBP),%RSP
	add $-3584, %RSP
	jmp uuid_000000000007c67e
uuid_000000000007c67c:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5a0
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007c5a2
uuid_000000000007c5a0:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c5a2:
	mov -2992(%RBP),%RSP
	add $-2992, %RSP
uuid_000000000007c67e:
	mov -2400(%RBP),%RSP
	add $-2992, %RSP
	jmp uuid_000000000007c681
uuid_000000000007c67f:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c567
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007c569
uuid_000000000007c567:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c569:
	mov -2400(%RBP),%RSP
	add $-2400, %RSP
uuid_000000000007c681:
	mov -1536(%RBP),%RSP
	add $-2400, %RSP
	jmp uuid_000000000007c684
uuid_000000000007c682:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4eb
	jmp uuid_000000000007c4ed
uuid_000000000007c4eb:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	mov -2176(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4e8
	jmp uuid_000000000007c4ea
uuid_000000000007c4e8:
	push %RBP
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4e5
	jmp uuid_000000000007c4e7
uuid_000000000007c4e5:
	movb $1, -2040(%rbp)
uuid_000000000007c4e7:
	mov -2184(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007c4ea:
	mov -2056(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007c4ed:
	mov -2048(%RBP),%RSP
	add $-2304, %RSP
	mov -2040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c513
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4f4
	jmp uuid_000000000007c4f6
uuid_000000000007c4f4:
	push %RBP
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	mov -2704(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4f1
	jmp uuid_000000000007c4f3
uuid_000000000007c4f1:
	push %RBP
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	jmp uuid_000000000007c4ee
	jmp uuid_000000000007c4f0
uuid_000000000007c4ee:
	movb $1, -2568(%rbp)
uuid_000000000007c4f0:
	mov -2712(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007c4f3:
	mov -2584(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007c4f6:
	mov -2576(%RBP),%RSP
	add $-2832, %RSP
	mov -2568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c510
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -3088(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4fd
	jmp uuid_000000000007c4ff
uuid_000000000007c4fd:
	push %RBP
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq -3056(%RBP)
	pushq -3064(%RBP)
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	jmp uuid_000000000007c4fa
	jmp uuid_000000000007c4fc
uuid_000000000007c4fa:
	push %RBP
	pushq -2848(%RBP)
	pushq -2856(%RBP)
	pushq -2864(%RBP)
	pushq -2872(%RBP)
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	mov -3360(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4f7
	jmp uuid_000000000007c4f9
uuid_000000000007c4f7:
	movb $1, -3096(%rbp)
uuid_000000000007c4f9:
	mov -3240(%RBP),%RSP
	add $-3360, %RSP
uuid_000000000007c4fc:
	mov -3112(%RBP),%RSP
	add $-3360, %RSP
uuid_000000000007c4ff:
	mov -3104(%RBP),%RSP
	add $-3360, %RSP
	mov -3096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c50d
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -3616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c506
	jmp uuid_000000000007c508
uuid_000000000007c506:
	push %RBP
	pushq -3496(%RBP)
	pushq -3504(%RBP)
	pushq -3512(%RBP)
	pushq -3520(%RBP)
	pushq -3528(%RBP)
	pushq -3536(%RBP)
	pushq -3544(%RBP)
	pushq -3552(%RBP)
	pushq -3560(%RBP)
	pushq -3568(%RBP)
	pushq -3576(%RBP)
	pushq -3584(%RBP)
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	jmp uuid_000000000007c503
	jmp uuid_000000000007c505
uuid_000000000007c503:
	push %RBP
	pushq -3376(%RBP)
	pushq -3384(%RBP)
	pushq -3392(%RBP)
	pushq -3400(%RBP)
	pushq -3408(%RBP)
	pushq -3416(%RBP)
	pushq -3424(%RBP)
	pushq -3432(%RBP)
	pushq -3440(%RBP)
	pushq -3448(%RBP)
	pushq -3456(%RBP)
	pushq -3464(%RBP)
	pushq -3472(%RBP)
	pushq -3480(%RBP)
	pushq -3488(%RBP)
	jmp uuid_000000000007c500
	jmp uuid_000000000007c502
uuid_000000000007c500:
	movb $1, -3624(%rbp)
uuid_000000000007c502:
	mov -3768(%RBP),%RSP
	add $-3888, %RSP
uuid_000000000007c505:
	mov -3640(%RBP),%RSP
	add $-3888, %RSP
uuid_000000000007c508:
	mov -3632(%RBP),%RSP
	add $-3888, %RSP
	mov -3624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c50a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c509
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c50c
uuid_000000000007c50a:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -3800(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	pushq -3664(%rbp)
	pushq -3672(%rbp)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	pushq -3752(%rbp)
	pushq -3760(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c50c:
	mov -3368(%RBP),%RSP
	add $-3888, %RSP
	jmp uuid_000000000007c50f
uuid_000000000007c50d:
	movq -3232(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -3224(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -3216(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -3208(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -3200(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -3192(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -3184(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -3176(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -3168(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -3160(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -3152(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -3144(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -3136(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -3128(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3120(%rbp), %r15
	movq %r15, -64(%rbp)
uuid_000000000007c50f:
	mov -2840(%RBP),%RSP
	add $-3360, %RSP
	jmp uuid_000000000007c512
uuid_000000000007c510:
	movq -2832(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -2824(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -2816(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -2808(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2800(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2792(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2784(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2776(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2768(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -64(%rbp)
uuid_000000000007c512:
	mov -2312(%RBP),%RSP
	add $-2832, %RSP
	jmp uuid_000000000007c515
uuid_000000000007c513:
uuid_000000000007c515:
	mov -1784(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007c684:
	mov -1312(%RBP),%RSP
	add $-2304, %RSP
	jmp uuid_000000000007c687
uuid_000000000007c685:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4b4
	jmp uuid_000000000007c4b6
uuid_000000000007c4b4:
	push %RBP
	jmp uuid_000000000007c4b1
	jmp uuid_000000000007c4b3
uuid_000000000007c4b1:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	mov -1960(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4ae
	jmp uuid_000000000007c4b0
uuid_000000000007c4ae:
	movb $1, -1816(%rbp)
uuid_000000000007c4b0:
	mov -1840(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c4b3:
	mov -1832(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c4b6:
	mov -1824(%RBP),%RSP
	add $-1960, %RSP
	mov -1816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4d0
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -2216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4bd
	jmp uuid_000000000007c4bf
uuid_000000000007c4bd:
	push %RBP
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	mov -2360(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4ba
	jmp uuid_000000000007c4bc
uuid_000000000007c4ba:
	push %RBP
	jmp uuid_000000000007c4b7
	jmp uuid_000000000007c4b9
uuid_000000000007c4b7:
	movb $1, -2224(%rbp)
uuid_000000000007c4b9:
	mov -2368(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007c4bc:
	mov -2240(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007c4bf:
	mov -2232(%RBP),%RSP
	add $-2368, %RSP
	mov -2224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4cd
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4c6
	jmp uuid_000000000007c4c8
uuid_000000000007c4c6:
	push %RBP
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	jmp uuid_000000000007c4c3
	jmp uuid_000000000007c4c5
uuid_000000000007c4c3:
	push %RBP
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	jmp uuid_000000000007c4c0
	jmp uuid_000000000007c4c2
uuid_000000000007c4c0:
	movb $1, -2632(%rbp)
uuid_000000000007c4c2:
	mov -2776(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007c4c5:
	mov -2648(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007c4c8:
	mov -2640(%RBP),%RSP
	add $-2896, %RSP
	mov -2632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c4ca
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c4c9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c4cc
uuid_000000000007c4ca:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	pushq -2856(%rbp)
	pushq -2864(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	pushq -2696(%rbp)
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c4cc:
	mov -2376(%RBP),%RSP
	add $-2896, %RSP
	jmp uuid_000000000007c4cf
uuid_000000000007c4cd:
uuid_000000000007c4cf:
	mov -1968(%RBP),%RSP
	add $-2368, %RSP
	jmp uuid_000000000007c4d2
uuid_000000000007c4d0:
uuid_000000000007c4d2:
	mov -1560(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c687:
	mov -1088(%RBP),%RSP
	add $-1960, %RSP
	jmp uuid_000000000007c68a
uuid_000000000007c688:
#call function close : Arrow<TContext+CaseNumber<2>,Array<TContext+CaseNumber<2>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1080(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c68a:
	mov -912(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007c68d
uuid_000000000007c68b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c68d:
	mov -616(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_000000000007c690
uuid_000000000007c68e:
#call function close : Arrow<TContext+CaseNumber<2>,Array<TContext+CaseNumber<2>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -608(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -544(%rbp)
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $6
	pushq $0
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c690:
	mov -360(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007c693
uuid_000000000007c691:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c693:
	mov -240(%RBP),%RSP
	add $-352, %RSP
	subq $120, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_CL_ArrowTContextConsListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c69f
	jmp uuid_000000000007c6a1
uuid_000000000007c69f:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c69c
	jmp uuid_000000000007c69e
uuid_000000000007c69c:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c699
	jmp uuid_000000000007c69b
uuid_000000000007c699:
	movb $1, -400(%rbp)
uuid_000000000007c69b:
	mov -464(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007c69e:
	mov -416(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007c6a1:
	mov -408(%RBP),%RSP
	add $-504, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6c7
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6ba
	jmp uuid_000000000007c6bc
uuid_000000000007c6ba:
	push %RBP
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6a8
	jmp uuid_000000000007c6aa
uuid_000000000007c6a8:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6a5
	jmp uuid_000000000007c6a7
uuid_000000000007c6a5:
	push %RBP
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	jmp uuid_000000000007c6a2
	jmp uuid_000000000007c6a4
uuid_000000000007c6a2:
	movb $1, -672(%rbp)
uuid_000000000007c6a4:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007c6a7:
	mov -688(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007c6aa:
	mov -680(%RBP),%RSP
	add $-760, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6b7
	jmp uuid_000000000007c6b9
uuid_000000000007c6b7:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6b1
	jmp uuid_000000000007c6b3
uuid_000000000007c6b1:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6ae
	jmp uuid_000000000007c6b0
uuid_000000000007c6ae:
	push %RBP
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	jmp uuid_000000000007c6ab
	jmp uuid_000000000007c6ad
uuid_000000000007c6ab:
	movb $1, -816(%rbp)
uuid_000000000007c6ad:
	mov -880(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c6b0:
	mov -832(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c6b3:
	mov -824(%RBP),%RSP
	add $-904, %RSP
	mov -816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6b4
	jmp uuid_000000000007c6b6
uuid_000000000007c6b4:
	movb $1, -608(%rbp)
uuid_000000000007c6b6:
	mov -768(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c6b9:
	mov -624(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007c6bc:
	mov -616(%RBP),%RSP
	add $-904, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6c4
	push %RBP
	jmp uuid_000000000007c6c1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c6c0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c6c3
uuid_000000000007c6c1:
uuid_000000000007c6c3:
	mov -912(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007c6c6
uuid_000000000007c6c4:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	push %RBP
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c6bd
	jmp uuid_000000000007c6bf
uuid_000000000007c6bd:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function unify : Arrow<Cons<List<Type>,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
uuid_000000000007c6bf:
	mov -912(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007c6c6:
	mov -512(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007c6c9
uuid_000000000007c6c7:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
uuid_000000000007c6c9:
	mov -304(%RBP),%RSP
	add $-504, %RSP
	subq $120, %rsp
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $88, %rsp
	ret
fields_SB_of_SB_type_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6f4
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6e2
	jmp uuid_000000000007c6e4
uuid_000000000007c6e2:
	push %RBP
	mov -112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6d9
	jmp uuid_000000000007c6db
uuid_000000000007c6d9:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6d0
	jmp uuid_000000000007c6d2
uuid_000000000007c6d0:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6cd
	jmp uuid_000000000007c6cf
uuid_000000000007c6cd:
	push %RBP
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	jmp uuid_000000000007c6ca
	jmp uuid_000000000007c6cc
uuid_000000000007c6ca:
	movb $1, -256(%rbp)
uuid_000000000007c6cc:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007c6cf:
	mov -272(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007c6d2:
	mov -264(%RBP),%RSP
	add $-344, %RSP
	mov -256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6d6
	jmp uuid_000000000007c6d8
uuid_000000000007c6d6:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007c6d3
	jmp uuid_000000000007c6d5
uuid_000000000007c6d3:
	movb $1, -192(%rbp)
uuid_000000000007c6d5:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007c6d8:
	mov -208(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007c6db:
	mov -200(%RBP),%RSP
	add $-376, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6df
	jmp uuid_000000000007c6e1
uuid_000000000007c6df:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c6dc
	jmp uuid_000000000007c6de
uuid_000000000007c6dc:
	movb $1, -128(%rbp)
uuid_000000000007c6de:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007c6e1:
	mov -144(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007c6e4:
	mov -136(%RBP),%RSP
	add $-392, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c6f1
	push %RBP
	jmp uuid_000000000007c6ee
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c6ed
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c6f0
uuid_000000000007c6ee:
	pushq $uuid_000000000007ba2f
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c6f0:
	mov -400(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007c6f3
uuid_000000000007c6f1:
	pushq $uuid_000000000007ba2f
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fields-of-type : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_type_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c6f3:
	mov -96(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007c6f6
uuid_000000000007c6f4:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c6f6:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
sizeof_SB_type_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7d2
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6fa
	jmp uuid_000000000007c6fc
uuid_000000000007c6fa:
	push %RBP
	jmp uuid_000000000007c6f7
	jmp uuid_000000000007c6f9
uuid_000000000007c6f7:
	movb $1, -136(%rbp)
uuid_000000000007c6f9:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007c6fc:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7cf
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c703
	jmp uuid_000000000007c705
uuid_000000000007c703:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c700
	jmp uuid_000000000007c702
uuid_000000000007c700:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c6fd
	jmp uuid_000000000007c6ff
uuid_000000000007c6fd:
	movb $1, -192(%rbp)
uuid_000000000007c6ff:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c702:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c705:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7cc
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c71e
	jmp uuid_000000000007c720
uuid_000000000007c71e:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c715
	jmp uuid_000000000007c717
uuid_000000000007c715:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c712
	jmp uuid_000000000007c714
uuid_000000000007c712:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c70c
	jmp uuid_000000000007c70e
uuid_000000000007c70c:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c709
	jmp uuid_000000000007c70b
uuid_000000000007c709:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c706
	jmp uuid_000000000007c708
uuid_000000000007c706:
	movb $1, -464(%rbp)
uuid_000000000007c708:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c70b:
	mov -480(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c70e:
	mov -472(%RBP),%RSP
	add $-536, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c70f
	jmp uuid_000000000007c711
uuid_000000000007c70f:
	movb $1, -368(%rbp)
uuid_000000000007c711:
	mov -432(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c714:
	mov -384(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007c717:
	mov -376(%RBP),%RSP
	add $-536, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c71b
	jmp uuid_000000000007c71d
uuid_000000000007c71b:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $uuid_000000000007bc59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c718
	jmp uuid_000000000007c71a
uuid_000000000007c718:
	movb $1, -304(%rbp)
uuid_000000000007c71a:
	mov -544(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007c71d:
	mov -320(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007c720:
	mov -312(%RBP),%RSP
	add $-552, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7c9
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c739
	jmp uuid_000000000007c73b
uuid_000000000007c739:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -648(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c730
	jmp uuid_000000000007c732
uuid_000000000007c730:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c727
	jmp uuid_000000000007c729
uuid_000000000007c727:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c724
	jmp uuid_000000000007c726
uuid_000000000007c724:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	jmp uuid_000000000007c721
	jmp uuid_000000000007c723
uuid_000000000007c721:
	movb $1, -720(%rbp)
uuid_000000000007c723:
	mov -784(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007c726:
	mov -736(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007c729:
	mov -728(%RBP),%RSP
	add $-808, %RSP
	mov -720(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c72d
	jmp uuid_000000000007c72f
uuid_000000000007c72d:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c72a
	jmp uuid_000000000007c72c
uuid_000000000007c72a:
	movb $1, -656(%rbp)
uuid_000000000007c72c:
	mov -816(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007c72f:
	mov -672(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007c732:
	mov -664(%RBP),%RSP
	add $-840, %RSP
	mov -656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c736
	jmp uuid_000000000007c738
uuid_000000000007c736:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c733
	jmp uuid_000000000007c735
uuid_000000000007c733:
	movb $1, -592(%rbp)
uuid_000000000007c735:
	mov -848(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007c738:
	mov -608(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007c73b:
	mov -600(%RBP),%RSP
	add $-856, %RSP
	mov -592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7c6
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c754
	jmp uuid_000000000007c756
uuid_000000000007c754:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c74b
	jmp uuid_000000000007c74d
uuid_000000000007c74b:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c742
	jmp uuid_000000000007c744
uuid_000000000007c742:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1080(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c73f
	jmp uuid_000000000007c741
uuid_000000000007c73f:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007c73c
	jmp uuid_000000000007c73e
uuid_000000000007c73c:
	movb $1, -1024(%rbp)
uuid_000000000007c73e:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007c741:
	mov -1040(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007c744:
	mov -1032(%RBP),%RSP
	add $-1112, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c748
	jmp uuid_000000000007c74a
uuid_000000000007c748:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007c745
	jmp uuid_000000000007c747
uuid_000000000007c745:
	movb $1, -960(%rbp)
uuid_000000000007c747:
	mov -1120(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007c74a:
	mov -976(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007c74d:
	mov -968(%RBP),%RSP
	add $-1144, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c751
	jmp uuid_000000000007c753
uuid_000000000007c751:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c74e
	jmp uuid_000000000007c750
uuid_000000000007c74e:
	movb $1, -896(%rbp)
uuid_000000000007c750:
	mov -1152(%RBP),%RSP
	add $-1160, %RSP
uuid_000000000007c753:
	mov -912(%RBP),%RSP
	add $-1160, %RSP
uuid_000000000007c756:
	mov -904(%RBP),%RSP
	add $-1160, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7c3
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c778
	jmp uuid_000000000007c77a
uuid_000000000007c778:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c76f
	jmp uuid_000000000007c771
uuid_000000000007c76f:
	push %RBP
	mov -1248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c75d
	jmp uuid_000000000007c75f
uuid_000000000007c75d:
	push %RBP
	mov -1312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c75a
	jmp uuid_000000000007c75c
uuid_000000000007c75a:
	push %RBP
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	jmp uuid_000000000007c757
	jmp uuid_000000000007c759
uuid_000000000007c757:
	movb $1, -1328(%rbp)
uuid_000000000007c759:
	mov -1392(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007c75c:
	mov -1344(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007c75f:
	mov -1336(%RBP),%RSP
	add $-1416, %RSP
	mov -1328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c76c
	jmp uuid_000000000007c76e
uuid_000000000007c76c:
	push %RBP
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c766
	jmp uuid_000000000007c768
uuid_000000000007c766:
	push %RBP
	mov -1440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c763
	jmp uuid_000000000007c765
uuid_000000000007c763:
	push %RBP
	mov -1432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c760
	jmp uuid_000000000007c762
uuid_000000000007c760:
	movb $1, -1456(%rbp)
uuid_000000000007c762:
	mov -1520(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007c765:
	mov -1472(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007c768:
	mov -1464(%RBP),%RSP
	add $-1528, %RSP
	mov -1456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c769
	jmp uuid_000000000007c76b
uuid_000000000007c769:
	movb $1, -1264(%rbp)
uuid_000000000007c76b:
	mov -1424(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007c76e:
	mov -1280(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007c771:
	mov -1272(%RBP),%RSP
	add $-1528, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c775
	jmp uuid_000000000007c777
uuid_000000000007c775:
	push %RBP
	mov -1176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $uuid_000000000007bfaf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c772
	jmp uuid_000000000007c774
uuid_000000000007c772:
	movb $1, -1200(%rbp)
uuid_000000000007c774:
	mov -1536(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007c777:
	mov -1216(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007c77a:
	mov -1208(%RBP),%RSP
	add $-1544, %RSP
	mov -1200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7c0
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1576(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c781
	jmp uuid_000000000007c783
uuid_000000000007c781:
	push %RBP
	jmp uuid_000000000007c77e
	jmp uuid_000000000007c780
uuid_000000000007c77e:
	push %RBP
	mov -1560(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c77b
	jmp uuid_000000000007c77d
uuid_000000000007c77b:
	movb $1, -1584(%rbp)
uuid_000000000007c77d:
	mov -1608(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007c780:
	mov -1600(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007c783:
	mov -1592(%RBP),%RSP
	add $-1616, %RSP
	mov -1584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7bd
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1648(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7af
	jmp uuid_000000000007c7b1
uuid_000000000007c7af:
	push %RBP
	mov -1640(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7ac
	jmp uuid_000000000007c7ae
uuid_000000000007c7ac:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7a9
	jmp uuid_000000000007c7ab
uuid_000000000007c7a9:
	movb $1, -1656(%rbp)
uuid_000000000007c7ab:
	mov -1704(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007c7ae:
	mov -1672(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007c7b1:
	mov -1664(%RBP),%RSP
	add $-1728, %RSP
	mov -1656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7ba
	push %RBP
	jmp uuid_000000000007c7b7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c7b6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c7b9
uuid_000000000007c7b7:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c7b5
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c7b9:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007c7bc
uuid_000000000007c7ba:
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c7b2
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	jmp uuid_000000000007c7b4
uuid_000000000007c7b2:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c7b4:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007c7bc:
	mov -1624(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007c7bf
uuid_000000000007c7bd:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Tuple<Type,Type>>,String>,Tuple<Type,Type>>,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -1616(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq $0
	push %RBP
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c796
	jmp uuid_000000000007c798
uuid_000000000007c796:
	push %RBP
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c793
	jmp uuid_000000000007c795
uuid_000000000007c793:
	push %RBP
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c790
	jmp uuid_000000000007c792
uuid_000000000007c790:
	movb $1, -1744(%rbp)
uuid_000000000007c792:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007c795:
	mov -1760(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007c798:
	mov -1752(%RBP),%RSP
	add $-1816, %RSP
	mov -1744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7a6
	push %RBP
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq $0
	push %RBP
	mov -1880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c79f
	jmp uuid_000000000007c7a1
uuid_000000000007c79f:
	push %RBP
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	jmp uuid_000000000007c79c
	jmp uuid_000000000007c79e
uuid_000000000007c79c:
	push %RBP
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	jmp uuid_000000000007c799
	jmp uuid_000000000007c79b
uuid_000000000007c799:
	movb $1, -1888(%rbp)
uuid_000000000007c79b:
	mov -1936(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c79e:
	mov -1904(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007c7a1:
	mov -1896(%RBP),%RSP
	add $-1960, %RSP
	mov -1888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7a3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c7a2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c7a5
uuid_000000000007c7a3:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq $8, %RAX
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c7a5:
	mov -1824(%RBP),%RSP
	add $-2104, %RSP
	jmp uuid_000000000007c7a8
uuid_000000000007c7a6:
uuid_000000000007c7a8:
	mov -1680(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007c7bf:
	mov -1552(%RBP),%RSP
	add $-1816, %RSP
	jmp uuid_000000000007c7c2
uuid_000000000007c7c0:
#call function * : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _ML__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c7c2:
	mov -1168(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007c7c5
uuid_000000000007c7c3:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c7c5:
	mov -864(%RBP),%RSP
	add $-1160, %RSP
	jmp uuid_000000000007c7c8
uuid_000000000007c7c6:
	movq $8, -40(%rbp)
uuid_000000000007c7c8:
	mov -560(%RBP),%RSP
	add $-856, %RSP
	jmp uuid_000000000007c7cb
uuid_000000000007c7c9:
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c7cb:
	mov -272(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007c7ce
uuid_000000000007c7cc:
#call function size-of-class : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call size_SB_of_SB_class_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c7ce:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007c7d1
uuid_000000000007c7cf:
uuid_000000000007c7d1:
	mov -104(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007c7d4
uuid_000000000007c7d2:
uuid_000000000007c7d4:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
sizeof_SB_aligned_CL_ArrowU64Type:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7d5
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $8
	pushq -40(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	jmp uuid_000000000007c7d7
uuid_000000000007c7d5:
uuid_000000000007c7d7:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType:
	pushq $0
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7ee
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7e1
	jmp uuid_000000000007c7e3
uuid_000000000007c7e1:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7de
	jmp uuid_000000000007c7e0
uuid_000000000007c7de:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007c7db
	jmp uuid_000000000007c7dd
uuid_000000000007c7db:
	movb $1, -248(%rbp)
uuid_000000000007c7dd:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007c7e0:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007c7e3:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c7eb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c7ea
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c7ed
uuid_000000000007c7eb:
	push %RBP
#call function is-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c7e7
	jmp uuid_000000000007c7e9
uuid_000000000007c7e7:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c7e4
	jmp uuid_000000000007c7e6
uuid_000000000007c7e4:
	movq $1, -104(%rbp)
uuid_000000000007c7e6:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c7e9:
	mov -344(%RBP),%RSP
	add $-352, %RSP
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
uuid_000000000007c7ed:
	mov -200(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007c7f0
uuid_000000000007c7ee:
uuid_000000000007c7f0:
	mov -152(%RBP),%RSP
	add $-192, %RSP
	mov -104(%rbp), %RAX
	mov %rbp, %rsp
	sub $96, %rsp
	ret
has_SB_infinite_CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7f7
	jmp uuid_000000000007c7f9
uuid_000000000007c7f7:
	push %RBP
	jmp uuid_000000000007c7f4
	jmp uuid_000000000007c7f6
uuid_000000000007c7f4:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c7f1
	jmp uuid_000000000007c7f3
uuid_000000000007c7f1:
	movb $1, -128(%rbp)
uuid_000000000007c7f3:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007c7f6:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007c7f9:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c852
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c812
	jmp uuid_000000000007c814
uuid_000000000007c812:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c809
	jmp uuid_000000000007c80b
uuid_000000000007c809:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c800
	jmp uuid_000000000007c802
uuid_000000000007c800:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7fd
	jmp uuid_000000000007c7ff
uuid_000000000007c7fd:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	jmp uuid_000000000007c7fa
	jmp uuid_000000000007c7fc
uuid_000000000007c7fa:
	movb $1, -328(%rbp)
uuid_000000000007c7fc:
	mov -392(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007c7ff:
	mov -344(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007c802:
	mov -336(%RBP),%RSP
	add $-416, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c806
	jmp uuid_000000000007c808
uuid_000000000007c806:
	push %RBP
	jmp uuid_000000000007c803
	jmp uuid_000000000007c805
uuid_000000000007c803:
	movb $1, -264(%rbp)
uuid_000000000007c805:
	mov -424(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007c808:
	mov -280(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007c80b:
	mov -272(%RBP),%RSP
	add $-424, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c80f
	jmp uuid_000000000007c811
uuid_000000000007c80f:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $uuid_000000000007bfaf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c80c
	jmp uuid_000000000007c80e
uuid_000000000007c80c:
	movb $1, -200(%rbp)
uuid_000000000007c80e:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c811:
	mov -216(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c814:
	mov -208(%RBP),%RSP
	add $-440, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c84f
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c82d
	jmp uuid_000000000007c82f
uuid_000000000007c82d:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c824
	jmp uuid_000000000007c826
uuid_000000000007c824:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c81b
	jmp uuid_000000000007c81d
uuid_000000000007c81b:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c818
	jmp uuid_000000000007c81a
uuid_000000000007c818:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_000000000007c815
	jmp uuid_000000000007c817
uuid_000000000007c815:
	movb $1, -608(%rbp)
uuid_000000000007c817:
	mov -672(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007c81a:
	mov -624(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007c81d:
	mov -616(%RBP),%RSP
	add $-696, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c821
	jmp uuid_000000000007c823
uuid_000000000007c821:
	push %RBP
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	jmp uuid_000000000007c81e
	jmp uuid_000000000007c820
uuid_000000000007c81e:
	movb $1, -544(%rbp)
uuid_000000000007c820:
	mov -704(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007c823:
	mov -560(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007c826:
	mov -552(%RBP),%RSP
	add $-728, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c82a
	jmp uuid_000000000007c82c
uuid_000000000007c82a:
	push %RBP
	mov -456(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c827
	jmp uuid_000000000007c829
uuid_000000000007c827:
	movb $1, -480(%rbp)
uuid_000000000007c829:
	mov -736(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007c82c:
	mov -496(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007c82f:
	mov -488(%RBP),%RSP
	add $-744, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c84c
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c836
	jmp uuid_000000000007c838
uuid_000000000007c836:
	push %RBP
	mov -768(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c833
	jmp uuid_000000000007c835
uuid_000000000007c833:
	push %RBP
	mov -760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c830
	jmp uuid_000000000007c832
uuid_000000000007c830:
	movb $1, -784(%rbp)
uuid_000000000007c832:
	mov -848(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007c835:
	mov -800(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007c838:
	mov -792(%RBP),%RSP
	add $-856, %RSP
	mov -784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c849
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c83f
	jmp uuid_000000000007c841
uuid_000000000007c83f:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c83c
	jmp uuid_000000000007c83e
uuid_000000000007c83c:
	push %RBP
	mov -872(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c839
	jmp uuid_000000000007c83b
uuid_000000000007c839:
	movb $1, -896(%rbp)
uuid_000000000007c83b:
	mov -944(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c83e:
	mov -912(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007c841:
	mov -904(%RBP),%RSP
	add $-968, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c846
	push %RBP
	jmp uuid_000000000007c843
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c842
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c845
uuid_000000000007c843:
uuid_000000000007c845:
	mov -976(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007c848
uuid_000000000007c846:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007c848:
	mov -864(%RBP),%RSP
	add $-968, %RSP
	jmp uuid_000000000007c84b
uuid_000000000007c849:
#call function has-infinite : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007c84b:
	mov -752(%RBP),%RSP
	add $-856, %RSP
	jmp uuid_000000000007c84e
uuid_000000000007c84c:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007c84e:
	mov -448(%RBP),%RSP
	add $-744, %RSP
	jmp uuid_000000000007c851
uuid_000000000007c84f:
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007c851:
	mov -168(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007c854
uuid_000000000007c852:
uuid_000000000007c854:
	mov -96(%RBP),%RSP
	add $-160, %RSP
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c855
	jmp uuid_000000000007c857
uuid_000000000007c855:
	movq $1, -64(%rbp)
uuid_000000000007c857:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
has_SB_forward_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c867
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c860
	jmp uuid_000000000007c862
uuid_000000000007c860:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c85d
	jmp uuid_000000000007c85f
uuid_000000000007c85d:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007c85a
	jmp uuid_000000000007c85c
uuid_000000000007c85a:
	movb $1, -200(%rbp)
uuid_000000000007c85c:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c85f:
	mov -216(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c862:
	mov -208(%RBP),%RSP
	add $-288, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c864
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c863
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c866
uuid_000000000007c864:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -56(%rbp)
uuid_000000000007c866:
	mov -152(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007c869
uuid_000000000007c867:
uuid_000000000007c869:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
has_SB_forward_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c870
	jmp uuid_000000000007c872
uuid_000000000007c870:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c86d
	jmp uuid_000000000007c86f
uuid_000000000007c86d:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c86a
	jmp uuid_000000000007c86c
uuid_000000000007c86a:
	movb $1, -104(%rbp)
uuid_000000000007c86c:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c86f:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c872:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c8c4
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c879
	jmp uuid_000000000007c87b
uuid_000000000007c879:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c876
	jmp uuid_000000000007c878
uuid_000000000007c876:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c873
	jmp uuid_000000000007c875
uuid_000000000007c873:
	movb $1, -216(%rbp)
uuid_000000000007c875:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c878:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c87b:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c8c1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c894
	jmp uuid_000000000007c896
uuid_000000000007c894:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c88b
	jmp uuid_000000000007c88d
uuid_000000000007c88b:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c882
	jmp uuid_000000000007c884
uuid_000000000007c882:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c87f
	jmp uuid_000000000007c881
uuid_000000000007c87f:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007c87c
	jmp uuid_000000000007c87e
uuid_000000000007c87c:
	movb $1, -456(%rbp)
uuid_000000000007c87e:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007c881:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007c884:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c888
	jmp uuid_000000000007c88a
uuid_000000000007c888:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	jmp uuid_000000000007c885
	jmp uuid_000000000007c887
uuid_000000000007c885:
	movb $1, -392(%rbp)
uuid_000000000007c887:
	mov -552(%RBP),%RSP
	add $-576, %RSP
uuid_000000000007c88a:
	mov -408(%RBP),%RSP
	add $-576, %RSP
uuid_000000000007c88d:
	mov -400(%RBP),%RSP
	add $-576, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c891
	jmp uuid_000000000007c893
uuid_000000000007c891:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007bfaf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c88e
	jmp uuid_000000000007c890
uuid_000000000007c88e:
	movb $1, -328(%rbp)
uuid_000000000007c890:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c893:
	mov -344(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c896:
	mov -336(%RBP),%RSP
	add $-592, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c8be
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c89d
	jmp uuid_000000000007c89f
uuid_000000000007c89d:
	push %RBP
	mov -616(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c89a
	jmp uuid_000000000007c89c
uuid_000000000007c89a:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c897
	jmp uuid_000000000007c899
uuid_000000000007c897:
	movb $1, -632(%rbp)
uuid_000000000007c899:
	mov -696(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007c89c:
	mov -648(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007c89f:
	mov -640(%RBP),%RSP
	add $-704, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c8bb
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8b1
	jmp uuid_000000000007c8b3
uuid_000000000007c8b1:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8ae
	jmp uuid_000000000007c8b0
uuid_000000000007c8ae:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8ab
	jmp uuid_000000000007c8ad
uuid_000000000007c8ab:
	movb $1, -744(%rbp)
uuid_000000000007c8ad:
	mov -792(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007c8b0:
	mov -760(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007c8b3:
	mov -752(%RBP),%RSP
	add $-816, %RSP
	mov -744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c8b8
	push %RBP
	jmp uuid_000000000007c8b5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c8b4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c8b7
uuid_000000000007c8b5:
uuid_000000000007c8b7:
	mov -824(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007c8ba
uuid_000000000007c8b8:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c8ba:
	mov -712(%RBP),%RSP
	add $-816, %RSP
	jmp uuid_000000000007c8bd
uuid_000000000007c8bb:
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -704(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8a8
	jmp uuid_000000000007c8aa
uuid_000000000007c8a8:
	movq $1, -40(%rbp)
uuid_000000000007c8aa:
	mov -712(%RBP),%RSP
	add $-712, %RSP
uuid_000000000007c8bd:
	mov -600(%RBP),%RSP
	add $-712, %RSP
	jmp uuid_000000000007c8c0
uuid_000000000007c8be:
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c8c0:
	mov -296(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007c8c3
uuid_000000000007c8c1:
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007c8c3:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007c8c6
uuid_000000000007c8c4:
uuid_000000000007c8c6:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg8_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007c8c7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c908
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007c8c8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c905
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007c8c9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c902
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007c8ca
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8ff
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007c8cb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8fc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007c8cc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8f9
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007c8cd
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8f6
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007c8ce
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8f3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007c8cf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8f0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007c8d0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8ed
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007c8d1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8ea
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007c8d2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8e7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007c8d3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8e4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007c8d4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8e1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007c8d5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8de
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007c8d6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8db
	push %RBP
	jmp uuid_000000000007c8d8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c8d7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c8da
uuid_000000000007c8d8:
uuid_000000000007c8da:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007c8dd
uuid_000000000007c8db:
	movq $1, -24(%rbp)
uuid_000000000007c8dd:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007c8e0
uuid_000000000007c8de:
	movq $1, -24(%rbp)
uuid_000000000007c8e0:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007c8e3
uuid_000000000007c8e1:
	movq $1, -24(%rbp)
uuid_000000000007c8e3:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007c8e6
uuid_000000000007c8e4:
	movq $1, -24(%rbp)
uuid_000000000007c8e6:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007c8e9
uuid_000000000007c8e7:
	movq $1, -24(%rbp)
uuid_000000000007c8e9:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007c8ec
uuid_000000000007c8ea:
	movq $1, -24(%rbp)
uuid_000000000007c8ec:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007c8ef
uuid_000000000007c8ed:
	movq $1, -24(%rbp)
uuid_000000000007c8ef:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007c8f2
uuid_000000000007c8f0:
	movq $1, -24(%rbp)
uuid_000000000007c8f2:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007c8f5
uuid_000000000007c8f3:
	movq $1, -24(%rbp)
uuid_000000000007c8f5:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007c8f8
uuid_000000000007c8f6:
	movq $1, -24(%rbp)
uuid_000000000007c8f8:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c8fb
uuid_000000000007c8f9:
	movq $1, -24(%rbp)
uuid_000000000007c8fb:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007c8fe
uuid_000000000007c8fc:
	movq $1, -24(%rbp)
uuid_000000000007c8fe:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007c901
uuid_000000000007c8ff:
	movq $1, -24(%rbp)
uuid_000000000007c901:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007c904
uuid_000000000007c902:
	movq $1, -24(%rbp)
uuid_000000000007c904:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007c907
uuid_000000000007c905:
	movq $1, -24(%rbp)
uuid_000000000007c907:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007c90a
uuid_000000000007c908:
	movq $1, -24(%rbp)
uuid_000000000007c90a:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg8_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c911
	jmp uuid_000000000007c913
uuid_000000000007c911:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c90e
	jmp uuid_000000000007c910
uuid_000000000007c90e:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c90b
	jmp uuid_000000000007c90d
uuid_000000000007c90b:
	movb $1, -104(%rbp)
uuid_000000000007c90d:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c910:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c913:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c924
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c91a
	jmp uuid_000000000007c91c
uuid_000000000007c91a:
	push %RBP
	jmp uuid_000000000007c917
	jmp uuid_000000000007c919
uuid_000000000007c917:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bb3c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c914
	jmp uuid_000000000007c916
uuid_000000000007c914:
	movb $1, -216(%rbp)
uuid_000000000007c916:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007c919:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007c91c:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c921
	push %RBP
	jmp uuid_000000000007c91e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c91d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c920
uuid_000000000007c91e:
uuid_000000000007c920:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007c923
uuid_000000000007c921:
	movq $1, -40(%rbp)
uuid_000000000007c923:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007c926
uuid_000000000007c924:
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c926:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg16_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007c927
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c968
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007c928
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c965
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007c929
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c962
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007c92a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c95f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007c92b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c95c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007c92c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c959
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007c92d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c956
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007c92e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c953
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007c92f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c950
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007c930
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c94d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007c931
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c94a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007c932
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c947
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007c933
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c944
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007c934
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c941
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007c935
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c93e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007c936
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c93b
	push %RBP
	jmp uuid_000000000007c938
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c937
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c93a
uuid_000000000007c938:
uuid_000000000007c93a:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007c93d
uuid_000000000007c93b:
	movq $1, -24(%rbp)
uuid_000000000007c93d:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007c940
uuid_000000000007c93e:
	movq $1, -24(%rbp)
uuid_000000000007c940:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007c943
uuid_000000000007c941:
	movq $1, -24(%rbp)
uuid_000000000007c943:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007c946
uuid_000000000007c944:
	movq $1, -24(%rbp)
uuid_000000000007c946:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007c949
uuid_000000000007c947:
	movq $1, -24(%rbp)
uuid_000000000007c949:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007c94c
uuid_000000000007c94a:
	movq $1, -24(%rbp)
uuid_000000000007c94c:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007c94f
uuid_000000000007c94d:
	movq $1, -24(%rbp)
uuid_000000000007c94f:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007c952
uuid_000000000007c950:
	movq $1, -24(%rbp)
uuid_000000000007c952:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007c955
uuid_000000000007c953:
	movq $1, -24(%rbp)
uuid_000000000007c955:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007c958
uuid_000000000007c956:
	movq $1, -24(%rbp)
uuid_000000000007c958:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c95b
uuid_000000000007c959:
	movq $1, -24(%rbp)
uuid_000000000007c95b:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007c95e
uuid_000000000007c95c:
	movq $1, -24(%rbp)
uuid_000000000007c95e:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007c961
uuid_000000000007c95f:
	movq $1, -24(%rbp)
uuid_000000000007c961:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007c964
uuid_000000000007c962:
	movq $1, -24(%rbp)
uuid_000000000007c964:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007c967
uuid_000000000007c965:
	movq $1, -24(%rbp)
uuid_000000000007c967:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007c96a
uuid_000000000007c968:
	movq $1, -24(%rbp)
uuid_000000000007c96a:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg16_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c971
	jmp uuid_000000000007c973
uuid_000000000007c971:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c96e
	jmp uuid_000000000007c970
uuid_000000000007c96e:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c96b
	jmp uuid_000000000007c96d
uuid_000000000007c96b:
	movb $1, -104(%rbp)
uuid_000000000007c96d:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c970:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c973:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c984
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c97a
	jmp uuid_000000000007c97c
uuid_000000000007c97a:
	push %RBP
	jmp uuid_000000000007c977
	jmp uuid_000000000007c979
uuid_000000000007c977:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bb40
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c974
	jmp uuid_000000000007c976
uuid_000000000007c974:
	movb $1, -216(%rbp)
uuid_000000000007c976:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007c979:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007c97c:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c981
	push %RBP
	jmp uuid_000000000007c97e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c97d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c980
uuid_000000000007c97e:
uuid_000000000007c980:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007c983
uuid_000000000007c981:
	movq $1, -40(%rbp)
uuid_000000000007c983:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007c986
uuid_000000000007c984:
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c986:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg32_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007c987
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9c8
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007c988
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9c5
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007c989
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9c2
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007c98a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9bf
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007c98b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9bc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007c98c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9b9
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007c98d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9b6
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007c98e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9b3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007c98f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9b0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007c990
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9ad
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007c991
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9aa
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007c992
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9a7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007c993
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9a4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007c994
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9a1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007c995
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c99e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007c996
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c99b
	push %RBP
	jmp uuid_000000000007c998
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c997
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c99a
uuid_000000000007c998:
uuid_000000000007c99a:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007c99d
uuid_000000000007c99b:
	movq $1, -24(%rbp)
uuid_000000000007c99d:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007c9a0
uuid_000000000007c99e:
	movq $1, -24(%rbp)
uuid_000000000007c9a0:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007c9a3
uuid_000000000007c9a1:
	movq $1, -24(%rbp)
uuid_000000000007c9a3:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007c9a6
uuid_000000000007c9a4:
	movq $1, -24(%rbp)
uuid_000000000007c9a6:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007c9a9
uuid_000000000007c9a7:
	movq $1, -24(%rbp)
uuid_000000000007c9a9:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007c9ac
uuid_000000000007c9aa:
	movq $1, -24(%rbp)
uuid_000000000007c9ac:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007c9af
uuid_000000000007c9ad:
	movq $1, -24(%rbp)
uuid_000000000007c9af:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007c9b2
uuid_000000000007c9b0:
	movq $1, -24(%rbp)
uuid_000000000007c9b2:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007c9b5
uuid_000000000007c9b3:
	movq $1, -24(%rbp)
uuid_000000000007c9b5:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007c9b8
uuid_000000000007c9b6:
	movq $1, -24(%rbp)
uuid_000000000007c9b8:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c9bb
uuid_000000000007c9b9:
	movq $1, -24(%rbp)
uuid_000000000007c9bb:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007c9be
uuid_000000000007c9bc:
	movq $1, -24(%rbp)
uuid_000000000007c9be:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007c9c1
uuid_000000000007c9bf:
	movq $1, -24(%rbp)
uuid_000000000007c9c1:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007c9c4
uuid_000000000007c9c2:
	movq $1, -24(%rbp)
uuid_000000000007c9c4:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007c9c7
uuid_000000000007c9c5:
	movq $1, -24(%rbp)
uuid_000000000007c9c7:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007c9ca
uuid_000000000007c9c8:
	movq $1, -24(%rbp)
uuid_000000000007c9ca:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg32_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9d1
	jmp uuid_000000000007c9d3
uuid_000000000007c9d1:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9ce
	jmp uuid_000000000007c9d0
uuid_000000000007c9ce:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9cb
	jmp uuid_000000000007c9cd
uuid_000000000007c9cb:
	movb $1, -104(%rbp)
uuid_000000000007c9cd:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c9d0:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007c9d3:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c9e4
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9da
	jmp uuid_000000000007c9dc
uuid_000000000007c9da:
	push %RBP
	jmp uuid_000000000007c9d7
	jmp uuid_000000000007c9d9
uuid_000000000007c9d7:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bb44
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9d4
	jmp uuid_000000000007c9d6
uuid_000000000007c9d4:
	movb $1, -216(%rbp)
uuid_000000000007c9d6:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007c9d9:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007c9dc:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007c9e1
	push %RBP
	jmp uuid_000000000007c9de
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c9dd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9e0
uuid_000000000007c9de:
uuid_000000000007c9e0:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007c9e3
uuid_000000000007c9e1:
	movq $1, -40(%rbp)
uuid_000000000007c9e3:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007c9e6
uuid_000000000007c9e4:
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c9e6:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg64_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007c9e7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca28
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007c9e8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca25
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007c9e9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca22
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007c9ea
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca1f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007c9eb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca1c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007c9ec
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca19
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007c9ed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca16
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007c9ee
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca13
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007c9ef
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca10
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007c9f0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca0d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007c9f1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca0a
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007c9f2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca07
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007c9f3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca04
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007c9f4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca01
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007c9f5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9fe
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007c9f6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9fb
	push %RBP
	jmp uuid_000000000007c9f8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007c9f7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9fa
uuid_000000000007c9f8:
uuid_000000000007c9fa:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007c9fd
uuid_000000000007c9fb:
	movq $1, -24(%rbp)
uuid_000000000007c9fd:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007ca00
uuid_000000000007c9fe:
	movq $1, -24(%rbp)
uuid_000000000007ca00:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007ca03
uuid_000000000007ca01:
	movq $1, -24(%rbp)
uuid_000000000007ca03:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007ca06
uuid_000000000007ca04:
	movq $1, -24(%rbp)
uuid_000000000007ca06:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007ca09
uuid_000000000007ca07:
	movq $1, -24(%rbp)
uuid_000000000007ca09:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007ca0c
uuid_000000000007ca0a:
	movq $1, -24(%rbp)
uuid_000000000007ca0c:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007ca0f
uuid_000000000007ca0d:
	movq $1, -24(%rbp)
uuid_000000000007ca0f:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007ca12
uuid_000000000007ca10:
	movq $1, -24(%rbp)
uuid_000000000007ca12:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007ca15
uuid_000000000007ca13:
	movq $1, -24(%rbp)
uuid_000000000007ca15:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007ca18
uuid_000000000007ca16:
	movq $1, -24(%rbp)
uuid_000000000007ca18:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007ca1b
uuid_000000000007ca19:
	movq $1, -24(%rbp)
uuid_000000000007ca1b:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007ca1e
uuid_000000000007ca1c:
	movq $1, -24(%rbp)
uuid_000000000007ca1e:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007ca21
uuid_000000000007ca1f:
	movq $1, -24(%rbp)
uuid_000000000007ca21:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007ca24
uuid_000000000007ca22:
	movq $1, -24(%rbp)
uuid_000000000007ca24:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007ca27
uuid_000000000007ca25:
	movq $1, -24(%rbp)
uuid_000000000007ca27:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007ca2a
uuid_000000000007ca28:
	movq $1, -24(%rbp)
uuid_000000000007ca2a:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg64_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca31
	jmp uuid_000000000007ca33
uuid_000000000007ca31:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca2e
	jmp uuid_000000000007ca30
uuid_000000000007ca2e:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca2b
	jmp uuid_000000000007ca2d
uuid_000000000007ca2b:
	movb $1, -104(%rbp)
uuid_000000000007ca2d:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ca30:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ca33:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca44
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca3a
	jmp uuid_000000000007ca3c
uuid_000000000007ca3a:
	push %RBP
	jmp uuid_000000000007ca37
	jmp uuid_000000000007ca39
uuid_000000000007ca37:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bb48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca34
	jmp uuid_000000000007ca36
uuid_000000000007ca34:
	movb $1, -216(%rbp)
uuid_000000000007ca36:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007ca39:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007ca3c:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca41
	push %RBP
	jmp uuid_000000000007ca3e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ca3d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca40
uuid_000000000007ca3e:
uuid_000000000007ca40:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007ca43
uuid_000000000007ca41:
	movq $1, -40(%rbp)
uuid_000000000007ca43:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007ca46
uuid_000000000007ca44:
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007ca46:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_tag_CL_ArrowTypeType:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca5a
	jmp uuid_000000000007ca5c
uuid_000000000007ca5a:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca4d
	jmp uuid_000000000007ca4f
uuid_000000000007ca4d:
	push %RBP
	jmp uuid_000000000007ca4a
	jmp uuid_000000000007ca4c
uuid_000000000007ca4a:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca47
	jmp uuid_000000000007ca49
uuid_000000000007ca47:
	movb $1, -128(%rbp)
uuid_000000000007ca49:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007ca4c:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007ca4f:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca57
	push %RBP
	jmp uuid_000000000007ca54
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ca53
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca56
uuid_000000000007ca54:
uuid_000000000007ca56:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007ca59
uuid_000000000007ca57:
#call function get-only-child : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call get_SB_only_SB_child_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	mov -168(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007ca50
	jmp uuid_000000000007ca52
uuid_000000000007ca50:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be70
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca52:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ca59:
	mov -96(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ca5c:
	mov -64(%RBP),%RSP
	add $-176, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_size_CL_ArrowTypeType:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca5d
	jmp uuid_000000000007ca5f
uuid_000000000007ca5d:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc59
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca5f:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca78
	jmp uuid_000000000007ca7a
uuid_000000000007ca78:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca6f
	jmp uuid_000000000007ca71
uuid_000000000007ca6f:
	push %RBP
	mov -160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca66
	jmp uuid_000000000007ca68
uuid_000000000007ca66:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca63
	jmp uuid_000000000007ca65
uuid_000000000007ca63:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	jmp uuid_000000000007ca60
	jmp uuid_000000000007ca62
uuid_000000000007ca60:
	movb $1, -240(%rbp)
uuid_000000000007ca62:
	mov -304(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007ca65:
	mov -256(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007ca68:
	mov -248(%RBP),%RSP
	add $-328, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca6c
	jmp uuid_000000000007ca6e
uuid_000000000007ca6c:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	jmp uuid_000000000007ca69
	jmp uuid_000000000007ca6b
uuid_000000000007ca69:
	movb $1, -176(%rbp)
uuid_000000000007ca6b:
	mov -336(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007ca6e:
	mov -192(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007ca71:
	mov -184(%RBP),%RSP
	add $-360, %RSP
	mov -176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca75
	jmp uuid_000000000007ca77
uuid_000000000007ca75:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca72
	jmp uuid_000000000007ca74
uuid_000000000007ca72:
	movb $1, -112(%rbp)
uuid_000000000007ca74:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007ca77:
	mov -128(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007ca7a:
	mov -120(%RBP),%RSP
	add $-376, %RSP
	mov -112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca7f
	push %RBP
	jmp uuid_000000000007ca7c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ca7b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca7e
uuid_000000000007ca7c:
uuid_000000000007ca7e:
	mov -384(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007ca81
uuid_000000000007ca7f:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca81:
	mov -80(%RBP),%RSP
	add $-376, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_size_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca91
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca8a
	jmp uuid_000000000007ca8c
uuid_000000000007ca8a:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca87
	jmp uuid_000000000007ca89
uuid_000000000007ca87:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007ca84
	jmp uuid_000000000007ca86
uuid_000000000007ca84:
	movb $1, -192(%rbp)
uuid_000000000007ca86:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ca89:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ca8c:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ca8e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ca8d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca90
uuid_000000000007ca8e:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca90:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007ca93
uuid_000000000007ca91:
uuid_000000000007ca93:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
with_SB_size_SB_recurse_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca9a
	jmp uuid_000000000007ca9c
uuid_000000000007ca9a:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca97
	jmp uuid_000000000007ca99
uuid_000000000007ca97:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca94
	jmp uuid_000000000007ca96
uuid_000000000007ca94:
	movb $1, -96(%rbp)
uuid_000000000007ca96:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007ca99:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007ca9c:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cae9
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007caa3
	jmp uuid_000000000007caa5
uuid_000000000007caa3:
	push %RBP
	jmp uuid_000000000007caa0
	jmp uuid_000000000007caa2
uuid_000000000007caa0:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007be70
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca9d
	jmp uuid_000000000007ca9f
uuid_000000000007ca9d:
	movb $1, -208(%rbp)
uuid_000000000007ca9f:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007caa2:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007caa5:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cae6
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007caac
	jmp uuid_000000000007caae
uuid_000000000007caac:
	push %RBP
	jmp uuid_000000000007caa9
	jmp uuid_000000000007caab
uuid_000000000007caa9:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007bc59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007caa6
	jmp uuid_000000000007caa8
uuid_000000000007caa6:
	movb $1, -280(%rbp)
uuid_000000000007caa8:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007caab:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007caae:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cae3
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cab5
	jmp uuid_000000000007cab7
uuid_000000000007cab5:
	push %RBP
	jmp uuid_000000000007cab2
	jmp uuid_000000000007cab4
uuid_000000000007cab2:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007bc58
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007caaf
	jmp uuid_000000000007cab1
uuid_000000000007caaf:
	movb $1, -352(%rbp)
uuid_000000000007cab1:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cab4:
	mov -368(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cab7:
	mov -360(%RBP),%RSP
	add $-384, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cae0
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cabe
	jmp uuid_000000000007cac0
uuid_000000000007cabe:
	push %RBP
	jmp uuid_000000000007cabb
	jmp uuid_000000000007cabd
uuid_000000000007cabb:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $uuid_000000000007be9b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cab8
	jmp uuid_000000000007caba
uuid_000000000007cab8:
	movb $1, -424(%rbp)
uuid_000000000007caba:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007cabd:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007cac0:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cadd
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cac7
	jmp uuid_000000000007cac9
uuid_000000000007cac7:
	push %RBP
	jmp uuid_000000000007cac4
	jmp uuid_000000000007cac6
uuid_000000000007cac4:
	push %RBP
	mov -472(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $uuid_000000000007bc5a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cac1
	jmp uuid_000000000007cac3
uuid_000000000007cac1:
	movb $1, -496(%rbp)
uuid_000000000007cac3:
	mov -520(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007cac6:
	mov -512(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007cac9:
	mov -504(%RBP),%RSP
	add $-528, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cada
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cad0
	jmp uuid_000000000007cad2
uuid_000000000007cad0:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cacd
	jmp uuid_000000000007cacf
uuid_000000000007cacd:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007caca
	jmp uuid_000000000007cacc
uuid_000000000007caca:
	movb $1, -568(%rbp)
uuid_000000000007cacc:
	mov -632(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007cacf:
	mov -584(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007cad2:
	mov -576(%RBP),%RSP
	add $-640, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cad7
	push %RBP
	jmp uuid_000000000007cad4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cad3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cad6
uuid_000000000007cad4:
uuid_000000000007cad6:
	mov -648(%RBP),%RSP
	add $-648, %RSP
	jmp uuid_000000000007cad9
uuid_000000000007cad7:
	pushq -640(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cad9:
	mov -536(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007cadc
uuid_000000000007cada:
uuid_000000000007cadc:
	mov -464(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007cadf
uuid_000000000007cadd:
uuid_000000000007cadf:
	mov -392(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007cae2
uuid_000000000007cae0:
uuid_000000000007cae2:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007cae5
uuid_000000000007cae3:
uuid_000000000007cae5:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007cae8
uuid_000000000007cae6:
uuid_000000000007cae8:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007caeb
uuid_000000000007cae9:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007caeb:
	mov -64(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_fields_CL_ArrowTypeType:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007be9b
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007caf2
	jmp uuid_000000000007caf4
uuid_000000000007caf2:
	push %RBP
	jmp uuid_000000000007caef
	jmp uuid_000000000007caf1
uuid_000000000007caef:
	push %RBP
	mov -72(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007be9b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007caec
	jmp uuid_000000000007caee
uuid_000000000007caec:
	movb $1, -96(%rbp)
uuid_000000000007caee:
	mov -120(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007caf1:
	mov -112(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007caf4:
	mov -104(%RBP),%RSP
	add $-128, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cafc
	push %RBP
	jmp uuid_000000000007caf9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007caf8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cafb
uuid_000000000007caf9:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007caf5
	jmp uuid_000000000007caf7
uuid_000000000007caf5:
#call function fields-of-tag : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_tag_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007caf7:
	mov -192(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007cafb:
	mov -136(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007cafe
uuid_000000000007cafc:
uuid_000000000007cafe:
	mov -64(%RBP),%RSP
	add $-128, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_tag_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb05
	jmp uuid_000000000007cb07
uuid_000000000007cb05:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb02
	jmp uuid_000000000007cb04
uuid_000000000007cb02:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007caff
	jmp uuid_000000000007cb01
uuid_000000000007caff:
	movb $1, -96(%rbp)
uuid_000000000007cb01:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cb04:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cb07:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb61
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb33
	jmp uuid_000000000007cb35
uuid_000000000007cb33:
	push %RBP
	jmp uuid_000000000007cb30
	jmp uuid_000000000007cb32
uuid_000000000007cb30:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007bc57
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb2d
	jmp uuid_000000000007cb2f
uuid_000000000007cb2d:
	movb $1, -208(%rbp)
uuid_000000000007cb2f:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007cb32:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007cb35:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb5e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb3c
	jmp uuid_000000000007cb3e
uuid_000000000007cb3c:
	push %RBP
	jmp uuid_000000000007cb39
	jmp uuid_000000000007cb3b
uuid_000000000007cb39:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007be70
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb36
	jmp uuid_000000000007cb38
uuid_000000000007cb36:
	movb $1, -280(%rbp)
uuid_000000000007cb38:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007cb3b:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007cb3e:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb5b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb45
	jmp uuid_000000000007cb47
uuid_000000000007cb45:
	push %RBP
	jmp uuid_000000000007cb42
	jmp uuid_000000000007cb44
uuid_000000000007cb42:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007be9b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb3f
	jmp uuid_000000000007cb41
uuid_000000000007cb3f:
	movb $1, -352(%rbp)
uuid_000000000007cb41:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cb44:
	mov -368(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cb47:
	mov -360(%RBP),%RSP
	add $-384, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb58
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb4e
	jmp uuid_000000000007cb50
uuid_000000000007cb4e:
	push %RBP
	jmp uuid_000000000007cb4b
	jmp uuid_000000000007cb4d
uuid_000000000007cb4b:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $uuid_000000000007bc5a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb48
	jmp uuid_000000000007cb4a
uuid_000000000007cb48:
	movb $1, -424(%rbp)
uuid_000000000007cb4a:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007cb4d:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007cb50:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb55
	push %RBP
	jmp uuid_000000000007cb52
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cb51
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb54
uuid_000000000007cb52:
uuid_000000000007cb54:
	mov -464(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007cb57
uuid_000000000007cb55:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cb57:
	mov -392(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007cb5a
uuid_000000000007cb58:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cb5a:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007cb5d
uuid_000000000007cb5b:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cb5d:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007cb60
uuid_000000000007cb5e:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cb60:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007cb63
uuid_000000000007cb61:
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb0e
	jmp uuid_000000000007cb10
uuid_000000000007cb0e:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	jmp uuid_000000000007cb0b
	jmp uuid_000000000007cb0d
uuid_000000000007cb0b:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb08
	jmp uuid_000000000007cb0a
uuid_000000000007cb08:
	movb $1, -344(%rbp)
uuid_000000000007cb0a:
	mov -392(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007cb0d:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007cb10:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb2a
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb17
	jmp uuid_000000000007cb19
uuid_000000000007cb17:
	push %RBP
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb14
	jmp uuid_000000000007cb16
uuid_000000000007cb14:
	push %RBP
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	jmp uuid_000000000007cb11
	jmp uuid_000000000007cb13
uuid_000000000007cb11:
	movb $1, -488(%rbp)
uuid_000000000007cb13:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cb16:
	mov -504(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007cb19:
	mov -496(%RBP),%RSP
	add $-560, %RSP
	mov -488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb27
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb20
	jmp uuid_000000000007cb22
uuid_000000000007cb20:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	jmp uuid_000000000007cb1d
	jmp uuid_000000000007cb1f
uuid_000000000007cb1d:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	jmp uuid_000000000007cb1a
	jmp uuid_000000000007cb1c
uuid_000000000007cb1a:
	movb $1, -632(%rbp)
uuid_000000000007cb1c:
	mov -680(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007cb1f:
	mov -648(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007cb22:
	mov -640(%RBP),%RSP
	add $-704, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb24
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cb23
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb26
uuid_000000000007cb24:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cb26:
	mov -568(%RBP),%RSP
	add $-704, %RSP
	jmp uuid_000000000007cb29
uuid_000000000007cb27:
	movq -560(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cb29:
	mov -424(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007cb2c
uuid_000000000007cb2a:
	movq -384(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cb2c:
	mov -280(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007cb63:
	mov -64(%RBP),%RSP
	add $-416, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_tag_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb6c
	jmp uuid_000000000007cb6e
uuid_000000000007cb6c:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb69
	jmp uuid_000000000007cb6b
uuid_000000000007cb69:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007cb66
	jmp uuid_000000000007cb68
uuid_000000000007cb66:
	movb $1, -144(%rbp)
uuid_000000000007cb68:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cb6b:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cb6e:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb73
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb70
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cb6f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb72
uuid_000000000007cb70:
uuid_000000000007cb72:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cb75
uuid_000000000007cb73:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-tag : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cb75:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_constructor_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb7c
	jmp uuid_000000000007cb7e
uuid_000000000007cb7c:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb79
	jmp uuid_000000000007cb7b
uuid_000000000007cb79:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb76
	jmp uuid_000000000007cb78
uuid_000000000007cb76:
	movb $1, -96(%rbp)
uuid_000000000007cb78:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cb7b:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cb7e:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cba1
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb8b
	jmp uuid_000000000007cb8d
uuid_000000000007cb8b:
	push %RBP
	jmp uuid_000000000007cb88
	jmp uuid_000000000007cb8a
uuid_000000000007cb88:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007bc57
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb85
	jmp uuid_000000000007cb87
uuid_000000000007cb85:
	movb $1, -208(%rbp)
uuid_000000000007cb87:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007cb8a:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007cb8d:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb9e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb94
	jmp uuid_000000000007cb96
uuid_000000000007cb94:
	push %RBP
	jmp uuid_000000000007cb91
	jmp uuid_000000000007cb93
uuid_000000000007cb91:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007bc58
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb8e
	jmp uuid_000000000007cb90
uuid_000000000007cb8e:
	movb $1, -280(%rbp)
uuid_000000000007cb90:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007cb93:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007cb96:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cb9b
	push %RBP
	jmp uuid_000000000007cb98
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cb97
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cb9a
uuid_000000000007cb98:
uuid_000000000007cb9a:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007cb9d
uuid_000000000007cb9b:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cb9d:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007cba0
uuid_000000000007cb9e:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cba0:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007cba3
uuid_000000000007cba1:
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb82
	movq -136(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -128(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -120(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007cb84
uuid_000000000007cb82:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb7f
	movq -168(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -160(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -152(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007cb81
uuid_000000000007cb7f:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cb81:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007cb84:
	mov -176(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007cba3:
	mov -64(%RBP),%RSP
	add $-184, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_representation_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbac
	jmp uuid_000000000007cbae
uuid_000000000007cbac:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cba9
	jmp uuid_000000000007cbab
uuid_000000000007cba9:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007cba6
	jmp uuid_000000000007cba8
uuid_000000000007cba6:
	movb $1, -144(%rbp)
uuid_000000000007cba8:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cbab:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cbae:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cbb3
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbb0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cbaf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cbb2
uuid_000000000007cbb0:
uuid_000000000007cbb2:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cbb5
uuid_000000000007cbb3:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cbb5:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_representation_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbbc
	jmp uuid_000000000007cbbe
uuid_000000000007cbbc:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cbb9
	jmp uuid_000000000007cbbb
uuid_000000000007cbb9:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cbb6
	jmp uuid_000000000007cbb8
uuid_000000000007cbb6:
	movb $1, -96(%rbp)
uuid_000000000007cbb8:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cbbb:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cbbe:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc4e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbce
	jmp uuid_000000000007cbd0
uuid_000000000007cbce:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbcb
	jmp uuid_000000000007cbcd
uuid_000000000007cbcb:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $uuid_000000000007c056
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbc8
	jmp uuid_000000000007cbca
uuid_000000000007cbc8:
	movb $1, -208(%rbp)
uuid_000000000007cbca:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cbcd:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cbd0:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc4b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbd8
	jmp uuid_000000000007cbda
uuid_000000000007cbd8:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbd5
	jmp uuid_000000000007cbd7
uuid_000000000007cbd5:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007cbd1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbd2
	jmp uuid_000000000007cbd4
uuid_000000000007cbd2:
	movb $1, -320(%rbp)
uuid_000000000007cbd4:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007cbd7:
	mov -336(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007cbda:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	mov -320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc48
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbe1
	jmp uuid_000000000007cbe3
uuid_000000000007cbe1:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbde
	jmp uuid_000000000007cbe0
uuid_000000000007cbde:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbdb
	jmp uuid_000000000007cbdd
uuid_000000000007cbdb:
	movb $1, -432(%rbp)
uuid_000000000007cbdd:
	mov -496(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cbe0:
	mov -448(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cbe3:
	mov -440(%RBP),%RSP
	add $-504, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc45
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbea
	jmp uuid_000000000007cbec
uuid_000000000007cbea:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbe7
	jmp uuid_000000000007cbe9
uuid_000000000007cbe7:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_000000000007c0bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbe4
	jmp uuid_000000000007cbe6
uuid_000000000007cbe4:
	movb $1, -544(%rbp)
uuid_000000000007cbe6:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007cbe9:
	mov -560(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007cbec:
	mov -552(%RBP),%RSP
	add $-616, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc42
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -648(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbf3
	jmp uuid_000000000007cbf5
uuid_000000000007cbf3:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbf0
	jmp uuid_000000000007cbf2
uuid_000000000007cbf0:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq $uuid_000000000007ba2d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbed
	jmp uuid_000000000007cbef
uuid_000000000007cbed:
	movb $1, -656(%rbp)
uuid_000000000007cbef:
	mov -720(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007cbf2:
	mov -672(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007cbf5:
	mov -664(%RBP),%RSP
	add $-728, %RSP
	mov -656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc3f
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbfc
	jmp uuid_000000000007cbfe
uuid_000000000007cbfc:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbf9
	jmp uuid_000000000007cbfb
uuid_000000000007cbf9:
	push %RBP
	mov -744(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq $uuid_000000000007bb3c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbf6
	jmp uuid_000000000007cbf8
uuid_000000000007cbf6:
	movb $1, -768(%rbp)
uuid_000000000007cbf8:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007cbfb:
	mov -784(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007cbfe:
	mov -776(%RBP),%RSP
	add $-840, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc3c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc05
	jmp uuid_000000000007cc07
uuid_000000000007cc05:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -936(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc02
	jmp uuid_000000000007cc04
uuid_000000000007cc02:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $uuid_000000000007bb40
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbff
	jmp uuid_000000000007cc01
uuid_000000000007cbff:
	movb $1, -880(%rbp)
uuid_000000000007cc01:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007cc04:
	mov -896(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007cc07:
	mov -888(%RBP),%RSP
	add $-952, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc39
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc0e
	jmp uuid_000000000007cc10
uuid_000000000007cc0e:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc0b
	jmp uuid_000000000007cc0d
uuid_000000000007cc0b:
	push %RBP
	mov -968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $uuid_000000000007bb44
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc08
	jmp uuid_000000000007cc0a
uuid_000000000007cc08:
	movb $1, -992(%rbp)
uuid_000000000007cc0a:
	mov -1056(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007cc0d:
	mov -1008(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007cc10:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
	mov -992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc36
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc17
	jmp uuid_000000000007cc19
uuid_000000000007cc17:
	push %RBP
	mov -1088(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc14
	jmp uuid_000000000007cc16
uuid_000000000007cc14:
	push %RBP
	mov -1080(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $uuid_000000000007bb48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc11
	jmp uuid_000000000007cc13
uuid_000000000007cc11:
	movb $1, -1104(%rbp)
uuid_000000000007cc13:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007cc16:
	mov -1120(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007cc19:
	mov -1112(%RBP),%RSP
	add $-1176, %RSP
	mov -1104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc33
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc20
	jmp uuid_000000000007cc22
uuid_000000000007cc20:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc1d
	jmp uuid_000000000007cc1f
uuid_000000000007cc1d:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cc1a
	jmp uuid_000000000007cc1c
uuid_000000000007cc1a:
	movb $1, -1216(%rbp)
uuid_000000000007cc1c:
	mov -1280(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007cc1f:
	mov -1232(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007cc22:
	mov -1224(%RBP),%RSP
	add $-1288, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc30
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc2d
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc26
	jmp uuid_000000000007cc28
uuid_000000000007cc26:
	push %RBP
	jmp uuid_000000000007cc23
	jmp uuid_000000000007cc25
uuid_000000000007cc23:
	movb $1, -1360(%rbp)
uuid_000000000007cc25:
	mov -1376(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007cc28:
	mov -1368(%RBP),%RSP
	add $-1376, %RSP
	mov -1360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc2a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cc29
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc2c
uuid_000000000007cc2a:
uuid_000000000007cc2c:
	mov -1328(%RBP),%RSP
	add $-1376, %RSP
	jmp uuid_000000000007cc2f
uuid_000000000007cc2d:
uuid_000000000007cc2f:
	mov -1296(%RBP),%RSP
	add $-1320, %RSP
	jmp uuid_000000000007cc32
uuid_000000000007cc30:
	pushq -1288(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc32:
	mov -1184(%RBP),%RSP
	add $-1288, %RSP
	jmp uuid_000000000007cc35
uuid_000000000007cc33:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc35:
	mov -1072(%RBP),%RSP
	add $-1176, %RSP
	jmp uuid_000000000007cc38
uuid_000000000007cc36:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc38:
	mov -960(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007cc3b
uuid_000000000007cc39:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc3b:
	mov -848(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007cc3e
uuid_000000000007cc3c:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc3e:
	mov -736(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007cc41
uuid_000000000007cc3f:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc41:
	mov -624(%RBP),%RSP
	add $-728, %RSP
	jmp uuid_000000000007cc44
uuid_000000000007cc42:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc44:
	mov -512(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_000000000007cc47
uuid_000000000007cc45:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc47:
	mov -400(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007cc4a
uuid_000000000007cc48:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc4a:
	mov -288(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007cc4d
uuid_000000000007cc4b:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc4d:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cc50
uuid_000000000007cc4e:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbc5
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbc2
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007cbc4
uuid_000000000007cbc2:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cbc4:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007cbc7
uuid_000000000007cbc5:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbbf
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007cbc1
uuid_000000000007cbbf:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cbc1:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cbc7:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cc50:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc59
	jmp uuid_000000000007cc5b
uuid_000000000007cc59:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc56
	jmp uuid_000000000007cc58
uuid_000000000007cc56:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007cc53
	jmp uuid_000000000007cc55
uuid_000000000007cc53:
	movb $1, -144(%rbp)
uuid_000000000007cc55:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cc58:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cc5b:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc60
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc5d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cc5c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc5f
uuid_000000000007cc5d:
uuid_000000000007cc5f:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cc62
uuid_000000000007cc60:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc62:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_size_SB_unless_SB_class_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc69
	jmp uuid_000000000007cc6b
uuid_000000000007cc69:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc66
	jmp uuid_000000000007cc68
uuid_000000000007cc66:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc63
	jmp uuid_000000000007cc65
uuid_000000000007cc63:
	movb $1, -96(%rbp)
uuid_000000000007cc65:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cc68:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cc6b:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc8e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc7b
	jmp uuid_000000000007cc7d
uuid_000000000007cc7b:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc78
	jmp uuid_000000000007cc7a
uuid_000000000007cc78:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cc75
	jmp uuid_000000000007cc77
uuid_000000000007cc75:
	movb $1, -208(%rbp)
uuid_000000000007cc77:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cc7a:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cc7d:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc8b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc88
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc81
	jmp uuid_000000000007cc83
uuid_000000000007cc81:
	push %RBP
	jmp uuid_000000000007cc7e
	jmp uuid_000000000007cc80
uuid_000000000007cc7e:
	movb $1, -352(%rbp)
uuid_000000000007cc80:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cc83:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cc85
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cc84
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc87
uuid_000000000007cc85:
uuid_000000000007cc87:
	mov -320(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007cc8a
uuid_000000000007cc88:
uuid_000000000007cc8a:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007cc8d
uuid_000000000007cc8b:
	pushq -280(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc8d:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cc90
uuid_000000000007cc8e:
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc72
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc6f
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007cc71
uuid_000000000007cc6f:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cc71:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007cc74
uuid_000000000007cc72:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc6c
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007cc6e
uuid_000000000007cc6c:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc6e:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cc74:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cc90:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc97
	jmp uuid_000000000007cc99
uuid_000000000007cc97:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc94
	jmp uuid_000000000007cc96
uuid_000000000007cc94:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc91
	jmp uuid_000000000007cc93
uuid_000000000007cc91:
	movb $1, -96(%rbp)
uuid_000000000007cc93:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cc96:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007cc99:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ccd4
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cca9
	jmp uuid_000000000007ccab
uuid_000000000007cca9:
	push %RBP
	jmp uuid_000000000007cca6
	jmp uuid_000000000007cca8
uuid_000000000007cca6:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007bc5a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cca3
	jmp uuid_000000000007cca5
uuid_000000000007cca3:
	movb $1, -208(%rbp)
uuid_000000000007cca5:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007cca8:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007ccab:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ccd1
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccb2
	jmp uuid_000000000007ccb4
uuid_000000000007ccb2:
	push %RBP
	jmp uuid_000000000007ccaf
	jmp uuid_000000000007ccb1
uuid_000000000007ccaf:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_000000000007bc59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ccac
	jmp uuid_000000000007ccae
uuid_000000000007ccac:
	movb $1, -280(%rbp)
uuid_000000000007ccae:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007ccb1:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007ccb4:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ccce
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccbb
	jmp uuid_000000000007ccbd
uuid_000000000007ccbb:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccb8
	jmp uuid_000000000007ccba
uuid_000000000007ccb8:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ccb5
	jmp uuid_000000000007ccb7
uuid_000000000007ccb5:
	movb $1, -352(%rbp)
uuid_000000000007ccb7:
	mov -416(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007ccba:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007ccbd:
	mov -360(%RBP),%RSP
	add $-424, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cccb
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccc8
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccc1
	jmp uuid_000000000007ccc3
uuid_000000000007ccc1:
	push %RBP
	jmp uuid_000000000007ccbe
	jmp uuid_000000000007ccc0
uuid_000000000007ccbe:
	movb $1, -496(%rbp)
uuid_000000000007ccc0:
	mov -512(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007ccc3:
	mov -504(%RBP),%RSP
	add $-512, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ccc5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ccc4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ccc7
uuid_000000000007ccc5:
uuid_000000000007ccc7:
	mov -464(%RBP),%RSP
	add $-512, %RSP
	jmp uuid_000000000007ccca
uuid_000000000007ccc8:
uuid_000000000007ccca:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007cccd
uuid_000000000007cccb:
	pushq -424(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cccd:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007ccd0
uuid_000000000007ccce:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ccd0:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007ccd3
uuid_000000000007ccd1:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ccd3:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007ccd6
uuid_000000000007ccd4:
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cca0
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc9d
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007cc9f
uuid_000000000007cc9d:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cc9f:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007cca2
uuid_000000000007cca0:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc9a
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007cc9c
uuid_000000000007cc9a:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cc9c:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cca2:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007ccd6:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccdf
	jmp uuid_000000000007cce1
uuid_000000000007ccdf:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccdc
	jmp uuid_000000000007ccde
uuid_000000000007ccdc:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007ccd9
	jmp uuid_000000000007ccdb
uuid_000000000007ccd9:
	movb $1, -144(%rbp)
uuid_000000000007ccdb:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007ccde:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cce1:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cce6
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cce3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cce2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cce5
uuid_000000000007cce3:
uuid_000000000007cce5:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cce8
uuid_000000000007cce6:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cce8:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_size_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccef
	jmp uuid_000000000007ccf1
uuid_000000000007ccef:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccec
	jmp uuid_000000000007ccee
uuid_000000000007ccec:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cce9
	jmp uuid_000000000007cceb
uuid_000000000007cce9:
	movb $1, -96(%rbp)
uuid_000000000007cceb:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007ccee:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007ccf1:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd2c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd01
	jmp uuid_000000000007cd03
uuid_000000000007cd01:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccfe
	jmp uuid_000000000007cd00
uuid_000000000007ccfe:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $uuid_000000000007bc59
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ccfb
	jmp uuid_000000000007ccfd
uuid_000000000007ccfb:
	movb $1, -208(%rbp)
uuid_000000000007ccfd:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cd00:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cd03:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd29
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd0a
	jmp uuid_000000000007cd0c
uuid_000000000007cd0a:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd07
	jmp uuid_000000000007cd09
uuid_000000000007cd07:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007bc5a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd04
	jmp uuid_000000000007cd06
uuid_000000000007cd04:
	movb $1, -320(%rbp)
uuid_000000000007cd06:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007cd09:
	mov -336(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007cd0c:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	mov -320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd26
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd13
	jmp uuid_000000000007cd15
uuid_000000000007cd13:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd10
	jmp uuid_000000000007cd12
uuid_000000000007cd10:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd0d
	jmp uuid_000000000007cd0f
uuid_000000000007cd0d:
	movb $1, -432(%rbp)
uuid_000000000007cd0f:
	mov -496(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cd12:
	mov -448(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cd15:
	mov -440(%RBP),%RSP
	add $-504, %RSP
	mov -432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd23
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd20
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd19
	jmp uuid_000000000007cd1b
uuid_000000000007cd19:
	push %RBP
	jmp uuid_000000000007cd16
	jmp uuid_000000000007cd18
uuid_000000000007cd16:
	movb $1, -576(%rbp)
uuid_000000000007cd18:
	mov -592(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007cd1b:
	mov -584(%RBP),%RSP
	add $-592, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd1d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cd1c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd1f
uuid_000000000007cd1d:
uuid_000000000007cd1f:
	mov -544(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007cd22
uuid_000000000007cd20:
uuid_000000000007cd22:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_000000000007cd25
uuid_000000000007cd23:
	pushq -504(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cd25:
	mov -400(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007cd28
uuid_000000000007cd26:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cd28:
	mov -288(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007cd2b
uuid_000000000007cd29:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cd2b:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cd2e
uuid_000000000007cd2c:
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ccf8
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ccf5
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007ccf7
uuid_000000000007ccf5:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007ccf7:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007ccfa
uuid_000000000007ccf8:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ccf2
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007ccf4
uuid_000000000007ccf2:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ccf4:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007ccfa:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007cd2e:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_tag_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd35
	jmp uuid_000000000007cd37
uuid_000000000007cd35:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd32
	jmp uuid_000000000007cd34
uuid_000000000007cd32:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd2f
	jmp uuid_000000000007cd31
uuid_000000000007cd2f:
	movb $1, -120(%rbp)
uuid_000000000007cd31:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007cd34:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007cd37:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd4e
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd44
	jmp uuid_000000000007cd46
uuid_000000000007cd44:
	push %RBP
	jmp uuid_000000000007cd41
	jmp uuid_000000000007cd43
uuid_000000000007cd41:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $uuid_000000000007be70
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd3e
	jmp uuid_000000000007cd40
uuid_000000000007cd3e:
	movb $1, -232(%rbp)
uuid_000000000007cd40:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007cd43:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007cd46:
	mov -240(%RBP),%RSP
	add $-264, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd4b
	push %RBP
	jmp uuid_000000000007cd48
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cd47
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd4a
uuid_000000000007cd48:
uuid_000000000007cd4a:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007cd4d
uuid_000000000007cd4b:
	movq -24(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cd4d:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007cd50
uuid_000000000007cd4e:
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd3b
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd38
	jmp uuid_000000000007cd3a
uuid_000000000007cd38:
	movq -248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cd3a:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cd3d
uuid_000000000007cd3b:
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cd3d:
	mov -224(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007cd50:
	mov -88(%RBP),%RSP
	add $-224, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_class_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd57
	jmp uuid_000000000007cd59
uuid_000000000007cd57:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd54
	jmp uuid_000000000007cd56
uuid_000000000007cd54:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd51
	jmp uuid_000000000007cd53
uuid_000000000007cd51:
	movb $1, -120(%rbp)
uuid_000000000007cd53:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007cd56:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007cd59:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd76
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd66
	jmp uuid_000000000007cd68
uuid_000000000007cd66:
	push %RBP
	jmp uuid_000000000007cd63
	jmp uuid_000000000007cd65
uuid_000000000007cd63:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd60
	jmp uuid_000000000007cd62
uuid_000000000007cd60:
	movb $1, -232(%rbp)
uuid_000000000007cd62:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007cd65:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007cd68:
	mov -240(%RBP),%RSP
	add $-264, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd73
	push %RBP
	jmp uuid_000000000007cd70
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cd6f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd72
uuid_000000000007cd70:
uuid_000000000007cd72:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007cd75
uuid_000000000007cd73:
	push %RBP
#call function is-class : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_class_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd6c
	jmp uuid_000000000007cd6e
uuid_000000000007cd6c:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-fragment : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_fragment_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd69
	jmp uuid_000000000007cd6b
uuid_000000000007cd69:
	movq -24(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cd6b:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cd6e:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007cd75:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007cd78
uuid_000000000007cd76:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd5a
	jmp uuid_000000000007cd5c
uuid_000000000007cd5a:
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cd5c:
	mov -224(%RBP),%RSP
	add $-224, %RSP
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd5d
	jmp uuid_000000000007cd5f
uuid_000000000007cd5d:
	movq -248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cd5f:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007cd78:
	mov -88(%RBP),%RSP
	add $-256, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_representation_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd81
	jmp uuid_000000000007cd83
uuid_000000000007cd81:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd7e
	jmp uuid_000000000007cd80
uuid_000000000007cd7e:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007cd7b
	jmp uuid_000000000007cd7d
uuid_000000000007cd7b:
	movb $1, -184(%rbp)
uuid_000000000007cd7d:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007cd80:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007cd83:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cd88
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd85
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cd84
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd87
uuid_000000000007cd85:
uuid_000000000007cd87:
	mov -280(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007cd8a
uuid_000000000007cd88:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007cd8a:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
with_SB_only_SB_representation_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd91
	jmp uuid_000000000007cd93
uuid_000000000007cd91:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd8e
	jmp uuid_000000000007cd90
uuid_000000000007cd8e:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd8b
	jmp uuid_000000000007cd8d
uuid_000000000007cd8b:
	movb $1, -120(%rbp)
uuid_000000000007cd8d:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007cd90:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007cd93:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce22
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cda3
	jmp uuid_000000000007cda5
uuid_000000000007cda3:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cda0
	jmp uuid_000000000007cda2
uuid_000000000007cda0:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $uuid_000000000007c056
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd9d
	jmp uuid_000000000007cd9f
uuid_000000000007cd9d:
	movb $1, -232(%rbp)
uuid_000000000007cd9f:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007cda2:
	mov -248(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007cda5:
	mov -240(%RBP),%RSP
	add $-304, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce1f
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdac
	jmp uuid_000000000007cdae
uuid_000000000007cdac:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cda9
	jmp uuid_000000000007cdab
uuid_000000000007cda9:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $uuid_000000000007cbd1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cda6
	jmp uuid_000000000007cda8
uuid_000000000007cda6:
	movb $1, -344(%rbp)
uuid_000000000007cda8:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007cdab:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007cdae:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce1c
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdb5
	jmp uuid_000000000007cdb7
uuid_000000000007cdb5:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdb2
	jmp uuid_000000000007cdb4
uuid_000000000007cdb2:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cdaf
	jmp uuid_000000000007cdb1
uuid_000000000007cdaf:
	movb $1, -456(%rbp)
uuid_000000000007cdb1:
	mov -520(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007cdb4:
	mov -472(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007cdb7:
	mov -464(%RBP),%RSP
	add $-528, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce19
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdbe
	jmp uuid_000000000007cdc0
uuid_000000000007cdbe:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdbb
	jmp uuid_000000000007cdbd
uuid_000000000007cdbb:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $uuid_000000000007c0bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cdb8
	jmp uuid_000000000007cdba
uuid_000000000007cdb8:
	movb $1, -568(%rbp)
uuid_000000000007cdba:
	mov -632(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007cdbd:
	mov -584(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007cdc0:
	mov -576(%RBP),%RSP
	add $-640, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce16
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdc7
	jmp uuid_000000000007cdc9
uuid_000000000007cdc7:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdc4
	jmp uuid_000000000007cdc6
uuid_000000000007cdc4:
	push %RBP
	mov -656(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq $uuid_000000000007ba2d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cdc1
	jmp uuid_000000000007cdc3
uuid_000000000007cdc1:
	movb $1, -680(%rbp)
uuid_000000000007cdc3:
	mov -744(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007cdc6:
	mov -696(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007cdc9:
	mov -688(%RBP),%RSP
	add $-752, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce13
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -784(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdd0
	jmp uuid_000000000007cdd2
uuid_000000000007cdd0:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdcd
	jmp uuid_000000000007cdcf
uuid_000000000007cdcd:
	push %RBP
	mov -768(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq $uuid_000000000007bb3c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cdca
	jmp uuid_000000000007cdcc
uuid_000000000007cdca:
	movb $1, -792(%rbp)
uuid_000000000007cdcc:
	mov -856(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007cdcf:
	mov -808(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007cdd2:
	mov -800(%RBP),%RSP
	add $-864, %RSP
	mov -792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce10
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdd9
	jmp uuid_000000000007cddb
uuid_000000000007cdd9:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdd6
	jmp uuid_000000000007cdd8
uuid_000000000007cdd6:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $uuid_000000000007bb40
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cdd3
	jmp uuid_000000000007cdd5
uuid_000000000007cdd3:
	movb $1, -904(%rbp)
uuid_000000000007cdd5:
	mov -968(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007cdd8:
	mov -920(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007cddb:
	mov -912(%RBP),%RSP
	add $-976, %RSP
	mov -904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce0d
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cde2
	jmp uuid_000000000007cde4
uuid_000000000007cde2:
	push %RBP
	mov -1000(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cddf
	jmp uuid_000000000007cde1
uuid_000000000007cddf:
	push %RBP
	mov -992(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1088(%rbp)
	pushq $uuid_000000000007bb44
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cddc
	jmp uuid_000000000007cdde
uuid_000000000007cddc:
	movb $1, -1016(%rbp)
uuid_000000000007cdde:
	mov -1080(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007cde1:
	mov -1032(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007cde4:
	mov -1024(%RBP),%RSP
	add $-1088, %RSP
	mov -1016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce0a
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdeb
	jmp uuid_000000000007cded
uuid_000000000007cdeb:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cde8
	jmp uuid_000000000007cdea
uuid_000000000007cde8:
	push %RBP
	mov -1104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq $uuid_000000000007bb48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cde5
	jmp uuid_000000000007cde7
uuid_000000000007cde5:
	movb $1, -1128(%rbp)
uuid_000000000007cde7:
	mov -1192(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007cdea:
	mov -1144(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007cded:
	mov -1136(%RBP),%RSP
	add $-1200, %RSP
	mov -1128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce07
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdf4
	jmp uuid_000000000007cdf6
uuid_000000000007cdf4:
	push %RBP
	mov -1224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cdf1
	jmp uuid_000000000007cdf3
uuid_000000000007cdf1:
	push %RBP
	mov -1216(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cdee
	jmp uuid_000000000007cdf0
uuid_000000000007cdee:
	movb $1, -1240(%rbp)
uuid_000000000007cdf0:
	mov -1304(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007cdf3:
	mov -1256(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007cdf6:
	mov -1248(%RBP),%RSP
	add $-1312, %RSP
	mov -1240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce04
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -1344(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce01
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdfa
	jmp uuid_000000000007cdfc
uuid_000000000007cdfa:
	push %RBP
	jmp uuid_000000000007cdf7
	jmp uuid_000000000007cdf9
uuid_000000000007cdf7:
	movb $1, -1384(%rbp)
uuid_000000000007cdf9:
	mov -1400(%RBP),%RSP
	add $-1400, %RSP
uuid_000000000007cdfc:
	mov -1392(%RBP),%RSP
	add $-1400, %RSP
	mov -1384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cdfe
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cdfd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ce00
uuid_000000000007cdfe:
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007ce00:
	mov -1352(%RBP),%RSP
	add $-1400, %RSP
	jmp uuid_000000000007ce03
uuid_000000000007ce01:
uuid_000000000007ce03:
	mov -1320(%RBP),%RSP
	add $-1344, %RSP
	jmp uuid_000000000007ce06
uuid_000000000007ce04:
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007ce06:
	mov -1208(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_000000000007ce09
uuid_000000000007ce07:
uuid_000000000007ce09:
	mov -1096(%RBP),%RSP
	add $-1200, %RSP
	jmp uuid_000000000007ce0c
uuid_000000000007ce0a:
uuid_000000000007ce0c:
	mov -984(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_000000000007ce0f
uuid_000000000007ce0d:
uuid_000000000007ce0f:
	mov -872(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007ce12
uuid_000000000007ce10:
uuid_000000000007ce12:
	mov -760(%RBP),%RSP
	add $-864, %RSP
	jmp uuid_000000000007ce15
uuid_000000000007ce13:
uuid_000000000007ce15:
	mov -648(%RBP),%RSP
	add $-752, %RSP
	jmp uuid_000000000007ce18
uuid_000000000007ce16:
uuid_000000000007ce18:
	mov -536(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007ce1b
uuid_000000000007ce19:
uuid_000000000007ce1b:
	mov -424(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007ce1e
uuid_000000000007ce1c:
uuid_000000000007ce1e:
	mov -312(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007ce21
uuid_000000000007ce1f:
uuid_000000000007ce21:
	mov -200(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007ce24
uuid_000000000007ce22:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd9a
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd97
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	jmp uuid_000000000007cd99
uuid_000000000007cd97:
	movq -240(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cd99:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007cd9c
uuid_000000000007cd9a:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd94
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
	jmp uuid_000000000007cd96
uuid_000000000007cd94:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007cd96:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007cd9c:
	mov -248(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007ce24:
	mov -88(%RBP),%RSP
	add $-256, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
normalize_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function without-size-unless-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
normalize_CL_ArrowTContextTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce3b
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce38
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce31
	jmp uuid_000000000007ce33
uuid_000000000007ce31:
	push %RBP
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007ce2e
	jmp uuid_000000000007ce30
uuid_000000000007ce2e:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007ce2b
	jmp uuid_000000000007ce2d
uuid_000000000007ce2b:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce28
	jmp uuid_000000000007ce2a
uuid_000000000007ce28:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce25
	jmp uuid_000000000007ce27
uuid_000000000007ce25:
	movb $1, -640(%rbp)
uuid_000000000007ce27:
	mov -784(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ce2a:
	mov -768(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ce2d:
	mov -736(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ce30:
	mov -656(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ce33:
	mov -648(%RBP),%RSP
	add $-904, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce35
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ce34
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ce37
uuid_000000000007ce35:
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -776(%rbp)
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ce37:
	mov -512(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_000000000007ce3a
uuid_000000000007ce38:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ce3a:
	mov -384(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007ce3d
uuid_000000000007ce3b:
uuid_000000000007ce3d:
	mov -256(%RBP),%RSP
	add $-376, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $128, %rsp
	ret
denormalize_CL_ArrowTypeType:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function with-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function with-fields : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_fields_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
enrich_CL_ArrowTypeConsTypeType:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ce3e
	jmp uuid_000000000007ce40
uuid_000000000007ce3e:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ce40:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
type_SB_of_SB_s_CL_ArrowTypeAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce47
	jmp uuid_000000000007ce49
uuid_000000000007ce47:
	push %RBP
	jmp uuid_000000000007ce44
	jmp uuid_000000000007ce46
uuid_000000000007ce44:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce41
	jmp uuid_000000000007ce43
uuid_000000000007ce41:
	movb $1, -264(%rbp)
uuid_000000000007ce43:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007ce46:
	mov -280(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007ce49:
	mov -272(%RBP),%RSP
	add $-296, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce79
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce50
	jmp uuid_000000000007ce52
uuid_000000000007ce50:
	push %RBP
	jmp uuid_000000000007ce4d
	jmp uuid_000000000007ce4f
uuid_000000000007ce4d:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce4a
	jmp uuid_000000000007ce4c
uuid_000000000007ce4a:
	movb $1, -384(%rbp)
uuid_000000000007ce4c:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ce4f:
	mov -400(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ce52:
	mov -392(%RBP),%RSP
	add $-416, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce76
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce6b
	jmp uuid_000000000007ce6d
uuid_000000000007ce6b:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce68
	jmp uuid_000000000007ce6a
uuid_000000000007ce68:
	push %RBP
	mov -480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce62
	jmp uuid_000000000007ce64
uuid_000000000007ce62:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce59
	jmp uuid_000000000007ce5b
uuid_000000000007ce59:
	push %RBP
	jmp uuid_000000000007ce56
	jmp uuid_000000000007ce58
uuid_000000000007ce56:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $uuid_000000000007b940
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ce53
	jmp uuid_000000000007ce55
uuid_000000000007ce53:
	movb $1, -776(%rbp)
uuid_000000000007ce55:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007ce58:
	mov -792(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007ce5b:
	mov -784(%RBP),%RSP
	add $-808, %RSP
	mov -776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce5f
	jmp uuid_000000000007ce61
uuid_000000000007ce5f:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce5c
	jmp uuid_000000000007ce5e
uuid_000000000007ce5c:
	movb $1, -680(%rbp)
uuid_000000000007ce5e:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007ce61:
	mov -696(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007ce64:
	mov -688(%RBP),%RSP
	add $-888, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce65
	jmp uuid_000000000007ce67
uuid_000000000007ce65:
	movb $1, -504(%rbp)
uuid_000000000007ce67:
	mov -600(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007ce6a:
	mov -520(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007ce6d:
	mov -512(%RBP),%RSP
	add $-888, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce73
	push %RBP
	jmp uuid_000000000007ce70
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ce6f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ce72
uuid_000000000007ce70:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce6e
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ce72:
	mov -896(%RBP),%RSP
	add $-896, %RSP
	jmp uuid_000000000007ce75
uuid_000000000007ce73:
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ce75:
	mov -424(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007ce78
uuid_000000000007ce76:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007ce78:
	mov -304(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007ce7b
uuid_000000000007ce79:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -320(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007ce7b:
	mov -184(%RBP),%RSP
	add $-320, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce82
	jmp uuid_000000000007ce84
uuid_000000000007ce82:
	push %RBP
	jmp uuid_000000000007ce7f
	jmp uuid_000000000007ce81
uuid_000000000007ce7f:
	push %RBP
	mov -232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce7c
	jmp uuid_000000000007ce7e
uuid_000000000007ce7c:
	movb $1, -304(%rbp)
uuid_000000000007ce7e:
	mov -328(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ce81:
	mov -320(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ce84:
	mov -312(%RBP),%RSP
	add $-336, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cee6
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cea5
	jmp uuid_000000000007cea7
uuid_000000000007cea5:
	push %RBP
	jmp uuid_000000000007cea2
	jmp uuid_000000000007cea4
uuid_000000000007cea2:
	push %RBP
	mov -352(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce9f
	jmp uuid_000000000007cea1
uuid_000000000007ce9f:
	movb $1, -424(%rbp)
uuid_000000000007cea1:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007cea4:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007cea7:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cee3
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ced9
	jmp uuid_000000000007cedb
uuid_000000000007ced9:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ced6
	jmp uuid_000000000007ced8
uuid_000000000007ced6:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ced0
	jmp uuid_000000000007ced2
uuid_000000000007ced0:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cec7
	jmp uuid_000000000007cec9
uuid_000000000007cec7:
	push %RBP
	jmp uuid_000000000007cec4
	jmp uuid_000000000007cec6
uuid_000000000007cec4:
	push %RBP
	mov -744(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $uuid_000000000007b940
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cec1
	jmp uuid_000000000007cec3
uuid_000000000007cec1:
	movb $1, -816(%rbp)
uuid_000000000007cec3:
	mov -840(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007cec6:
	mov -832(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007cec9:
	mov -824(%RBP),%RSP
	add $-848, %RSP
	mov -816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cecd
	jmp uuid_000000000007cecf
uuid_000000000007cecd:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ceca
	jmp uuid_000000000007cecc
uuid_000000000007ceca:
	movb $1, -720(%rbp)
uuid_000000000007cecc:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007cecf:
	mov -736(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007ced2:
	mov -728(%RBP),%RSP
	add $-928, %RSP
	mov -720(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ced3
	jmp uuid_000000000007ced5
uuid_000000000007ced3:
	movb $1, -544(%rbp)
uuid_000000000007ced5:
	mov -640(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007ced8:
	mov -560(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007cedb:
	mov -552(%RBP),%RSP
	add $-928, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cee0
	push %RBP
	jmp uuid_000000000007cedd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cedc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cedf
uuid_000000000007cedd:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce6e
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cedf:
	mov -936(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007cee2
uuid_000000000007cee0:
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	movq -112(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007cee2:
	mov -464(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007cee5
uuid_000000000007cee3:
	pushq $0
	pushq $0
	pushq $3
#call function parse-field-of : Arrow<String,Tuple<String,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	mov %RBX, %RBP
	call parse_SB_field_SB_of_CL_ArrowTupleTypeStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceae
	jmp uuid_000000000007ceb0
uuid_000000000007ceae:
	push %RBP
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	jmp uuid_000000000007ceab
	jmp uuid_000000000007cead
uuid_000000000007ceab:
	push %RBP
	mov -536(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $uuid_000000000007b6a7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cea8
	jmp uuid_000000000007ceaa
uuid_000000000007cea8:
	movb $1, -576(%rbp)
uuid_000000000007ceaa:
	mov -624(%RBP),%RSP
	add $-632, %RSP
uuid_000000000007cead:
	mov -592(%RBP),%RSP
	add $-632, %RSP
uuid_000000000007ceb0:
	mov -584(%RBP),%RSP
	add $-632, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cebe
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceb7
	jmp uuid_000000000007ceb9
uuid_000000000007ceb7:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007ceb4
	jmp uuid_000000000007ceb6
uuid_000000000007ceb4:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ceb1
	jmp uuid_000000000007ceb3
uuid_000000000007ceb1:
	movb $1, -688(%rbp)
uuid_000000000007ceb3:
	mov -736(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007ceb6:
	mov -704(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007ceb9:
	mov -696(%RBP),%RSP
	add $-744, %RSP
	mov -688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cebb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ceba
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cebd
uuid_000000000007cebb:
#call function add-alias : Arrow<Cons<Cons<String,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b875
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -744(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b875
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc9a
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call add_SB_alias_CL_ArrowNilConsTypeConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -728(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -472(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -464(%rbp)
uuid_000000000007cebd:
	mov -640(%RBP),%RSP
	add $-744, %RSP
	jmp uuid_000000000007cec0
uuid_000000000007cebe:
	movq -616(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -472(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -464(%rbp)
uuid_000000000007cec0:
	mov -528(%RBP),%RSP
	add $-632, %RSP
	movq -480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -128(%rbp)
uuid_000000000007cee5:
	mov -344(%RBP),%RSP
	add $-632, %RSP
	jmp uuid_000000000007cee8
uuid_000000000007cee6:
	pushq $0
	pushq $0
	pushq $3
#call function parse-field-of : Arrow<String,Tuple<String,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	mov %RBX, %RBP
	call parse_SB_field_SB_of_CL_ArrowTupleTypeStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce8b
	jmp uuid_000000000007ce8d
uuid_000000000007ce8b:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007ce88
	jmp uuid_000000000007ce8a
uuid_000000000007ce88:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $uuid_000000000007b6a7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ce85
	jmp uuid_000000000007ce87
uuid_000000000007ce85:
	movb $1, -456(%rbp)
uuid_000000000007ce87:
	mov -504(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007ce8a:
	mov -472(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007ce8d:
	mov -464(%RBP),%RSP
	add $-512, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce9c
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce94
	jmp uuid_000000000007ce96
uuid_000000000007ce94:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007ce91
	jmp uuid_000000000007ce93
uuid_000000000007ce91:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce8e
	jmp uuid_000000000007ce90
uuid_000000000007ce8e:
	movb $1, -568(%rbp)
uuid_000000000007ce90:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007ce93:
	mov -584(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007ce96:
	mov -576(%RBP),%RSP
	add $-624, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ce99
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ce98
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ce9b
uuid_000000000007ce99:
#call function add-alias : Arrow<Cons<Cons<String,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b875
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -624(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b875
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc9a
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call add_SB_alias_CL_ArrowNilConsTypeConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ce97
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -608(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -344(%rbp)
uuid_000000000007ce9b:
	mov -520(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007ce9e
uuid_000000000007ce9c:
	movq -496(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -344(%rbp)
uuid_000000000007ce9e:
	mov -408(%RBP),%RSP
	add $-512, %RSP
	movq -360(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -128(%rbp)
uuid_000000000007cee8:
	mov -224(%RBP),%RSP
	add $-512, %RSP
	subq $24, %rsp
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $120, %rsp
	ret
typeof_SB_lhs_CL_ArrowTypeAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf07
	jmp uuid_000000000007cf09
uuid_000000000007cf07:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cef5
	jmp uuid_000000000007cef7
uuid_000000000007cef5:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceec
	jmp uuid_000000000007ceee
uuid_000000000007ceec:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007cee9
	jmp uuid_000000000007ceeb
uuid_000000000007cee9:
	movb $1, -456(%rbp)
uuid_000000000007ceeb:
	mov -472(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007ceee:
	mov -464(%RBP),%RSP
	add $-496, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cef2
	jmp uuid_000000000007cef4
uuid_000000000007cef2:
	push %RBP
	jmp uuid_000000000007ceef
	jmp uuid_000000000007cef1
uuid_000000000007ceef:
	movb $1, -360(%rbp)
uuid_000000000007cef1:
	mov -504(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cef4:
	mov -376(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cef7:
	mov -368(%RBP),%RSP
	add $-504, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf04
	jmp uuid_000000000007cf06
uuid_000000000007cf04:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cefe
	jmp uuid_000000000007cf00
uuid_000000000007cefe:
	push %RBP
	jmp uuid_000000000007cefb
	jmp uuid_000000000007cefd
uuid_000000000007cefb:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cef8
	jmp uuid_000000000007cefa
uuid_000000000007cef8:
	movb $1, -592(%rbp)
uuid_000000000007cefa:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007cefd:
	mov -608(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007cf00:
	mov -600(%RBP),%RSP
	add $-624, %RSP
	mov -592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf01
	jmp uuid_000000000007cf03
uuid_000000000007cf01:
	movb $1, -264(%rbp)
uuid_000000000007cf03:
	mov -512(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007cf06:
	mov -280(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007cf09:
	mov -272(%RBP),%RSP
	add $-624, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf3f
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf31
	jmp uuid_000000000007cf33
uuid_000000000007cf31:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf28
	jmp uuid_000000000007cf2a
uuid_000000000007cf28:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf16
	jmp uuid_000000000007cf18
uuid_000000000007cf16:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf0d
	jmp uuid_000000000007cf0f
uuid_000000000007cf0d:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007cf0a
	jmp uuid_000000000007cf0c
uuid_000000000007cf0a:
	movb $1, -1000(%rbp)
uuid_000000000007cf0c:
	mov -1016(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007cf0f:
	mov -1008(%RBP),%RSP
	add $-1040, %RSP
	mov -1000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf13
	jmp uuid_000000000007cf15
uuid_000000000007cf13:
	push %RBP
	jmp uuid_000000000007cf10
	jmp uuid_000000000007cf12
uuid_000000000007cf10:
	movb $1, -904(%rbp)
uuid_000000000007cf12:
	mov -1048(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007cf15:
	mov -920(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007cf18:
	mov -912(%RBP),%RSP
	add $-1048, %RSP
	mov -904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf25
	jmp uuid_000000000007cf27
uuid_000000000007cf25:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf1f
	jmp uuid_000000000007cf21
uuid_000000000007cf1f:
	push %RBP
	jmp uuid_000000000007cf1c
	jmp uuid_000000000007cf1e
uuid_000000000007cf1c:
	push %RBP
	mov -1064(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cf19
	jmp uuid_000000000007cf1b
uuid_000000000007cf19:
	movb $1, -1136(%rbp)
uuid_000000000007cf1b:
	mov -1160(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007cf1e:
	mov -1152(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007cf21:
	mov -1144(%RBP),%RSP
	add $-1168, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf22
	jmp uuid_000000000007cf24
uuid_000000000007cf22:
	movb $1, -808(%rbp)
uuid_000000000007cf24:
	mov -1056(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007cf27:
	mov -824(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007cf2a:
	mov -816(%RBP),%RSP
	add $-1168, %RSP
	mov -808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf2e
	jmp uuid_000000000007cf30
uuid_000000000007cf2e:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf2b
	jmp uuid_000000000007cf2d
uuid_000000000007cf2b:
	movb $1, -712(%rbp)
uuid_000000000007cf2d:
	mov -1176(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007cf30:
	mov -728(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007cf33:
	mov -720(%RBP),%RSP
	add $-1248, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf3c
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov -1328(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf39
	push %RBP
	jmp uuid_000000000007cf36
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cf35
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf38
uuid_000000000007cf36:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cf34
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cf38:
	mov -1336(%RBP),%RSP
	add $-1336, %RSP
	jmp uuid_000000000007cf3b
uuid_000000000007cf39:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007cf3b:
	mov -1256(%RBP),%RSP
	add $-1328, %RSP
	jmp uuid_000000000007cf3e
uuid_000000000007cf3c:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007cf3e:
	mov -632(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007cf41
uuid_000000000007cf3f:
	movq -496(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007cf41:
	mov -184(%RBP),%RSP
	add $-624, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
typeof_SB_tag_CL_ArrowTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Type>,String>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -128(%RSP)
	push -128(%RSP)
	push -128(%RSP)
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
cons_SB_head_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf62
	jmp uuid_000000000007cf64
uuid_000000000007cf62:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf59
	jmp uuid_000000000007cf5b
uuid_000000000007cf59:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf50
	jmp uuid_000000000007cf52
uuid_000000000007cf50:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf4d
	jmp uuid_000000000007cf4f
uuid_000000000007cf4d:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007cf4a
	jmp uuid_000000000007cf4c
uuid_000000000007cf4a:
	movb $1, -248(%rbp)
uuid_000000000007cf4c:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007cf4f:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007cf52:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf56
	jmp uuid_000000000007cf58
uuid_000000000007cf56:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007cf53
	jmp uuid_000000000007cf55
uuid_000000000007cf53:
	movb $1, -184(%rbp)
uuid_000000000007cf55:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cf58:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cf5b:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf5f
	jmp uuid_000000000007cf61
uuid_000000000007cf5f:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cf5c
	jmp uuid_000000000007cf5e
uuid_000000000007cf5c:
	movb $1, -120(%rbp)
uuid_000000000007cf5e:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cf61:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cf64:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf69
	push %RBP
	jmp uuid_000000000007cf66
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cf65
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf68
uuid_000000000007cf66:
uuid_000000000007cf68:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007cf6b
uuid_000000000007cf69:
	movq -336(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cf6b:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_SB_tail_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf84
	jmp uuid_000000000007cf86
uuid_000000000007cf84:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf7b
	jmp uuid_000000000007cf7d
uuid_000000000007cf7b:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf72
	jmp uuid_000000000007cf74
uuid_000000000007cf72:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf6f
	jmp uuid_000000000007cf71
uuid_000000000007cf6f:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007cf6c
	jmp uuid_000000000007cf6e
uuid_000000000007cf6c:
	movb $1, -248(%rbp)
uuid_000000000007cf6e:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007cf71:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007cf74:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf78
	jmp uuid_000000000007cf7a
uuid_000000000007cf78:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007cf75
	jmp uuid_000000000007cf77
uuid_000000000007cf75:
	movb $1, -184(%rbp)
uuid_000000000007cf77:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cf7a:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007cf7d:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf81
	jmp uuid_000000000007cf83
uuid_000000000007cf81:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cf7e
	jmp uuid_000000000007cf80
uuid_000000000007cf7e:
	movb $1, -120(%rbp)
uuid_000000000007cf80:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cf83:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007cf86:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf8b
	push %RBP
	jmp uuid_000000000007cf88
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cf87
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf8a
uuid_000000000007cf88:
uuid_000000000007cf8a:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007cf8d
uuid_000000000007cf8b:
	movq -368(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007cf8d:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
parameter_SB_number_CL_ArrowU64ConsStringType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf94
	jmp uuid_000000000007cf96
uuid_000000000007cf94:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf91
	jmp uuid_000000000007cf93
uuid_000000000007cf91:
	push %RBP
	jmp uuid_000000000007cf8e
	jmp uuid_000000000007cf90
uuid_000000000007cf8e:
	movb $1, -112(%rbp)
uuid_000000000007cf90:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cf93:
	mov -128(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007cf96:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	mov -112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cf9b
	push %RBP
	jmp uuid_000000000007cf98
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cf97
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf9a
uuid_000000000007cf98:
uuid_000000000007cf9a:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007cf9d
uuid_000000000007cf9b:
#call function parameter-number : Arrow<Cons<Cons<List<Type>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -32(%rbp)
	pushq $1
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
uuid_000000000007cf9d:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfae
	jmp uuid_000000000007cfb0
uuid_000000000007cfae:
	push %RBP
	mov -152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cfab
	jmp uuid_000000000007cfad
uuid_000000000007cfab:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfa5
	jmp uuid_000000000007cfa7
uuid_000000000007cfa5:
	push %RBP
	mov -248(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cfa2
	jmp uuid_000000000007cfa4
uuid_000000000007cfa2:
	movb $1, -264(%rbp)
uuid_000000000007cfa4:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007cfa7:
	mov -272(%RBP),%RSP
	add $-288, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfa8
	jmp uuid_000000000007cfaa
uuid_000000000007cfa8:
	movb $1, -168(%rbp)
uuid_000000000007cfaa:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007cfad:
	mov -184(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007cfb0:
	mov -176(%RBP),%RSP
	add $-288, %RSP
	mov -168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfb8
	push %RBP
	jmp uuid_000000000007cfb5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cfb4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cfb7
uuid_000000000007cfb5:
uuid_000000000007cfb7:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007cfba
uuid_000000000007cfb8:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cfb1
#call function parameter-number : Arrow<Cons<Cons<List<Type>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -48(%rbp)
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -72(%rbp)
	jmp uuid_000000000007cfb3
uuid_000000000007cfb1:
	movq -56(%rbp), %r15
	movq %r15, -72(%rbp)
	mov -56(%rbp), %r15
	mov %r15, -72(%rbp)
uuid_000000000007cfb3:
	mov -296(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007cfba:
	mov -120(%RBP),%RSP
	add $-296, %RSP
	mov -72(%rbp), %RAX
	mov %rbp, %rsp
	sub $64, %rsp
	ret
apply_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $3
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cfbb
	jmp uuid_000000000007cfbd
uuid_000000000007cfbb:
#call function reduce-plural : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call reduce_SB_plural_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007cfbd:
	mov -224(%RBP),%RSP
	add $-224, %RSP
	push %RBP
#call function .length : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	movq -144(%RBP), %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfc1
	jmp uuid_000000000007cfc3
uuid_000000000007cfc1:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfbe
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfbf
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfc0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cfc3:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .length : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfd7
	jmp uuid_000000000007cfd9
uuid_000000000007cfd7:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfc4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfc5
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
uuid_000000000007cfd4:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cfd5
	jmp uuid_000000000007cfd6
uuid_000000000007cfd5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfc6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfcd
	jmp uuid_000000000007cfcf
uuid_000000000007cfcd:
	push %RBP
	mov -360(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cfca
	jmp uuid_000000000007cfcc
uuid_000000000007cfca:
	push %RBP
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	jmp uuid_000000000007cfc7
	jmp uuid_000000000007cfc9
uuid_000000000007cfc7:
	movb $1, -376(%rbp)
uuid_000000000007cfc9:
	mov -440(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007cfcc:
	mov -392(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007cfcf:
	mov -384(%RBP),%RSP
	add $-464, %RSP
	mov -376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfd1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007cfd0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cfd3
uuid_000000000007cfd1:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -432(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -248(%rbp)
uuid_000000000007cfd3:
	mov -328(%RBP),%RSP
	add $-464, %RSP
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007cfd4
uuid_000000000007cfd6:
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cfd9:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
uuid_000000000007d013:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d014
	jmp uuid_000000000007d015
uuid_000000000007d014:
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfe0
	jmp uuid_000000000007cfe2
uuid_000000000007cfe0:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cfdd
	jmp uuid_000000000007cfdf
uuid_000000000007cfdd:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007cfda
	jmp uuid_000000000007cfdc
uuid_000000000007cfda:
	movb $1, -416(%rbp)
uuid_000000000007cfdc:
	mov -480(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cfdf:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cfe2:
	mov -424(%RBP),%RSP
	add $-504, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d010
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d00f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d012
uuid_000000000007d010:
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	push %RBP
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cffb
	jmp uuid_000000000007cffd
uuid_000000000007cffb:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cff2
	jmp uuid_000000000007cff4
uuid_000000000007cff2:
	push %RBP
	mov -616(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfe9
	jmp uuid_000000000007cfeb
uuid_000000000007cfe9:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfe6
	jmp uuid_000000000007cfe8
uuid_000000000007cfe6:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007cfe3
	jmp uuid_000000000007cfe5
uuid_000000000007cfe3:
	movb $1, -696(%rbp)
uuid_000000000007cfe5:
	mov -760(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007cfe8:
	mov -712(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007cfeb:
	mov -704(%RBP),%RSP
	add $-784, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cfef
	jmp uuid_000000000007cff1
uuid_000000000007cfef:
	push %RBP
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_000000000007cfec
	jmp uuid_000000000007cfee
uuid_000000000007cfec:
	movb $1, -632(%rbp)
uuid_000000000007cfee:
	mov -792(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007cff1:
	mov -648(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007cff4:
	mov -640(%RBP),%RSP
	add $-816, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007cff8
	jmp uuid_000000000007cffa
uuid_000000000007cff8:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -832(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cff5
	jmp uuid_000000000007cff7
uuid_000000000007cff5:
	movb $1, -568(%rbp)
uuid_000000000007cff7:
	mov -824(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007cffa:
	mov -584(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007cffd:
	mov -576(%RBP),%RSP
	add $-832, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d00c
	push %RBP
	jmp uuid_000000000007d009
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d008
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d00b
uuid_000000000007d009:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d007
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d00b:
	mov -840(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007d00e
uuid_000000000007d00c:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -64(%RBP), %RAX
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d004
	jmp uuid_000000000007d006
uuid_000000000007d004:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d001
	jmp uuid_000000000007d003
uuid_000000000007d001:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cffe
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfff
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d000
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d003:
	mov -992(%RBP),%RSP
	add $-992, %RSP
#call function try-specialize : Arrow<Cons<Cons<Cons<String,Type>,TContext>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call try_SB_specialize_CL_ArrowNilConsTypeConsTContextConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d006:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007d00e:
	mov -536(%RBP),%RSP
	add $-992, %RSP
	movq -472(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -288(%rbp)
uuid_000000000007d012:
	mov -368(%RBP),%RSP
	add $-992, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $120, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d013
uuid_000000000007d015:
	subq $24, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
apply_CL_ArrowASTConsASTContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d093
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d090
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d01c
	jmp uuid_000000000007d01e
uuid_000000000007d01c:
	push %RBP
	jmp uuid_000000000007d019
	jmp uuid_000000000007d01b
uuid_000000000007d019:
	push %RBP
	jmp uuid_000000000007d016
	jmp uuid_000000000007d018
uuid_000000000007d016:
	movb $1, -568(%rbp)
uuid_000000000007d018:
	mov -592(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d01b:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d01e:
	mov -576(%RBP),%RSP
	add $-592, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d08d
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d022
	jmp uuid_000000000007d024
uuid_000000000007d022:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007d01f
	jmp uuid_000000000007d021
uuid_000000000007d01f:
	movb $1, -680(%rbp)
uuid_000000000007d021:
	mov -696(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007d024:
	mov -688(%RBP),%RSP
	add $-720, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d08a
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d02b
	jmp uuid_000000000007d02d
uuid_000000000007d02b:
	push %RBP
	jmp uuid_000000000007d028
	jmp uuid_000000000007d02a
uuid_000000000007d028:
	push %RBP
	mov -736(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d025
	jmp uuid_000000000007d027
uuid_000000000007d025:
	movb $1, -808(%rbp)
uuid_000000000007d027:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007d02a:
	mov -824(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007d02d:
	mov -816(%RBP),%RSP
	add $-840, %RSP
	mov -808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d087
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d04d
	jmp uuid_000000000007d04f
uuid_000000000007d04d:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d04a
	jmp uuid_000000000007d04c
uuid_000000000007d04a:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d047
	jmp uuid_000000000007d049
uuid_000000000007d047:
	movb $1, -928(%rbp)
uuid_000000000007d049:
	mov -1024(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007d04c:
	mov -944(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007d04f:
	mov -936(%RBP),%RSP
	add $-1096, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d084
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1176(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d059
	jmp uuid_000000000007d05b
uuid_000000000007d059:
	push %RBP
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	jmp uuid_000000000007d056
	jmp uuid_000000000007d058
uuid_000000000007d056:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d053
	jmp uuid_000000000007d055
uuid_000000000007d053:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d050
	jmp uuid_000000000007d052
uuid_000000000007d050:
	movb $1, -1184(%rbp)
uuid_000000000007d052:
	mov -1312(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007d055:
	mov -1232(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007d058:
	mov -1200(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007d05b:
	mov -1192(%RBP),%RSP
	add $-1384, %RSP
	mov -1184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d081
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d062
	jmp uuid_000000000007d064
uuid_000000000007d062:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d05f
	jmp uuid_000000000007d061
uuid_000000000007d05f:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d05c
	jmp uuid_000000000007d05e
uuid_000000000007d05c:
	movb $1, -1472(%rbp)
uuid_000000000007d05e:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007d061:
	mov -1488(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007d064:
	mov -1480(%RBP),%RSP
	add $-1640, %RSP
	mov -1472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d07e
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d06b
	jmp uuid_000000000007d06d
uuid_000000000007d06b:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d068
	jmp uuid_000000000007d06a
uuid_000000000007d068:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d065
	jmp uuid_000000000007d067
uuid_000000000007d065:
	movb $1, -1728(%rbp)
uuid_000000000007d067:
	mov -1824(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007d06a:
	mov -1744(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007d06d:
	mov -1736(%RBP),%RSP
	add $-1896, %RSP
	mov -1728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d07b
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1976(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d074
	jmp uuid_000000000007d076
uuid_000000000007d074:
	push %RBP
	mov -1968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d071
	jmp uuid_000000000007d073
uuid_000000000007d071:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007d06e
	jmp uuid_000000000007d070
uuid_000000000007d06e:
	movb $1, -1984(%rbp)
uuid_000000000007d070:
	mov -2080(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007d073:
	mov -2000(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007d076:
	mov -1992(%RBP),%RSP
	add $-2136, %RSP
	mov -1984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d078
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d077
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d07a
uuid_000000000007d078:
#call function substitute : Arrow<Cons<Context,Token>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTokenConsTokenContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d07a:
	mov -1904(%RBP),%RSP
	add $-2136, %RSP
	jmp uuid_000000000007d07d
uuid_000000000007d07b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d07d:
	mov -1648(%RBP),%RSP
	add $-1896, %RSP
	jmp uuid_000000000007d080
uuid_000000000007d07e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d080:
	mov -1392(%RBP),%RSP
	add $-1640, %RSP
	jmp uuid_000000000007d083
uuid_000000000007d081:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $5
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d083:
	mov -1104(%RBP),%RSP
	add $-1384, %RSP
	jmp uuid_000000000007d086
uuid_000000000007d084:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d086:
	mov -848(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007d089
uuid_000000000007d087:
uuid_000000000007d044:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d045
	jmp uuid_000000000007d046
uuid_000000000007d045:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq $0
	push %RBP
	mov -1040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d037
	jmp uuid_000000000007d039
uuid_000000000007d037:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	jmp uuid_000000000007d034
	jmp uuid_000000000007d036
uuid_000000000007d034:
	push %RBP
	mov -960(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d031
	jmp uuid_000000000007d033
uuid_000000000007d031:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d02e
	jmp uuid_000000000007d030
uuid_000000000007d02e:
	movb $1, -1048(%rbp)
uuid_000000000007d030:
	mov -1160(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007d033:
	mov -1144(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007d036:
	mov -1064(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007d039:
	mov -1056(%RBP),%RSP
	add $-1256, %RSP
	mov -1048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d041
	push %RBP
	jmp uuid_000000000007d03e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d03d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d040
uuid_000000000007d03e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d040:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
	jmp uuid_000000000007d043
uuid_000000000007d041:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -840(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d03a
	movq -1256(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d03c
uuid_000000000007d03a:
	movq -1136(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -184(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d03c:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d043:
	mov -944(%RBP),%RSP
	add $-1264, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d044
uuid_000000000007d046:
uuid_000000000007d089:
	mov -728(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007d08c
uuid_000000000007d08a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	pushq $4
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d08c:
	mov -600(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_000000000007d08f
uuid_000000000007d08d:
uuid_000000000007d08f:
	mov -488(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007d092
uuid_000000000007d090:
uuid_000000000007d092:
	mov -408(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_000000000007d095
uuid_000000000007d093:
uuid_000000000007d095:
	mov -328(%RBP),%RSP
	add $-400, %RSP
	subq $72, %rsp
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
apply_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d09e
	jmp uuid_000000000007d0a0
uuid_000000000007d09e:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d09b
	jmp uuid_000000000007d09d
uuid_000000000007d09b:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d098
	jmp uuid_000000000007d09a
uuid_000000000007d098:
	movb $1, -240(%rbp)
uuid_000000000007d09a:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007d09d:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007d0a0:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0c6
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0b9
	jmp uuid_000000000007d0bb
uuid_000000000007d0b9:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0b0
	jmp uuid_000000000007d0b2
uuid_000000000007d0b0:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0a7
	jmp uuid_000000000007d0a9
uuid_000000000007d0a7:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0a4
	jmp uuid_000000000007d0a6
uuid_000000000007d0a4:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007d0a1
	jmp uuid_000000000007d0a3
uuid_000000000007d0a1:
	movb $1, -480(%rbp)
uuid_000000000007d0a3:
	mov -544(%RBP),%RSP
	add $-568, %RSP
uuid_000000000007d0a6:
	mov -496(%RBP),%RSP
	add $-568, %RSP
uuid_000000000007d0a9:
	mov -488(%RBP),%RSP
	add $-568, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0ad
	jmp uuid_000000000007d0af
uuid_000000000007d0ad:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007d0aa
	jmp uuid_000000000007d0ac
uuid_000000000007d0aa:
	movb $1, -416(%rbp)
uuid_000000000007d0ac:
	mov -576(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007d0af:
	mov -432(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007d0b2:
	mov -424(%RBP),%RSP
	add $-600, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0b6
	jmp uuid_000000000007d0b8
uuid_000000000007d0b6:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0b3
	jmp uuid_000000000007d0b5
uuid_000000000007d0b3:
	movb $1, -352(%rbp)
uuid_000000000007d0b5:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d0b8:
	mov -368(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d0bb:
	mov -360(%RBP),%RSP
	add $-616, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0c3
	push %RBP
	jmp uuid_000000000007d0c0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d0bf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d0c2
uuid_000000000007d0c0:
uuid_000000000007d0c2:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007d0c5
uuid_000000000007d0c3:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0bc
	jmp uuid_000000000007d0be
uuid_000000000007d0bc:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007d0be:
	mov -624(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007d0c5:
	mov -320(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007d0c8
uuid_000000000007d0c6:
#call function + : Arrow<Cons<List<Type>,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowListTypeConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007d0c8:
	mov -208(%RBP),%RSP
	add $-312, %RSP
	subq $40, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
reduce_SB_plural_CL_ArrowListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
uuid_000000000007d0dd:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0de
	jmp uuid_000000000007d0df
uuid_000000000007d0de:
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0d3
	jmp uuid_000000000007d0d5
uuid_000000000007d0d3:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0d0
	jmp uuid_000000000007d0d2
uuid_000000000007d0d0:
	push %RBP
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	jmp uuid_000000000007d0cd
	jmp uuid_000000000007d0cf
uuid_000000000007d0cd:
	movb $1, -224(%rbp)
uuid_000000000007d0cf:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007d0d2:
	mov -240(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007d0d5:
	mov -232(%RBP),%RSP
	add $-312, %RSP
	mov -224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0da
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d0d9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d0dc
uuid_000000000007d0da:
	push %RBP
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0d6
	jmp uuid_000000000007d0d8
uuid_000000000007d0d6:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007d0d8:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	movq -280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -248(%rbp), %r15
	movq %r15, -96(%rbp)
uuid_000000000007d0dc:
	mov -176(%RBP),%RSP
	add $-320, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d0dd
uuid_000000000007d0df:
	push %RBP
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0e0
	jmp uuid_000000000007d0e2
uuid_000000000007d0e0:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d0e2:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007d109:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d10a
	jmp uuid_000000000007d10b
uuid_000000000007d10a:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0e9
	jmp uuid_000000000007d0eb
uuid_000000000007d0e9:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0e6
	jmp uuid_000000000007d0e8
uuid_000000000007d0e6:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007d0e3
	jmp uuid_000000000007d0e5
uuid_000000000007d0e3:
	movb $1, -232(%rbp)
uuid_000000000007d0e5:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007d0e8:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007d0eb:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d106
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d105
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d108
uuid_000000000007d106:
	movq -288(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
uuid_000000000007d0ff:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d100
	jmp uuid_000000000007d101
uuid_000000000007d100:
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0f2
	jmp uuid_000000000007d0f4
uuid_000000000007d0f2:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0ef
	jmp uuid_000000000007d0f1
uuid_000000000007d0ef:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007d0ec
	jmp uuid_000000000007d0ee
uuid_000000000007d0ec:
	movb $1, -456(%rbp)
uuid_000000000007d0ee:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007d0f1:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007d0f4:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d0fc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d0fb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d0fe
uuid_000000000007d0fc:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0f8
	jmp uuid_000000000007d0fa
uuid_000000000007d0f8:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0f5
	jmp uuid_000000000007d0f7
uuid_000000000007d0f5:
	pushq $0
	pushq $0
	pushq $3
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d0f7:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007d0fa:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	movq -512(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -328(%rbp)
uuid_000000000007d0fe:
	mov -408(%RBP),%RSP
	add $-560, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d0ff
uuid_000000000007d101:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d102
	jmp uuid_000000000007d104
uuid_000000000007d102:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007d104:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007d108:
	mov -184(%RBP),%RSP
	add $-368, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d109
uuid_000000000007d10b:
	movq -88(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -72(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007d132:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d133
	jmp uuid_000000000007d134
uuid_000000000007d133:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d112
	jmp uuid_000000000007d114
uuid_000000000007d112:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d10f
	jmp uuid_000000000007d111
uuid_000000000007d10f:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007d10c
	jmp uuid_000000000007d10e
uuid_000000000007d10c:
	movb $1, -232(%rbp)
uuid_000000000007d10e:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007d111:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007d114:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d12f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d12e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d131
uuid_000000000007d12f:
	movq -288(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
uuid_000000000007d128:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d129
	jmp uuid_000000000007d12a
uuid_000000000007d129:
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d11b
	jmp uuid_000000000007d11d
uuid_000000000007d11b:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d118
	jmp uuid_000000000007d11a
uuid_000000000007d118:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007d115
	jmp uuid_000000000007d117
uuid_000000000007d115:
	movb $1, -456(%rbp)
uuid_000000000007d117:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007d11a:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007d11d:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d125
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d124
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d127
uuid_000000000007d125:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d121
	jmp uuid_000000000007d123
uuid_000000000007d121:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d11e
	jmp uuid_000000000007d120
uuid_000000000007d11e:
	pushq $0
	pushq $0
	pushq $3
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007d120:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007d123:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	movq -512(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -328(%rbp)
uuid_000000000007d127:
	mov -408(%RBP),%RSP
	add $-560, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d128
uuid_000000000007d12a:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d12b
	jmp uuid_000000000007d12d
uuid_000000000007d12b:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007d12d:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007d131:
	mov -184(%RBP),%RSP
	add $-368, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d132
uuid_000000000007d134:
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
apply_SB_or_SB_cons_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d138
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d135
	jmp uuid_000000000007d137
uuid_000000000007d135:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007d137:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007d13a
uuid_000000000007d138:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007d13a:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
try_SB_specialize_CL_ArrowNilConsTypeConsTContextConsTypeString:
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007d17e:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d17f
	jmp uuid_000000000007d180
uuid_000000000007d17f:
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d17b
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $0
	push %RBP
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d147
	jmp uuid_000000000007d149
uuid_000000000007d147:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007d144
	jmp uuid_000000000007d146
uuid_000000000007d144:
	push %RBP
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	jmp uuid_000000000007d141
	jmp uuid_000000000007d143
uuid_000000000007d141:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d13e
	jmp uuid_000000000007d140
uuid_000000000007d13e:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d13b
	jmp uuid_000000000007d13d
uuid_000000000007d13b:
	movb $1, -688(%rbp)
uuid_000000000007d13d:
	mov -832(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d140:
	mov -816(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d143:
	mov -784(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d146:
	mov -704(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d149:
	mov -696(%RBP),%RSP
	add $-952, %RSP
	mov -688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d178
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d177
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d17a
uuid_000000000007d178:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -824(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d174
	jmp uuid_000000000007d176
uuid_000000000007d174:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq $uuid_000000000007d14a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d14b
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	jmp uuid_000000000007d14d
uuid_000000000007d14b:
uuid_000000000007d14d:
	mov -992(%RBP),%RSP
	add $-992, %RSP
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	push %RBP
#call function is-special : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call is_SB_special_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d171
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d16e
	jmp uuid_000000000007d170
uuid_000000000007d16e:
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	push %RBP
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d160
	jmp uuid_000000000007d162
uuid_000000000007d160:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d157
	jmp uuid_000000000007d159
uuid_000000000007d157:
	push %RBP
	jmp uuid_000000000007d154
	jmp uuid_000000000007d156
uuid_000000000007d154:
	push %RBP
	jmp uuid_000000000007d151
	jmp uuid_000000000007d153
uuid_000000000007d151:
	push %RBP
	jmp uuid_000000000007d14e
	jmp uuid_000000000007d150
uuid_000000000007d14e:
	movb $1, -1264(%rbp)
uuid_000000000007d150:
	mov -1296(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007d153:
	mov -1288(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007d156:
	mov -1280(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007d159:
	mov -1272(%RBP),%RSP
	add $-1296, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d15d
	jmp uuid_000000000007d15f
uuid_000000000007d15d:
	push %RBP
	jmp uuid_000000000007d15a
	jmp uuid_000000000007d15c
uuid_000000000007d15a:
	movb $1, -1168(%rbp)
uuid_000000000007d15c:
	mov -1304(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007d15f:
	mov -1184(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007d162:
	mov -1176(%RBP),%RSP
	add $-1304, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d16b
	push %RBP
	jmp uuid_000000000007d168
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d167
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d16a
uuid_000000000007d168:
uuid_000000000007d16a:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_000000000007d16d
uuid_000000000007d16b:
#call function cons : Arrow<Cons<StackToSpecialize,List<StackToSpecialize>>,List<StackToSpecialize>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListStackToSpecializeConsListStackToSpecializeStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007d16d:
	mov -1088(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007d170:
	mov -1008(%RBP),%RSP
	add $-1304, %RSP
	jmp uuid_000000000007d173
uuid_000000000007d171:
uuid_000000000007d173:
	mov -1000(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007d176:
	mov -960(%RBP),%RSP
	add $-1000, %RSP
	movq -952(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -192(%rbp)
uuid_000000000007d17a:
	mov -560(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007d17d
uuid_000000000007d17b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d17d:
	mov -432(%RBP),%RSP
	add $-552, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007d17e
uuid_000000000007d180:
	mov %rbp, %rsp
	sub $184, %rsp
	ret
unify_SB_hint_CL_ArrowTypeConsTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d199
	jmp uuid_000000000007d19b
uuid_000000000007d199:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d187
	jmp uuid_000000000007d189
uuid_000000000007d187:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d184
	jmp uuid_000000000007d186
uuid_000000000007d184:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d181
	jmp uuid_000000000007d183
uuid_000000000007d181:
	movb $1, -232(%rbp)
uuid_000000000007d183:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007d186:
	mov -248(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007d189:
	mov -240(%RBP),%RSP
	add $-304, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d196
	jmp uuid_000000000007d198
uuid_000000000007d196:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d190
	jmp uuid_000000000007d192
uuid_000000000007d190:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d18d
	jmp uuid_000000000007d18f
uuid_000000000007d18d:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d18a
	jmp uuid_000000000007d18c
uuid_000000000007d18a:
	movb $1, -344(%rbp)
uuid_000000000007d18c:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007d18f:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007d192:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d193
	jmp uuid_000000000007d195
uuid_000000000007d193:
	movb $1, -184(%rbp)
uuid_000000000007d195:
	mov -312(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007d198:
	mov -200(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007d19b:
	mov -192(%RBP),%RSP
	add $-416, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1b8
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1ae
	jmp uuid_000000000007d1b0
uuid_000000000007d1ae:
	push %RBP
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1a5
	jmp uuid_000000000007d1a7
uuid_000000000007d1a5:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1a2
	jmp uuid_000000000007d1a4
uuid_000000000007d1a2:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d19f
	jmp uuid_000000000007d1a1
uuid_000000000007d19f:
	movb $1, -536(%rbp)
uuid_000000000007d1a1:
	mov -584(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007d1a4:
	mov -552(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007d1a7:
	mov -544(%RBP),%RSP
	add $-608, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1ab
	jmp uuid_000000000007d1ad
uuid_000000000007d1ab:
	push %RBP
	jmp uuid_000000000007d1a8
	jmp uuid_000000000007d1aa
uuid_000000000007d1a8:
	movb $1, -488(%rbp)
uuid_000000000007d1aa:
	mov -616(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d1ad:
	mov -504(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d1b0:
	mov -496(%RBP),%RSP
	add $-616, %RSP
	mov -488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1b5
	push %RBP
	jmp uuid_000000000007d1b2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d1b1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d1b4
uuid_000000000007d1b2:
uuid_000000000007d1b4:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007d1b7
uuid_000000000007d1b5:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007d1b7:
	mov -424(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_000000000007d1ba
uuid_000000000007d1b8:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d19c
	pushq -304(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	jmp uuid_000000000007d19e
uuid_000000000007d19c:
	movq -24(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007d19e:
	mov -424(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007d1ba:
	mov -120(%RBP),%RSP
	add $-424, %RSP
	subq $24, %rsp
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_SB_hint_CL_ArrowListTypeConsListTypeType:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1cd
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1c3
	jmp uuid_000000000007d1c5
uuid_000000000007d1c3:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1c0
	jmp uuid_000000000007d1c2
uuid_000000000007d1c0:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	jmp uuid_000000000007d1bd
	jmp uuid_000000000007d1bf
uuid_000000000007d1bd:
	movb $1, -216(%rbp)
uuid_000000000007d1bf:
	mov -280(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007d1c2:
	mov -232(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007d1c5:
	mov -224(%RBP),%RSP
	add $-304, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1ca
	push %RBP
	jmp uuid_000000000007d1c7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d1c6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d1c9
uuid_000000000007d1c7:
uuid_000000000007d1c9:
	mov -312(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007d1cc
uuid_000000000007d1ca:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-hint : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007d1cc:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007d1cf
uuid_000000000007d1cd:
uuid_000000000007d1cf:
	mov -120(%RBP),%RSP
	add $-160, %RSP
	subq $40, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType:
#call function mark-class-exists : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_class_SB_exists_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1e9
	jmp uuid_000000000007d1eb
uuid_000000000007d1e9:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1e6
	jmp uuid_000000000007d1e8
uuid_000000000007d1e6:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1e0
	jmp uuid_000000000007d1e2
uuid_000000000007d1e0:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1d7
	jmp uuid_000000000007d1d9
uuid_000000000007d1d7:
	push %RBP
	jmp uuid_000000000007d1d4
	jmp uuid_000000000007d1d6
uuid_000000000007d1d4:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $uuid_000000000007d1d0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d1d1
	jmp uuid_000000000007d1d3
uuid_000000000007d1d1:
	movb $1, -552(%rbp)
uuid_000000000007d1d3:
	mov -576(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007d1d6:
	mov -568(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007d1d9:
	mov -560(%RBP),%RSP
	add $-584, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1dd
	jmp uuid_000000000007d1df
uuid_000000000007d1dd:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1da
	jmp uuid_000000000007d1dc
uuid_000000000007d1da:
	movb $1, -456(%rbp)
uuid_000000000007d1dc:
	mov -592(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d1df:
	mov -472(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d1e2:
	mov -464(%RBP),%RSP
	add $-664, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1e3
	jmp uuid_000000000007d1e5
uuid_000000000007d1e3:
	movb $1, -280(%rbp)
uuid_000000000007d1e5:
	mov -376(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d1e8:
	mov -296(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d1eb:
	mov -288(%RBP),%RSP
	add $-664, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d228
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	jmp uuid_000000000007d225
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d224
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d227
uuid_000000000007d225:
#call function infer-type-constructor : Arrow<Cons<Type,AST>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -120(%rbp)
	push %RBP
	movq -104(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d221
	jmp uuid_000000000007d223
uuid_000000000007d221:
	pushq $uuid_000000000007b6a7
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	push %RBP
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $0
	push %RBP
	mov -912(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1f2
	jmp uuid_000000000007d1f4
uuid_000000000007d1f2:
	push %RBP
	jmp uuid_000000000007d1ef
	jmp uuid_000000000007d1f1
uuid_000000000007d1ef:
	push %RBP
	mov -848(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d1ec
	jmp uuid_000000000007d1ee
uuid_000000000007d1ec:
	movb $1, -920(%rbp)
uuid_000000000007d1ee:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d1f1:
	mov -936(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007d1f4:
	mov -928(%RBP),%RSP
	add $-952, %RSP
	mov -920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d20e
	push %RBP
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $0
	push %RBP
	mov -1032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d204
	jmp uuid_000000000007d206
uuid_000000000007d204:
	push %RBP
	mov -1024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d201
	jmp uuid_000000000007d203
uuid_000000000007d201:
	push %RBP
	mov -1016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1fb
	jmp uuid_000000000007d1fd
uuid_000000000007d1fb:
	push %RBP
	jmp uuid_000000000007d1f8
	jmp uuid_000000000007d1fa
uuid_000000000007d1f8:
	push %RBP
	mov -1144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d1f5
	jmp uuid_000000000007d1f7
uuid_000000000007d1f5:
	movb $1, -1216(%rbp)
uuid_000000000007d1f7:
	mov -1240(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007d1fa:
	mov -1232(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007d1fd:
	mov -1224(%RBP),%RSP
	add $-1248, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d1fe
	jmp uuid_000000000007d200
uuid_000000000007d1fe:
	movb $1, -1040(%rbp)
uuid_000000000007d200:
	mov -1136(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007d203:
	mov -1056(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007d206:
	mov -1048(%RBP),%RSP
	add $-1248, %RSP
	mov -1040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d20b
	push %RBP
	jmp uuid_000000000007d208
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d207
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d20a
uuid_000000000007d208:
uuid_000000000007d20a:
	mov -1256(%RBP),%RSP
	add $-1256, %RSP
	jmp uuid_000000000007d20d
uuid_000000000007d20b:
	movq -1248(%rbp), %r15
	movq %r15, -760(%rbp)
	mov -1248(%rbp), %r15
	mov %r15, -760(%rbp)
uuid_000000000007d20d:
	mov -960(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007d210
uuid_000000000007d20e:
	movq -952(%rbp), %r15
	movq %r15, -760(%rbp)
	mov -952(%rbp), %r15
	mov %r15, -760(%rbp)
uuid_000000000007d210:
	mov -840(%RBP),%RSP
	add $-952, %RSP
	push %RBP
	mov -760(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007d21e
	jmp uuid_000000000007d220
uuid_000000000007d21e:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d217
	jmp uuid_000000000007d219
uuid_000000000007d217:
	push %RBP
	jmp uuid_000000000007d214
	jmp uuid_000000000007d216
uuid_000000000007d214:
	push %RBP
	mov -1000(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d211
	jmp uuid_000000000007d213
uuid_000000000007d211:
	movb $1, -1024(%rbp)
uuid_000000000007d213:
	mov -1048(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007d216:
	mov -1040(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007d219:
	mov -1032(%RBP),%RSP
	add $-1056, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d21b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d21a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d21d
uuid_000000000007d21b:
#call function has-only-child : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1056(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call has_SB_only_SB_child_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d21d:
	mov -992(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007d220:
	mov -960(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007d223:
	mov -752(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007d227:
	mov -672(%RBP),%RSP
	add $-1056, %RSP
	jmp uuid_000000000007d22a
uuid_000000000007d228:
#call function infer-type-definition : Arrow<Cons<Cons<Type,AST>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	movq -104(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function infer-type-constructor : Arrow<Cons<Type,AST>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -120(%rbp)
uuid_000000000007d22a:
	mov -200(%RBP),%RSP
	add $-680, %RSP
	mov -120(%rbp), %RAX
	mov %rbp, %rsp
	sub $112, %rsp
	ret
arity_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d23a
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d233
	jmp uuid_000000000007d235
uuid_000000000007d233:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d230
	jmp uuid_000000000007d232
uuid_000000000007d230:
	push %RBP
	jmp uuid_000000000007d22d
	jmp uuid_000000000007d22f
uuid_000000000007d22d:
	movb $1, -200(%rbp)
uuid_000000000007d22f:
	mov -264(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007d232:
	mov -216(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007d235:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d237
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d236
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d239
uuid_000000000007d237:
#call function arity : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007d239:
	mov -152(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007d23c
uuid_000000000007d23a:
uuid_000000000007d23c:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
arity_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d243
	jmp uuid_000000000007d245
uuid_000000000007d243:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d240
	jmp uuid_000000000007d242
uuid_000000000007d240:
	push %RBP
	jmp uuid_000000000007d23d
	jmp uuid_000000000007d23f
uuid_000000000007d23d:
	movb $1, -104(%rbp)
uuid_000000000007d23f:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007d242:
	mov -120(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007d245:
	mov -112(%RBP),%RSP
	add $-168, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d24a
	push %RBP
	jmp uuid_000000000007d247
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d246
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d249
uuid_000000000007d247:
uuid_000000000007d249:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007d24c
uuid_000000000007d24a:
#call function arity : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007d24c:
	mov -72(%RBP),%RSP
	add $-168, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_SB_arity_CL_ArrowU64Type:
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d265
	jmp uuid_000000000007d267
uuid_000000000007d265:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d25c
	jmp uuid_000000000007d25e
uuid_000000000007d25c:
	push %RBP
	mov -152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d253
	jmp uuid_000000000007d255
uuid_000000000007d253:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d250
	jmp uuid_000000000007d252
uuid_000000000007d250:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007d24d
	jmp uuid_000000000007d24f
uuid_000000000007d24d:
	movb $1, -232(%rbp)
uuid_000000000007d24f:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007d252:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007d255:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d259
	jmp uuid_000000000007d25b
uuid_000000000007d259:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	jmp uuid_000000000007d256
	jmp uuid_000000000007d258
uuid_000000000007d256:
	movb $1, -168(%rbp)
uuid_000000000007d258:
	mov -328(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007d25b:
	mov -184(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007d25e:
	mov -176(%RBP),%RSP
	add $-352, %RSP
	mov -168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d262
	jmp uuid_000000000007d264
uuid_000000000007d262:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d25f
	jmp uuid_000000000007d261
uuid_000000000007d25f:
	movb $1, -104(%rbp)
uuid_000000000007d261:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007d264:
	mov -120(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007d267:
	mov -112(%RBP),%RSP
	add $-368, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d26c
	push %RBP
	jmp uuid_000000000007d269
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d268
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d26b
uuid_000000000007d269:
uuid_000000000007d26b:
	mov -376(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007d26e
uuid_000000000007d26c:
#call function cons-arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call cons_SB_arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007d26e:
	mov -72(%RBP),%RSP
	add $-368, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
parse_SB_field_SB_of_CL_ArrowTupleTypeStringString:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $uuid_000000000007b6a7
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007d272:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $0, %R14B
	cmpb %R14B, %R13B
	setne %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d273
	jmp uuid_000000000007d274
uuid_000000000007d273:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $58, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d26f
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007d271
uuid_000000000007d26f:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	inc %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	movq $uuid_000000000007b6a7, -8(%rbp)
uuid_000000000007d271:
	mov -80(%RBP),%RSP
	add $-80, %RSP
	add $8, %RSP
	jmp uuid_000000000007d272
uuid_000000000007d274:
	pushq -48(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	subq $40, %rsp
	pushq 40(%rsp)
	pushq 56(%rsp)
	pushq 72(%rsp)
	pushq 88(%rsp)
	pushq 104(%rsp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
implicit_SB_tail_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d28d
	jmp uuid_000000000007d28f
uuid_000000000007d28d:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d284
	jmp uuid_000000000007d286
uuid_000000000007d284:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d27b
	jmp uuid_000000000007d27d
uuid_000000000007d27b:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d278
	jmp uuid_000000000007d27a
uuid_000000000007d278:
	push %RBP
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	jmp uuid_000000000007d275
	jmp uuid_000000000007d277
uuid_000000000007d275:
	movb $1, -224(%rbp)
uuid_000000000007d277:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007d27a:
	mov -240(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007d27d:
	mov -232(%RBP),%RSP
	add $-312, %RSP
	mov -224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d281
	jmp uuid_000000000007d283
uuid_000000000007d281:
	push %RBP
	pushq -120(%RBP)
	pushq -128(%RBP)
	pushq -136(%RBP)
	jmp uuid_000000000007d27e
	jmp uuid_000000000007d280
uuid_000000000007d27e:
	movb $1, -160(%rbp)
uuid_000000000007d280:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007d283:
	mov -176(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007d286:
	mov -168(%RBP),%RSP
	add $-344, %RSP
	mov -160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d28a
	jmp uuid_000000000007d28c
uuid_000000000007d28a:
	push %RBP
	mov -72(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d287
	jmp uuid_000000000007d289
uuid_000000000007d287:
	movb $1, -96(%rbp)
uuid_000000000007d289:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007d28c:
	mov -112(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007d28f:
	mov -104(%RBP),%RSP
	add $-360, %RSP
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d294
	push %RBP
	jmp uuid_000000000007d291
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d290
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d293
uuid_000000000007d291:
uuid_000000000007d293:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007d296
uuid_000000000007d294:
	movq -344(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d296:
	mov -64(%RBP),%RSP
	add $-360, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST:
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d298
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d297
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d29a
uuid_000000000007d298:
uuid_000000000007d29a:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	subq $24, %rsp
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST:
#call function find-alias-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007d2bd:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2be
	jmp uuid_000000000007d2bf
uuid_000000000007d2be:
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2ba
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -608(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2a7
	jmp uuid_000000000007d2a9
uuid_000000000007d2a7:
	push %RBP
	jmp uuid_000000000007d2a4
	jmp uuid_000000000007d2a6
uuid_000000000007d2a4:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	jmp uuid_000000000007d2a1
	jmp uuid_000000000007d2a3
uuid_000000000007d2a1:
	push %RBP
	mov -504(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d29e
	jmp uuid_000000000007d2a0
uuid_000000000007d29e:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d29b
	jmp uuid_000000000007d29d
uuid_000000000007d29b:
	movb $1, -616(%rbp)
uuid_000000000007d29d:
	mov -688(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007d2a0:
	mov -672(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007d2a3:
	mov -640(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007d2a6:
	mov -632(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007d2a9:
	mov -624(%RBP),%RSP
	add $-808, %RSP
	mov -616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2b7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d2b6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d2b9
uuid_000000000007d2b7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2b3
	movq -808(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -80(%rbp)
	jmp uuid_000000000007d2b5
uuid_000000000007d2b3:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2ad
	movq -664(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -216(%rbp)
	jmp uuid_000000000007d2af
uuid_000000000007d2ad:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2aa
	movq -664(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -216(%rbp)
	jmp uuid_000000000007d2ac
uuid_000000000007d2aa:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
uuid_000000000007d2ac:
	mov -832(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007d2af:
	mov -824(%RBP),%RSP
	add $-832, %RSP
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2b0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	jmp uuid_000000000007d2b2
uuid_000000000007d2b0:
	movq -808(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -80(%rbp)
uuid_000000000007d2b2:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007d2b5:
	mov -816(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007d2b9:
	mov -488(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007d2bc
uuid_000000000007d2ba:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
uuid_000000000007d2bc:
	mov -360(%RBP),%RSP
	add $-480, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007d2bd
uuid_000000000007d2bf:
	subq $24, %rsp
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
typecheck_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
uuid_000000000007d2cd:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2ce
	jmp uuid_000000000007d2cf
uuid_000000000007d2ce:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2c6
	jmp uuid_000000000007d2c8
uuid_000000000007d2c6:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2c3
	jmp uuid_000000000007d2c5
uuid_000000000007d2c3:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2c0
	jmp uuid_000000000007d2c2
uuid_000000000007d2c0:
	movb $1, -312(%rbp)
uuid_000000000007d2c2:
	mov -408(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007d2c5:
	mov -328(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007d2c8:
	mov -320(%RBP),%RSP
	add $-480, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2ca
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d2c9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d2cc
uuid_000000000007d2ca:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -480(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007d2cc:
	mov -232(%RBP),%RSP
	add $-480, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d2cd
uuid_000000000007d2cf:
uuid_000000000007d2dd:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2de
	jmp uuid_000000000007d2df
uuid_000000000007d2de:
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2d6
	jmp uuid_000000000007d2d8
uuid_000000000007d2d6:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2d3
	jmp uuid_000000000007d2d5
uuid_000000000007d2d3:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2d0
	jmp uuid_000000000007d2d2
uuid_000000000007d2d0:
	movb $1, -312(%rbp)
uuid_000000000007d2d2:
	mov -408(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007d2d5:
	mov -328(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007d2d8:
	mov -320(%RBP),%RSP
	add $-480, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2da
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d2d9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d2dc
uuid_000000000007d2da:
#call function infer-global-context : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call infer_SB_global_SB_context_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -480(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007d2dc:
	mov -232(%RBP),%RSP
	add $-480, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d2dd
uuid_000000000007d2df:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d304:
#call function non-zero : Arrow<List<StackToSpecialize>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d305
	jmp uuid_000000000007d306
uuid_000000000007d305:
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2fd
	jmp uuid_000000000007d2ff
uuid_000000000007d2fd:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2fa
	jmp uuid_000000000007d2fc
uuid_000000000007d2fa:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2f4
	jmp uuid_000000000007d2f6
uuid_000000000007d2f4:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007d2f1
	jmp uuid_000000000007d2f3
uuid_000000000007d2f1:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	jmp uuid_000000000007d2ee
	jmp uuid_000000000007d2f0
uuid_000000000007d2ee:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007d2eb
	jmp uuid_000000000007d2ed
uuid_000000000007d2eb:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d2e8
	jmp uuid_000000000007d2ea
uuid_000000000007d2e8:
	movb $1, -984(%rbp)
uuid_000000000007d2ea:
	mov -1192(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d2ed:
	mov -1160(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d2f0:
	mov -1032(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d2f3:
	mov -1000(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d2f6:
	mov -992(%RBP),%RSP
	add $-1200, %RSP
	mov -984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d2f7
	jmp uuid_000000000007d2f9
uuid_000000000007d2f7:
	movb $1, -568(%rbp)
uuid_000000000007d2f9:
	mov -792(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d2fc:
	mov -584(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d2ff:
	mov -576(%RBP),%RSP
	add $-1200, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d301
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d300
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d303
uuid_000000000007d301:
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r14
	movq -784(%rbp), %r15
	movq %r15, 0(%r14)
	movq -776(%rbp), %r15
	movq %r15, 8(%r14)
	movq -768(%rbp), %r15
	movq %r15, 16(%r14)
	movq -760(%rbp), %r15
	movq %r15, 24(%r14)
	movq -752(%rbp), %r15
	movq %r15, 32(%r14)
	movq -744(%rbp), %r15
	movq %r15, 40(%r14)
	movq -736(%rbp), %r15
	movq %r15, 48(%r14)
	movq -728(%rbp), %r15
	movq %r15, 56(%r14)
	movq -720(%rbp), %r15
	movq %r15, 64(%r14)
	movq -712(%rbp), %r15
	movq %r15, 72(%r14)
	movq -704(%rbp), %r15
	movq %r15, 80(%r14)
	movq -696(%rbp), %r15
	movq %r15, 88(%r14)
	movq -688(%rbp), %r15
	movq %r15, 96(%r14)
	movq -680(%rbp), %r15
	movq %r15, 104(%r14)
	movq -672(%rbp), %r15
	movq %r15, 112(%r14)
	movq -664(%rbp), %r15
	movq %r15, 120(%r14)
	movq -656(%rbp), %r15
	movq %r15, 128(%r14)
	movq -648(%rbp), %r15
	movq %r15, 136(%r14)
	movq -640(%rbp), %r15
	movq %r15, 144(%r14)
	movq -632(%rbp), %r15
	movq %r15, 152(%r14)
	movq -624(%rbp), %r15
	movq %r15, 160(%r14)
	movq -616(%rbp), %r15
	movq %r15, 168(%r14)
	movq -608(%rbp), %r15
	movq %r15, 176(%r14)
	movq -600(%rbp), %r15
	movq %r15, 184(%r14)
	movq -592(%rbp), %r15
	movq %r15, 192(%r14)
#call function specialize : Arrow<Cons<Cons<Cons<String,Type>,TContext>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call specialize_CL_ArrowNilConsTypeConsTContextConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d303:
	mov -360(%RBP),%RSP
	add $-1200, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $200, %rsp
	add $184, %rsp
	add $8, %rsp
	add $24, %rsp
	add $120, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d304
uuid_000000000007d306:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
substitute_CL_ArrowTokenConsTokenContext:
	mov -104(%RBP), %RAX
	push %RAX
uuid_000000000007d350:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d351
	jmp uuid_000000000007d352
uuid_000000000007d351:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov -368(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d34d
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d319
	jmp uuid_000000000007d31b
uuid_000000000007d319:
	push %RBP
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d30d
	jmp uuid_000000000007d30f
uuid_000000000007d30d:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	jmp uuid_000000000007d30a
	jmp uuid_000000000007d30c
uuid_000000000007d30a:
	push %RBP
	jmp uuid_000000000007d307
	jmp uuid_000000000007d309
uuid_000000000007d307:
	movb $1, -576(%rbp)
uuid_000000000007d309:
	mov -656(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007d30c:
	mov -592(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007d30f:
	mov -584(%RBP),%RSP
	add $-656, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d316
	jmp uuid_000000000007d318
uuid_000000000007d316:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d313
	jmp uuid_000000000007d315
uuid_000000000007d313:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d310
	jmp uuid_000000000007d312
uuid_000000000007d310:
	movb $1, -480(%rbp)
uuid_000000000007d312:
	mov -680(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007d315:
	mov -664(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007d318:
	mov -496(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007d31b:
	mov -488(%RBP),%RSP
	add $-776, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d34a
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d331
	jmp uuid_000000000007d333
uuid_000000000007d331:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d325
	jmp uuid_000000000007d327
uuid_000000000007d325:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007d322
	jmp uuid_000000000007d324
uuid_000000000007d322:
	push %RBP
	jmp uuid_000000000007d31f
	jmp uuid_000000000007d321
uuid_000000000007d31f:
	movb $1, -984(%rbp)
uuid_000000000007d321:
	mov -1064(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007d324:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007d327:
	mov -992(%RBP),%RSP
	add $-1064, %RSP
	mov -984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d32e
	jmp uuid_000000000007d330
uuid_000000000007d32e:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d32b
	jmp uuid_000000000007d32d
uuid_000000000007d32b:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d328
	jmp uuid_000000000007d32a
uuid_000000000007d328:
	movb $1, -888(%rbp)
uuid_000000000007d32a:
	mov -1088(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007d32d:
	mov -1072(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007d330:
	mov -904(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007d333:
	mov -896(%RBP),%RSP
	add $-1184, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d347
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -1288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d340
	jmp uuid_000000000007d342
uuid_000000000007d340:
	push %RBP
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	jmp uuid_000000000007d33d
	jmp uuid_000000000007d33f
uuid_000000000007d33d:
	push %RBP
	mov -1208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d33a
	jmp uuid_000000000007d33c
uuid_000000000007d33a:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d337
	jmp uuid_000000000007d339
uuid_000000000007d337:
	movb $1, -1296(%rbp)
uuid_000000000007d339:
	mov -1408(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007d33c:
	mov -1392(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007d33f:
	mov -1312(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007d342:
	mov -1304(%RBP),%RSP
	add $-1504, %RSP
	mov -1296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d344
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d343
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d346
uuid_000000000007d344:
	movq -1504(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d346:
	mov -1192(%RBP),%RSP
	add $-1504, %RSP
	jmp uuid_000000000007d349
uuid_000000000007d347:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d334
	movq -1184(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d336
uuid_000000000007d334:
	movq -1056(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -104(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d336:
	mov -1192(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007d349:
	mov -784(%RBP),%RSP
	add $-1192, %RSP
	jmp uuid_000000000007d34c
uuid_000000000007d34a:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d31c
	movq -776(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d31e
uuid_000000000007d31c:
	movq -648(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -640(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -104(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d31e:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007d34c:
	mov -376(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007d34f
uuid_000000000007d34d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d34f:
	mov -272(%RBP),%RSP
	add $-368, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	jmp uuid_000000000007d350
uuid_000000000007d352:
	subq $56, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $160, %rsp
	ret
substitute_CL_ArrowListTypeConsListTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d362
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d35b
	jmp uuid_000000000007d35d
uuid_000000000007d35b:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d358
	jmp uuid_000000000007d35a
uuid_000000000007d358:
	push %RBP
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007d355
	jmp uuid_000000000007d357
uuid_000000000007d355:
	movb $1, -312(%rbp)
uuid_000000000007d357:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007d35a:
	mov -328(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007d35d:
	mov -320(%RBP),%RSP
	add $-400, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d35f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d35e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d361
uuid_000000000007d35f:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function substitute : Arrow<Cons<TContext,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d361:
	mov -264(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007d364
uuid_000000000007d362:
uuid_000000000007d364:
	mov -216(%RBP),%RSP
	add $-256, %RSP
	subq $40, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
substitute_CL_ArrowTypeConsTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d368
	jmp uuid_000000000007d36a
uuid_000000000007d368:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d365
	jmp uuid_000000000007d367
uuid_000000000007d365:
	movb $1, -216(%rbp)
uuid_000000000007d367:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007d36a:
	mov -224(%RBP),%RSP
	add $-240, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3a3
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d38d
	jmp uuid_000000000007d38f
uuid_000000000007d38d:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d38a
	jmp uuid_000000000007d38c
uuid_000000000007d38a:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d387
	jmp uuid_000000000007d389
uuid_000000000007d387:
	movb $1, -280(%rbp)
uuid_000000000007d389:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007d38c:
	mov -296(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007d38f:
	mov -288(%RBP),%RSP
	add $-352, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3a0
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d396
	jmp uuid_000000000007d398
uuid_000000000007d396:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d393
	jmp uuid_000000000007d395
uuid_000000000007d393:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d390
	jmp uuid_000000000007d392
uuid_000000000007d390:
	movb $1, -392(%rbp)
uuid_000000000007d392:
	mov -440(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007d395:
	mov -408(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007d398:
	mov -400(%RBP),%RSP
	add $-464, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d39d
	push %RBP
	jmp uuid_000000000007d39a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d399
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d39c
uuid_000000000007d39a:
uuid_000000000007d39c:
	mov -472(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007d39f
uuid_000000000007d39d:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d39f:
	mov -360(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007d3a2
uuid_000000000007d3a0:
	pushq -352(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d3a2:
	mov -248(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007d3a5
uuid_000000000007d3a3:
uuid_000000000007d384:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d385
	jmp uuid_000000000007d386
uuid_000000000007d385:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d381
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d377
	jmp uuid_000000000007d379
uuid_000000000007d377:
	push %RBP
	jmp uuid_000000000007d374
	jmp uuid_000000000007d376
uuid_000000000007d374:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007d371
	jmp uuid_000000000007d373
uuid_000000000007d371:
	push %RBP
	mov -512(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d36e
	jmp uuid_000000000007d370
uuid_000000000007d36e:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d36b
	jmp uuid_000000000007d36d
uuid_000000000007d36b:
	movb $1, -624(%rbp)
uuid_000000000007d36d:
	mov -696(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007d370:
	mov -680(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007d373:
	mov -648(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007d376:
	mov -640(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007d379:
	mov -632(%RBP),%RSP
	add $-816, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d37e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d37d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d380
uuid_000000000007d37e:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d37a
	movq -816(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d37c
uuid_000000000007d37a:
	movq -672(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -664(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -128(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d37c:
	mov -824(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007d380:
	mov -496(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007d383
uuid_000000000007d381:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d383:
	mov -368(%RBP),%RSP
	add $-488, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007d384
uuid_000000000007d386:
uuid_000000000007d3a5:
	mov -184(%RBP),%RSP
	add $-240, %RSP
	subq $24, %rsp
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
substitute_CL_ArrowListTypeConsListTypeContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3b5
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3ae
	jmp uuid_000000000007d3b0
uuid_000000000007d3ae:
	push %RBP
	mov -272(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3ab
	jmp uuid_000000000007d3ad
uuid_000000000007d3ab:
	push %RBP
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	jmp uuid_000000000007d3a8
	jmp uuid_000000000007d3aa
uuid_000000000007d3a8:
	movb $1, -288(%rbp)
uuid_000000000007d3aa:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007d3ad:
	mov -304(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007d3b0:
	mov -296(%RBP),%RSP
	add $-376, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3b2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d3b1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d3b4
uuid_000000000007d3b2:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
#call function substitute : Arrow<Cons<Context,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007d3b4:
	mov -240(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007d3b7
uuid_000000000007d3b5:
uuid_000000000007d3b7:
	mov -192(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
substitute_CL_ArrowTypeConsTypeContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3bb
	jmp uuid_000000000007d3bd
uuid_000000000007d3bb:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d3b8
	jmp uuid_000000000007d3ba
uuid_000000000007d3b8:
	movb $1, -192(%rbp)
uuid_000000000007d3ba:
	mov -208(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007d3bd:
	mov -200(%RBP),%RSP
	add $-216, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d426
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d410
	jmp uuid_000000000007d412
uuid_000000000007d410:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d40d
	jmp uuid_000000000007d40f
uuid_000000000007d40d:
	push %RBP
	mov -232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d40a
	jmp uuid_000000000007d40c
uuid_000000000007d40a:
	movb $1, -256(%rbp)
uuid_000000000007d40c:
	mov -320(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007d40f:
	mov -272(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007d412:
	mov -264(%RBP),%RSP
	add $-328, %RSP
	mov -256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d423
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d419
	jmp uuid_000000000007d41b
uuid_000000000007d419:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d416
	jmp uuid_000000000007d418
uuid_000000000007d416:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d413
	jmp uuid_000000000007d415
uuid_000000000007d413:
	movb $1, -368(%rbp)
uuid_000000000007d415:
	mov -416(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d418:
	mov -384(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d41b:
	mov -376(%RBP),%RSP
	add $-440, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d420
	push %RBP
	jmp uuid_000000000007d41d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d41c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d41f
uuid_000000000007d41d:
uuid_000000000007d41f:
	mov -448(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_000000000007d422
uuid_000000000007d420:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007d422:
	mov -336(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007d425
uuid_000000000007d423:
	pushq -328(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007d425:
	mov -224(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007d428
uuid_000000000007d426:
uuid_000000000007d407:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d408
	jmp uuid_000000000007d409
uuid_000000000007d408:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d404
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3d0
	jmp uuid_000000000007d3d2
uuid_000000000007d3d0:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3c4
	jmp uuid_000000000007d3c6
uuid_000000000007d3c4:
	push %RBP
	jmp uuid_000000000007d3c1
	jmp uuid_000000000007d3c3
uuid_000000000007d3c1:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d3be
	jmp uuid_000000000007d3c0
uuid_000000000007d3be:
	movb $1, -624(%rbp)
uuid_000000000007d3c0:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007d3c3:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007d3c6:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3cd
	jmp uuid_000000000007d3cf
uuid_000000000007d3cd:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d3ca
	jmp uuid_000000000007d3cc
uuid_000000000007d3ca:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3c7
	jmp uuid_000000000007d3c9
uuid_000000000007d3c7:
	movb $1, -528(%rbp)
uuid_000000000007d3c9:
	mov -680(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007d3cc:
	mov -664(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007d3cf:
	mov -544(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007d3d2:
	mov -536(%RBP),%RSP
	add $-776, %RSP
	mov -528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d401
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3e8
	jmp uuid_000000000007d3ea
uuid_000000000007d3e8:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3dc
	jmp uuid_000000000007d3de
uuid_000000000007d3dc:
	push %RBP
	jmp uuid_000000000007d3d9
	jmp uuid_000000000007d3db
uuid_000000000007d3d9:
	push %RBP
	mov -912(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d3d6
	jmp uuid_000000000007d3d8
uuid_000000000007d3d6:
	movb $1, -984(%rbp)
uuid_000000000007d3d8:
	mov -1008(%RBP),%RSP
	add $-1016, %RSP
uuid_000000000007d3db:
	mov -1000(%RBP),%RSP
	add $-1016, %RSP
uuid_000000000007d3de:
	mov -992(%RBP),%RSP
	add $-1016, %RSP
	mov -984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3e5
	jmp uuid_000000000007d3e7
uuid_000000000007d3e5:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d3e2
	jmp uuid_000000000007d3e4
uuid_000000000007d3e2:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3df
	jmp uuid_000000000007d3e1
uuid_000000000007d3df:
	movb $1, -888(%rbp)
uuid_000000000007d3e1:
	mov -1040(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007d3e4:
	mov -1024(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007d3e7:
	mov -904(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007d3ea:
	mov -896(%RBP),%RSP
	add $-1136, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3fe
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3f7
	jmp uuid_000000000007d3f9
uuid_000000000007d3f7:
	push %RBP
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	jmp uuid_000000000007d3f4
	jmp uuid_000000000007d3f6
uuid_000000000007d3f4:
	push %RBP
	mov -1160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d3f1
	jmp uuid_000000000007d3f3
uuid_000000000007d3f1:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3ee
	jmp uuid_000000000007d3f0
uuid_000000000007d3ee:
	movb $1, -1248(%rbp)
uuid_000000000007d3f0:
	mov -1360(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d3f3:
	mov -1344(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d3f6:
	mov -1264(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d3f9:
	mov -1256(%RBP),%RSP
	add $-1456, %RSP
	mov -1248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d3fb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d3fa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d3fd
uuid_000000000007d3fb:
	movq -1456(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d3fd:
	mov -1144(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_000000000007d400
uuid_000000000007d3fe:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3eb
	movq -1136(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d3ed
uuid_000000000007d3eb:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d3ed:
	mov -1144(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007d400:
	mov -784(%RBP),%RSP
	add $-1144, %RSP
	jmp uuid_000000000007d403
uuid_000000000007d401:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3d3
	movq -776(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d3d5
uuid_000000000007d3d3:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d3d5:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007d403:
	mov -424(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007d406
uuid_000000000007d404:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d406:
	mov -320(%RBP),%RSP
	add $-416, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	jmp uuid_000000000007d407
uuid_000000000007d409:
uuid_000000000007d428:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	subq $24, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $128, %rsp
	ret
substitute_SB_lhs_CL_ArrowASTConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d459
	jmp uuid_000000000007d45b
uuid_000000000007d459:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d450
	jmp uuid_000000000007d452
uuid_000000000007d450:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d43e
	jmp uuid_000000000007d440
uuid_000000000007d43e:
	push %RBP
	mov -536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d42c
	jmp uuid_000000000007d42e
uuid_000000000007d42c:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	jmp uuid_000000000007d429
	jmp uuid_000000000007d42b
uuid_000000000007d429:
	movb $1, -648(%rbp)
uuid_000000000007d42b:
	mov -664(%RBP),%RSP
	add $-688, %RSP
uuid_000000000007d42e:
	mov -656(%RBP),%RSP
	add $-688, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d43b
	jmp uuid_000000000007d43d
uuid_000000000007d43b:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d435
	jmp uuid_000000000007d437
uuid_000000000007d435:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	jmp uuid_000000000007d432
	jmp uuid_000000000007d434
uuid_000000000007d432:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d42f
	jmp uuid_000000000007d431
uuid_000000000007d42f:
	movb $1, -776(%rbp)
uuid_000000000007d431:
	mov -856(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007d434:
	mov -792(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007d437:
	mov -784(%RBP),%RSP
	add $-864, %RSP
	mov -776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d438
	jmp uuid_000000000007d43a
uuid_000000000007d438:
	movb $1, -552(%rbp)
uuid_000000000007d43a:
	mov -696(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007d43d:
	mov -568(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007d440:
	mov -560(%RBP),%RSP
	add $-864, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d44d
	jmp uuid_000000000007d44f
uuid_000000000007d44d:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -944(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d447
	jmp uuid_000000000007d449
uuid_000000000007d447:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007d444
	jmp uuid_000000000007d446
uuid_000000000007d444:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d441
	jmp uuid_000000000007d443
uuid_000000000007d441:
	movb $1, -952(%rbp)
uuid_000000000007d443:
	mov -1032(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007d446:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007d449:
	mov -960(%RBP),%RSP
	add $-1040, %RSP
	mov -952(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d44a
	jmp uuid_000000000007d44c
uuid_000000000007d44a:
	movb $1, -456(%rbp)
uuid_000000000007d44c:
	mov -872(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007d44f:
	mov -472(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007d452:
	mov -464(%RBP),%RSP
	add $-1040, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d456
	jmp uuid_000000000007d458
uuid_000000000007d456:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d453
	jmp uuid_000000000007d455
uuid_000000000007d453:
	movb $1, -360(%rbp)
uuid_000000000007d455:
	mov -1048(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007d458:
	mov -376(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007d45b:
	mov -368(%RBP),%RSP
	add $-1120, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4b2
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d483
	jmp uuid_000000000007d485
uuid_000000000007d483:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d471
	jmp uuid_000000000007d473
uuid_000000000007d471:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d45f
	jmp uuid_000000000007d461
uuid_000000000007d45f:
	push %RBP
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007d45c
	jmp uuid_000000000007d45e
uuid_000000000007d45c:
	movb $1, -1400(%rbp)
uuid_000000000007d45e:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007d461:
	mov -1408(%RBP),%RSP
	add $-1440, %RSP
	mov -1400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d46e
	jmp uuid_000000000007d470
uuid_000000000007d46e:
	push %RBP
	mov -1280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d468
	jmp uuid_000000000007d46a
uuid_000000000007d468:
	push %RBP
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	jmp uuid_000000000007d465
	jmp uuid_000000000007d467
uuid_000000000007d465:
	push %RBP
	mov -1456(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d462
	jmp uuid_000000000007d464
uuid_000000000007d462:
	movb $1, -1528(%rbp)
uuid_000000000007d464:
	mov -1608(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007d467:
	mov -1544(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007d46a:
	mov -1536(%RBP),%RSP
	add $-1616, %RSP
	mov -1528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d46b
	jmp uuid_000000000007d46d
uuid_000000000007d46b:
	movb $1, -1304(%rbp)
uuid_000000000007d46d:
	mov -1448(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007d470:
	mov -1320(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007d473:
	mov -1312(%RBP),%RSP
	add $-1616, %RSP
	mov -1304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d480
	jmp uuid_000000000007d482
uuid_000000000007d480:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d47a
	jmp uuid_000000000007d47c
uuid_000000000007d47a:
	push %RBP
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	jmp uuid_000000000007d477
	jmp uuid_000000000007d479
uuid_000000000007d477:
	push %RBP
	mov -1632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1792(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d474
	jmp uuid_000000000007d476
uuid_000000000007d474:
	movb $1, -1704(%rbp)
uuid_000000000007d476:
	mov -1784(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007d479:
	mov -1720(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007d47c:
	mov -1712(%RBP),%RSP
	add $-1792, %RSP
	mov -1704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d47d
	jmp uuid_000000000007d47f
uuid_000000000007d47d:
	movb $1, -1208(%rbp)
uuid_000000000007d47f:
	mov -1624(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007d482:
	mov -1224(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007d485:
	mov -1216(%RBP),%RSP
	add $-1792, %RSP
	mov -1208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4af
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d495
	jmp uuid_000000000007d497
uuid_000000000007d495:
	push %RBP
	mov -1864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1968(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d48c
	jmp uuid_000000000007d48e
uuid_000000000007d48c:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007d489
	jmp uuid_000000000007d48b
uuid_000000000007d489:
	push %RBP
	mov -1904(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d486
	jmp uuid_000000000007d488
uuid_000000000007d486:
	movb $1, -1976(%rbp)
uuid_000000000007d488:
	mov -2056(%RBP),%RSP
	add $-2064, %RSP
uuid_000000000007d48b:
	mov -1992(%RBP),%RSP
	add $-2064, %RSP
uuid_000000000007d48e:
	mov -1984(%RBP),%RSP
	add $-2064, %RSP
	mov -1976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d492
	jmp uuid_000000000007d494
uuid_000000000007d492:
	push %RBP
	mov -1856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d48f
	jmp uuid_000000000007d491
uuid_000000000007d48f:
	movb $1, -1880(%rbp)
uuid_000000000007d491:
	mov -2072(%RBP),%RSP
	add $-2144, %RSP
uuid_000000000007d494:
	mov -1896(%RBP),%RSP
	add $-2144, %RSP
uuid_000000000007d497:
	mov -1888(%RBP),%RSP
	add $-2144, %RSP
	mov -1880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4ac
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2224(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d49e
	jmp uuid_000000000007d4a0
uuid_000000000007d49e:
	push %RBP
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	jmp uuid_000000000007d49b
	jmp uuid_000000000007d49d
uuid_000000000007d49b:
	push %RBP
	mov -2160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d498
	jmp uuid_000000000007d49a
uuid_000000000007d498:
	movb $1, -2232(%rbp)
uuid_000000000007d49a:
	mov -2312(%RBP),%RSP
	add $-2320, %RSP
uuid_000000000007d49d:
	mov -2248(%RBP),%RSP
	add $-2320, %RSP
uuid_000000000007d4a0:
	mov -2240(%RBP),%RSP
	add $-2320, %RSP
	mov -2232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4a9
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -2400(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4a6
	push %RBP
	jmp uuid_000000000007d4a3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d4a2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d4a5
uuid_000000000007d4a3:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d4a1
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d4a5:
	mov -2408(%RBP),%RSP
	add $-2408, %RSP
	jmp uuid_000000000007d4a8
uuid_000000000007d4a6:
uuid_000000000007d4a8:
	mov -2328(%RBP),%RSP
	add $-2400, %RSP
	jmp uuid_000000000007d4ab
uuid_000000000007d4a9:
	pushq -2320(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d4ab:
	mov -2152(%RBP),%RSP
	add $-2320, %RSP
	jmp uuid_000000000007d4ae
uuid_000000000007d4ac:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d4ae:
	mov -1800(%RBP),%RSP
	add $-2144, %RSP
	jmp uuid_000000000007d4b1
uuid_000000000007d4af:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1616(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d4b1:
	mov -1128(%RBP),%RSP
	add $-1792, %RSP
	jmp uuid_000000000007d4b4
uuid_000000000007d4b2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d4b4:
	mov -280(%RBP),%RSP
	add $-1120, %RSP
	subq $72, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
substitute_CL_ArrowASTConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5af
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5ac
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4dc
	jmp uuid_000000000007d4de
uuid_000000000007d4dc:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -608(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4ca
	jmp uuid_000000000007d4cc
uuid_000000000007d4ca:
	push %RBP
	mov -600(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4b8
	jmp uuid_000000000007d4ba
uuid_000000000007d4b8:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	jmp uuid_000000000007d4b5
	jmp uuid_000000000007d4b7
uuid_000000000007d4b5:
	movb $1, -712(%rbp)
uuid_000000000007d4b7:
	mov -728(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007d4ba:
	mov -720(%RBP),%RSP
	add $-752, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4c7
	jmp uuid_000000000007d4c9
uuid_000000000007d4c7:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -832(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4c1
	jmp uuid_000000000007d4c3
uuid_000000000007d4c1:
	push %RBP
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007d4be
	jmp uuid_000000000007d4c0
uuid_000000000007d4be:
	push %RBP
	mov -768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d4bb
	jmp uuid_000000000007d4bd
uuid_000000000007d4bb:
	movb $1, -840(%rbp)
uuid_000000000007d4bd:
	mov -920(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007d4c0:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007d4c3:
	mov -848(%RBP),%RSP
	add $-928, %RSP
	mov -840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4c4
	jmp uuid_000000000007d4c6
uuid_000000000007d4c4:
	movb $1, -616(%rbp)
uuid_000000000007d4c6:
	mov -760(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007d4c9:
	mov -632(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007d4cc:
	mov -624(%RBP),%RSP
	add $-928, %RSP
	mov -616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4d9
	jmp uuid_000000000007d4db
uuid_000000000007d4d9:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4d3
	jmp uuid_000000000007d4d5
uuid_000000000007d4d3:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007d4d0
	jmp uuid_000000000007d4d2
uuid_000000000007d4d0:
	push %RBP
	mov -944(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d4cd
	jmp uuid_000000000007d4cf
uuid_000000000007d4cd:
	movb $1, -1016(%rbp)
uuid_000000000007d4cf:
	mov -1096(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007d4d2:
	mov -1032(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007d4d5:
	mov -1024(%RBP),%RSP
	add $-1104, %RSP
	mov -1016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4d6
	jmp uuid_000000000007d4d8
uuid_000000000007d4d6:
	movb $1, -520(%rbp)
uuid_000000000007d4d8:
	mov -936(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007d4db:
	mov -536(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007d4de:
	mov -528(%RBP),%RSP
	add $-1104, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5a9
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1184(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d522
	jmp uuid_000000000007d524
uuid_000000000007d522:
	push %RBP
	mov -1176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1280(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d510
	jmp uuid_000000000007d512
uuid_000000000007d510:
	push %RBP
	mov -1272(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4fe
	jmp uuid_000000000007d500
uuid_000000000007d4fe:
	push %RBP
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	jmp uuid_000000000007d4fb
	jmp uuid_000000000007d4fd
uuid_000000000007d4fb:
	movb $1, -1384(%rbp)
uuid_000000000007d4fd:
	mov -1400(%RBP),%RSP
	add $-1424, %RSP
uuid_000000000007d500:
	mov -1392(%RBP),%RSP
	add $-1424, %RSP
	mov -1384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d50d
	jmp uuid_000000000007d50f
uuid_000000000007d50d:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1504(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d507
	jmp uuid_000000000007d509
uuid_000000000007d507:
	push %RBP
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	jmp uuid_000000000007d504
	jmp uuid_000000000007d506
uuid_000000000007d504:
	push %RBP
	mov -1440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d501
	jmp uuid_000000000007d503
uuid_000000000007d501:
	movb $1, -1512(%rbp)
uuid_000000000007d503:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d506:
	mov -1528(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d509:
	mov -1520(%RBP),%RSP
	add $-1600, %RSP
	mov -1512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d50a
	jmp uuid_000000000007d50c
uuid_000000000007d50a:
	movb $1, -1288(%rbp)
uuid_000000000007d50c:
	mov -1432(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d50f:
	mov -1304(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d512:
	mov -1296(%RBP),%RSP
	add $-1600, %RSP
	mov -1288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d51f
	jmp uuid_000000000007d521
uuid_000000000007d51f:
	push %RBP
	mov -1168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1680(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d519
	jmp uuid_000000000007d51b
uuid_000000000007d519:
	push %RBP
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	jmp uuid_000000000007d516
	jmp uuid_000000000007d518
uuid_000000000007d516:
	push %RBP
	mov -1616(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d513
	jmp uuid_000000000007d515
uuid_000000000007d513:
	movb $1, -1688(%rbp)
uuid_000000000007d515:
	mov -1768(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d518:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d51b:
	mov -1696(%RBP),%RSP
	add $-1776, %RSP
	mov -1688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d51c
	jmp uuid_000000000007d51e
uuid_000000000007d51c:
	movb $1, -1192(%rbp)
uuid_000000000007d51e:
	mov -1608(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d521:
	mov -1208(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007d524:
	mov -1200(%RBP),%RSP
	add $-1776, %RSP
	mov -1192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5a6
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1856(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d547
	jmp uuid_000000000007d549
uuid_000000000007d547:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	jmp uuid_000000000007d544
	jmp uuid_000000000007d546
uuid_000000000007d544:
	push %RBP
	mov -1792(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d541
	jmp uuid_000000000007d543
uuid_000000000007d541:
	movb $1, -1864(%rbp)
uuid_000000000007d543:
	mov -1944(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007d546:
	mov -1880(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007d549:
	mov -1872(%RBP),%RSP
	add $-1952, %RSP
	mov -1864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5a3
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d550
	jmp uuid_000000000007d552
uuid_000000000007d550:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	jmp uuid_000000000007d54d
	jmp uuid_000000000007d54f
uuid_000000000007d54d:
	push %RBP
	mov -1968(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d54a
	jmp uuid_000000000007d54c
uuid_000000000007d54a:
	movb $1, -2040(%rbp)
uuid_000000000007d54c:
	mov -2120(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007d54f:
	mov -2056(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007d552:
	mov -2048(%RBP),%RSP
	add $-2128, %RSP
	mov -2040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5a0
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2208(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d55c
	jmp uuid_000000000007d55e
uuid_000000000007d55c:
	push %RBP
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	jmp uuid_000000000007d559
	jmp uuid_000000000007d55b
uuid_000000000007d559:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d556
	jmp uuid_000000000007d558
uuid_000000000007d556:
	push %RBP
	mov -2168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d553
	jmp uuid_000000000007d555
uuid_000000000007d553:
	movb $1, -2216(%rbp)
uuid_000000000007d555:
	mov -2344(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007d558:
	mov -2264(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007d55b:
	mov -2232(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007d55e:
	mov -2224(%RBP),%RSP
	add $-2416, %RSP
	mov -2216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d59d
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2496(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d562
	jmp uuid_000000000007d564
uuid_000000000007d562:
	push %RBP
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	jmp uuid_000000000007d55f
	jmp uuid_000000000007d561
uuid_000000000007d55f:
	movb $1, -2504(%rbp)
uuid_000000000007d561:
	mov -2520(%RBP),%RSP
	add $-2544, %RSP
uuid_000000000007d564:
	mov -2512(%RBP),%RSP
	add $-2544, %RSP
	mov -2504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d59a
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d56b
	jmp uuid_000000000007d56d
uuid_000000000007d56b:
	push %RBP
	mov -2616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d568
	jmp uuid_000000000007d56a
uuid_000000000007d568:
	push %RBP
	mov -2608(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d565
	jmp uuid_000000000007d567
uuid_000000000007d565:
	movb $1, -2632(%rbp)
uuid_000000000007d567:
	mov -2728(%RBP),%RSP
	add $-2800, %RSP
uuid_000000000007d56a:
	mov -2648(%RBP),%RSP
	add $-2800, %RSP
uuid_000000000007d56d:
	mov -2640(%RBP),%RSP
	add $-2800, %RSP
	mov -2632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d597
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2880(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d574
	jmp uuid_000000000007d576
uuid_000000000007d574:
	push %RBP
	mov -2872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d571
	jmp uuid_000000000007d573
uuid_000000000007d571:
	push %RBP
	mov -2864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d56e
	jmp uuid_000000000007d570
uuid_000000000007d56e:
	movb $1, -2888(%rbp)
uuid_000000000007d570:
	mov -2984(%RBP),%RSP
	add $-3056, %RSP
uuid_000000000007d573:
	mov -2904(%RBP),%RSP
	add $-3056, %RSP
uuid_000000000007d576:
	mov -2896(%RBP),%RSP
	add $-3056, %RSP
	mov -2888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d594
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -3136(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d57d
	jmp uuid_000000000007d57f
uuid_000000000007d57d:
	push %RBP
	mov -3128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d57a
	jmp uuid_000000000007d57c
uuid_000000000007d57a:
	push %RBP
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	pushq -3088(%RBP)
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	pushq -3120(%RBP)
	jmp uuid_000000000007d577
	jmp uuid_000000000007d579
uuid_000000000007d577:
	movb $1, -3144(%rbp)
uuid_000000000007d579:
	mov -3240(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007d57c:
	mov -3160(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007d57f:
	mov -3152(%RBP),%RSP
	add $-3296, %RSP
	mov -3144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d591
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -3376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d586
	jmp uuid_000000000007d588
uuid_000000000007d586:
	push %RBP
	mov -3368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d583
	jmp uuid_000000000007d585
uuid_000000000007d583:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d580
	jmp uuid_000000000007d582
uuid_000000000007d580:
	movb $1, -3384(%rbp)
uuid_000000000007d582:
	mov -3480(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007d585:
	mov -3400(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007d588:
	mov -3392(%RBP),%RSP
	add $-3552, %RSP
	mov -3384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d58e
	push %RBP
	jmp uuid_000000000007d58b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d58a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d58d
uuid_000000000007d58b:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d589
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d58d:
	mov -3560(%RBP),%RSP
	add $-3560, %RSP
	jmp uuid_000000000007d590
uuid_000000000007d58e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3488(%rbp)
	pushq -3496(%rbp)
	pushq -3504(%rbp)
	pushq -3512(%rbp)
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	pushq -3424(%rbp)
	pushq -3432(%rbp)
	pushq -3440(%rbp)
	pushq -3448(%rbp)
	pushq -3456(%rbp)
	pushq -3464(%rbp)
	pushq -3472(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d590:
	mov -3304(%RBP),%RSP
	add $-3552, %RSP
	jmp uuid_000000000007d593
uuid_000000000007d591:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	pushq -3264(%rbp)
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq -3184(%rbp)
	pushq -3192(%rbp)
	pushq -3200(%rbp)
	pushq -3208(%rbp)
	pushq -3216(%rbp)
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d593:
	mov -3064(%RBP),%RSP
	add $-3296, %RSP
	jmp uuid_000000000007d596
uuid_000000000007d594:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	pushq -3016(%rbp)
	pushq -3024(%rbp)
	pushq -3032(%rbp)
	pushq -3040(%rbp)
	pushq -3048(%rbp)
	pushq -3056(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d596:
	mov -2808(%RBP),%RSP
	add $-3056, %RSP
	jmp uuid_000000000007d599
uuid_000000000007d597:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	pushq -2776(%rbp)
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	pushq -2696(%rbp)
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d599:
	mov -2552(%RBP),%RSP
	add $-2800, %RSP
	jmp uuid_000000000007d59c
uuid_000000000007d59a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d59c:
	mov -2424(%RBP),%RSP
	add $-2544, %RSP
	jmp uuid_000000000007d59f
uuid_000000000007d59d:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $5
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d59f:
	mov -2136(%RBP),%RSP
	add $-2416, %RSP
	jmp uuid_000000000007d5a2
uuid_000000000007d5a0:
	pushq -2128(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d5a2:
	mov -1960(%RBP),%RSP
	add $-2128, %RSP
	jmp uuid_000000000007d5a5
uuid_000000000007d5a3:
	pushq -1952(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d5a5:
	mov -1784(%RBP),%RSP
	add $-1952, %RSP
	jmp uuid_000000000007d5a8
uuid_000000000007d5a6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d53e:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d53f
	jmp uuid_000000000007d540
uuid_000000000007d53f:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov -2024(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d53b
	push %RBP
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d531
	jmp uuid_000000000007d533
uuid_000000000007d531:
	push %RBP
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	jmp uuid_000000000007d52e
	jmp uuid_000000000007d530
uuid_000000000007d52e:
	push %RBP
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	jmp uuid_000000000007d52b
	jmp uuid_000000000007d52d
uuid_000000000007d52b:
	push %RBP
	mov -2048(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d528
	jmp uuid_000000000007d52a
uuid_000000000007d528:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d525
	jmp uuid_000000000007d527
uuid_000000000007d525:
	movb $1, -2160(%rbp)
uuid_000000000007d527:
	mov -2304(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007d52a:
	mov -2288(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007d52d:
	mov -2256(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007d530:
	mov -2176(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007d533:
	mov -2168(%RBP),%RSP
	add $-2424, %RSP
	mov -2160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d538
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d537
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d53a
uuid_000000000007d538:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2296(%rbp)
	pushq -1600(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d534
	movq -2424(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2416(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2408(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2400(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2392(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2384(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2376(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2368(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2360(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2352(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2344(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d536
uuid_000000000007d534:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d536:
	mov -2432(%RBP),%RSP
	add $-2432, %RSP
uuid_000000000007d53a:
	mov -2032(%RBP),%RSP
	add $-2432, %RSP
	jmp uuid_000000000007d53d
uuid_000000000007d53b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d53d:
	mov -1904(%RBP),%RSP
	add $-2024, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007d53e
uuid_000000000007d540:
uuid_000000000007d5a8:
	mov -1112(%RBP),%RSP
	add $-1776, %RSP
	jmp uuid_000000000007d5ab
uuid_000000000007d5a9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007d4f8:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d4f9
	jmp uuid_000000000007d4fa
uuid_000000000007d4f9:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4f5
	push %RBP
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4eb
	jmp uuid_000000000007d4ed
uuid_000000000007d4eb:
	push %RBP
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	jmp uuid_000000000007d4e8
	jmp uuid_000000000007d4ea
uuid_000000000007d4e8:
	push %RBP
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	jmp uuid_000000000007d4e5
	jmp uuid_000000000007d4e7
uuid_000000000007d4e5:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d4e2
	jmp uuid_000000000007d4e4
uuid_000000000007d4e2:
	push %RBP
	mov -1368(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d4df
	jmp uuid_000000000007d4e1
uuid_000000000007d4df:
	movb $1, -1488(%rbp)
uuid_000000000007d4e1:
	mov -1632(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007d4e4:
	mov -1616(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007d4e7:
	mov -1584(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007d4ea:
	mov -1504(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007d4ed:
	mov -1496(%RBP),%RSP
	add $-1752, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d4f2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d4f1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d4f4
uuid_000000000007d4f2:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq -928(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d4ee
	movq -1752(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1744(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1736(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1728(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d4f0
uuid_000000000007d4ee:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d4f0:
	mov -1760(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007d4f4:
	mov -1360(%RBP),%RSP
	add $-1760, %RSP
	jmp uuid_000000000007d4f7
uuid_000000000007d4f5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d4f7:
	mov -1232(%RBP),%RSP
	add $-1352, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007d4f8
uuid_000000000007d4fa:
uuid_000000000007d5ab:
	mov -440(%RBP),%RSP
	add $-1104, %RSP
	jmp uuid_000000000007d5ae
uuid_000000000007d5ac:
uuid_000000000007d5ae:
	mov -360(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007d5b1
uuid_000000000007d5af:
uuid_000000000007d5b1:
	mov -280(%RBP),%RSP
	add $-352, %RSP
	subq $72, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
substitute_CL_ArrowSConsSStringSList:
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5de
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5b5
	jmp uuid_000000000007d5b7
uuid_000000000007d5b5:
	push %RBP
	mov -160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d5b2
	jmp uuid_000000000007d5b4
uuid_000000000007d5b2:
	movb $1, -176(%rbp)
uuid_000000000007d5b4:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007d5b7:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	mov -176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5db
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5d4
	jmp uuid_000000000007d5d6
uuid_000000000007d5d4:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d5d1
	jmp uuid_000000000007d5d3
uuid_000000000007d5d1:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d5ce
	jmp uuid_000000000007d5d0
uuid_000000000007d5ce:
	movb $1, -240(%rbp)
uuid_000000000007d5d0:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007d5d3:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007d5d6:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5d8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d5d7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d5da
uuid_000000000007d5d8:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<StringSList,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowSConsSStringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<StringSList,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowSConsSStringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007d5da:
	mov -208(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007d5dd
uuid_000000000007d5db:
uuid_000000000007d5cb:
#call function non-zero : Arrow<StringSList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64StringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5cc
	jmp uuid_000000000007d5cd
uuid_000000000007d5cc:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5c1
	jmp uuid_000000000007d5c3
uuid_000000000007d5c1:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	jmp uuid_000000000007d5be
	jmp uuid_000000000007d5c0
uuid_000000000007d5be:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d5bb
	jmp uuid_000000000007d5bd
uuid_000000000007d5bb:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d5b8
	jmp uuid_000000000007d5ba
uuid_000000000007d5b8:
	movb $1, -312(%rbp)
uuid_000000000007d5ba:
	mov -376(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007d5bd:
	mov -360(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007d5c0:
	mov -328(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007d5c3:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5c8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d5c7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d5ca
uuid_000000000007d5c8:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5c4
	jmp uuid_000000000007d5c6
uuid_000000000007d5c4:
	movq -352(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007d5c6:
	mov -432(%RBP),%RSP
	add $-432, %RSP
	movq -424(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d5ca:
	mov -256(%RBP),%RSP
	add $-432, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d5cb
uuid_000000000007d5cd:
uuid_000000000007d5dd:
	mov -144(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007d5e0
uuid_000000000007d5de:
	pushq $0
	pushq $0
	pushq $3
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007d5e0:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
specialize_CL_ArrowNilConsTypeConsTContextConsTypeString:
	push %RBP
#call function is-special : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_special_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d61f
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007d619:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d61a
	jmp uuid_000000000007d61b
uuid_000000000007d61a:
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	push %RBP
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d616
	push %RBP
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5ed
	jmp uuid_000000000007d5ef
uuid_000000000007d5ed:
	push %RBP
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	jmp uuid_000000000007d5ea
	jmp uuid_000000000007d5ec
uuid_000000000007d5ea:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007d5e7
	jmp uuid_000000000007d5e9
uuid_000000000007d5e7:
	push %RBP
	mov -656(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d5e4
	jmp uuid_000000000007d5e6
uuid_000000000007d5e4:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d5e1
	jmp uuid_000000000007d5e3
uuid_000000000007d5e1:
	movb $1, -768(%rbp)
uuid_000000000007d5e3:
	mov -912(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007d5e6:
	mov -896(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007d5e9:
	mov -864(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007d5ec:
	mov -784(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007d5ef:
	mov -776(%RBP),%RSP
	add $-1032, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d613
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d612
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d615
uuid_000000000007d613:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d60f
	jmp uuid_000000000007d611
uuid_000000000007d60f:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d60c
	jmp uuid_000000000007d60e
uuid_000000000007d60c:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	push %RBP
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d602
	jmp uuid_000000000007d604
uuid_000000000007d602:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5f9
	jmp uuid_000000000007d5fb
uuid_000000000007d5f9:
	push %RBP
	jmp uuid_000000000007d5f6
	jmp uuid_000000000007d5f8
uuid_000000000007d5f6:
	push %RBP
	jmp uuid_000000000007d5f3
	jmp uuid_000000000007d5f5
uuid_000000000007d5f3:
	push %RBP
	jmp uuid_000000000007d5f0
	jmp uuid_000000000007d5f2
uuid_000000000007d5f0:
	movb $1, -1304(%rbp)
uuid_000000000007d5f2:
	mov -1336(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007d5f5:
	mov -1328(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007d5f8:
	mov -1320(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007d5fb:
	mov -1312(%RBP),%RSP
	add $-1336, %RSP
	mov -1304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d5ff
	jmp uuid_000000000007d601
uuid_000000000007d5ff:
	push %RBP
	jmp uuid_000000000007d5fc
	jmp uuid_000000000007d5fe
uuid_000000000007d5fc:
	movb $1, -1208(%rbp)
uuid_000000000007d5fe:
	mov -1344(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007d601:
	mov -1224(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007d604:
	mov -1216(%RBP),%RSP
	add $-1344, %RSP
	mov -1208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d609
	push %RBP
	jmp uuid_000000000007d606
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d605
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d608
uuid_000000000007d606:
uuid_000000000007d608:
	mov -1352(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007d60b
uuid_000000000007d609:
	movq -856(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -832(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -824(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -816(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -200(%rbp)
uuid_000000000007d60b:
	mov -1128(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007d60e:
	mov -1048(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007d611:
	mov -1040(%RBP),%RSP
	add $-1344, %RSP
	movq -1032(%rbp), %r15
	movq %r15, -384(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -376(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -368(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -272(%rbp)
uuid_000000000007d615:
	mov -640(%RBP),%RSP
	add $-1344, %RSP
	jmp uuid_000000000007d618
uuid_000000000007d616:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
uuid_000000000007d618:
	mov -512(%RBP),%RSP
	add $-632, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007d619
uuid_000000000007d61b:
#call function mark-as-special : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call mark_SB_as_SB_special_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d61c
	jmp uuid_000000000007d61e
uuid_000000000007d61c:
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
#call function infer-global-context : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call infer_SB_global_SB_context_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
uuid_000000000007d61e:
	mov -392(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007d621
uuid_000000000007d61f:
uuid_000000000007d621:
	mov -192(%RBP),%RSP
	add $-192, %RSP
	mov %rbp, %rsp
	sub $184, %rsp
	ret
mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType:
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d635
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d62b
	jmp uuid_000000000007d62d
uuid_000000000007d62b:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d628
	jmp uuid_000000000007d62a
uuid_000000000007d628:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	jmp uuid_000000000007d625
	jmp uuid_000000000007d627
uuid_000000000007d625:
	movb $1, -240(%rbp)
uuid_000000000007d627:
	mov -304(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007d62a:
	mov -256(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007d62d:
	mov -248(%RBP),%RSP
	add $-328, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d632
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d631
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d634
uuid_000000000007d632:
	push %RBP
#call function is-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d62e
	jmp uuid_000000000007d630
uuid_000000000007d62e:
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d630:
	mov -336(%RBP),%RSP
	add $-336, %RSP
#call function mark-constructor-flat-parameters : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d634:
	mov -192(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007d637
uuid_000000000007d635:
uuid_000000000007d637:
	mov -144(%RBP),%RSP
	add $-184, %RSP
	mov %rbp, %rsp
	sub $96, %rsp
	ret
mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d650
	jmp uuid_000000000007d652
uuid_000000000007d650:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d647
	jmp uuid_000000000007d649
uuid_000000000007d647:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d63e
	jmp uuid_000000000007d640
uuid_000000000007d63e:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d63b
	jmp uuid_000000000007d63d
uuid_000000000007d63b:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007d638
	jmp uuid_000000000007d63a
uuid_000000000007d638:
	movb $1, -248(%rbp)
uuid_000000000007d63a:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007d63d:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007d640:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d644
	jmp uuid_000000000007d646
uuid_000000000007d644:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007d641
	jmp uuid_000000000007d643
uuid_000000000007d641:
	movb $1, -184(%rbp)
uuid_000000000007d643:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007d646:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007d649:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d64d
	jmp uuid_000000000007d64f
uuid_000000000007d64d:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d64a
	jmp uuid_000000000007d64c
uuid_000000000007d64a:
	movb $1, -120(%rbp)
uuid_000000000007d64c:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007d64f:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007d652:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d66c
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d659
	jmp uuid_000000000007d65b
uuid_000000000007d659:
	push %RBP
	mov -408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d656
	jmp uuid_000000000007d658
uuid_000000000007d656:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d653
	jmp uuid_000000000007d655
uuid_000000000007d653:
	movb $1, -424(%rbp)
uuid_000000000007d655:
	mov -488(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007d658:
	mov -440(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007d65b:
	mov -432(%RBP),%RSP
	add $-496, %RSP
	mov -424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d669
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d65f
	jmp uuid_000000000007d661
uuid_000000000007d65f:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d65c
	jmp uuid_000000000007d65e
uuid_000000000007d65c:
	movb $1, -536(%rbp)
uuid_000000000007d65e:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007d661:
	mov -544(%RBP),%RSP
	add $-560, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d666
	push %RBP
	jmp uuid_000000000007d663
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d662
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d665
uuid_000000000007d663:
uuid_000000000007d665:
	mov -568(%RBP),%RSP
	add $-568, %RSP
	jmp uuid_000000000007d668
uuid_000000000007d666:
#call function mark-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function parameter-number : Arrow<Cons<Type,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_parameter_SB_flat_CL_ArrowNilConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d668:
	mov -504(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007d66b
uuid_000000000007d669:
#call function mark-constructor-flat-parameters : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -496(%rbp)
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d66b:
	mov -392(%RBP),%RSP
	add $-496, %RSP
	jmp uuid_000000000007d66e
uuid_000000000007d66c:
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d66e:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	mov %rbp, %rsp
	sub $56, %rsp
	ret
infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType:
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d675
	jmp uuid_000000000007d677
uuid_000000000007d675:
	push %RBP
	jmp uuid_000000000007d672
	jmp uuid_000000000007d674
uuid_000000000007d672:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d66f
	jmp uuid_000000000007d671
uuid_000000000007d66f:
	movb $1, -272(%rbp)
uuid_000000000007d671:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007d674:
	mov -288(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007d677:
	mov -280(%RBP),%RSP
	add $-304, %RSP
	mov -272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d699
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d687
	jmp uuid_000000000007d689
uuid_000000000007d687:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d684
	jmp uuid_000000000007d686
uuid_000000000007d684:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d67e
	jmp uuid_000000000007d680
uuid_000000000007d67e:
	push %RBP
	jmp uuid_000000000007d67b
	jmp uuid_000000000007d67d
uuid_000000000007d67b:
	push %RBP
	mov -496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d678
	jmp uuid_000000000007d67a
uuid_000000000007d678:
	movb $1, -568(%rbp)
uuid_000000000007d67a:
	mov -592(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007d67d:
	mov -584(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007d680:
	mov -576(%RBP),%RSP
	add $-600, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d681
	jmp uuid_000000000007d683
uuid_000000000007d681:
	movb $1, -392(%rbp)
uuid_000000000007d683:
	mov -488(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007d686:
	mov -408(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007d689:
	mov -400(%RBP),%RSP
	add $-600, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d696
	push %RBP
	jmp uuid_000000000007d693
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d692
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d695
uuid_000000000007d693:
uuid_000000000007d695:
	mov -608(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007d698
uuid_000000000007d696:
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -600(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d68b
	jmp uuid_000000000007d68d
uuid_000000000007d68b:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d68a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d68d:
	mov -632(%RBP),%RSP
	add $-632, %RSP
	push %RBP
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d68f
	jmp uuid_000000000007d691
uuid_000000000007d68f:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d68e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d691:
	mov -640(%RBP),%RSP
	add $-640, %RSP
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be70
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function set-type-fields : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call set_SB_type_SB_fields_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-class-of-tag : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-fields-of-tag : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -600(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc9a
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -112(%rbp)
	movq -112(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	movq %RAX, -112(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc57
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
uuid_000000000007d698:
	mov -312(%RBP),%RSP
	add $-688, %RSP
	jmp uuid_000000000007d69b
uuid_000000000007d699:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be70
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c056
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc57
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc58
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc5a
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b62b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function index-class-of-tag : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-fields-of-tag : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq $8, -112(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc57
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
uuid_000000000007d69b:
	mov -192(%RBP),%RSP
	add $-352, %RSP
	mov -112(%rbp), %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
infer_SB_global_SB_context_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6ab
	jmp uuid_000000000007d6ad
uuid_000000000007d6ab:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d6a8
	jmp uuid_000000000007d6aa
uuid_000000000007d6a8:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6a2
	jmp uuid_000000000007d6a4
uuid_000000000007d6a2:
	push %RBP
	jmp uuid_000000000007d69f
	jmp uuid_000000000007d6a1
uuid_000000000007d69f:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d69c
	jmp uuid_000000000007d69e
uuid_000000000007d69c:
	movb $1, -416(%rbp)
uuid_000000000007d69e:
	mov -440(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007d6a1:
	mov -432(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007d6a4:
	mov -424(%RBP),%RSP
	add $-448, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6a5
	jmp uuid_000000000007d6a7
uuid_000000000007d6a5:
	movb $1, -240(%rbp)
uuid_000000000007d6a7:
	mov -336(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007d6aa:
	mov -256(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007d6ad:
	mov -248(%RBP),%RSP
	add $-448, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d754
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6fd
	jmp uuid_000000000007d6ff
uuid_000000000007d6fd:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6e8
	jmp uuid_000000000007d6ea
uuid_000000000007d6e8:
	push %RBP
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007d6e5
	jmp uuid_000000000007d6e7
uuid_000000000007d6e5:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6dc
	jmp uuid_000000000007d6de
uuid_000000000007d6dc:
	push %RBP
	mov -816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6ca
	jmp uuid_000000000007d6cc
uuid_000000000007d6ca:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6c1
	jmp uuid_000000000007d6c3
uuid_000000000007d6c1:
	push %RBP
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	jmp uuid_000000000007d6be
	jmp uuid_000000000007d6c0
uuid_000000000007d6be:
	movb $1, -1024(%rbp)
uuid_000000000007d6c0:
	mov -1040(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007d6c3:
	mov -1032(%RBP),%RSP
	add $-1064, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6c7
	jmp uuid_000000000007d6c9
uuid_000000000007d6c7:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d6c4
	jmp uuid_000000000007d6c6
uuid_000000000007d6c4:
	movb $1, -928(%rbp)
uuid_000000000007d6c6:
	mov -1072(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007d6c9:
	mov -944(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007d6cc:
	mov -936(%RBP),%RSP
	add $-1144, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6d9
	jmp uuid_000000000007d6db
uuid_000000000007d6d9:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1224(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6d3
	jmp uuid_000000000007d6d5
uuid_000000000007d6d3:
	push %RBP
	jmp uuid_000000000007d6d0
	jmp uuid_000000000007d6d2
uuid_000000000007d6d0:
	push %RBP
	mov -1160(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d6cd
	jmp uuid_000000000007d6cf
uuid_000000000007d6cd:
	movb $1, -1232(%rbp)
uuid_000000000007d6cf:
	mov -1256(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d6d2:
	mov -1248(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d6d5:
	mov -1240(%RBP),%RSP
	add $-1264, %RSP
	mov -1232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6d6
	jmp uuid_000000000007d6d8
uuid_000000000007d6d6:
	movb $1, -832(%rbp)
uuid_000000000007d6d8:
	mov -1152(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d6db:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d6de:
	mov -840(%RBP),%RSP
	add $-1264, %RSP
	mov -832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6e2
	jmp uuid_000000000007d6e4
uuid_000000000007d6e2:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d6df
	jmp uuid_000000000007d6e1
uuid_000000000007d6df:
	movb $1, -704(%rbp)
uuid_000000000007d6e1:
	mov -1272(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007d6e4:
	mov -752(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007d6e7:
	mov -720(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007d6ea:
	mov -712(%RBP),%RSP
	add $-1344, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6fa
	jmp uuid_000000000007d6fc
uuid_000000000007d6fa:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -1408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6f4
	jmp uuid_000000000007d6f6
uuid_000000000007d6f4:
	push %RBP
	jmp uuid_000000000007d6f1
	jmp uuid_000000000007d6f3
uuid_000000000007d6f1:
	push %RBP
	jmp uuid_000000000007d6ee
	jmp uuid_000000000007d6f0
uuid_000000000007d6ee:
	push %RBP
	mov -1360(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d6eb
	jmp uuid_000000000007d6ed
uuid_000000000007d6eb:
	movb $1, -1416(%rbp)
uuid_000000000007d6ed:
	mov -1448(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d6f0:
	mov -1440(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d6f3:
	mov -1432(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d6f6:
	mov -1424(%RBP),%RSP
	add $-1456, %RSP
	mov -1416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6f7
	jmp uuid_000000000007d6f9
uuid_000000000007d6f7:
	movb $1, -536(%rbp)
uuid_000000000007d6f9:
	mov -1352(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d6fc:
	mov -552(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007d6ff:
	mov -544(%RBP),%RSP
	add $-1456, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d751
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d73a
	jmp uuid_000000000007d73c
uuid_000000000007d73a:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1632(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d725
	jmp uuid_000000000007d727
uuid_000000000007d725:
	push %RBP
	mov -1624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1728(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d713
	jmp uuid_000000000007d715
uuid_000000000007d713:
	push %RBP
	mov -1720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1824(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d70a
	jmp uuid_000000000007d70c
uuid_000000000007d70a:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007d707
	jmp uuid_000000000007d709
uuid_000000000007d707:
	movb $1, -1832(%rbp)
uuid_000000000007d709:
	mov -1848(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007d70c:
	mov -1840(%RBP),%RSP
	add $-1872, %RSP
	mov -1832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d710
	jmp uuid_000000000007d712
uuid_000000000007d710:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d70d
	jmp uuid_000000000007d70f
uuid_000000000007d70d:
	movb $1, -1736(%rbp)
uuid_000000000007d70f:
	mov -1880(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007d712:
	mov -1752(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007d715:
	mov -1744(%RBP),%RSP
	add $-1952, %RSP
	mov -1736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d722
	jmp uuid_000000000007d724
uuid_000000000007d722:
	push %RBP
	mov -1616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d71c
	jmp uuid_000000000007d71e
uuid_000000000007d71c:
	push %RBP
	jmp uuid_000000000007d719
	jmp uuid_000000000007d71b
uuid_000000000007d719:
	push %RBP
	mov -1968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2072(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d716
	jmp uuid_000000000007d718
uuid_000000000007d716:
	movb $1, -2040(%rbp)
uuid_000000000007d718:
	mov -2064(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007d71b:
	mov -2056(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007d71e:
	mov -2048(%RBP),%RSP
	add $-2072, %RSP
	mov -2040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d71f
	jmp uuid_000000000007d721
uuid_000000000007d71f:
	movb $1, -1640(%rbp)
uuid_000000000007d721:
	mov -1960(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007d724:
	mov -1656(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007d727:
	mov -1648(%RBP),%RSP
	add $-2072, %RSP
	mov -1640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d737
	jmp uuid_000000000007d739
uuid_000000000007d737:
	push %RBP
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq $0
	push %RBP
	mov -2136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d731
	jmp uuid_000000000007d733
uuid_000000000007d731:
	push %RBP
	jmp uuid_000000000007d72e
	jmp uuid_000000000007d730
uuid_000000000007d72e:
	push %RBP
	jmp uuid_000000000007d72b
	jmp uuid_000000000007d72d
uuid_000000000007d72b:
	push %RBP
	mov -2088(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d728
	jmp uuid_000000000007d72a
uuid_000000000007d728:
	movb $1, -2144(%rbp)
uuid_000000000007d72a:
	mov -2176(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007d72d:
	mov -2168(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007d730:
	mov -2160(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007d733:
	mov -2152(%RBP),%RSP
	add $-2184, %RSP
	mov -2144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d734
	jmp uuid_000000000007d736
uuid_000000000007d734:
	movb $1, -1544(%rbp)
uuid_000000000007d736:
	mov -2080(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007d739:
	mov -1560(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007d73c:
	mov -1552(%RBP),%RSP
	add $-2184, %RSP
	mov -1544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d74e
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2264(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d743
	jmp uuid_000000000007d745
uuid_000000000007d743:
	push %RBP
	jmp uuid_000000000007d740
	jmp uuid_000000000007d742
uuid_000000000007d740:
	push %RBP
	jmp uuid_000000000007d73d
	jmp uuid_000000000007d73f
uuid_000000000007d73d:
	movb $1, -2272(%rbp)
uuid_000000000007d73f:
	mov -2296(%RBP),%RSP
	add $-2296, %RSP
uuid_000000000007d742:
	mov -2288(%RBP),%RSP
	add $-2296, %RSP
uuid_000000000007d745:
	mov -2280(%RBP),%RSP
	add $-2296, %RSP
	mov -2272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d74b
	push %RBP
	jmp uuid_000000000007d748
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d747
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d74a
uuid_000000000007d748:
uuid_000000000007d74a:
	mov -2304(%RBP),%RSP
	add $-2304, %RSP
	jmp uuid_000000000007d74d
uuid_000000000007d74b:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d746
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d74d:
	mov -2192(%RBP),%RSP
	add $-2296, %RSP
	jmp uuid_000000000007d750
uuid_000000000007d74e:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2d
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
#call function mark-global-as-seen : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d750:
	mov -1464(%RBP),%RSP
	add $-2208, %RSP
	jmp uuid_000000000007d753
uuid_000000000007d751:
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d700
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	jmp uuid_000000000007d702
uuid_000000000007d700:
uuid_000000000007d702:
	mov -1512(%RBP),%RSP
	add $-1512, %RSP
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc9a
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function enrich : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call enrich_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1536(%RBP)
	popq -1528(%RBP)
	popq -1520(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d704
	jmp uuid_000000000007d706
uuid_000000000007d704:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d703
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d706:
	mov -1544(%RBP),%RSP
	add $-1544, %RSP
#call function mark-global-as-seen : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1456(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
uuid_000000000007d753:
	mov -456(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007d756
uuid_000000000007d754:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function infer-type-definition : Arrow<Cons<Cons<Type,AST>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq $0
	mov %RBX, %RBP
	call infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6b4
	jmp uuid_000000000007d6b6
uuid_000000000007d6b4:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6b1
	jmp uuid_000000000007d6b3
uuid_000000000007d6b1:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d6ae
	jmp uuid_000000000007d6b0
uuid_000000000007d6ae:
	movb $1, -544(%rbp)
uuid_000000000007d6b0:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d6b3:
	mov -560(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d6b6:
	mov -552(%RBP),%RSP
	add $-616, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d6bb
	push %RBP
	jmp uuid_000000000007d6b8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d6b7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d6ba
uuid_000000000007d6b8:
uuid_000000000007d6ba:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007d6bd
uuid_000000000007d6bb:
#call function index-size-of-class : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d6bd:
	mov -512(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d756:
	mov -160(%RBP),%RSP
	add $-616, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
assert_SB_well_SB_typed_CL_ArrowNilAST:
uuid_000000000007d764:
#call function is-seq : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call is_SB_seq_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d765
	jmp uuid_000000000007d766
uuid_000000000007d765:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d75d
	jmp uuid_000000000007d75f
uuid_000000000007d75d:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d75a
	jmp uuid_000000000007d75c
uuid_000000000007d75a:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d757
	jmp uuid_000000000007d759
uuid_000000000007d757:
	movb $1, -240(%rbp)
uuid_000000000007d759:
	mov -336(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007d75c:
	mov -256(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007d75f:
	mov -248(%RBP),%RSP
	add $-408, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d761
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d760
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d763
uuid_000000000007d761:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d763:
	mov -160(%RBP),%RSP
	add $-408, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d764
uuid_000000000007d766:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8e7
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8e4
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d76d
	jmp uuid_000000000007d76f
uuid_000000000007d76d:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d76a
	jmp uuid_000000000007d76c
uuid_000000000007d76a:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	jmp uuid_000000000007d767
	jmp uuid_000000000007d769
uuid_000000000007d767:
	movb $1, -400(%rbp)
uuid_000000000007d769:
	mov -496(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007d76c:
	mov -416(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007d76f:
	mov -408(%RBP),%RSP
	add $-552, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8e1
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d779
	jmp uuid_000000000007d77b
uuid_000000000007d779:
	push %RBP
	jmp uuid_000000000007d776
	jmp uuid_000000000007d778
uuid_000000000007d776:
	push %RBP
	jmp uuid_000000000007d773
	jmp uuid_000000000007d775
uuid_000000000007d773:
	movb $1, -640(%rbp)
uuid_000000000007d775:
	mov -664(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d778:
	mov -656(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007d77b:
	mov -648(%RBP),%RSP
	add $-664, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8de
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -744(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d797
	jmp uuid_000000000007d799
uuid_000000000007d797:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d794
	jmp uuid_000000000007d796
uuid_000000000007d794:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d78e
	jmp uuid_000000000007d790
uuid_000000000007d78e:
	push %RBP
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	jmp uuid_000000000007d78b
	jmp uuid_000000000007d78d
uuid_000000000007d78b:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d788
	jmp uuid_000000000007d78a
uuid_000000000007d788:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d782
	jmp uuid_000000000007d784
uuid_000000000007d782:
	push %RBP
	jmp uuid_000000000007d77f
	jmp uuid_000000000007d781
uuid_000000000007d77f:
	push %RBP
	mov -1064(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d77c
	jmp uuid_000000000007d77e
uuid_000000000007d77c:
	movb $1, -1136(%rbp)
uuid_000000000007d77e:
	mov -1160(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d781:
	mov -1152(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d784:
	mov -1144(%RBP),%RSP
	add $-1168, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d785
	jmp uuid_000000000007d787
uuid_000000000007d785:
	movb $1, -928(%rbp)
uuid_000000000007d787:
	mov -1056(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d78a:
	mov -976(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d78d:
	mov -944(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d790:
	mov -936(%RBP),%RSP
	add $-1168, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d791
	jmp uuid_000000000007d793
uuid_000000000007d791:
	movb $1, -752(%rbp)
uuid_000000000007d793:
	mov -848(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d796:
	mov -768(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d799:
	mov -760(%RBP),%RSP
	add $-1168, %RSP
	mov -752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8db
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1248(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7a9
	jmp uuid_000000000007d7ab
uuid_000000000007d7a9:
	push %RBP
	jmp uuid_000000000007d7a6
	jmp uuid_000000000007d7a8
uuid_000000000007d7a6:
	push %RBP
	mov -1232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7a0
	jmp uuid_000000000007d7a2
uuid_000000000007d7a0:
	push %RBP
	jmp uuid_000000000007d79d
	jmp uuid_000000000007d79f
uuid_000000000007d79d:
	push %RBP
	mov -1288(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq $uuid_000000000007baba
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d79a
	jmp uuid_000000000007d79c
uuid_000000000007d79a:
	movb $1, -1360(%rbp)
uuid_000000000007d79c:
	mov -1384(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007d79f:
	mov -1376(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007d7a2:
	mov -1368(%RBP),%RSP
	add $-1392, %RSP
	mov -1360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7a3
	jmp uuid_000000000007d7a5
uuid_000000000007d7a3:
	movb $1, -1256(%rbp)
uuid_000000000007d7a5:
	mov -1280(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007d7a8:
	mov -1272(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007d7ab:
	mov -1264(%RBP),%RSP
	add $-1392, %RSP
	mov -1256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8d8
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1472(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7c4
	jmp uuid_000000000007d7c6
uuid_000000000007d7c4:
	push %RBP
	mov -1464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1568(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7b2
	jmp uuid_000000000007d7b4
uuid_000000000007d7b2:
	push %RBP
	jmp uuid_000000000007d7af
	jmp uuid_000000000007d7b1
uuid_000000000007d7af:
	push %RBP
	jmp uuid_000000000007d7ac
	jmp uuid_000000000007d7ae
uuid_000000000007d7ac:
	movb $1, -1576(%rbp)
uuid_000000000007d7ae:
	mov -1600(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d7b1:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d7b4:
	mov -1584(%RBP),%RSP
	add $-1600, %RSP
	mov -1576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7c1
	jmp uuid_000000000007d7c3
uuid_000000000007d7c1:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1680(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7bb
	jmp uuid_000000000007d7bd
uuid_000000000007d7bb:
	push %RBP
	jmp uuid_000000000007d7b8
	jmp uuid_000000000007d7ba
uuid_000000000007d7b8:
	push %RBP
	mov -1616(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq $uuid_000000000007bad7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d7b5
	jmp uuid_000000000007d7b7
uuid_000000000007d7b5:
	movb $1, -1688(%rbp)
uuid_000000000007d7b7:
	mov -1712(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007d7ba:
	mov -1704(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007d7bd:
	mov -1696(%RBP),%RSP
	add $-1720, %RSP
	mov -1688(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7be
	jmp uuid_000000000007d7c0
uuid_000000000007d7be:
	movb $1, -1480(%rbp)
uuid_000000000007d7c0:
	mov -1608(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007d7c3:
	mov -1496(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007d7c6:
	mov -1488(%RBP),%RSP
	add $-1720, %RSP
	mov -1480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8d5
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1800(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7e5
	jmp uuid_000000000007d7e7
uuid_000000000007d7e5:
	push %RBP
	mov -1792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7d3
	jmp uuid_000000000007d7d5
uuid_000000000007d7d3:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1992(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7ca
	jmp uuid_000000000007d7cc
uuid_000000000007d7ca:
	push %RBP
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	jmp uuid_000000000007d7c7
	jmp uuid_000000000007d7c9
uuid_000000000007d7c7:
	movb $1, -2000(%rbp)
uuid_000000000007d7c9:
	mov -2016(%RBP),%RSP
	add $-2040, %RSP
uuid_000000000007d7cc:
	mov -2008(%RBP),%RSP
	add $-2040, %RSP
	mov -2000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7d0
	jmp uuid_000000000007d7d2
uuid_000000000007d7d0:
	push %RBP
	mov -1880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7cd
	jmp uuid_000000000007d7cf
uuid_000000000007d7cd:
	movb $1, -1904(%rbp)
uuid_000000000007d7cf:
	mov -2048(%RBP),%RSP
	add $-2120, %RSP
uuid_000000000007d7d2:
	mov -1920(%RBP),%RSP
	add $-2120, %RSP
uuid_000000000007d7d5:
	mov -1912(%RBP),%RSP
	add $-2120, %RSP
	mov -1904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7e2
	jmp uuid_000000000007d7e4
uuid_000000000007d7e2:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2200(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7dc
	jmp uuid_000000000007d7de
uuid_000000000007d7dc:
	push %RBP
	jmp uuid_000000000007d7d9
	jmp uuid_000000000007d7db
uuid_000000000007d7d9:
	push %RBP
	mov -2136(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2240(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d7d6
	jmp uuid_000000000007d7d8
uuid_000000000007d7d6:
	movb $1, -2208(%rbp)
uuid_000000000007d7d8:
	mov -2232(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007d7db:
	mov -2224(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007d7de:
	mov -2216(%RBP),%RSP
	add $-2240, %RSP
	mov -2208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7df
	jmp uuid_000000000007d7e1
uuid_000000000007d7df:
	movb $1, -1808(%rbp)
uuid_000000000007d7e1:
	mov -2128(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007d7e4:
	mov -1824(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007d7e7:
	mov -1816(%RBP),%RSP
	add $-2240, %RSP
	mov -1808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8d2
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2320(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d806
	jmp uuid_000000000007d808
uuid_000000000007d806:
	push %RBP
	mov -2312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2416(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7f4
	jmp uuid_000000000007d7f6
uuid_000000000007d7f4:
	push %RBP
	mov -2408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2512(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7eb
	jmp uuid_000000000007d7ed
uuid_000000000007d7eb:
	push %RBP
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	jmp uuid_000000000007d7e8
	jmp uuid_000000000007d7ea
uuid_000000000007d7e8:
	movb $1, -2520(%rbp)
uuid_000000000007d7ea:
	mov -2536(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d7ed:
	mov -2528(%RBP),%RSP
	add $-2560, %RSP
	mov -2520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d7f1
	jmp uuid_000000000007d7f3
uuid_000000000007d7f1:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7ee
	jmp uuid_000000000007d7f0
uuid_000000000007d7ee:
	movb $1, -2424(%rbp)
uuid_000000000007d7f0:
	mov -2568(%RBP),%RSP
	add $-2640, %RSP
uuid_000000000007d7f3:
	mov -2440(%RBP),%RSP
	add $-2640, %RSP
uuid_000000000007d7f6:
	mov -2432(%RBP),%RSP
	add $-2640, %RSP
	mov -2424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d803
	jmp uuid_000000000007d805
uuid_000000000007d803:
	push %RBP
	mov -2304(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2720(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7fd
	jmp uuid_000000000007d7ff
uuid_000000000007d7fd:
	push %RBP
	jmp uuid_000000000007d7fa
	jmp uuid_000000000007d7fc
uuid_000000000007d7fa:
	push %RBP
	mov -2656(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2760(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d7f7
	jmp uuid_000000000007d7f9
uuid_000000000007d7f7:
	movb $1, -2728(%rbp)
uuid_000000000007d7f9:
	mov -2752(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007d7fc:
	mov -2744(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007d7ff:
	mov -2736(%RBP),%RSP
	add $-2760, %RSP
	mov -2728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d800
	jmp uuid_000000000007d802
uuid_000000000007d800:
	movb $1, -2328(%rbp)
uuid_000000000007d802:
	mov -2648(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007d805:
	mov -2344(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007d808:
	mov -2336(%RBP),%RSP
	add $-2760, %RSP
	mov -2328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8cf
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2840(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d82a
	jmp uuid_000000000007d82c
uuid_000000000007d82a:
	push %RBP
	mov -2832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d827
	jmp uuid_000000000007d829
uuid_000000000007d827:
	push %RBP
	mov -2824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d821
	jmp uuid_000000000007d823
uuid_000000000007d821:
	push %RBP
	mov -3008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d81e
	jmp uuid_000000000007d820
uuid_000000000007d81e:
	push %RBP
	mov -3000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d818
	jmp uuid_000000000007d81a
uuid_000000000007d818:
	push %RBP
	mov -3184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d815
	jmp uuid_000000000007d817
uuid_000000000007d815:
	push %RBP
	mov -3176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d80f
	jmp uuid_000000000007d811
uuid_000000000007d80f:
	push %RBP
	jmp uuid_000000000007d80c
	jmp uuid_000000000007d80e
uuid_000000000007d80c:
	push %RBP
	mov -3304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3408(%rbp)
	pushq $uuid_000000000007baea
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d809
	jmp uuid_000000000007d80b
uuid_000000000007d809:
	movb $1, -3376(%rbp)
uuid_000000000007d80b:
	mov -3400(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007d80e:
	mov -3392(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007d811:
	mov -3384(%RBP),%RSP
	add $-3408, %RSP
	mov -3376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d812
	jmp uuid_000000000007d814
uuid_000000000007d812:
	movb $1, -3200(%rbp)
uuid_000000000007d814:
	mov -3296(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007d817:
	mov -3216(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007d81a:
	mov -3208(%RBP),%RSP
	add $-3408, %RSP
	mov -3200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d81b
	jmp uuid_000000000007d81d
uuid_000000000007d81b:
	movb $1, -3024(%rbp)
uuid_000000000007d81d:
	mov -3120(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007d820:
	mov -3040(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007d823:
	mov -3032(%RBP),%RSP
	add $-3408, %RSP
	mov -3024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d824
	jmp uuid_000000000007d826
uuid_000000000007d824:
	movb $1, -2848(%rbp)
uuid_000000000007d826:
	mov -2944(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007d829:
	mov -2864(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007d82c:
	mov -2856(%RBP),%RSP
	add $-3408, %RSP
	mov -2848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8cc
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -3488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d846
	jmp uuid_000000000007d848
uuid_000000000007d846:
	push %RBP
	mov -3480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d843
	jmp uuid_000000000007d845
uuid_000000000007d843:
	push %RBP
	mov -3472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3664(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d83d
	jmp uuid_000000000007d83f
uuid_000000000007d83d:
	push %RBP
	mov -3656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d83a
	jmp uuid_000000000007d83c
uuid_000000000007d83a:
	push %RBP
	mov -3648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3840(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d834
	jmp uuid_000000000007d836
uuid_000000000007d834:
	push %RBP
	jmp uuid_000000000007d831
	jmp uuid_000000000007d833
uuid_000000000007d831:
	push %RBP
	mov -3776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3880(%rbp)
	pushq $uuid_000000000007d82d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d82e
	jmp uuid_000000000007d830
uuid_000000000007d82e:
	movb $1, -3848(%rbp)
uuid_000000000007d830:
	mov -3872(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007d833:
	mov -3864(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007d836:
	mov -3856(%RBP),%RSP
	add $-3880, %RSP
	mov -3848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d837
	jmp uuid_000000000007d839
uuid_000000000007d837:
	movb $1, -3672(%rbp)
uuid_000000000007d839:
	mov -3768(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007d83c:
	mov -3688(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007d83f:
	mov -3680(%RBP),%RSP
	add $-3880, %RSP
	mov -3672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d840
	jmp uuid_000000000007d842
uuid_000000000007d840:
	movb $1, -3496(%rbp)
uuid_000000000007d842:
	mov -3592(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007d845:
	mov -3512(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007d848:
	mov -3504(%RBP),%RSP
	add $-3880, %RSP
	mov -3496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8c9
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -3960(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d84c
	jmp uuid_000000000007d84e
uuid_000000000007d84c:
	push %RBP
	jmp uuid_000000000007d849
	jmp uuid_000000000007d84b
uuid_000000000007d849:
	movb $1, -3968(%rbp)
uuid_000000000007d84b:
	mov -3984(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007d84e:
	mov -3976(%RBP),%RSP
	add $-3984, %RSP
	mov -3968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8c6
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4064(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d85e
	jmp uuid_000000000007d860
uuid_000000000007d85e:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d85b
	jmp uuid_000000000007d85d
uuid_000000000007d85b:
	push %RBP
	mov -4048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4240(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d855
	jmp uuid_000000000007d857
uuid_000000000007d855:
	push %RBP
	jmp uuid_000000000007d852
	jmp uuid_000000000007d854
uuid_000000000007d852:
	push %RBP
	mov -4176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4280(%rbp)
	pushq $uuid_000000000007bb9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d84f
	jmp uuid_000000000007d851
uuid_000000000007d84f:
	movb $1, -4248(%rbp)
uuid_000000000007d851:
	mov -4272(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007d854:
	mov -4264(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007d857:
	mov -4256(%RBP),%RSP
	add $-4280, %RSP
	mov -4248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d858
	jmp uuid_000000000007d85a
uuid_000000000007d858:
	movb $1, -4072(%rbp)
uuid_000000000007d85a:
	mov -4168(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007d85d:
	mov -4088(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007d860:
	mov -4080(%RBP),%RSP
	add $-4280, %RSP
	mov -4072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8c3
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d870
	jmp uuid_000000000007d872
uuid_000000000007d870:
	push %RBP
	mov -4352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d86d
	jmp uuid_000000000007d86f
uuid_000000000007d86d:
	push %RBP
	mov -4344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4536(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d867
	jmp uuid_000000000007d869
uuid_000000000007d867:
	push %RBP
	jmp uuid_000000000007d864
	jmp uuid_000000000007d866
uuid_000000000007d864:
	push %RBP
	mov -4472(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq $uuid_000000000007bb87
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d861
	jmp uuid_000000000007d863
uuid_000000000007d861:
	movb $1, -4544(%rbp)
uuid_000000000007d863:
	mov -4568(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007d866:
	mov -4560(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007d869:
	mov -4552(%RBP),%RSP
	add $-4576, %RSP
	mov -4544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d86a
	jmp uuid_000000000007d86c
uuid_000000000007d86a:
	movb $1, -4368(%rbp)
uuid_000000000007d86c:
	mov -4464(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007d86f:
	mov -4384(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007d872:
	mov -4376(%RBP),%RSP
	add $-4576, %RSP
	mov -4368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8c0
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4656(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d879
	jmp uuid_000000000007d87b
uuid_000000000007d879:
	push %RBP
	jmp uuid_000000000007d876
	jmp uuid_000000000007d878
uuid_000000000007d876:
	push %RBP
	mov -4592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d873
	jmp uuid_000000000007d875
uuid_000000000007d873:
	movb $1, -4664(%rbp)
uuid_000000000007d875:
	mov -4688(%RBP),%RSP
	add $-4696, %RSP
uuid_000000000007d878:
	mov -4680(%RBP),%RSP
	add $-4696, %RSP
uuid_000000000007d87b:
	mov -4672(%RBP),%RSP
	add $-4696, %RSP
	mov -4664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8bd
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4776(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d882
	jmp uuid_000000000007d884
uuid_000000000007d882:
	push %RBP
	jmp uuid_000000000007d87f
	jmp uuid_000000000007d881
uuid_000000000007d87f:
	push %RBP
	mov -4712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d87c
	jmp uuid_000000000007d87e
uuid_000000000007d87c:
	movb $1, -4784(%rbp)
uuid_000000000007d87e:
	mov -4808(%RBP),%RSP
	add $-4816, %RSP
uuid_000000000007d881:
	mov -4800(%RBP),%RSP
	add $-4816, %RSP
uuid_000000000007d884:
	mov -4792(%RBP),%RSP
	add $-4816, %RSP
	mov -4784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8ba
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4896(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d88e
	jmp uuid_000000000007d890
uuid_000000000007d88e:
	push %RBP
	pushq -4872(%RBP)
	pushq -4880(%RBP)
	pushq -4888(%RBP)
	jmp uuid_000000000007d88b
	jmp uuid_000000000007d88d
uuid_000000000007d88b:
	push %RBP
	mov -4864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d888
	jmp uuid_000000000007d88a
uuid_000000000007d888:
	push %RBP
	mov -4856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d885
	jmp uuid_000000000007d887
uuid_000000000007d885:
	movb $1, -4904(%rbp)
uuid_000000000007d887:
	mov -5032(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007d88a:
	mov -4952(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007d88d:
	mov -4920(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007d890:
	mov -4912(%RBP),%RSP
	add $-5104, %RSP
	mov -4904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8b7
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5184(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d897
	jmp uuid_000000000007d899
uuid_000000000007d897:
	push %RBP
	mov -5176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d894
	jmp uuid_000000000007d896
uuid_000000000007d894:
	push %RBP
	mov -5168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d891
	jmp uuid_000000000007d893
uuid_000000000007d891:
	movb $1, -5192(%rbp)
uuid_000000000007d893:
	mov -5288(%RBP),%RSP
	add $-5360, %RSP
uuid_000000000007d896:
	mov -5208(%RBP),%RSP
	add $-5360, %RSP
uuid_000000000007d899:
	mov -5200(%RBP),%RSP
	add $-5360, %RSP
	mov -5192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8b4
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5440(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8a0
	jmp uuid_000000000007d8a2
uuid_000000000007d8a0:
	push %RBP
	mov -5432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d89d
	jmp uuid_000000000007d89f
uuid_000000000007d89d:
	push %RBP
	mov -5424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d89a
	jmp uuid_000000000007d89c
uuid_000000000007d89a:
	movb $1, -5448(%rbp)
uuid_000000000007d89c:
	mov -5544(%RBP),%RSP
	add $-5616, %RSP
uuid_000000000007d89f:
	mov -5464(%RBP),%RSP
	add $-5616, %RSP
uuid_000000000007d8a2:
	mov -5456(%RBP),%RSP
	add $-5616, %RSP
	mov -5448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8b1
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8a6
	jmp uuid_000000000007d8a8
uuid_000000000007d8a6:
	push %RBP
	jmp uuid_000000000007d8a3
	jmp uuid_000000000007d8a5
uuid_000000000007d8a3:
	movb $1, -5704(%rbp)
uuid_000000000007d8a5:
	mov -5720(%RBP),%RSP
	add $-5720, %RSP
uuid_000000000007d8a8:
	mov -5712(%RBP),%RSP
	add $-5720, %RSP
	mov -5704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8ae
	push %RBP
	jmp uuid_000000000007d8ab
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d8aa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d8ad
uuid_000000000007d8ab:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d8a9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8ad:
	mov -5728(%RBP),%RSP
	add $-5728, %RSP
	jmp uuid_000000000007d8b0
uuid_000000000007d8ae:
uuid_000000000007d8b0:
	mov -5624(%RBP),%RSP
	add $-5720, %RSP
	jmp uuid_000000000007d8b3
uuid_000000000007d8b1:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8b3:
	mov -5368(%RBP),%RSP
	add $-5616, %RSP
	jmp uuid_000000000007d8b6
uuid_000000000007d8b4:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8b6:
	mov -5112(%RBP),%RSP
	add $-5360, %RSP
	jmp uuid_000000000007d8b9
uuid_000000000007d8b7:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8b9:
	mov -4824(%RBP),%RSP
	add $-5104, %RSP
	jmp uuid_000000000007d8bc
uuid_000000000007d8ba:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8bc:
	mov -4704(%RBP),%RSP
	add $-4816, %RSP
	jmp uuid_000000000007d8bf
uuid_000000000007d8bd:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8bf:
	mov -4584(%RBP),%RSP
	add $-4696, %RSP
	jmp uuid_000000000007d8c2
uuid_000000000007d8c0:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8c2:
	mov -4288(%RBP),%RSP
	add $-4576, %RSP
	jmp uuid_000000000007d8c5
uuid_000000000007d8c3:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	pushq -4136(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8c5:
	mov -3992(%RBP),%RSP
	add $-4280, %RSP
	jmp uuid_000000000007d8c8
uuid_000000000007d8c6:
uuid_000000000007d8c8:
	mov -3888(%RBP),%RSP
	add $-3984, %RSP
	jmp uuid_000000000007d8cb
uuid_000000000007d8c9:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3568(%rbp)
	pushq -3576(%rbp)
	pushq -3584(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8cb:
	mov -3416(%RBP),%RSP
	add $-3880, %RSP
	jmp uuid_000000000007d8ce
uuid_000000000007d8cc:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	pushq -3240(%rbp)
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	pushq -3264(%rbp)
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq -3056(%rbp)
	pushq -3064(%rbp)
	pushq -3072(%rbp)
	pushq -3080(%rbp)
	pushq -3088(%rbp)
	pushq -3096(%rbp)
	pushq -3104(%rbp)
	pushq -3112(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8ce:
	mov -2768(%RBP),%RSP
	add $-3408, %RSP
	jmp uuid_000000000007d8d1
uuid_000000000007d8cf:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq -2616(%rbp)
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8d1:
	mov -2248(%RBP),%RSP
	add $-2760, %RSP
	jmp uuid_000000000007d8d4
uuid_000000000007d8d2:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8d4:
	mov -1728(%RBP),%RSP
	add $-2240, %RSP
	jmp uuid_000000000007d8d7
uuid_000000000007d8d5:
uuid_000000000007d8d7:
	mov -1400(%RBP),%RSP
	add $-1720, %RSP
	jmp uuid_000000000007d8da
uuid_000000000007d8d8:
uuid_000000000007d8da:
	mov -1176(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007d8dd
uuid_000000000007d8db:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8dd:
	mov -672(%RBP),%RSP
	add $-1168, %RSP
	jmp uuid_000000000007d8e0
uuid_000000000007d8de:
uuid_000000000007d8e0:
	mov -560(%RBP),%RSP
	add $-664, %RSP
	jmp uuid_000000000007d8e3
uuid_000000000007d8e1:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d770
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d772
uuid_000000000007d770:
uuid_000000000007d772:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007d8e3:
	mov -320(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007d8e6
uuid_000000000007d8e4:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8e6:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007d8e9
uuid_000000000007d8e7:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8e9:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
assert_SB_one_SB_typed_CL_ArrowNilAST:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d8ea
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc15
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d8ec
uuid_000000000007d8ea:
uuid_000000000007d8ec:
	mov -88(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
infer_SB_ctx_CL_ArrowTContextConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d914
	jmp uuid_000000000007d916
uuid_000000000007d914:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d902
	jmp uuid_000000000007d904
uuid_000000000007d902:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8f0
	jmp uuid_000000000007d8f2
uuid_000000000007d8f0:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007d8ed
	jmp uuid_000000000007d8ef
uuid_000000000007d8ed:
	movb $1, -552(%rbp)
uuid_000000000007d8ef:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007d8f2:
	mov -560(%RBP),%RSP
	add $-592, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8ff
	jmp uuid_000000000007d901
uuid_000000000007d8ff:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8f9
	jmp uuid_000000000007d8fb
uuid_000000000007d8f9:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007d8f6
	jmp uuid_000000000007d8f8
uuid_000000000007d8f6:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d8f3
	jmp uuid_000000000007d8f5
uuid_000000000007d8f3:
	movb $1, -680(%rbp)
uuid_000000000007d8f5:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007d8f8:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007d8fb:
	mov -688(%RBP),%RSP
	add $-768, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d8fc
	jmp uuid_000000000007d8fe
uuid_000000000007d8fc:
	movb $1, -456(%rbp)
uuid_000000000007d8fe:
	mov -600(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007d901:
	mov -472(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007d904:
	mov -464(%RBP),%RSP
	add $-768, %RSP
	mov -456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d911
	jmp uuid_000000000007d913
uuid_000000000007d911:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d90b
	jmp uuid_000000000007d90d
uuid_000000000007d90b:
	push %RBP
	jmp uuid_000000000007d908
	jmp uuid_000000000007d90a
uuid_000000000007d908:
	push %RBP
	mov -784(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d905
	jmp uuid_000000000007d907
uuid_000000000007d905:
	movb $1, -856(%rbp)
uuid_000000000007d907:
	mov -880(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007d90a:
	mov -872(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007d90d:
	mov -864(%RBP),%RSP
	add $-888, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d90e
	jmp uuid_000000000007d910
uuid_000000000007d90e:
	movb $1, -360(%rbp)
uuid_000000000007d910:
	mov -776(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007d913:
	mov -376(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007d916:
	mov -368(%RBP),%RSP
	add $-888, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d955
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d947
	jmp uuid_000000000007d949
uuid_000000000007d947:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d93e
	jmp uuid_000000000007d940
uuid_000000000007d93e:
	push %RBP
	mov -1056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d92c
	jmp uuid_000000000007d92e
uuid_000000000007d92c:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d91a
	jmp uuid_000000000007d91c
uuid_000000000007d91a:
	push %RBP
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	jmp uuid_000000000007d917
	jmp uuid_000000000007d919
uuid_000000000007d917:
	movb $1, -1264(%rbp)
uuid_000000000007d919:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007d91c:
	mov -1272(%RBP),%RSP
	add $-1304, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d929
	jmp uuid_000000000007d92b
uuid_000000000007d929:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d923
	jmp uuid_000000000007d925
uuid_000000000007d923:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	jmp uuid_000000000007d920
	jmp uuid_000000000007d922
uuid_000000000007d920:
	push %RBP
	mov -1320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d91d
	jmp uuid_000000000007d91f
uuid_000000000007d91d:
	movb $1, -1392(%rbp)
uuid_000000000007d91f:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d922:
	mov -1408(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d925:
	mov -1400(%RBP),%RSP
	add $-1480, %RSP
	mov -1392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d926
	jmp uuid_000000000007d928
uuid_000000000007d926:
	movb $1, -1168(%rbp)
uuid_000000000007d928:
	mov -1312(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d92b:
	mov -1184(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d92e:
	mov -1176(%RBP),%RSP
	add $-1480, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d93b
	jmp uuid_000000000007d93d
uuid_000000000007d93b:
	push %RBP
	mov -1048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d935
	jmp uuid_000000000007d937
uuid_000000000007d935:
	push %RBP
	jmp uuid_000000000007d932
	jmp uuid_000000000007d934
uuid_000000000007d932:
	push %RBP
	mov -1496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d92f
	jmp uuid_000000000007d931
uuid_000000000007d92f:
	movb $1, -1568(%rbp)
uuid_000000000007d931:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d934:
	mov -1584(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d937:
	mov -1576(%RBP),%RSP
	add $-1600, %RSP
	mov -1568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d938
	jmp uuid_000000000007d93a
uuid_000000000007d938:
	movb $1, -1072(%rbp)
uuid_000000000007d93a:
	mov -1488(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d93d:
	mov -1088(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007d940:
	mov -1080(%RBP),%RSP
	add $-1600, %RSP
	mov -1072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d944
	jmp uuid_000000000007d946
uuid_000000000007d944:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d941
	jmp uuid_000000000007d943
uuid_000000000007d941:
	movb $1, -976(%rbp)
uuid_000000000007d943:
	mov -1608(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007d946:
	mov -992(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007d949:
	mov -984(%RBP),%RSP
	add $-1680, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d952
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -1760(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d94f
	push %RBP
	jmp uuid_000000000007d94c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d94b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d94e
uuid_000000000007d94c:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d94a
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d94e:
	mov -1768(%RBP),%RSP
	add $-1768, %RSP
	jmp uuid_000000000007d951
uuid_000000000007d94f:
uuid_000000000007d951:
	mov -1688(%RBP),%RSP
	add $-1760, %RSP
	jmp uuid_000000000007d954
uuid_000000000007d952:
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1480(%rbp)
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -1480(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq $7
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-ctx : Arrow<Cons<TContext,AST>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	mov %RBX, %RBP
	call infer_SB_ctx_CL_ArrowTContextConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d954:
	mov -896(%RBP),%RSP
	add $-1680, %RSP
	jmp uuid_000000000007d957
uuid_000000000007d955:
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -768(%rbp)
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -768(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq $7
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d957:
	mov -280(%RBP),%RSP
	add $-888, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
infer_SB_tctx_CL_ArrowTContextConsListTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d967
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d960
	jmp uuid_000000000007d962
uuid_000000000007d960:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d95d
	jmp uuid_000000000007d95f
uuid_000000000007d95d:
	push %RBP
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007d95a
	jmp uuid_000000000007d95c
uuid_000000000007d95a:
	movb $1, -312(%rbp)
uuid_000000000007d95c:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007d95f:
	mov -328(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007d962:
	mov -320(%RBP),%RSP
	add $-400, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d964
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d963
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d966
uuid_000000000007d964:
#call function infer-tctx : Arrow<Cons<TContext,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d966:
	mov -264(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007d969
uuid_000000000007d967:
uuid_000000000007d969:
	mov -216(%RBP),%RSP
	add $-256, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
infer_SB_tctx_CL_ArrowTContextConsTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d970
	jmp uuid_000000000007d972
uuid_000000000007d970:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d96d
	jmp uuid_000000000007d96f
uuid_000000000007d96d:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d96a
	jmp uuid_000000000007d96c
uuid_000000000007d96a:
	movb $1, -216(%rbp)
uuid_000000000007d96c:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007d96f:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007d972:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d98c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d976
	jmp uuid_000000000007d978
uuid_000000000007d976:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d973
	jmp uuid_000000000007d975
uuid_000000000007d973:
	movb $1, -328(%rbp)
uuid_000000000007d975:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007d978:
	mov -336(%RBP),%RSP
	add $-352, %RSP
	mov -328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d989
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d97f
	jmp uuid_000000000007d981
uuid_000000000007d97f:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d97c
	jmp uuid_000000000007d97e
uuid_000000000007d97c:
	push %RBP
	jmp uuid_000000000007d979
	jmp uuid_000000000007d97b
uuid_000000000007d979:
	movb $1, -392(%rbp)
uuid_000000000007d97b:
	mov -456(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007d97e:
	mov -408(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007d981:
	mov -400(%RBP),%RSP
	add $-456, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d986
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d983
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d982
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d985
uuid_000000000007d983:
uuid_000000000007d985:
	mov -464(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007d988
uuid_000000000007d986:
#call function infer-tctx : Arrow<Cons<TContext,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d988:
	mov -360(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007d98b
uuid_000000000007d989:
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -352(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c056
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d98b:
	mov -296(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007d98e
uuid_000000000007d98c:
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d98e:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
compile_SB_exit_SB_cleanup_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d98f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d990
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d991
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_data_SB_header_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d992
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_text_SB_header_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d993
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d994
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d995
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d998
	jmp uuid_000000000007d99a
uuid_000000000007d998:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d996
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d997
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007d99a:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	push %RBP
	mov $main_SB_with_SB_argv_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007d99d
	jmp uuid_000000000007d99f
uuid_000000000007d99d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d99b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d99c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007d99f:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	push %RBP
	mov $main_SB_with_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007d9aa
	jmp uuid_000000000007d9ac
uuid_000000000007d9aa:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d9a0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d9a1
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
	mov $main_SB_with_SB_argv_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007d9a4
	jmp uuid_000000000007d9a6
uuid_000000000007d9a4:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d9a2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d9a3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007d9a6:
	mov -64(%RBP),%RSP
	add $-64, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d9a7
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d9a8
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d9a9
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007d9ac:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_CL_ArrowNilNil:
	mov $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %r15
	pushq 0(%r15)
	push %RBP
	pushq -16(%rbp)
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9b1
	push %RBP
	pushq -16(%rbp)
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9ae
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d9ad
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d9b0
uuid_000000000007d9ae:
#call function compile-blob : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_blob_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d9b0:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	jmp uuid_000000000007d9b3
uuid_000000000007d9b1:
#call function compile-gnu : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_gnu_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d9b3:
	mov -24(%RBP),%RSP
	add $-32, %RSP
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_blob_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007da0c:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da0d
	jmp uuid_000000000007da0e
uuid_000000000007da0d:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9c3
	jmp uuid_000000000007d9c5
uuid_000000000007d9c3:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9ba
	jmp uuid_000000000007d9bc
uuid_000000000007d9ba:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9b7
	jmp uuid_000000000007d9b9
uuid_000000000007d9b7:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9b4
	jmp uuid_000000000007d9b6
uuid_000000000007d9b4:
	movb $1, -336(%rbp)
uuid_000000000007d9b6:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007d9b9:
	mov -352(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007d9bc:
	mov -344(%RBP),%RSP
	add $-504, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9c0
	jmp uuid_000000000007d9c2
uuid_000000000007d9c0:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9bd
	jmp uuid_000000000007d9bf
uuid_000000000007d9bd:
	movb $1, -240(%rbp)
uuid_000000000007d9bf:
	mov -512(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007d9c2:
	mov -256(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007d9c5:
	mov -248(%RBP),%RSP
	add $-584, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da09
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9e1
	jmp uuid_000000000007d9e3
uuid_000000000007d9e1:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9d8
	jmp uuid_000000000007d9da
uuid_000000000007d9d8:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9d5
	jmp uuid_000000000007d9d7
uuid_000000000007d9d5:
	push %RBP
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9cf
	jmp uuid_000000000007d9d1
uuid_000000000007d9cf:
	push %RBP
	jmp uuid_000000000007d9cc
	jmp uuid_000000000007d9ce
uuid_000000000007d9cc:
	push %RBP
	jmp uuid_000000000007d9c9
	jmp uuid_000000000007d9cb
uuid_000000000007d9c9:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d9c6
	jmp uuid_000000000007d9c8
uuid_000000000007d9c6:
	movb $1, -928(%rbp)
uuid_000000000007d9c8:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007d9cb:
	mov -952(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007d9ce:
	mov -944(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007d9d1:
	mov -936(%RBP),%RSP
	add $-968, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9d2
	jmp uuid_000000000007d9d4
uuid_000000000007d9d2:
	movb $1, -768(%rbp)
uuid_000000000007d9d4:
	mov -864(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007d9d7:
	mov -784(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007d9da:
	mov -776(%RBP),%RSP
	add $-968, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9de
	jmp uuid_000000000007d9e0
uuid_000000000007d9de:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9db
	jmp uuid_000000000007d9dd
uuid_000000000007d9db:
	movb $1, -672(%rbp)
uuid_000000000007d9dd:
	mov -976(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007d9e0:
	mov -688(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007d9e3:
	mov -680(%RBP),%RSP
	add $-1048, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da06
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9ff
	jmp uuid_000000000007da01
uuid_000000000007d9ff:
	push %RBP
	mov -1120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9fc
	jmp uuid_000000000007d9fe
uuid_000000000007d9fc:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9f9
	jmp uuid_000000000007d9fb
uuid_000000000007d9f9:
	movb $1, -1136(%rbp)
uuid_000000000007d9fb:
	mov -1232(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007d9fe:
	mov -1152(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007da01:
	mov -1144(%RBP),%RSP
	add $-1304, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da03
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007da02
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007da05
uuid_000000000007da03:
	movq -1304(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007da05:
	mov -1056(%RBP),%RSP
	add $-1304, %RSP
	jmp uuid_000000000007da08
uuid_000000000007da06:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	push %RBP
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9ed
	jmp uuid_000000000007d9ef
uuid_000000000007d9ed:
	push %RBP
	jmp uuid_000000000007d9ea
	jmp uuid_000000000007d9ec
uuid_000000000007d9ea:
	push %RBP
	jmp uuid_000000000007d9e7
	jmp uuid_000000000007d9e9
uuid_000000000007d9e7:
	push %RBP
	jmp uuid_000000000007d9e4
	jmp uuid_000000000007d9e6
uuid_000000000007d9e4:
	movb $1, -1208(%rbp)
uuid_000000000007d9e6:
	mov -1240(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d9e9:
	mov -1232(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d9ec:
	mov -1224(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007d9ef:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
	mov -1208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007d9f6
	push %RBP
	jmp uuid_000000000007d9f3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007d9f2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d9f5
uuid_000000000007d9f3:
uuid_000000000007d9f5:
	mov -1248(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007d9f8
uuid_000000000007d9f6:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq $uuid_000000000007d9f0
	pushq $0
	pushq $uuid_000000000007d9f1
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment::set-term : Arrow<Cons<Fragment,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -968(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007d9f8:
	mov -1128(%RBP),%RSP
	add $-1392, %RSP
	movq -1048(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007da08:
	mov -592(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007da0b
uuid_000000000007da09:
	movq -584(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -536(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -528(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -520(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007da0b:
	mov -160(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007da0c
uuid_000000000007da0e:
	pushq $0
	pushq $0
	pushq $3
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r14
	movq 0(%r14), %r15
	movq %r15, -80(%rbp)
	movq 8(%r14), %r15
	movq %r15, -72(%rbp)
	movq 16(%r14), %r15
	movq %r15, -64(%rbp)
	movq 24(%r14), %r15
	movq %r15, -56(%rbp)
	movq 32(%r14), %r15
	movq %r15, -48(%rbp)
	movq 40(%r14), %r15
	movq %r15, -40(%rbp)
	movq 48(%r14), %r15
	movq %r15, -32(%rbp)
	movq 56(%r14), %r15
	movq %r15, -24(%rbp)
	movq 64(%r14), %r15
	movq %r15, -16(%rbp)
uuid_000000000007da65:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da66
	jmp uuid_000000000007da67
uuid_000000000007da66:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da2a
	jmp uuid_000000000007da2c
uuid_000000000007da2a:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da21
	jmp uuid_000000000007da23
uuid_000000000007da21:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da1e
	jmp uuid_000000000007da20
uuid_000000000007da1e:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da18
	jmp uuid_000000000007da1a
uuid_000000000007da18:
	push %RBP
	jmp uuid_000000000007da15
	jmp uuid_000000000007da17
uuid_000000000007da15:
	push %RBP
	jmp uuid_000000000007da12
	jmp uuid_000000000007da14
uuid_000000000007da12:
	push %RBP
	mov -464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007da0f
	jmp uuid_000000000007da11
uuid_000000000007da0f:
	movb $1, -520(%rbp)
uuid_000000000007da11:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007da14:
	mov -544(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007da17:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007da1a:
	mov -528(%RBP),%RSP
	add $-560, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da1b
	jmp uuid_000000000007da1d
uuid_000000000007da1b:
	movb $1, -360(%rbp)
uuid_000000000007da1d:
	mov -456(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007da20:
	mov -376(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007da23:
	mov -368(%RBP),%RSP
	add $-560, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da27
	jmp uuid_000000000007da29
uuid_000000000007da27:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da24
	jmp uuid_000000000007da26
uuid_000000000007da24:
	movb $1, -264(%rbp)
uuid_000000000007da26:
	mov -568(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007da29:
	mov -280(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007da2c:
	mov -272(%RBP),%RSP
	add $-640, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da62
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da3c
	jmp uuid_000000000007da3e
uuid_000000000007da3c:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da33
	jmp uuid_000000000007da35
uuid_000000000007da33:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da30
	jmp uuid_000000000007da32
uuid_000000000007da30:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da2d
	jmp uuid_000000000007da2f
uuid_000000000007da2d:
	movb $1, -824(%rbp)
uuid_000000000007da2f:
	mov -920(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007da32:
	mov -840(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007da35:
	mov -832(%RBP),%RSP
	add $-992, %RSP
	mov -824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da39
	jmp uuid_000000000007da3b
uuid_000000000007da39:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da36
	jmp uuid_000000000007da38
uuid_000000000007da36:
	movb $1, -728(%rbp)
uuid_000000000007da38:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007da3b:
	mov -744(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007da3e:
	mov -736(%RBP),%RSP
	add $-1072, %RSP
	mov -728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da5f
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da4b
	jmp uuid_000000000007da4d
uuid_000000000007da4b:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da42
	jmp uuid_000000000007da44
uuid_000000000007da42:
	push %RBP
	jmp uuid_000000000007da3f
	jmp uuid_000000000007da41
uuid_000000000007da3f:
	movb $1, -1256(%rbp)
uuid_000000000007da41:
	mov -1272(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007da44:
	mov -1264(%RBP),%RSP
	add $-1272, %RSP
	mov -1256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da48
	jmp uuid_000000000007da4a
uuid_000000000007da48:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da45
	jmp uuid_000000000007da47
uuid_000000000007da45:
	movb $1, -1160(%rbp)
uuid_000000000007da47:
	mov -1280(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007da4a:
	mov -1176(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007da4d:
	mov -1168(%RBP),%RSP
	add $-1352, %RSP
	mov -1160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da5c
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1432(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da54
	jmp uuid_000000000007da56
uuid_000000000007da54:
	push %RBP
	mov -1424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da51
	jmp uuid_000000000007da53
uuid_000000000007da51:
	push %RBP
	mov -1416(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da4e
	jmp uuid_000000000007da50
uuid_000000000007da4e:
	movb $1, -1440(%rbp)
uuid_000000000007da50:
	mov -1536(%RBP),%RSP
	add $-1608, %RSP
uuid_000000000007da53:
	mov -1456(%RBP),%RSP
	add $-1608, %RSP
uuid_000000000007da56:
	mov -1448(%RBP),%RSP
	add $-1608, %RSP
	mov -1440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da59
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007da58
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007da5b
uuid_000000000007da59:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $uuid_000000000007da57
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq $0
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1608(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1544(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007da5b:
	mov -1360(%RBP),%RSP
	add $-1864, %RSP
	jmp uuid_000000000007da5e
uuid_000000000007da5c:
	movq -1352(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007da5e:
	mov -1080(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007da61
uuid_000000000007da5f:
	movq -1072(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007da61:
	mov -648(%RBP),%RSP
	add $-1072, %RSP
	jmp uuid_000000000007da64
uuid_000000000007da62:
	movq -640(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007da64:
	mov -184(%RBP),%RSP
	add $-640, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007da65
uuid_000000000007da67:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %r15
	movq $assemble_SB_final_CL_String, %r14
	movq %r15, 0(%r14)
#call function compile-write : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_write_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_gnu_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007dac7:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dac8
	jmp uuid_000000000007dac9
uuid_000000000007dac8:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da83
	jmp uuid_000000000007da85
uuid_000000000007da83:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da7a
	jmp uuid_000000000007da7c
uuid_000000000007da7a:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da77
	jmp uuid_000000000007da79
uuid_000000000007da77:
	push %RBP
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da71
	jmp uuid_000000000007da73
uuid_000000000007da71:
	push %RBP
	jmp uuid_000000000007da6e
	jmp uuid_000000000007da70
uuid_000000000007da6e:
	push %RBP
	jmp uuid_000000000007da6b
	jmp uuid_000000000007da6d
uuid_000000000007da6b:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007da68
	jmp uuid_000000000007da6a
uuid_000000000007da68:
	movb $1, -496(%rbp)
uuid_000000000007da6a:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007da6d:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007da70:
	mov -512(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007da73:
	mov -504(%RBP),%RSP
	add $-536, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da74
	jmp uuid_000000000007da76
uuid_000000000007da74:
	movb $1, -336(%rbp)
uuid_000000000007da76:
	mov -432(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007da79:
	mov -352(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007da7c:
	mov -344(%RBP),%RSP
	add $-536, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da80
	jmp uuid_000000000007da82
uuid_000000000007da80:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007da7d
	jmp uuid_000000000007da7f
uuid_000000000007da7d:
	movb $1, -240(%rbp)
uuid_000000000007da7f:
	mov -544(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007da82:
	mov -256(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007da85:
	mov -248(%RBP),%RSP
	add $-616, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dac4
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dab1
	jmp uuid_000000000007dab3
uuid_000000000007dab1:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daa8
	jmp uuid_000000000007daaa
uuid_000000000007daa8:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007daa5
	jmp uuid_000000000007daa7
uuid_000000000007daa5:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007daa2
	jmp uuid_000000000007daa4
uuid_000000000007daa2:
	movb $1, -800(%rbp)
uuid_000000000007daa4:
	mov -896(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007daa7:
	mov -816(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007daaa:
	mov -808(%RBP),%RSP
	add $-968, %RSP
	mov -800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007daae
	jmp uuid_000000000007dab0
uuid_000000000007daae:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007daab
	jmp uuid_000000000007daad
uuid_000000000007daab:
	movb $1, -704(%rbp)
uuid_000000000007daad:
	mov -976(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007dab0:
	mov -720(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007dab3:
	mov -712(%RBP),%RSP
	add $-1048, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dac1
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daba
	jmp uuid_000000000007dabc
uuid_000000000007daba:
	push %RBP
	jmp uuid_000000000007dab7
	jmp uuid_000000000007dab9
uuid_000000000007dab7:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dab4
	jmp uuid_000000000007dab6
uuid_000000000007dab4:
	movb $1, -1136(%rbp)
uuid_000000000007dab6:
	mov -1160(%RBP),%RSP
	add $-1232, %RSP
uuid_000000000007dab9:
	mov -1152(%RBP),%RSP
	add $-1232, %RSP
uuid_000000000007dabc:
	mov -1144(%RBP),%RSP
	add $-1232, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dabe
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dabd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dac0
uuid_000000000007dabe:
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007dac0:
	mov -1056(%RBP),%RSP
	add $-1232, %RSP
	jmp uuid_000000000007dac3
uuid_000000000007dac1:
	movq -1048(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007dac3:
	mov -624(%RBP),%RSP
	add $-1048, %RSP
	jmp uuid_000000000007dac6
uuid_000000000007dac4:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $uuid_000000000007da86
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da87
	jmp uuid_000000000007da89
uuid_000000000007da87:
	mov $assemble_SB_argv_SB_referenced_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007da89:
	mov -624(%RBP),%RSP
	add $-624, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da9f
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da9c
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007d9f0
	pushq $0
	pushq $uuid_000000000007da8a
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $uuid_000000000007da8b
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da92
	jmp uuid_000000000007da94
uuid_000000000007da92:
	push %RBP
	jmp uuid_000000000007da8f
	jmp uuid_000000000007da91
uuid_000000000007da8f:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq $uuid_000000000007da8b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da8c
	jmp uuid_000000000007da8e
uuid_000000000007da8c:
	movb $1, -880(%rbp)
uuid_000000000007da8e:
	mov -904(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007da91:
	mov -896(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007da94:
	mov -888(%RBP),%RSP
	add $-912, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007da99
	push %RBP
	jmp uuid_000000000007da96
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007da95
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007da98
uuid_000000000007da96:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2d
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007da57
	pushq $0
	pushq -976(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007da98:
	mov -920(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007da9b
uuid_000000000007da99:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007da9b:
	mov -848(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007da9e
uuid_000000000007da9c:
#call function fragment::set-term : Arrow<Cons<Fragment,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007da9e:
	mov -816(%RBP),%RSP
	add $-816, %RSP
	jmp uuid_000000000007daa1
uuid_000000000007da9f:
uuid_000000000007daa1:
	mov -808(%RBP),%RSP
	add $-808, %RSP
	movq -616(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007dac6:
	mov -160(%RBP),%RSP
	add $-808, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007dac7
uuid_000000000007dac9:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-finish : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_finish_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-write : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_write_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_finish_CL_ArrowNilNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-text-header : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_text_SB_header_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-exit-cleanup : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_exit_SB_cleanup_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007daca
	jmp uuid_000000000007dacc
uuid_000000000007daca:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-data-header : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_data_SB_header_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007dacc:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %r15
	movq $assemble_SB_final_CL_String, %r14
	movq %r15, 0(%r14)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext:
	pushq $0
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dad3
	jmp uuid_000000000007dad5
uuid_000000000007dad3:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dad0
	jmp uuid_000000000007dad2
uuid_000000000007dad0:
	push %RBP
	jmp uuid_000000000007dacd
	jmp uuid_000000000007dacf
uuid_000000000007dacd:
	movb $1, -448(%rbp)
uuid_000000000007dacf:
	mov -544(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007dad2:
	mov -464(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007dad5:
	mov -456(%RBP),%RSP
	add $-544, %RSP
	mov -448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dadd
	push %RBP
	jmp uuid_000000000007dada
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dad9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dadc
uuid_000000000007dada:
uuid_000000000007dadc:
	mov -552(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007dadf
uuid_000000000007dadd:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dad6
	jmp uuid_000000000007dad8
uuid_000000000007dad6:
	movq $1, -288(%rbp)
uuid_000000000007dad8:
	mov -552(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007dadf:
	mov -368(%RBP),%RSP
	add $-552, %RSP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dafb
	jmp uuid_000000000007dafd
uuid_000000000007dafb:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daf2
	jmp uuid_000000000007daf4
uuid_000000000007daf2:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007daef
	jmp uuid_000000000007daf1
uuid_000000000007daef:
	push %RBP
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dae9
	jmp uuid_000000000007daeb
uuid_000000000007dae9:
	push %RBP
	jmp uuid_000000000007dae6
	jmp uuid_000000000007dae8
uuid_000000000007dae6:
	push %RBP
	jmp uuid_000000000007dae3
	jmp uuid_000000000007dae5
uuid_000000000007dae3:
	push %RBP
	mov -912(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dae0
	jmp uuid_000000000007dae2
uuid_000000000007dae0:
	movb $1, -968(%rbp)
uuid_000000000007dae2:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007dae5:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007dae8:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007daeb:
	mov -976(%RBP),%RSP
	add $-1008, %RSP
	mov -968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007daec
	jmp uuid_000000000007daee
uuid_000000000007daec:
	movb $1, -808(%rbp)
uuid_000000000007daee:
	mov -904(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007daf1:
	mov -824(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007daf4:
	mov -816(%RBP),%RSP
	add $-1008, %RSP
	mov -808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007daf8
	jmp uuid_000000000007dafa
uuid_000000000007daf8:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007daf5
	jmp uuid_000000000007daf7
uuid_000000000007daf5:
	movb $1, -712(%rbp)
uuid_000000000007daf7:
	mov -1016(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007dafa:
	mov -728(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007dafd:
	mov -720(%RBP),%RSP
	add $-1088, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db11
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db07
	jmp uuid_000000000007db09
uuid_000000000007db07:
	push %RBP
	jmp uuid_000000000007db04
	jmp uuid_000000000007db06
uuid_000000000007db04:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db01
	jmp uuid_000000000007db03
uuid_000000000007db01:
	movb $1, -1176(%rbp)
uuid_000000000007db03:
	mov -1200(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007db06:
	mov -1192(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007db09:
	mov -1184(%RBP),%RSP
	add $-1272, %RSP
	mov -1176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db0e
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db0b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007db0a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db0d
uuid_000000000007db0b:
uuid_000000000007db0d:
	mov -1280(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007db10
uuid_000000000007db0e:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007db10:
	mov -1096(%RBP),%RSP
	add $-1272, %RSP
	jmp uuid_000000000007db13
uuid_000000000007db11:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
	mov -288(%RBP), %RAX
	cmp $0, %RAX
	jne uuid_000000000007dafe
#call function compile-global : Arrow<Cons<Cons<FContext,String>,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1008(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call compile_SB_global_CL_ArrowNilConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db00
uuid_000000000007dafe:
uuid_000000000007db00:
	mov -1096(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007db13:
	mov -632(%RBP),%RSP
	add $-1096, %RSP
	mov %rbp, %rsp
	sub $280, %rsp
	ret
compile_SB_write_CL_ArrowNilNil:
#call function write-file : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_target_CL_String, %r15
	pushq 0(%r15)
	mov $assemble_SB_final_CL_String, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call write_SB_file_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_SB_context_CL__CL_new_CL_ArrowFContextNil:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	subq $200, %rsp
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function find-alias : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -208(%rbp)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007db55:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db56
	jmp uuid_000000000007db57
uuid_000000000007db56:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq $0
	push %RBP
	mov -1104(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db20
	jmp uuid_000000000007db22
uuid_000000000007db20:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	jmp uuid_000000000007db1d
	jmp uuid_000000000007db1f
uuid_000000000007db1d:
	push %RBP
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	jmp uuid_000000000007db1a
	jmp uuid_000000000007db1c
uuid_000000000007db1a:
	push %RBP
	mov -920(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db17
	jmp uuid_000000000007db19
uuid_000000000007db17:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db14
	jmp uuid_000000000007db16
uuid_000000000007db14:
	movb $1, -1112(%rbp)
uuid_000000000007db16:
	mov -1336(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007db19:
	mov -1320(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007db1c:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007db1f:
	mov -1128(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007db22:
	mov -1120(%RBP),%RSP
	add $-1536, %RSP
	mov -1112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db52
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007db51
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db54
uuid_000000000007db52:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1328(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db4e
	movq -1536(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007db50
uuid_000000000007db4e:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db3b
	jmp uuid_000000000007db3d
uuid_000000000007db3b:
	push %RBP
	mov -1592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db32
	jmp uuid_000000000007db34
uuid_000000000007db32:
	push %RBP
	mov -1656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db29
	jmp uuid_000000000007db2b
uuid_000000000007db29:
	push %RBP
	mov -1720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db26
	jmp uuid_000000000007db28
uuid_000000000007db26:
	push %RBP
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	jmp uuid_000000000007db23
	jmp uuid_000000000007db25
uuid_000000000007db23:
	movb $1, -1736(%rbp)
uuid_000000000007db25:
	mov -1800(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007db28:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007db2b:
	mov -1744(%RBP),%RSP
	add $-1824, %RSP
	mov -1736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db2f
	jmp uuid_000000000007db31
uuid_000000000007db2f:
	push %RBP
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	jmp uuid_000000000007db2c
	jmp uuid_000000000007db2e
uuid_000000000007db2c:
	movb $1, -1672(%rbp)
uuid_000000000007db2e:
	mov -1832(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007db31:
	mov -1688(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007db34:
	mov -1680(%RBP),%RSP
	add $-1856, %RSP
	mov -1672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db38
	jmp uuid_000000000007db3a
uuid_000000000007db38:
	push %RBP
	mov -1584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db35
	jmp uuid_000000000007db37
uuid_000000000007db35:
	movb $1, -1608(%rbp)
uuid_000000000007db37:
	mov -1864(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007db3a:
	mov -1624(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007db3d:
	mov -1616(%RBP),%RSP
	add $-1872, %RSP
	mov -1608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db4b
	push %RBP
	jmp uuid_000000000007db48
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007db47
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db4a
uuid_000000000007db48:
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c0bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007db4a:
	mov -1880(%RBP),%RSP
	add $-1880, %RSP
	jmp uuid_000000000007db4d
uuid_000000000007db4b:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db44
	jmp uuid_000000000007db46
uuid_000000000007db44:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db41
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -680(%rbp)
	jmp uuid_000000000007db43
uuid_000000000007db41:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db3e
	jmp uuid_000000000007db40
uuid_000000000007db3e:
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -680(%rbp)
uuid_000000000007db40:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007db43:
	mov -1888(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007db46:
	mov -1880(%RBP),%RSP
	add $-1896, %RSP
	movq -1536(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007db4d:
	mov -1576(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007db50:
	mov -1544(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007db54:
	mov -904(%RBP),%RSP
	add $-1896, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007db55
uuid_000000000007db57:
	push %RBP
	mov -312(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	pushq %R13
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db74
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007db58
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007db59
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -520(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -512(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007db70:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db71
	jmp uuid_000000000007db72
uuid_000000000007db71:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db66
	jmp uuid_000000000007db68
uuid_000000000007db66:
	push %RBP
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007db63
	jmp uuid_000000000007db65
uuid_000000000007db63:
	push %RBP
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	jmp uuid_000000000007db60
	jmp uuid_000000000007db62
uuid_000000000007db60:
	push %RBP
	mov -928(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db5d
	jmp uuid_000000000007db5f
uuid_000000000007db5d:
	push %RBP
	mov -920(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db5a
	jmp uuid_000000000007db5c
uuid_000000000007db5a:
	movb $1, -1120(%rbp)
uuid_000000000007db5c:
	mov -1344(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007db5f:
	mov -1328(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007db62:
	mov -1296(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007db65:
	mov -1136(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007db68:
	mov -1128(%RBP),%RSP
	add $-1544, %RSP
	mov -1120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db6d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007db6c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db6f
uuid_000000000007db6d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1336(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db69
	jmp uuid_000000000007db6b
uuid_000000000007db69:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007db6b:
	mov -1552(%RBP),%RSP
	add $-1552, %RSP
	movq -1544(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1536(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007db6f:
	mov -912(%RBP),%RSP
	add $-1552, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007db70
uuid_000000000007db72:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007db73
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db76
uuid_000000000007db74:
uuid_000000000007db76:
	mov -704(%RBP),%RSP
	add $-704, %RSP
	subq $152, %rsp
	pushq -672(%rbp)
	pushq -664(%rbp)
	pushq -656(%rbp)
	pushq -648(%rbp)
	pushq -640(%rbp)
	pushq -632(%rbp)
	pushq -624(%rbp)
	pushq -616(%rbp)
	pushq -608(%rbp)
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookups : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $168, %rsp
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsU8ConsASTConsTypeConsStringFContext:
#call function find-alias : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -208(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007dbcf:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbd0
	jmp uuid_000000000007dbd1
uuid_000000000007dbd0:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db85
	jmp uuid_000000000007db87
uuid_000000000007db85:
	push %RBP
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	jmp uuid_000000000007db82
	jmp uuid_000000000007db84
uuid_000000000007db82:
	push %RBP
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	jmp uuid_000000000007db7f
	jmp uuid_000000000007db81
uuid_000000000007db7f:
	push %RBP
	mov -736(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db7c
	jmp uuid_000000000007db7e
uuid_000000000007db7c:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007db79
	jmp uuid_000000000007db7b
uuid_000000000007db79:
	movb $1, -928(%rbp)
uuid_000000000007db7b:
	mov -1152(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007db7e:
	mov -1136(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007db81:
	mov -1104(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007db84:
	mov -944(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007db87:
	mov -936(%RBP),%RSP
	add $-1352, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbcc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dbcb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dbce
uuid_000000000007dbcc:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbc8
	movq -1352(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007dbca
uuid_000000000007dbc8:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dba0
	jmp uuid_000000000007dba2
uuid_000000000007dba0:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db97
	jmp uuid_000000000007db99
uuid_000000000007db97:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db8e
	jmp uuid_000000000007db90
uuid_000000000007db8e:
	push %RBP
	mov -1536(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1608(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db8b
	jmp uuid_000000000007db8d
uuid_000000000007db8b:
	push %RBP
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	jmp uuid_000000000007db88
	jmp uuid_000000000007db8a
uuid_000000000007db88:
	movb $1, -1552(%rbp)
uuid_000000000007db8a:
	mov -1616(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007db8d:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007db90:
	mov -1560(%RBP),%RSP
	add $-1640, %RSP
	mov -1552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db94
	jmp uuid_000000000007db96
uuid_000000000007db94:
	push %RBP
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	jmp uuid_000000000007db91
	jmp uuid_000000000007db93
uuid_000000000007db91:
	movb $1, -1488(%rbp)
uuid_000000000007db93:
	mov -1648(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007db96:
	mov -1504(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007db99:
	mov -1496(%RBP),%RSP
	add $-1672, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007db9d
	jmp uuid_000000000007db9f
uuid_000000000007db9d:
	push %RBP
	mov -1400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db9a
	jmp uuid_000000000007db9c
uuid_000000000007db9a:
	movb $1, -1424(%rbp)
uuid_000000000007db9c:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007db9f:
	mov -1440(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007dba2:
	mov -1432(%RBP),%RSP
	add $-1688, %RSP
	mov -1424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbc5
	push %RBP
	jmp uuid_000000000007dbc2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dbc1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dbc4
uuid_000000000007dbc2:
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbbe
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c0bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	jmp uuid_000000000007dbc0
uuid_000000000007dbbe:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007dbc0:
	mov -1704(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007dbc4:
	mov -1696(%RBP),%RSP
	add $-1704, %RSP
	jmp uuid_000000000007dbc7
uuid_000000000007dbc5:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbb7
	jmp uuid_000000000007dbb9
uuid_000000000007dbb7:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbb4
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbb1
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	movq -1640(%rbp), %r15
	movq %r15, -512(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -504(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -496(%rbp)
	jmp uuid_000000000007dbb3
uuid_000000000007dbb1:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007dbb3:
	mov -1712(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_000000000007dbb6
uuid_000000000007dbb4:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbaa
	jmp uuid_000000000007dbac
uuid_000000000007dbaa:
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dba7
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	movq -1640(%rbp), %r15
	movq %r15, -512(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -504(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -496(%rbp)
	jmp uuid_000000000007dba9
uuid_000000000007dba7:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007dba9:
	mov -1720(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007dbac:
	mov -1712(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007dbb6:
	mov -1704(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007dbb9:
	mov -1696(%RBP),%RSP
	add $-1720, %RSP
	movq -1352(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007dbc7:
	mov -1392(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007dbca:
	mov -1360(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007dbce:
	mov -720(%RBP),%RSP
	add $-1720, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007dbcf
uuid_000000000007dbd1:
	push %RBP
	mov -312(%RBP), %R13B
	mov $0, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	pushq %R13
#call function .length : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbd3
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dbd2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007db73
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dbd5
uuid_000000000007dbd3:
uuid_000000000007dbd5:
	mov -520(%RBP),%RSP
	add $-520, %RSP
	subq $168, %rsp
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
fragment_SB_context_CL__CL_lookup_SB_vararg_CL_ArrowFragmentListConsASTConsTypeConsStringFContext:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007dbec:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbed
	jmp uuid_000000000007dbee
uuid_000000000007dbed:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbe2
	jmp uuid_000000000007dbe4
uuid_000000000007dbe2:
	push %RBP
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	jmp uuid_000000000007dbdf
	jmp uuid_000000000007dbe1
uuid_000000000007dbdf:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	jmp uuid_000000000007dbdc
	jmp uuid_000000000007dbde
uuid_000000000007dbdc:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dbd9
	jmp uuid_000000000007dbdb
uuid_000000000007dbd9:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dbd6
	jmp uuid_000000000007dbd8
uuid_000000000007dbd6:
	movb $1, -896(%rbp)
uuid_000000000007dbd8:
	mov -1120(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007dbdb:
	mov -1104(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007dbde:
	mov -1072(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007dbe1:
	mov -912(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007dbe4:
	mov -904(%RBP),%RSP
	add $-1320, %RSP
	mov -896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dbe9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dbe8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dbeb
uuid_000000000007dbe9:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbe5
	jmp uuid_000000000007dbe7
uuid_000000000007dbe5:
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007dbe7:
	mov -1328(%RBP),%RSP
	add $-1328, %RSP
	movq -1320(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007dbeb:
	mov -688(%RBP),%RSP
	add $-1328, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007dbec
uuid_000000000007dbee:
	subq $168, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext:
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	subq $200, %rsp
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::set-vararg : Arrow<Cons<Fragment,List<Array<Fragment,?>>>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
#call function cons : Arrow<Cons<Array<Fragment,?>,List<Array<Fragment,?>>>,List<Array<Fragment,?>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Fragment,Array<Fragment,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	mov %RBX, %RBP
	call cons_CL_ArrowListArray_QM_FragmentConsListArray_QM_FragmentArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_vararg_CL_ArrowFragmentConsListArray_QM_FragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
with_SB_location_CL_ArrowASTConsSourceLocationAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc5c
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc59
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbf5
	jmp uuid_000000000007dbf7
uuid_000000000007dbf5:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007dbf2
	jmp uuid_000000000007dbf4
uuid_000000000007dbf2:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dbef
	jmp uuid_000000000007dbf1
uuid_000000000007dbef:
	movb $1, -504(%rbp)
uuid_000000000007dbf1:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007dbf4:
	mov -520(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007dbf7:
	mov -512(%RBP),%RSP
	add $-592, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc56
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc01
	jmp uuid_000000000007dc03
uuid_000000000007dc01:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007dbfe
	jmp uuid_000000000007dc00
uuid_000000000007dbfe:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dbfb
	jmp uuid_000000000007dbfd
uuid_000000000007dbfb:
	movb $1, -680(%rbp)
uuid_000000000007dbfd:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007dc00:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007dc03:
	mov -688(%RBP),%RSP
	add $-768, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc53
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc0a
	jmp uuid_000000000007dc0c
uuid_000000000007dc0a:
	push %RBP
	jmp uuid_000000000007dc07
	jmp uuid_000000000007dc09
uuid_000000000007dc07:
	movb $1, -856(%rbp)
uuid_000000000007dc09:
	mov -872(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007dc0c:
	mov -864(%RBP),%RSP
	add $-872, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc50
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc13
	jmp uuid_000000000007dc15
uuid_000000000007dc13:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc10
	jmp uuid_000000000007dc12
uuid_000000000007dc10:
	push %RBP
	mov -936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc0d
	jmp uuid_000000000007dc0f
uuid_000000000007dc0d:
	movb $1, -960(%rbp)
uuid_000000000007dc0f:
	mov -1056(%RBP),%RSP
	add $-1128, %RSP
uuid_000000000007dc12:
	mov -976(%RBP),%RSP
	add $-1128, %RSP
uuid_000000000007dc15:
	mov -968(%RBP),%RSP
	add $-1128, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc4d
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc1f
	jmp uuid_000000000007dc21
uuid_000000000007dc1f:
	push %RBP
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	jmp uuid_000000000007dc1c
	jmp uuid_000000000007dc1e
uuid_000000000007dc1c:
	push %RBP
	mov -1176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc19
	jmp uuid_000000000007dc1b
uuid_000000000007dc19:
	push %RBP
	mov -1168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc16
	jmp uuid_000000000007dc18
uuid_000000000007dc16:
	movb $1, -1216(%rbp)
uuid_000000000007dc18:
	mov -1344(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007dc1b:
	mov -1264(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007dc1e:
	mov -1232(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007dc21:
	mov -1224(%RBP),%RSP
	add $-1416, %RSP
	mov -1216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc4a
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1496(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc28
	jmp uuid_000000000007dc2a
uuid_000000000007dc28:
	push %RBP
	mov -1488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc25
	jmp uuid_000000000007dc27
uuid_000000000007dc25:
	push %RBP
	mov -1480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc22
	jmp uuid_000000000007dc24
uuid_000000000007dc22:
	movb $1, -1504(%rbp)
uuid_000000000007dc24:
	mov -1600(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007dc27:
	mov -1520(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007dc2a:
	mov -1512(%RBP),%RSP
	add $-1672, %RSP
	mov -1504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc47
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc31
	jmp uuid_000000000007dc33
uuid_000000000007dc31:
	push %RBP
	mov -1744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc2e
	jmp uuid_000000000007dc30
uuid_000000000007dc2e:
	push %RBP
	mov -1736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc2b
	jmp uuid_000000000007dc2d
uuid_000000000007dc2b:
	movb $1, -1760(%rbp)
uuid_000000000007dc2d:
	mov -1856(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007dc30:
	mov -1776(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007dc33:
	mov -1768(%RBP),%RSP
	add $-1928, %RSP
	mov -1760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc44
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -2008(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc3a
	jmp uuid_000000000007dc3c
uuid_000000000007dc3a:
	push %RBP
	mov -2000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc37
	jmp uuid_000000000007dc39
uuid_000000000007dc37:
	push %RBP
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	jmp uuid_000000000007dc34
	jmp uuid_000000000007dc36
uuid_000000000007dc34:
	movb $1, -2016(%rbp)
uuid_000000000007dc36:
	mov -2112(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007dc39:
	mov -2032(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007dc3c:
	mov -2024(%RBP),%RSP
	add $-2168, %RSP
	mov -2016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc41
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dc40
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dc43
uuid_000000000007dc41:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc3d
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	popq -2168(%RBP)
	popq -2160(%RBP)
	popq -2152(%RBP)
	popq -2144(%RBP)
	popq -2136(%RBP)
	popq -2128(%RBP)
	popq -2120(%RBP)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	popq -2104(%RBP)
	popq -2096(%RBP)
	popq -2088(%RBP)
	popq -2080(%RBP)
	popq -2072(%RBP)
	popq -2064(%RBP)
	popq -2056(%RBP)
	popq -2048(%RBP)
	popq -2040(%RBP)
	jmp uuid_000000000007dc3f
uuid_000000000007dc3d:
uuid_000000000007dc3f:
	mov -2176(%RBP),%RSP
	add $-2176, %RSP
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007dc43:
	mov -1936(%RBP),%RSP
	add $-2176, %RSP
	jmp uuid_000000000007dc46
uuid_000000000007dc44:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007dc46:
	mov -1680(%RBP),%RSP
	add $-1928, %RSP
	jmp uuid_000000000007dc49
uuid_000000000007dc47:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007dc49:
	mov -1424(%RBP),%RSP
	add $-1672, %RSP
	jmp uuid_000000000007dc4c
uuid_000000000007dc4a:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $5
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007dc4c:
	mov -1136(%RBP),%RSP
	add $-1416, %RSP
	jmp uuid_000000000007dc4f
uuid_000000000007dc4d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007dc4f:
	mov -880(%RBP),%RSP
	add $-1128, %RSP
	jmp uuid_000000000007dc52
uuid_000000000007dc50:
uuid_000000000007dc52:
	mov -776(%RBP),%RSP
	add $-872, %RSP
	jmp uuid_000000000007dc55
uuid_000000000007dc53:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc04
	pushq -768(%rbp)
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	pushq $6
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	jmp uuid_000000000007dc06
uuid_000000000007dc04:
uuid_000000000007dc06:
	mov -776(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007dc55:
	mov -600(%RBP),%RSP
	add $-776, %RSP
	jmp uuid_000000000007dc58
uuid_000000000007dc56:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dbf8
	pushq -592(%rbp)
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	pushq $7
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	jmp uuid_000000000007dbfa
uuid_000000000007dbf8:
uuid_000000000007dbfa:
	mov -600(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007dc58:
	mov -424(%RBP),%RSP
	add $-600, %RSP
	jmp uuid_000000000007dc5b
uuid_000000000007dc59:
uuid_000000000007dc5b:
	mov -344(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007dc5e
uuid_000000000007dc5c:
uuid_000000000007dc5e:
	mov -264(%RBP),%RSP
	add $-336, %RSP
	subq $72, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $112, %rsp
	ret
with_SB_location_CL_ArrowTokenConsSourceLocationToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc68
	jmp uuid_000000000007dc6a
uuid_000000000007dc68:
	push %RBP
	jmp uuid_000000000007dc65
	jmp uuid_000000000007dc67
uuid_000000000007dc65:
	push %RBP
	jmp uuid_000000000007dc62
	jmp uuid_000000000007dc64
uuid_000000000007dc62:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dc5f
	jmp uuid_000000000007dc61
uuid_000000000007dc5f:
	movb $1, -224(%rbp)
uuid_000000000007dc61:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007dc64:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007dc67:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007dc6a:
	mov -232(%RBP),%RSP
	add $-264, %RSP
	mov -224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dc6c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dc6b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dc6e
uuid_000000000007dc6c:
	pushq -264(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007dc6e:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $96, %rsp
	ret
without_SB_location_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcd3
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcd0
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc75
	jmp uuid_000000000007dc77
uuid_000000000007dc75:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007dc72
	jmp uuid_000000000007dc74
uuid_000000000007dc72:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dc6f
	jmp uuid_000000000007dc71
uuid_000000000007dc6f:
	movb $1, -472(%rbp)
uuid_000000000007dc71:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007dc74:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007dc77:
	mov -480(%RBP),%RSP
	add $-560, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dccd
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc7e
	jmp uuid_000000000007dc80
uuid_000000000007dc7e:
	push %RBP
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	jmp uuid_000000000007dc7b
	jmp uuid_000000000007dc7d
uuid_000000000007dc7b:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dc78
	jmp uuid_000000000007dc7a
uuid_000000000007dc78:
	movb $1, -648(%rbp)
uuid_000000000007dc7a:
	mov -728(%RBP),%RSP
	add $-736, %RSP
uuid_000000000007dc7d:
	mov -664(%RBP),%RSP
	add $-736, %RSP
uuid_000000000007dc80:
	mov -656(%RBP),%RSP
	add $-736, %RSP
	mov -648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcca
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc84
	jmp uuid_000000000007dc86
uuid_000000000007dc84:
	push %RBP
	jmp uuid_000000000007dc81
	jmp uuid_000000000007dc83
uuid_000000000007dc81:
	movb $1, -824(%rbp)
uuid_000000000007dc83:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007dc86:
	mov -832(%RBP),%RSP
	add $-840, %RSP
	mov -824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcc7
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc8d
	jmp uuid_000000000007dc8f
uuid_000000000007dc8d:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc8a
	jmp uuid_000000000007dc8c
uuid_000000000007dc8a:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc87
	jmp uuid_000000000007dc89
uuid_000000000007dc87:
	movb $1, -928(%rbp)
uuid_000000000007dc89:
	mov -1024(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007dc8c:
	mov -944(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007dc8f:
	mov -936(%RBP),%RSP
	add $-1096, %RSP
	mov -928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcc4
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1176(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc99
	jmp uuid_000000000007dc9b
uuid_000000000007dc99:
	push %RBP
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	jmp uuid_000000000007dc96
	jmp uuid_000000000007dc98
uuid_000000000007dc96:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc93
	jmp uuid_000000000007dc95
uuid_000000000007dc93:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc90
	jmp uuid_000000000007dc92
uuid_000000000007dc90:
	movb $1, -1184(%rbp)
uuid_000000000007dc92:
	mov -1312(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007dc95:
	mov -1232(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007dc98:
	mov -1200(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007dc9b:
	mov -1192(%RBP),%RSP
	add $-1384, %RSP
	mov -1184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcc1
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dca2
	jmp uuid_000000000007dca4
uuid_000000000007dca2:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc9f
	jmp uuid_000000000007dca1
uuid_000000000007dc9f:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc9c
	jmp uuid_000000000007dc9e
uuid_000000000007dc9c:
	movb $1, -1472(%rbp)
uuid_000000000007dc9e:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007dca1:
	mov -1488(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007dca4:
	mov -1480(%RBP),%RSP
	add $-1640, %RSP
	mov -1472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcbe
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcab
	jmp uuid_000000000007dcad
uuid_000000000007dcab:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dca8
	jmp uuid_000000000007dcaa
uuid_000000000007dca8:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dca5
	jmp uuid_000000000007dca7
uuid_000000000007dca5:
	movb $1, -1728(%rbp)
uuid_000000000007dca7:
	mov -1824(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007dcaa:
	mov -1744(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007dcad:
	mov -1736(%RBP),%RSP
	add $-1896, %RSP
	mov -1728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcbb
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1976(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcb4
	jmp uuid_000000000007dcb6
uuid_000000000007dcb4:
	push %RBP
	mov -1968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dcb1
	jmp uuid_000000000007dcb3
uuid_000000000007dcb1:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007dcae
	jmp uuid_000000000007dcb0
uuid_000000000007dcae:
	movb $1, -1984(%rbp)
uuid_000000000007dcb0:
	mov -2080(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007dcb3:
	mov -2000(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007dcb6:
	mov -1992(%RBP),%RSP
	add $-2136, %RSP
	mov -1984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcb8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dcb7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dcba
uuid_000000000007dcb8:
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dcba:
	mov -1904(%RBP),%RSP
	add $-2136, %RSP
	jmp uuid_000000000007dcbd
uuid_000000000007dcbb:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dcbd:
	mov -1648(%RBP),%RSP
	add $-1896, %RSP
	jmp uuid_000000000007dcc0
uuid_000000000007dcbe:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dcc0:
	mov -1392(%RBP),%RSP
	add $-1640, %RSP
	jmp uuid_000000000007dcc3
uuid_000000000007dcc1:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dcc3:
	mov -1104(%RBP),%RSP
	add $-1384, %RSP
	jmp uuid_000000000007dcc6
uuid_000000000007dcc4:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dcc6:
	mov -848(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007dcc9
uuid_000000000007dcc7:
uuid_000000000007dcc9:
	mov -744(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007dccc
uuid_000000000007dcca:
	pushq -736(%rbp)
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dccc:
	mov -568(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_000000000007dccf
uuid_000000000007dccd:
	pushq -560(%rbp)
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dccf:
	mov -392(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007dcd2
uuid_000000000007dcd0:
uuid_000000000007dcd2:
	mov -312(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007dcd5
uuid_000000000007dcd3:
uuid_000000000007dcd5:
	mov -232(%RBP),%RSP
	add $-304, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
without_SB_location_CL_ArrowTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcdf
	jmp uuid_000000000007dce1
uuid_000000000007dcdf:
	push %RBP
	jmp uuid_000000000007dcdc
	jmp uuid_000000000007dcde
uuid_000000000007dcdc:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dcd9
	jmp uuid_000000000007dcdb
uuid_000000000007dcd9:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dcd6
	jmp uuid_000000000007dcd8
uuid_000000000007dcd6:
	movb $1, -192(%rbp)
uuid_000000000007dcd8:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007dcdb:
	mov -216(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007dcde:
	mov -208(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007dce1:
	mov -200(%RBP),%RSP
	add $-240, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dce3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dce2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dce5
uuid_000000000007dce3:
	pushq -240(%rbp)
	pushq -224(%rbp)
	pushq $uuid_000000000007b6a7
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007dce5:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
with_SB_key_CL_ArrowTokenConsStringToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcef
	jmp uuid_000000000007dcf1
uuid_000000000007dcef:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	jmp uuid_000000000007dcec
	jmp uuid_000000000007dcee
uuid_000000000007dcec:
	push %RBP
	jmp uuid_000000000007dce9
	jmp uuid_000000000007dceb
uuid_000000000007dce9:
	push %RBP
	jmp uuid_000000000007dce6
	jmp uuid_000000000007dce8
uuid_000000000007dce6:
	movb $1, -200(%rbp)
uuid_000000000007dce8:
	mov -264(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007dceb:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007dcee:
	mov -216(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007dcf1:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dcf3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dcf2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dcf5
uuid_000000000007dcf3:
	pushq -64(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007dcf5:
	mov -136(%RBP),%RSP
	add $-264, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
location_SB_of_CL_ArrowSourceLocationAST:
	pushq $uuid_000000000007dcf6
	pushq $0
	pushq $0
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dcfd
	jmp uuid_000000000007dcff
uuid_000000000007dcfd:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	jmp uuid_000000000007dcfa
	jmp uuid_000000000007dcfc
uuid_000000000007dcfa:
	push %RBP
	jmp uuid_000000000007dcf7
	jmp uuid_000000000007dcf9
uuid_000000000007dcf7:
	movb $1, -272(%rbp)
uuid_000000000007dcf9:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007dcfc:
	mov -288(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007dcff:
	mov -280(%RBP),%RSP
	add $-352, %RSP
	mov -272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd5e
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd06
	jmp uuid_000000000007dd08
uuid_000000000007dd06:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007dd03
	jmp uuid_000000000007dd05
uuid_000000000007dd03:
	push %RBP
	jmp uuid_000000000007dd00
	jmp uuid_000000000007dd02
uuid_000000000007dd00:
	movb $1, -440(%rbp)
uuid_000000000007dd02:
	mov -520(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007dd05:
	mov -456(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007dd08:
	mov -448(%RBP),%RSP
	add $-520, %RSP
	mov -440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd5b
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd0f
	jmp uuid_000000000007dd11
uuid_000000000007dd0f:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd0c
	jmp uuid_000000000007dd0e
uuid_000000000007dd0c:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd09
	jmp uuid_000000000007dd0b
uuid_000000000007dd09:
	movb $1, -608(%rbp)
uuid_000000000007dd0b:
	mov -704(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007dd0e:
	mov -624(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007dd11:
	mov -616(%RBP),%RSP
	add $-776, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd58
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd1e
	jmp uuid_000000000007dd20
uuid_000000000007dd1e:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	jmp uuid_000000000007dd1b
	jmp uuid_000000000007dd1d
uuid_000000000007dd1b:
	push %RBP
	mov -824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd18
	jmp uuid_000000000007dd1a
uuid_000000000007dd18:
	push %RBP
	mov -816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd15
	jmp uuid_000000000007dd17
uuid_000000000007dd15:
	movb $1, -864(%rbp)
uuid_000000000007dd17:
	mov -992(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007dd1a:
	mov -912(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007dd1d:
	mov -880(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007dd20:
	mov -872(%RBP),%RSP
	add $-1064, %RSP
	mov -864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd55
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1144(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd2a
	jmp uuid_000000000007dd2c
uuid_000000000007dd2a:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd27
	jmp uuid_000000000007dd29
uuid_000000000007dd27:
	push %RBP
	mov -1128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd24
	jmp uuid_000000000007dd26
uuid_000000000007dd24:
	movb $1, -1152(%rbp)
uuid_000000000007dd26:
	mov -1248(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007dd29:
	mov -1168(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007dd2c:
	mov -1160(%RBP),%RSP
	add $-1320, %RSP
	mov -1152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd52
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd36
	jmp uuid_000000000007dd38
uuid_000000000007dd36:
	push %RBP
	mov -1392(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd33
	jmp uuid_000000000007dd35
uuid_000000000007dd33:
	push %RBP
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007dd30
	jmp uuid_000000000007dd32
uuid_000000000007dd30:
	movb $1, -1408(%rbp)
uuid_000000000007dd32:
	mov -1504(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007dd35:
	mov -1424(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007dd38:
	mov -1416(%RBP),%RSP
	add $-1560, %RSP
	mov -1408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd4f
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd42
	jmp uuid_000000000007dd44
uuid_000000000007dd42:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd3f
	jmp uuid_000000000007dd41
uuid_000000000007dd3f:
	push %RBP
	mov -1624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd3c
	jmp uuid_000000000007dd3e
uuid_000000000007dd3c:
	movb $1, -1648(%rbp)
uuid_000000000007dd3e:
	mov -1744(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007dd41:
	mov -1664(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007dd44:
	mov -1656(%RBP),%RSP
	add $-1816, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd4c
	push %RBP
	jmp uuid_000000000007dd49
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dd48
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dd4b
uuid_000000000007dd49:
uuid_000000000007dd4b:
	mov -1824(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007dd4e
uuid_000000000007dd4c:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dd45
	jmp uuid_000000000007dd47
uuid_000000000007dd45:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dd47:
	mov -1824(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007dd4e:
	mov -1568(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007dd51
uuid_000000000007dd4f:
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dd39
	jmp uuid_000000000007dd3b
uuid_000000000007dd39:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dd3b:
	mov -1568(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007dd51:
	mov -1328(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007dd54
uuid_000000000007dd52:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dd2d
	jmp uuid_000000000007dd2f
uuid_000000000007dd2d:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dd2f:
	mov -1328(%RBP),%RSP
	add $-1328, %RSP
uuid_000000000007dd54:
	mov -1072(%RBP),%RSP
	add $-1328, %RSP
	jmp uuid_000000000007dd57
uuid_000000000007dd55:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dd21
	jmp uuid_000000000007dd23
uuid_000000000007dd21:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dd23:
	mov -1072(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007dd57:
	mov -784(%RBP),%RSP
	add $-1072, %RSP
	jmp uuid_000000000007dd5a
uuid_000000000007dd58:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dd12
	jmp uuid_000000000007dd14
uuid_000000000007dd12:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dd14:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007dd5a:
	mov -528(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007dd5d
uuid_000000000007dd5b:
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dd5d:
	mov -360(%RBP),%RSP
	add $-520, %RSP
	jmp uuid_000000000007dd60
uuid_000000000007dd5e:
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007dd60:
	mov -192(%RBP),%RSP
	add $-352, %RSP
	subq $32, %rsp
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $32, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
unique_CL_ArrowTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd6a
	jmp uuid_000000000007dd6c
uuid_000000000007dd6a:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007dd67
	jmp uuid_000000000007dd69
uuid_000000000007dd67:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd64
	jmp uuid_000000000007dd66
uuid_000000000007dd64:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd61
	jmp uuid_000000000007dd63
uuid_000000000007dd61:
	movb $1, -192(%rbp)
uuid_000000000007dd63:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007dd66:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007dd69:
	mov -208(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007dd6c:
	mov -200(%RBP),%RSP
	add $-272, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd6e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dd6d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dd70
uuid_000000000007dd6e:
	pushq -272(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007dd70:
	mov -128(%RBP),%RSP
	add $-272, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
print_SB_verbose_CL_ArrowNilToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd7a
	jmp uuid_000000000007dd7c
uuid_000000000007dd7a:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007dd77
	jmp uuid_000000000007dd79
uuid_000000000007dd77:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd74
	jmp uuid_000000000007dd76
uuid_000000000007dd74:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd71
	jmp uuid_000000000007dd73
uuid_000000000007dd71:
	movb $1, -192(%rbp)
uuid_000000000007dd73:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007dd76:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007dd79:
	mov -208(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007dd7c:
	mov -200(%RBP),%RSP
	add $-272, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd7e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dd7d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dd80
uuid_000000000007dd7e:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b7e9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007dd80:
	mov -128(%RBP),%RSP
	add $-272, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
token_CL__CL_new_CL_ArrowTokenString:
	pushq -8(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function location::new : Arrow<Nil,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call location_CL__CL_new_CL_ArrowSourceLocationNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq $0
	subq $56, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
location_CL__CL_new_CL_ArrowSourceLocationNil:
	pushq $uuid_000000000007dcf6
	pushq $0
	pushq $0
	pushq $0
	subq $32, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $32, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
non_SB_zero_CL_ArrowU64SourceLocation:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd8a
	jmp uuid_000000000007dd8c
uuid_000000000007dd8a:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd87
	jmp uuid_000000000007dd89
uuid_000000000007dd87:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd84
	jmp uuid_000000000007dd86
uuid_000000000007dd84:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd81
	jmp uuid_000000000007dd83
uuid_000000000007dd81:
	movb $1, -128(%rbp)
uuid_000000000007dd83:
	mov -176(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007dd86:
	mov -160(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007dd89:
	mov -144(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007dd8c:
	mov -136(%RBP),%RSP
	add $-184, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dd91
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dd90
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dd93
uuid_000000000007dd91:
	push %RBP
	movq -168(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dd8d
	jmp uuid_000000000007dd8f
uuid_000000000007dd8d:
	movq $1, -48(%rbp)
uuid_000000000007dd8f:
	mov -192(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007dd93:
	mov -88(%RBP),%RSP
	add $-192, %RSP
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
is_SB_already_SB_tokenized_CL_ArrowU64String:
	pushq $0
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007ddaa:
#call function non-zero : Arrow<List<String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddab
	jmp uuid_000000000007ddac
uuid_000000000007ddab:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dda0
	jmp uuid_000000000007dda2
uuid_000000000007dda0:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dd9d
	jmp uuid_000000000007dd9f
uuid_000000000007dd9d:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dd9a
	jmp uuid_000000000007dd9c
uuid_000000000007dd9a:
	movb $1, -112(%rbp)
uuid_000000000007dd9c:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007dd9f:
	mov -128(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007dda2:
	mov -120(%RBP),%RSP
	add $-168, %RSP
	mov -112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dda7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dda6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dda9
uuid_000000000007dda7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dda3
	jmp uuid_000000000007dda5
uuid_000000000007dda3:
	movq $1, -24(%rbp)
uuid_000000000007dda5:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	movq -152(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -144(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -136(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007dda9:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ddaa
uuid_000000000007ddac:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
tokenize_CL_ArrowNilString:
	pushq $uuid_000000000007b6a7
	push %RBP
#call function is-already-tokenized : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call is_SB_already_SB_tokenized_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddb1
#call function read-file : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call read_SB_file_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
#call function cons : Arrow<Cons<String,List<String>>,List<String>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListStringConsListStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	jmp uuid_000000000007ddb3
uuid_000000000007ddb1:
uuid_000000000007ddb3:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $1
	pushq $1
	pushq $1
	pushq $1
	pushq $0
uuid_000000000007de35:
	mov -24(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007de36
	jmp uuid_000000000007de37
uuid_000000000007de36:
	mov -24(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -112(%rbp)
	mov -128(%RBP), %R13B
	mov $10, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ddb8
	push %RBP
	jmp uuid_000000000007ddb5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ddb4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ddb7
uuid_000000000007ddb5:
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -80(%rbp)
uuid_000000000007ddb7:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007ddba
uuid_000000000007ddb8:
	movq -72(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -72(%rbp)
	movq $1, -80(%rbp)
uuid_000000000007ddba:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	mov -24(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -136(%rbp)
	mov -152(%RBP), %R13B
	mov $35, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de32
	push %RBP
	pushq -136(%rbp)
	mov -168(%RBP), %R13B
	mov $10, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de2f
	push %RBP
	pushq -136(%rbp)
	mov -184(%RBP), %R13B
	mov $9, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de2c
	push %RBP
	pushq -136(%rbp)
	mov -200(%RBP), %R13B
	mov $32, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de29
	push %RBP
	pushq -136(%rbp)
	mov -216(%RBP), %R13B
	mov $40, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de26
	push %RBP
	pushq -136(%rbp)
	mov -232(%RBP), %R13B
	mov $41, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de23
	push %RBP
	pushq -136(%rbp)
	mov -248(%RBP), %R13B
	mov $39, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de20
	push %RBP
	pushq -136(%rbp)
	mov -264(%RBP), %R13B
	mov $59, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de1d
	push %RBP
	pushq -136(%rbp)
	jmp uuid_000000000007de1a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007de19
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007de1c
uuid_000000000007de1a:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007de16
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b7e7
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007de13
	jmp uuid_000000000007de15
uuid_000000000007de13:
	pushq $uuid_000000000007b7e7
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007de15:
	mov -296(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007de18
uuid_000000000007de16:
uuid_000000000007de18:
	mov -288(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007de1c:
	mov -272(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007de1f
uuid_000000000007de1d:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007de0c
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007de05
	jmp uuid_000000000007de07
uuid_000000000007de05:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007de07:
	mov -280(%RBP),%RSP
	add $-336, %RSP
	pushq $uuid_000000000007b7e4
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007de0e
uuid_000000000007de0c:
uuid_000000000007de0e:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007de1f:
	mov -256(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007de22
uuid_000000000007de20:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007ddfe
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddf7
	jmp uuid_000000000007ddf9
uuid_000000000007ddf7:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ddf9:
	mov -264(%RBP),%RSP
	add $-320, %RSP
	pushq $uuid_000000000007b7e6
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007de00
uuid_000000000007ddfe:
uuid_000000000007de00:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007de22:
	mov -240(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007de25
uuid_000000000007de23:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007ddf0
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dde9
	jmp uuid_000000000007ddeb
uuid_000000000007dde9:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ddeb:
	mov -248(%RBP),%RSP
	add $-304, %RSP
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
	pushq $uuid_000000000007b5da
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007ddf2
uuid_000000000007ddf0:
uuid_000000000007ddf2:
	mov -240(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007de25:
	mov -224(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007de28
uuid_000000000007de26:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007dde2
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dddb
	jmp uuid_000000000007dddd
uuid_000000000007dddb:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007dddd:
	mov -232(%RBP),%RSP
	add $-288, %RSP
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
	pushq $uuid_000000000007b5d8
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	jmp uuid_000000000007dde4
uuid_000000000007dde2:
uuid_000000000007dde4:
	mov -224(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007de28:
	mov -208(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007de2b
uuid_000000000007de29:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddd4
	jmp uuid_000000000007ddd6
uuid_000000000007ddd4:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ddd6:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
uuid_000000000007de2b:
	mov -192(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007de2e
uuid_000000000007de2c:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddcd
	jmp uuid_000000000007ddcf
uuid_000000000007ddcd:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ddcf:
	mov -192(%RBP),%RSP
	add $-248, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
uuid_000000000007de2e:
	mov -176(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007de31
uuid_000000000007de2f:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddc6
	jmp uuid_000000000007ddc8
uuid_000000000007ddc6:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ddc8:
	mov -176(%RBP),%RSP
	add $-232, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	movb $0, -40(%rbp)
uuid_000000000007de31:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007de34
uuid_000000000007de32:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ddbf
	jmp uuid_000000000007ddc1
uuid_000000000007ddbf:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007ddc1:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	movb $1, -40(%rbp)
uuid_000000000007de34:
	mov -144(%RBP),%RSP
	add $-216, %RSP
	mov -24(%RBP), %RAX
	inc %RAX
	movq %RAX, -24(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %rsp
	add $8, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007de35
uuid_000000000007de37:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007de3c
	jmp uuid_000000000007de3e
uuid_000000000007de3c:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
uuid_000000000007de3e:
	mov -112(%RBP),%RSP
	add $-168, %RSP
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	push %RBP
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007de45
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007de43
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007de44
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007de47
uuid_000000000007de45:
uuid_000000000007de47:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	mov %rbp, %rsp
	sub $16, %rsp
	ret
align_CL_ArrowI64I64:
#call function max : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $8
	mov %RBX, %RBP
	call max_CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_nil_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de4e
	jmp uuid_000000000007de50
uuid_000000000007de4e:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de4b
	jmp uuid_000000000007de4d
uuid_000000000007de4b:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de48
	jmp uuid_000000000007de4a
uuid_000000000007de48:
	movb $1, -104(%rbp)
uuid_000000000007de4a:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007de4d:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007de50:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de61
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de57
	jmp uuid_000000000007de59
uuid_000000000007de57:
	push %RBP
	jmp uuid_000000000007de54
	jmp uuid_000000000007de56
uuid_000000000007de54:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007de51
	jmp uuid_000000000007de53
uuid_000000000007de51:
	movb $1, -216(%rbp)
uuid_000000000007de53:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007de56:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007de59:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de5e
	push %RBP
	jmp uuid_000000000007de5b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007de5a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007de5d
uuid_000000000007de5b:
uuid_000000000007de5d:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007de60
uuid_000000000007de5e:
	movq $1, -40(%rbp)
uuid_000000000007de60:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007de63
uuid_000000000007de61:
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007de63:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_seq_CL_ArrowU64AST:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de6a
	jmp uuid_000000000007de6c
uuid_000000000007de6a:
	push %RBP
	jmp uuid_000000000007de67
	jmp uuid_000000000007de69
uuid_000000000007de67:
	push %RBP
	jmp uuid_000000000007de64
	jmp uuid_000000000007de66
uuid_000000000007de64:
	movb $1, -248(%rbp)
uuid_000000000007de66:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007de69:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007de6c:
	mov -256(%RBP),%RSP
	add $-272, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de71
	push %RBP
	jmp uuid_000000000007de6e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007de6d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007de70
uuid_000000000007de6e:
uuid_000000000007de70:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007de73
uuid_000000000007de71:
	movq $1, -88(%rbp)
uuid_000000000007de73:
	mov -168(%RBP),%RSP
	add $-272, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
is_SB_arrow_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de7a
	jmp uuid_000000000007de7c
uuid_000000000007de7a:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de77
	jmp uuid_000000000007de79
uuid_000000000007de77:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de74
	jmp uuid_000000000007de76
uuid_000000000007de74:
	movb $1, -104(%rbp)
uuid_000000000007de76:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007de79:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007de7c:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de8d
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de83
	jmp uuid_000000000007de85
uuid_000000000007de83:
	push %RBP
	jmp uuid_000000000007de80
	jmp uuid_000000000007de82
uuid_000000000007de80:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bc9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007de7d
	jmp uuid_000000000007de7f
uuid_000000000007de7d:
	movb $1, -216(%rbp)
uuid_000000000007de7f:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007de82:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007de85:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007de8a
	push %RBP
	jmp uuid_000000000007de87
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007de86
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007de89
uuid_000000000007de87:
uuid_000000000007de89:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007de8c
uuid_000000000007de8a:
	movq $1, -40(%rbp)
uuid_000000000007de8c:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007de8f
uuid_000000000007de8d:
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007de8f:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_hook_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de96
	jmp uuid_000000000007de98
uuid_000000000007de96:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de93
	jmp uuid_000000000007de95
uuid_000000000007de93:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007de90
	jmp uuid_000000000007de92
uuid_000000000007de90:
	movb $1, -104(%rbp)
uuid_000000000007de92:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007de95:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007de98:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dea9
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007de9f
	jmp uuid_000000000007dea1
uuid_000000000007de9f:
	push %RBP
	jmp uuid_000000000007de9c
	jmp uuid_000000000007de9e
uuid_000000000007de9c:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bded
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007de99
	jmp uuid_000000000007de9b
uuid_000000000007de99:
	movb $1, -216(%rbp)
uuid_000000000007de9b:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007de9e:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007dea1:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dea6
	push %RBP
	jmp uuid_000000000007dea3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dea2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dea5
uuid_000000000007dea3:
uuid_000000000007dea5:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007dea8
uuid_000000000007dea6:
	movq $1, -40(%rbp)
uuid_000000000007dea8:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007deab
uuid_000000000007dea9:
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007deab:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_blob_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007deb2
	jmp uuid_000000000007deb4
uuid_000000000007deb2:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007deaf
	jmp uuid_000000000007deb1
uuid_000000000007deaf:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007deac
	jmp uuid_000000000007deae
uuid_000000000007deac:
	movb $1, -104(%rbp)
uuid_000000000007deae:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007deb1:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007deb4:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dec5
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007debb
	jmp uuid_000000000007debd
uuid_000000000007debb:
	push %RBP
	jmp uuid_000000000007deb8
	jmp uuid_000000000007deba
uuid_000000000007deb8:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007d14a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007deb5
	jmp uuid_000000000007deb7
uuid_000000000007deb5:
	movb $1, -216(%rbp)
uuid_000000000007deb7:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007deba:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007debd:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dec2
	push %RBP
	jmp uuid_000000000007debf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007debe
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dec1
uuid_000000000007debf:
uuid_000000000007dec1:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007dec4
uuid_000000000007dec2:
	movq $1, -40(%rbp)
uuid_000000000007dec4:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007dec7
uuid_000000000007dec5:
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007dec7:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_cons_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dece
	jmp uuid_000000000007ded0
uuid_000000000007dece:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007decb
	jmp uuid_000000000007decd
uuid_000000000007decb:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dec8
	jmp uuid_000000000007deca
uuid_000000000007dec8:
	movb $1, -104(%rbp)
uuid_000000000007deca:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007decd:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ded0:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dee1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ded7
	jmp uuid_000000000007ded9
uuid_000000000007ded7:
	push %RBP
	jmp uuid_000000000007ded4
	jmp uuid_000000000007ded6
uuid_000000000007ded4:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ded1
	jmp uuid_000000000007ded3
uuid_000000000007ded1:
	movb $1, -216(%rbp)
uuid_000000000007ded3:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007ded6:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007ded9:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dede
	push %RBP
	jmp uuid_000000000007dedb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007deda
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dedd
uuid_000000000007dedb:
uuid_000000000007dedd:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007dee0
uuid_000000000007dede:
	movq $1, -40(%rbp)
uuid_000000000007dee0:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007dee3
uuid_000000000007dee1:
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007dee3:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_impure_SB_ctx_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007deea
	jmp uuid_000000000007deec
uuid_000000000007deea:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dee7
	jmp uuid_000000000007dee9
uuid_000000000007dee7:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dee4
	jmp uuid_000000000007dee6
uuid_000000000007dee4:
	movb $1, -104(%rbp)
uuid_000000000007dee6:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007dee9:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007deec:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007defe
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007def4
	jmp uuid_000000000007def6
uuid_000000000007def4:
	push %RBP
	jmp uuid_000000000007def1
	jmp uuid_000000000007def3
uuid_000000000007def1:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007deed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007deee
	jmp uuid_000000000007def0
uuid_000000000007deee:
	movb $1, -216(%rbp)
uuid_000000000007def0:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007def3:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007def6:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007defb
	push %RBP
	jmp uuid_000000000007def8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007def7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007defa
uuid_000000000007def8:
uuid_000000000007defa:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007defd
uuid_000000000007defb:
	movq $1, -40(%rbp)
uuid_000000000007defd:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007df00
uuid_000000000007defe:
#call function is-impure-ctx : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_ctx_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-impure-ctx : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_ctx_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007df00:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_string_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df07
	jmp uuid_000000000007df09
uuid_000000000007df07:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df04
	jmp uuid_000000000007df06
uuid_000000000007df04:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df01
	jmp uuid_000000000007df03
uuid_000000000007df01:
	movb $1, -104(%rbp)
uuid_000000000007df03:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007df06:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007df09:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df1b
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df11
	jmp uuid_000000000007df13
uuid_000000000007df11:
	push %RBP
	jmp uuid_000000000007df0e
	jmp uuid_000000000007df10
uuid_000000000007df0e:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007df0a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df0b
	jmp uuid_000000000007df0d
uuid_000000000007df0b:
	movb $1, -216(%rbp)
uuid_000000000007df0d:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007df10:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007df13:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df18
	push %RBP
	jmp uuid_000000000007df15
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007df14
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007df17
uuid_000000000007df15:
uuid_000000000007df17:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007df1a
uuid_000000000007df18:
	movq $1, -40(%rbp)
uuid_000000000007df1a:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007df1d
uuid_000000000007df1b:
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007df1d:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_onto_SB_stack_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df24
	jmp uuid_000000000007df26
uuid_000000000007df24:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df21
	jmp uuid_000000000007df23
uuid_000000000007df21:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df1e
	jmp uuid_000000000007df20
uuid_000000000007df1e:
	movb $1, -104(%rbp)
uuid_000000000007df20:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007df23:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007df26:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df4a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df40
	jmp uuid_000000000007df42
uuid_000000000007df40:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df37
	jmp uuid_000000000007df39
uuid_000000000007df37:
	push %RBP
	jmp uuid_000000000007df34
	jmp uuid_000000000007df36
uuid_000000000007df34:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df2e
	jmp uuid_000000000007df30
uuid_000000000007df2e:
	push %RBP
	jmp uuid_000000000007df2b
	jmp uuid_000000000007df2d
uuid_000000000007df2b:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007df27
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df28
	jmp uuid_000000000007df2a
uuid_000000000007df28:
	movb $1, -336(%rbp)
uuid_000000000007df2a:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007df2d:
	mov -352(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007df30:
	mov -344(%RBP),%RSP
	add $-368, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df31
	jmp uuid_000000000007df33
uuid_000000000007df31:
	movb $1, -280(%rbp)
uuid_000000000007df33:
	mov -304(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007df36:
	mov -296(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007df39:
	mov -288(%RBP),%RSP
	add $-368, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df3d
	jmp uuid_000000000007df3f
uuid_000000000007df3d:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007c27d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df3a
	jmp uuid_000000000007df3c
uuid_000000000007df3a:
	movb $1, -216(%rbp)
uuid_000000000007df3c:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007df3f:
	mov -232(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007df42:
	mov -224(%RBP),%RSP
	add $-384, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df47
	push %RBP
	jmp uuid_000000000007df44
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007df43
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007df46
uuid_000000000007df44:
uuid_000000000007df46:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007df49
uuid_000000000007df47:
	movq $1, -40(%rbp)
uuid_000000000007df49:
	mov -184(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007df4c
uuid_000000000007df4a:
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007df4c:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_impure_SB_offset_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df53
	jmp uuid_000000000007df55
uuid_000000000007df53:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df50
	jmp uuid_000000000007df52
uuid_000000000007df50:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df4d
	jmp uuid_000000000007df4f
uuid_000000000007df4d:
	movb $1, -104(%rbp)
uuid_000000000007df4f:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007df52:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007df55:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df79
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df6f
	jmp uuid_000000000007df71
uuid_000000000007df6f:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df66
	jmp uuid_000000000007df68
uuid_000000000007df66:
	push %RBP
	jmp uuid_000000000007df63
	jmp uuid_000000000007df65
uuid_000000000007df63:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df5d
	jmp uuid_000000000007df5f
uuid_000000000007df5d:
	push %RBP
	jmp uuid_000000000007df5a
	jmp uuid_000000000007df5c
uuid_000000000007df5a:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007df56
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df57
	jmp uuid_000000000007df59
uuid_000000000007df57:
	movb $1, -336(%rbp)
uuid_000000000007df59:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007df5c:
	mov -352(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007df5f:
	mov -344(%RBP),%RSP
	add $-368, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df60
	jmp uuid_000000000007df62
uuid_000000000007df60:
	movb $1, -280(%rbp)
uuid_000000000007df62:
	mov -304(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007df65:
	mov -296(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007df68:
	mov -288(%RBP),%RSP
	add $-368, %RSP
	mov -280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df6c
	jmp uuid_000000000007df6e
uuid_000000000007df6c:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007c27d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df69
	jmp uuid_000000000007df6b
uuid_000000000007df69:
	movb $1, -216(%rbp)
uuid_000000000007df6b:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007df6e:
	mov -232(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007df71:
	mov -224(%RBP),%RSP
	add $-384, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df76
	push %RBP
	jmp uuid_000000000007df73
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007df72
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007df75
uuid_000000000007df73:
uuid_000000000007df75:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007df78
uuid_000000000007df76:
	movq $1, -40(%rbp)
uuid_000000000007df78:
	mov -184(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007df7b
uuid_000000000007df79:
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007df7b:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_branchconditional_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df82
	jmp uuid_000000000007df84
uuid_000000000007df82:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df7f
	jmp uuid_000000000007df81
uuid_000000000007df7f:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df7c
	jmp uuid_000000000007df7e
uuid_000000000007df7c:
	movb $1, -104(%rbp)
uuid_000000000007df7e:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007df81:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007df84:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df96
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df8c
	jmp uuid_000000000007df8e
uuid_000000000007df8c:
	push %RBP
	jmp uuid_000000000007df89
	jmp uuid_000000000007df8b
uuid_000000000007df89:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007df85
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007df86
	jmp uuid_000000000007df88
uuid_000000000007df86:
	movb $1, -216(%rbp)
uuid_000000000007df88:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007df8b:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007df8e:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007df93
	push %RBP
	jmp uuid_000000000007df90
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007df8f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007df92
uuid_000000000007df90:
uuid_000000000007df92:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007df95
uuid_000000000007df93:
	movq $1, -40(%rbp)
uuid_000000000007df95:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007df98
uuid_000000000007df96:
#call function is-branchconditional : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_branchconditional_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-branchconditional : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_branchconditional_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007df98:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_AD__CL_ArrowASTConsASTAST:
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfa9
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007df9f
	jmp uuid_000000000007dfa1
uuid_000000000007df9f:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df9c
	jmp uuid_000000000007df9e
uuid_000000000007df9c:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007df99
	jmp uuid_000000000007df9b
uuid_000000000007df99:
	movb $1, -392(%rbp)
uuid_000000000007df9b:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007df9e:
	mov -408(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007dfa1:
	mov -400(%RBP),%RSP
	add $-560, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfa6
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007dfa3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dfa2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dfa5
uuid_000000000007dfa3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007dfa5:
	mov -568(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007dfa8
uuid_000000000007dfa6:
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007dfa8:
	mov -312(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007dfab
uuid_000000000007dfa9:
uuid_000000000007dfab:
	mov -232(%RBP),%RSP
	add $-304, %RSP
	subq $72, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
print_CL_ArrowNilToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfb5
	jmp uuid_000000000007dfb7
uuid_000000000007dfb5:
	push %RBP
	jmp uuid_000000000007dfb2
	jmp uuid_000000000007dfb4
uuid_000000000007dfb2:
	push %RBP
	jmp uuid_000000000007dfaf
	jmp uuid_000000000007dfb1
uuid_000000000007dfaf:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dfac
	jmp uuid_000000000007dfae
uuid_000000000007dfac:
	movb $1, -192(%rbp)
uuid_000000000007dfae:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007dfb1:
	mov -216(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007dfb4:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007dfb7:
	mov -200(%RBP),%RSP
	add $-232, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfb9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dfb8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dfbb
uuid_000000000007dfb9:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007dfbb:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
print_CL_ArrowNilContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfd1
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfce
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfc5
	jmp uuid_000000000007dfc7
uuid_000000000007dfc5:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007dfc2
	jmp uuid_000000000007dfc4
uuid_000000000007dfc2:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dfbf
	jmp uuid_000000000007dfc1
uuid_000000000007dfbf:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dfbc
	jmp uuid_000000000007dfbe
uuid_000000000007dfbc:
	movb $1, -520(%rbp)
uuid_000000000007dfbe:
	mov -632(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007dfc1:
	mov -616(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007dfc4:
	mov -536(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007dfc7:
	mov -528(%RBP),%RSP
	add $-728, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfcb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dfca
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dfcd
uuid_000000000007dfcb:
#call function print : Arrow<Context,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dfc8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dfc9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007dfcd:
	mov -416(%RBP),%RSP
	add $-728, %RSP
	jmp uuid_000000000007dfd0
uuid_000000000007dfce:
uuid_000000000007dfd0:
	mov -312(%RBP),%RSP
	add $-408, %RSP
	jmp uuid_000000000007dfd3
uuid_000000000007dfd1:
uuid_000000000007dfd3:
	mov -208(%RBP),%RSP
	add $-304, %RSP
	mov %rbp, %rsp
	sub $104, %rsp
	ret
print_CL_ArrowNilTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfea
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfe7
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dfe0
	jmp uuid_000000000007dfe2
uuid_000000000007dfe0:
	push %RBP
	jmp uuid_000000000007dfdd
	jmp uuid_000000000007dfdf
uuid_000000000007dfdd:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007dfda
	jmp uuid_000000000007dfdc
uuid_000000000007dfda:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dfd7
	jmp uuid_000000000007dfd9
uuid_000000000007dfd7:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dfd4
	jmp uuid_000000000007dfd6
uuid_000000000007dfd4:
	movb $1, -640(%rbp)
uuid_000000000007dfd6:
	mov -712(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007dfd9:
	mov -696(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007dfdc:
	mov -664(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007dfdf:
	mov -656(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007dfe2:
	mov -648(%RBP),%RSP
	add $-832, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007dfe4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007dfe3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dfe6
uuid_000000000007dfe4:
#call function print : Arrow<TContext,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dfc9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007dfe6:
	mov -512(%RBP),%RSP
	add $-832, %RSP
	jmp uuid_000000000007dfe9
uuid_000000000007dfe7:
uuid_000000000007dfe9:
	mov -384(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007dfec
uuid_000000000007dfea:
uuid_000000000007dfec:
	mov -256(%RBP),%RSP
	add $-376, %RSP
	mov %rbp, %rsp
	sub $128, %rsp
	ret
print_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e05d
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e05a
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dff4
	jmp uuid_000000000007dff6
uuid_000000000007dff4:
	push %RBP
	jmp uuid_000000000007dff1
	jmp uuid_000000000007dff3
uuid_000000000007dff1:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dfee
	jmp uuid_000000000007dff0
uuid_000000000007dfee:
	movb $1, -400(%rbp)
uuid_000000000007dff0:
	mov -424(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007dff3:
	mov -416(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007dff6:
	mov -408(%RBP),%RSP
	add $-432, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e057
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dffd
	jmp uuid_000000000007dfff
uuid_000000000007dffd:
	push %RBP
	jmp uuid_000000000007dffa
	jmp uuid_000000000007dffc
uuid_000000000007dffa:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007dff7
	jmp uuid_000000000007dff9
uuid_000000000007dff7:
	movb $1, -520(%rbp)
uuid_000000000007dff9:
	mov -544(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007dffc:
	mov -536(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007dfff:
	mov -528(%RBP),%RSP
	add $-552, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e054
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e003
	jmp uuid_000000000007e005
uuid_000000000007e003:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007e000
	jmp uuid_000000000007e002
uuid_000000000007e000:
	movb $1, -640(%rbp)
uuid_000000000007e002:
	mov -656(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007e005:
	mov -648(%RBP),%RSP
	add $-680, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e051
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e009
	jmp uuid_000000000007e00b
uuid_000000000007e009:
	push %RBP
	jmp uuid_000000000007e006
	jmp uuid_000000000007e008
uuid_000000000007e006:
	movb $1, -768(%rbp)
uuid_000000000007e008:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007e00b:
	mov -776(%RBP),%RSP
	add $-784, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e04e
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e012
	jmp uuid_000000000007e014
uuid_000000000007e012:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e00f
	jmp uuid_000000000007e011
uuid_000000000007e00f:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e00c
	jmp uuid_000000000007e00e
uuid_000000000007e00c:
	movb $1, -872(%rbp)
uuid_000000000007e00e:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e011:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e014:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e04b
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e01c
	jmp uuid_000000000007e01e
uuid_000000000007e01c:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e019
	jmp uuid_000000000007e01b
uuid_000000000007e019:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007e016
	jmp uuid_000000000007e018
uuid_000000000007e016:
	movb $1, -1128(%rbp)
uuid_000000000007e018:
	mov -1224(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007e01b:
	mov -1144(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007e01e:
	mov -1136(%RBP),%RSP
	add $-1280, %RSP
	mov -1128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e048
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e026
	jmp uuid_000000000007e028
uuid_000000000007e026:
	push %RBP
	mov -1352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e023
	jmp uuid_000000000007e025
uuid_000000000007e023:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e020
	jmp uuid_000000000007e022
uuid_000000000007e020:
	movb $1, -1368(%rbp)
uuid_000000000007e022:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007e025:
	mov -1384(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007e028:
	mov -1376(%RBP),%RSP
	add $-1536, %RSP
	mov -1368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e045
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e032
	jmp uuid_000000000007e034
uuid_000000000007e032:
	push %RBP
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007e02f
	jmp uuid_000000000007e031
uuid_000000000007e02f:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e02c
	jmp uuid_000000000007e02e
uuid_000000000007e02c:
	push %RBP
	mov -1576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e029
	jmp uuid_000000000007e02b
uuid_000000000007e029:
	movb $1, -1624(%rbp)
uuid_000000000007e02b:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007e02e:
	mov -1672(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007e031:
	mov -1640(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007e034:
	mov -1632(%RBP),%RSP
	add $-1824, %RSP
	mov -1624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e042
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e03b
	jmp uuid_000000000007e03d
uuid_000000000007e03b:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e038
	jmp uuid_000000000007e03a
uuid_000000000007e038:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e035
	jmp uuid_000000000007e037
uuid_000000000007e035:
	movb $1, -1912(%rbp)
uuid_000000000007e037:
	mov -2008(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007e03a:
	mov -1928(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007e03d:
	mov -1920(%RBP),%RSP
	add $-2080, %RSP
	mov -1912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e03f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e03e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e041
uuid_000000000007e03f:
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dfc9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e041:
	mov -1832(%RBP),%RSP
	add $-2080, %RSP
	jmp uuid_000000000007e044
uuid_000000000007e042:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b7e7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b875
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e044:
	mov -1544(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007e047
uuid_000000000007e045:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e047:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
	jmp uuid_000000000007e04a
uuid_000000000007e048:
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e01f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e04a:
	mov -1048(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007e04d
uuid_000000000007e04b:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e015
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dfc8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e04d:
	mov -792(%RBP),%RSP
	add $-1040, %RSP
	jmp uuid_000000000007e050
uuid_000000000007e04e:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c27d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e050:
	mov -688(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007e053
uuid_000000000007e051:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e053:
	mov -560(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007e056
uuid_000000000007e054:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b7e6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e056:
	mov -440(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007e059
uuid_000000000007e057:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e059:
	mov -320(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007e05c
uuid_000000000007e05a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5c8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e05c:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007e05f
uuid_000000000007e05d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dfed
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e05f:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
print_CL_ArrowNilFContext:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e060
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e074:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e075
	jmp uuid_000000000007e076
uuid_000000000007e075:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e06d
	jmp uuid_000000000007e06f
uuid_000000000007e06d:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_000000000007e06a
	jmp uuid_000000000007e06c
uuid_000000000007e06a:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007e067
	jmp uuid_000000000007e069
uuid_000000000007e067:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e064
	jmp uuid_000000000007e066
uuid_000000000007e064:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e061
	jmp uuid_000000000007e063
uuid_000000000007e061:
	movb $1, -624(%rbp)
uuid_000000000007e063:
	mov -848(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007e066:
	mov -832(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007e069:
	mov -800(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007e06c:
	mov -640(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007e06f:
	mov -632(%RBP),%RSP
	add $-1048, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e071
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e070
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e073
uuid_000000000007e071:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -1048(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e073:
	mov -416(%RBP),%RSP
	add $-1048, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e074
uuid_000000000007e076:
	mov %rbp, %rsp
	sub $208, %rsp
	ret
print_CL_ArrowNilFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e089
	jmp uuid_000000000007e08b
uuid_000000000007e089:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007e086
	jmp uuid_000000000007e088
uuid_000000000007e086:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e083
	jmp uuid_000000000007e085
uuid_000000000007e083:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007e080
	jmp uuid_000000000007e082
uuid_000000000007e080:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e07d
	jmp uuid_000000000007e07f
uuid_000000000007e07d:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e07a
	jmp uuid_000000000007e07c
uuid_000000000007e07a:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007e077
	jmp uuid_000000000007e079
uuid_000000000007e077:
	movb $1, -480(%rbp)
uuid_000000000007e079:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007e07c:
	mov -784(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007e07f:
	mov -768(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007e082:
	mov -736(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007e085:
	mov -528(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007e088:
	mov -496(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007e08b:
	mov -488(%RBP),%RSP
	add $-912, %RSP
	mov -480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0a2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e0a1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e0a4
uuid_000000000007e0a2:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e08c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e08d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e09e:
#call function non-zero : Arrow<FragmentKV,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e09f
	jmp uuid_000000000007e0a0
uuid_000000000007e09f:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	push %RBP
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e097
	jmp uuid_000000000007e099
uuid_000000000007e097:
	push %RBP
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	jmp uuid_000000000007e094
	jmp uuid_000000000007e096
uuid_000000000007e094:
	push %RBP
	mov -984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e091
	jmp uuid_000000000007e093
uuid_000000000007e091:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e08e
	jmp uuid_000000000007e090
uuid_000000000007e08e:
	movb $1, -1024(%rbp)
uuid_000000000007e090:
	mov -1088(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007e093:
	mov -1072(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007e096:
	mov -1040(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007e099:
	mov -1032(%RBP),%RSP
	add $-1136, %RSP
	mov -1024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e09b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e09a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e09d
uuid_000000000007e09b:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b7ea
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007dfc8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -1136(%rbp), %r15
	movq %r15, -832(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -824(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -792(%rbp)
uuid_000000000007e09d:
	mov -968(%RBP),%RSP
	add $-1136, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e09e
uuid_000000000007e0a0:
uuid_000000000007e0a4:
	mov -320(%RBP),%RSP
	add $-912, %RSP
	mov %rbp, %rsp
	sub $160, %rsp
	ret
print_CL_ArrowNilFragmentList:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0ab
	jmp uuid_000000000007e0ad
uuid_000000000007e0ab:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	jmp uuid_000000000007e0a8
	jmp uuid_000000000007e0aa
uuid_000000000007e0a8:
	push %RBP
	mov -360(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e0a5
	jmp uuid_000000000007e0a7
uuid_000000000007e0a5:
	movb $1, -528(%rbp)
uuid_000000000007e0a7:
	mov -704(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e0aa:
	mov -544(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e0ad:
	mov -536(%RBP),%RSP
	add $-872, %RSP
	mov -528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0b2
	push %RBP
	jmp uuid_000000000007e0af
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e0ae
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e0b1
uuid_000000000007e0af:
uuid_000000000007e0b1:
	mov -880(%RBP),%RSP
	add $-880, %RSP
	jmp uuid_000000000007e0b4
uuid_000000000007e0b2:
#call function print : Arrow<FragmentList,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e0b4:
	mov -352(%RBP),%RSP
	add $-872, %RSP
	mov %rbp, %rsp
	sub $176, %rsp
	ret
print_CL_ArrowNilSourceLocation:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0be
	jmp uuid_000000000007e0c0
uuid_000000000007e0be:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e0bb
	jmp uuid_000000000007e0bd
uuid_000000000007e0bb:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e0b8
	jmp uuid_000000000007e0ba
uuid_000000000007e0b8:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e0b5
	jmp uuid_000000000007e0b7
uuid_000000000007e0b5:
	movb $1, -120(%rbp)
uuid_000000000007e0b7:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007e0ba:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007e0bd:
	mov -136(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007e0c0:
	mov -128(%RBP),%RSP
	add $-176, %RSP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0c5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e0c4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e0c7
uuid_000000000007e0c5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e0c1
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e0c2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e0c3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e0c7:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	mov %rbp, %rsp
	sub $40, %rsp
	ret
print_CL_ArrowNilType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0fb
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0cb
	jmp uuid_000000000007e0cd
uuid_000000000007e0cb:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e0c8
	jmp uuid_000000000007e0ca
uuid_000000000007e0c8:
	movb $1, -128(%rbp)
uuid_000000000007e0ca:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007e0cd:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0f8
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0d4
	jmp uuid_000000000007e0d6
uuid_000000000007e0d4:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0d1
	jmp uuid_000000000007e0d3
uuid_000000000007e0d1:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e0ce
	jmp uuid_000000000007e0d0
uuid_000000000007e0ce:
	movb $1, -192(%rbp)
uuid_000000000007e0d0:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007e0d3:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007e0d6:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0f5
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0dd
	jmp uuid_000000000007e0df
uuid_000000000007e0dd:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e0da
	jmp uuid_000000000007e0dc
uuid_000000000007e0da:
	push %RBP
	mov -280(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e0d7
	jmp uuid_000000000007e0d9
uuid_000000000007e0d7:
	movb $1, -304(%rbp)
uuid_000000000007e0d9:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e0dc:
	mov -320(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e0df:
	mov -312(%RBP),%RSP
	add $-376, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0f2
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e0eb
	jmp uuid_000000000007e0ed
uuid_000000000007e0eb:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e0e8
	jmp uuid_000000000007e0ea
uuid_000000000007e0e8:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e0e5
	jmp uuid_000000000007e0e7
uuid_000000000007e0e5:
	movb $1, -416(%rbp)
uuid_000000000007e0e7:
	mov -480(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007e0ea:
	mov -432(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007e0ed:
	mov -424(%RBP),%RSP
	add $-488, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e0ef
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e0ee
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e0f1
uuid_000000000007e0ef:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b980
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b981
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e0f1:
	mov -384(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007e0f4
uuid_000000000007e0f2:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e0e2
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e0e1
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e0e4
uuid_000000000007e0e2:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e0e0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e0e4:
	mov -384(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007e0f4:
	mov -272(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007e0f7
uuid_000000000007e0f5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e0f7:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007e0fa
uuid_000000000007e0f8:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e0fa:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007e0fd
uuid_000000000007e0fb:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b785
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e0fd:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
print_CL_ArrowNilListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e119
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e106
	jmp uuid_000000000007e108
uuid_000000000007e106:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e103
	jmp uuid_000000000007e105
uuid_000000000007e103:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007e100
	jmp uuid_000000000007e102
uuid_000000000007e100:
	movb $1, -192(%rbp)
uuid_000000000007e102:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007e105:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007e108:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e116
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e10f
	jmp uuid_000000000007e111
uuid_000000000007e10f:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e10c
	jmp uuid_000000000007e10e
uuid_000000000007e10c:
	push %RBP
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	jmp uuid_000000000007e109
	jmp uuid_000000000007e10b
uuid_000000000007e109:
	movb $1, -336(%rbp)
uuid_000000000007e10b:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007e10e:
	mov -352(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007e111:
	mov -344(%RBP),%RSP
	add $-424, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e113
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e112
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e115
uuid_000000000007e113:
#call function print : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b940
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e115:
	mov -288(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007e118
uuid_000000000007e116:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e118:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007e11b
uuid_000000000007e119:
uuid_000000000007e11b:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $48, %rsp
	ret
reverse_CL_ArrowFragmentListFragmentList:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007e129:
#call function non-zero : Arrow<FragmentList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e12a
	jmp uuid_000000000007e12b
uuid_000000000007e12a:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e122
	jmp uuid_000000000007e124
uuid_000000000007e122:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007e11f
	jmp uuid_000000000007e121
uuid_000000000007e11f:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e11c
	jmp uuid_000000000007e11e
uuid_000000000007e11c:
	movb $1, -696(%rbp)
uuid_000000000007e11e:
	mov -872(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e121:
	mov -712(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e124:
	mov -704(%RBP),%RSP
	add $-1040, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e126
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e125
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e128
uuid_000000000007e126:
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq $0
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	movq -1040(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e128:
	mov -520(%RBP),%RSP
	add $-1040, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e129
uuid_000000000007e12b:
	subq $168, %rsp
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
serialize_SB_ast_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1ac
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1a9
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e12f
	jmp uuid_000000000007e131
uuid_000000000007e12f:
	push %RBP
	jmp uuid_000000000007e12c
	jmp uuid_000000000007e12e
uuid_000000000007e12c:
	movb $1, -400(%rbp)
uuid_000000000007e12e:
	mov -416(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007e131:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1a6
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e138
	jmp uuid_000000000007e13a
uuid_000000000007e138:
	push %RBP
	jmp uuid_000000000007e135
	jmp uuid_000000000007e137
uuid_000000000007e135:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e132
	jmp uuid_000000000007e134
uuid_000000000007e132:
	movb $1, -504(%rbp)
uuid_000000000007e134:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007e137:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007e13a:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1a3
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e142
	jmp uuid_000000000007e144
uuid_000000000007e142:
	push %RBP
	jmp uuid_000000000007e13f
	jmp uuid_000000000007e141
uuid_000000000007e13f:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e13c
	jmp uuid_000000000007e13e
uuid_000000000007e13c:
	movb $1, -624(%rbp)
uuid_000000000007e13e:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007e141:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007e144:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1a0
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e149
	jmp uuid_000000000007e14b
uuid_000000000007e149:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	jmp uuid_000000000007e146
	jmp uuid_000000000007e148
uuid_000000000007e146:
	movb $1, -744(%rbp)
uuid_000000000007e148:
	mov -760(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007e14b:
	mov -752(%RBP),%RSP
	add $-784, %RSP
	mov -744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e19d
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e152
	jmp uuid_000000000007e154
uuid_000000000007e152:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e14f
	jmp uuid_000000000007e151
uuid_000000000007e14f:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e14c
	jmp uuid_000000000007e14e
uuid_000000000007e14c:
	movb $1, -872(%rbp)
uuid_000000000007e14e:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e151:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e154:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e19a
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e15d
	jmp uuid_000000000007e15f
uuid_000000000007e15d:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e15a
	jmp uuid_000000000007e15c
uuid_000000000007e15a:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007e157
	jmp uuid_000000000007e159
uuid_000000000007e157:
	movb $1, -1128(%rbp)
uuid_000000000007e159:
	mov -1224(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007e15c:
	mov -1144(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007e15f:
	mov -1136(%RBP),%RSP
	add $-1280, %RSP
	mov -1128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e197
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e167
	jmp uuid_000000000007e169
uuid_000000000007e167:
	push %RBP
	mov -1352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e164
	jmp uuid_000000000007e166
uuid_000000000007e164:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e161
	jmp uuid_000000000007e163
uuid_000000000007e161:
	movb $1, -1368(%rbp)
uuid_000000000007e163:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007e166:
	mov -1384(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007e169:
	mov -1376(%RBP),%RSP
	add $-1536, %RSP
	mov -1368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e194
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e174
	jmp uuid_000000000007e176
uuid_000000000007e174:
	push %RBP
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007e171
	jmp uuid_000000000007e173
uuid_000000000007e171:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e16e
	jmp uuid_000000000007e170
uuid_000000000007e16e:
	push %RBP
	mov -1576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e16b
	jmp uuid_000000000007e16d
uuid_000000000007e16b:
	movb $1, -1624(%rbp)
uuid_000000000007e16d:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007e170:
	mov -1672(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007e173:
	mov -1640(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007e176:
	mov -1632(%RBP),%RSP
	add $-1824, %RSP
	mov -1624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e191
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e17e
	jmp uuid_000000000007e180
uuid_000000000007e17e:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e17b
	jmp uuid_000000000007e17d
uuid_000000000007e17b:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2080(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e178
	jmp uuid_000000000007e17a
uuid_000000000007e178:
	movb $1, -1912(%rbp)
uuid_000000000007e17a:
	mov -2008(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007e17d:
	mov -1928(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007e180:
	mov -1920(%RBP),%RSP
	add $-2080, %RSP
	mov -1912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e18e
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2160(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e187
	jmp uuid_000000000007e189
uuid_000000000007e187:
	push %RBP
	mov -2152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e184
	jmp uuid_000000000007e186
uuid_000000000007e184:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e181
	jmp uuid_000000000007e183
uuid_000000000007e181:
	movb $1, -2168(%rbp)
uuid_000000000007e183:
	mov -2264(%RBP),%RSP
	add $-2336, %RSP
uuid_000000000007e186:
	mov -2184(%RBP),%RSP
	add $-2336, %RSP
uuid_000000000007e189:
	mov -2176(%RBP),%RSP
	add $-2336, %RSP
	mov -2168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e18b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e18a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e18d
uuid_000000000007e18b:
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e18d:
	mov -2088(%RBP),%RSP
	add $-2336, %RSP
	jmp uuid_000000000007e190
uuid_000000000007e18e:
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e190:
	mov -1832(%RBP),%RSP
	add $-2080, %RSP
	jmp uuid_000000000007e193
uuid_000000000007e191:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e177
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e156
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e193:
	mov -1544(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007e196
uuid_000000000007e194:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e16a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e156
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e196:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
	jmp uuid_000000000007e199
uuid_000000000007e197:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e160
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e156
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e199:
	mov -1048(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007e19c
uuid_000000000007e19a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e155
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e156
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e19c:
	mov -792(%RBP),%RSP
	add $-1040, %RSP
	jmp uuid_000000000007e19f
uuid_000000000007e19d:
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e19f:
	mov -664(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007e1a2
uuid_000000000007e1a0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e145
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1a2:
	mov -544(%RBP),%RSP
	add $-656, %RSP
	jmp uuid_000000000007e1a5
uuid_000000000007e1a3:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e13b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1a5:
	mov -424(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_000000000007e1a8
uuid_000000000007e1a6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c27d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1a8:
	mov -320(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007e1ab
uuid_000000000007e1a9:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1ab:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007e1ae
uuid_000000000007e1ac:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5c8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1ae:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
serialize_SB_ast_CL_ArrowNilListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1ca
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1b7
	jmp uuid_000000000007e1b9
uuid_000000000007e1b7:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1b4
	jmp uuid_000000000007e1b6
uuid_000000000007e1b4:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007e1b1
	jmp uuid_000000000007e1b3
uuid_000000000007e1b1:
	movb $1, -192(%rbp)
uuid_000000000007e1b3:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007e1b6:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007e1b9:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1c7
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1c0
	jmp uuid_000000000007e1c2
uuid_000000000007e1c0:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1bd
	jmp uuid_000000000007e1bf
uuid_000000000007e1bd:
	push %RBP
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	jmp uuid_000000000007e1ba
	jmp uuid_000000000007e1bc
uuid_000000000007e1ba:
	movb $1, -336(%rbp)
uuid_000000000007e1bc:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007e1bf:
	mov -352(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007e1c2:
	mov -344(%RBP),%RSP
	add $-424, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1c4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e1c3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e1c6
uuid_000000000007e1c4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e16a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e156
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1c6:
	mov -288(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007e1c9
uuid_000000000007e1c7:
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1c9:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007e1cc
uuid_000000000007e1ca:
uuid_000000000007e1cc:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $48, %rsp
	ret
serialize_SB_ast_CL_ArrowNilType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1fe
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1d1
	jmp uuid_000000000007e1d3
uuid_000000000007e1d1:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e1ce
	jmp uuid_000000000007e1d0
uuid_000000000007e1ce:
	movb $1, -128(%rbp)
uuid_000000000007e1d0:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007e1d3:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1fb
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1da
	jmp uuid_000000000007e1dc
uuid_000000000007e1da:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1d7
	jmp uuid_000000000007e1d9
uuid_000000000007e1d7:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1d4
	jmp uuid_000000000007e1d6
uuid_000000000007e1d4:
	movb $1, -192(%rbp)
uuid_000000000007e1d6:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007e1d9:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007e1dc:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1f8
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1e4
	jmp uuid_000000000007e1e6
uuid_000000000007e1e4:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1e1
	jmp uuid_000000000007e1e3
uuid_000000000007e1e1:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e1de
	jmp uuid_000000000007e1e0
uuid_000000000007e1de:
	movb $1, -304(%rbp)
uuid_000000000007e1e0:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e1e3:
	mov -320(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e1e6:
	mov -312(%RBP),%RSP
	add $-376, %RSP
	mov -304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1f5
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e1ed
	jmp uuid_000000000007e1ef
uuid_000000000007e1ed:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e1ea
	jmp uuid_000000000007e1ec
uuid_000000000007e1ea:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e1e7
	jmp uuid_000000000007e1e9
uuid_000000000007e1e7:
	movb $1, -416(%rbp)
uuid_000000000007e1e9:
	mov -480(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007e1ec:
	mov -432(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007e1ef:
	mov -424(%RBP),%RSP
	add $-488, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e1f2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e1f1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e1f4
uuid_000000000007e1f2:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e16a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e145
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e1f0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e156
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1f4:
	mov -384(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007e1f7
uuid_000000000007e1f5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e145
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1f7:
	mov -272(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007e1fa
uuid_000000000007e1f8:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e16a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e1dd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e16a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e156
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e156
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1fa:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007e1fd
uuid_000000000007e1fb:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e13b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e1fd:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007e200
uuid_000000000007e1fe:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e1cd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e200:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
slot_CL_ArrowTypeConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e207
	jmp uuid_000000000007e209
uuid_000000000007e207:
	push %RBP
	jmp uuid_000000000007e204
	jmp uuid_000000000007e206
uuid_000000000007e204:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e201
	jmp uuid_000000000007e203
uuid_000000000007e201:
	movb $1, -128(%rbp)
uuid_000000000007e203:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007e206:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007e209:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e220
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e213
	jmp uuid_000000000007e215
uuid_000000000007e213:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e210
	jmp uuid_000000000007e212
uuid_000000000007e210:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e20d
	jmp uuid_000000000007e20f
uuid_000000000007e20d:
	movb $1, -200(%rbp)
uuid_000000000007e20f:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007e212:
	mov -216(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007e215:
	mov -208(%RBP),%RSP
	add $-272, %RSP
	mov -200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e21d
	push %RBP
	jmp uuid_000000000007e21a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e219
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e21c
uuid_000000000007e21a:
uuid_000000000007e21c:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007e21f
uuid_000000000007e21d:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e216
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	movq -328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -48(%rbp)
	jmp uuid_000000000007e218
uuid_000000000007e216:
	movq -296(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_000000000007e218:
	mov -304(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007e21f:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007e222
uuid_000000000007e220:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e20a
	jmp uuid_000000000007e20c
uuid_000000000007e20a:
	movq -24(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_000000000007e20c:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007e222:
	mov -96(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
slot_CL_ArrowTypeConsStringConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e229
	jmp uuid_000000000007e22b
uuid_000000000007e229:
	push %RBP
	mov -120(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e226
	jmp uuid_000000000007e228
uuid_000000000007e226:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e223
	jmp uuid_000000000007e225
uuid_000000000007e223:
	movb $1, -136(%rbp)
uuid_000000000007e225:
	mov -200(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007e228:
	mov -152(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007e22b:
	mov -144(%RBP),%RSP
	add $-208, %RSP
	mov -136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e255
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e248
	jmp uuid_000000000007e24a
uuid_000000000007e248:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e245
	jmp uuid_000000000007e247
uuid_000000000007e245:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e242
	jmp uuid_000000000007e244
uuid_000000000007e242:
	movb $1, -248(%rbp)
uuid_000000000007e244:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007e247:
	mov -264(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007e24a:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e252
	push %RBP
	jmp uuid_000000000007e24f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e24e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e251
uuid_000000000007e24f:
uuid_000000000007e251:
	mov -328(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007e254
uuid_000000000007e252:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e24b
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	movq -376(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -56(%rbp)
	jmp uuid_000000000007e24d
uuid_000000000007e24b:
	movq -344(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007e24d:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007e254:
	mov -216(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007e257
uuid_000000000007e255:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e23f
	jmp uuid_000000000007e241
uuid_000000000007e23f:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e232
	jmp uuid_000000000007e234
uuid_000000000007e232:
	push %RBP
	jmp uuid_000000000007e22f
	jmp uuid_000000000007e231
uuid_000000000007e22f:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e22c
	jmp uuid_000000000007e22e
uuid_000000000007e22c:
	movb $1, -312(%rbp)
uuid_000000000007e22e:
	mov -336(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007e231:
	mov -328(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007e234:
	mov -320(%RBP),%RSP
	add $-344, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e23c
	push %RBP
	jmp uuid_000000000007e239
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e238
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e23b
uuid_000000000007e239:
uuid_000000000007e23b:
	mov -352(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007e23e
uuid_000000000007e23c:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e235
	jmp uuid_000000000007e237
uuid_000000000007e235:
	movq -24(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007e237:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007e23e:
	mov -264(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007e241:
	mov -216(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007e257:
	mov -104(%RBP),%RSP
	add $-352, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
uuid_CL_ArrowStringNil:
	movq $uuid_SB_counter_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $uuid_SB_counter_CL_U64, %r14
	movq %r15, 0(%r14)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007e258
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-hex : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $uuid_SB_counter_CL_U64, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call to_SB_hex_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
iuid_CL_ArrowU64Nil:
	movq $uuid_SB_counter_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $uuid_SB_counter_CL_U64, %r14
	movq %r15, 0(%r14)
	mov $uuid_SB_counter_CL_U64, %r15
	pushq 0(%r15)
	mov -16(%rbp), %RAX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
var_SB_name_SB_if_SB_var_CL_ArrowStringAST:
	pushq $uuid_000000000007b6a7
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e25f
	jmp uuid_000000000007e261
uuid_000000000007e25f:
	push %RBP
	jmp uuid_000000000007e25c
	jmp uuid_000000000007e25e
uuid_000000000007e25c:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e259
	jmp uuid_000000000007e25b
uuid_000000000007e259:
	movb $1, -248(%rbp)
uuid_000000000007e25b:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007e25e:
	mov -264(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007e261:
	mov -256(%RBP),%RSP
	add $-280, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e272
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e268
	jmp uuid_000000000007e26a
uuid_000000000007e268:
	push %RBP
	jmp uuid_000000000007e265
	jmp uuid_000000000007e267
uuid_000000000007e265:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e262
	jmp uuid_000000000007e264
uuid_000000000007e262:
	movb $1, -368(%rbp)
uuid_000000000007e264:
	mov -392(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007e267:
	mov -384(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007e26a:
	mov -376(%RBP),%RSP
	add $-400, %RSP
	mov -368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e26f
	push %RBP
	jmp uuid_000000000007e26c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e26b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e26e
uuid_000000000007e26c:
uuid_000000000007e26e:
	mov -408(%RBP),%RSP
	add $-408, %RSP
	jmp uuid_000000000007e271
uuid_000000000007e26f:
	movq -400(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -400(%rbp), %r15
	mov %r15, -88(%rbp)
uuid_000000000007e271:
	mov -288(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007e274
uuid_000000000007e272:
	movq -280(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -280(%rbp), %r15
	mov %r15, -88(%rbp)
uuid_000000000007e274:
	mov -168(%RBP),%RSP
	add $-280, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_expect_CL_ArrowNilConsListTokenString:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<List<Token>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
parse_SB_lambda_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2a0
	jmp uuid_000000000007e2a2
uuid_000000000007e2a0:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e28b
	jmp uuid_000000000007e28d
uuid_000000000007e28b:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e288
	jmp uuid_000000000007e28a
uuid_000000000007e288:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e282
	jmp uuid_000000000007e284
uuid_000000000007e282:
	push %RBP
	jmp uuid_000000000007e27f
	jmp uuid_000000000007e281
uuid_000000000007e27f:
	push %RBP
	jmp uuid_000000000007e27c
	jmp uuid_000000000007e27e
uuid_000000000007e27c:
	push %RBP
	mov -464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e279
	jmp uuid_000000000007e27b
uuid_000000000007e279:
	movb $1, -520(%rbp)
uuid_000000000007e27b:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007e27e:
	mov -544(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007e281:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007e284:
	mov -528(%RBP),%RSP
	add $-560, %RSP
	mov -520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e285
	jmp uuid_000000000007e287
uuid_000000000007e285:
	movb $1, -360(%rbp)
uuid_000000000007e287:
	mov -456(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007e28a:
	mov -376(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007e28d:
	mov -368(%RBP),%RSP
	add $-560, %RSP
	mov -360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e29d
	jmp uuid_000000000007e29f
uuid_000000000007e29d:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e297
	jmp uuid_000000000007e299
uuid_000000000007e297:
	push %RBP
	jmp uuid_000000000007e294
	jmp uuid_000000000007e296
uuid_000000000007e294:
	push %RBP
	jmp uuid_000000000007e291
	jmp uuid_000000000007e293
uuid_000000000007e291:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e28e
	jmp uuid_000000000007e290
uuid_000000000007e28e:
	movb $1, -632(%rbp)
uuid_000000000007e290:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007e293:
	mov -656(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007e296:
	mov -648(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007e299:
	mov -640(%RBP),%RSP
	add $-672, %RSP
	mov -632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e29a
	jmp uuid_000000000007e29c
uuid_000000000007e29a:
	movb $1, -264(%rbp)
uuid_000000000007e29c:
	mov -568(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007e29f:
	mov -280(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007e2a2:
	mov -272(%RBP),%RSP
	add $-672, %RSP
	mov -264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2a7
	push %RBP
	jmp uuid_000000000007e2a4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e2a3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e2a6
uuid_000000000007e2a4:
uuid_000000000007e2a6:
	mov -680(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007e2a9
uuid_000000000007e2a7:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -448(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e2a9:
	mov -184(%RBP),%RSP
	add $-672, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2bb
	jmp uuid_000000000007e2bd
uuid_000000000007e2bb:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	jmp uuid_000000000007e2b8
	jmp uuid_000000000007e2ba
uuid_000000000007e2b8:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq $0
	push %RBP
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2b2
	jmp uuid_000000000007e2b4
uuid_000000000007e2b2:
	push %RBP
	jmp uuid_000000000007e2af
	jmp uuid_000000000007e2b1
uuid_000000000007e2af:
	push %RBP
	mov -1240(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1344(%rbp)
	pushq $uuid_000000000007b875
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e2ac
	jmp uuid_000000000007e2ae
uuid_000000000007e2ac:
	movb $1, -1312(%rbp)
uuid_000000000007e2ae:
	mov -1336(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007e2b1:
	mov -1328(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007e2b4:
	mov -1320(%RBP),%RSP
	add $-1344, %RSP
	mov -1312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2b5
	jmp uuid_000000000007e2b7
uuid_000000000007e2b5:
	movb $1, -1136(%rbp)
uuid_000000000007e2b7:
	mov -1232(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007e2ba:
	mov -1152(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007e2bd:
	mov -1144(%RBP),%RSP
	add $-1344, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2d8
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	push %RBP
	mov -1504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2d1
	jmp uuid_000000000007e2d3
uuid_000000000007e2d1:
	push %RBP
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	jmp uuid_000000000007e2ce
	jmp uuid_000000000007e2d0
uuid_000000000007e2ce:
	push %RBP
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	jmp uuid_000000000007e2cb
	jmp uuid_000000000007e2cd
uuid_000000000007e2cb:
	movb $1, -1512(%rbp)
uuid_000000000007e2cd:
	mov -1608(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007e2d0:
	mov -1528(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007e2d3:
	mov -1520(%RBP),%RSP
	add $-1680, %RSP
	mov -1512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2d5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e2d4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e2d7
uuid_000000000007e2d5:
	movq -1680(%rbp), %r15
	movq %r15, -744(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -736(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -728(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -720(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -712(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -704(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -680(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1544(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1536(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e2d7:
	mov -1352(%RBP),%RSP
	add $-1680, %RSP
	jmp uuid_000000000007e2da
uuid_000000000007e2d8:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2c4
	jmp uuid_000000000007e2c6
uuid_000000000007e2c4:
	push %RBP
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	jmp uuid_000000000007e2c1
	jmp uuid_000000000007e2c3
uuid_000000000007e2c1:
	push %RBP
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	jmp uuid_000000000007e2be
	jmp uuid_000000000007e2c0
uuid_000000000007e2be:
	movb $1, -1664(%rbp)
uuid_000000000007e2c0:
	mov -1760(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007e2c3:
	mov -1680(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007e2c6:
	mov -1672(%RBP),%RSP
	add $-1832, %RSP
	mov -1664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2c8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e2c7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e2ca
uuid_000000000007e2c8:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST+CaseNumber<9>,Array<AST+CaseNumber<9>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTCaseNumber9ASTCaseNumber9
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $5
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	movq -1752(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1744(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1736(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1728(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -752(%rbp)
uuid_000000000007e2ca:
	mov -1504(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007e2da:
	mov -976(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007e317:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e318
	jmp uuid_000000000007e319
uuid_000000000007e318:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2ea
	jmp uuid_000000000007e2ec
uuid_000000000007e2ea:
	push %RBP
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	jmp uuid_000000000007e2e7
	jmp uuid_000000000007e2e9
uuid_000000000007e2e7:
	push %RBP
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq $0
	push %RBP
	mov -2320(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2e1
	jmp uuid_000000000007e2e3
uuid_000000000007e2e1:
	push %RBP
	jmp uuid_000000000007e2de
	jmp uuid_000000000007e2e0
uuid_000000000007e2de:
	push %RBP
	mov -2256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2360(%rbp)
	pushq $uuid_000000000007b875
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e2db
	jmp uuid_000000000007e2dd
uuid_000000000007e2db:
	movb $1, -2328(%rbp)
uuid_000000000007e2dd:
	mov -2352(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007e2e0:
	mov -2344(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007e2e3:
	mov -2336(%RBP),%RSP
	add $-2360, %RSP
	mov -2328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2e4
	jmp uuid_000000000007e2e6
uuid_000000000007e2e4:
	movb $1, -2152(%rbp)
uuid_000000000007e2e6:
	mov -2248(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007e2e9:
	mov -2168(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007e2ec:
	mov -2160(%RBP),%RSP
	add $-2360, %RSP
	mov -2152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e314
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e300
	jmp uuid_000000000007e302
uuid_000000000007e300:
	push %RBP
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	mov -2616(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2fd
	jmp uuid_000000000007e2ff
uuid_000000000007e2fd:
	push %RBP
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	jmp uuid_000000000007e2fa
	jmp uuid_000000000007e2fc
uuid_000000000007e2fa:
	movb $1, -2528(%rbp)
uuid_000000000007e2fc:
	mov -2624(%RBP),%RSP
	add $-2696, %RSP
uuid_000000000007e2ff:
	mov -2544(%RBP),%RSP
	add $-2696, %RSP
uuid_000000000007e302:
	mov -2536(%RBP),%RSP
	add $-2696, %RSP
	mov -2528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e311
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e30a
	jmp uuid_000000000007e30c
uuid_000000000007e30a:
	push %RBP
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	jmp uuid_000000000007e307
	jmp uuid_000000000007e309
uuid_000000000007e307:
	push %RBP
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	jmp uuid_000000000007e304
	jmp uuid_000000000007e306
uuid_000000000007e304:
	movb $1, -2864(%rbp)
uuid_000000000007e306:
	mov -2960(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007e309:
	mov -2880(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007e30c:
	mov -2872(%RBP),%RSP
	add $-3032, %RSP
	mov -2864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e30e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e30d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e310
uuid_000000000007e30e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	pushq -3016(%rbp)
	pushq -3024(%rbp)
	pushq -3032(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	movq -2952(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2944(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2936(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2928(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2920(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2912(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2904(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2896(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2888(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e310:
	mov -2704(%RBP),%RSP
	add $-3032, %RSP
	jmp uuid_000000000007e313
uuid_000000000007e311:
#call function parse-expect : Arrow<Cons<String,List<Token>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e303
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_expect_CL_ArrowNilConsListTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e313:
	mov -2368(%RBP),%RSP
	add $-2696, %RSP
	jmp uuid_000000000007e316
uuid_000000000007e314:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e2f3
	jmp uuid_000000000007e2f5
uuid_000000000007e2f3:
	push %RBP
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	jmp uuid_000000000007e2f0
	jmp uuid_000000000007e2f2
uuid_000000000007e2f0:
	push %RBP
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	jmp uuid_000000000007e2ed
	jmp uuid_000000000007e2ef
uuid_000000000007e2ed:
	movb $1, -2680(%rbp)
uuid_000000000007e2ef:
	mov -2776(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007e2f2:
	mov -2696(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007e2f5:
	mov -2688(%RBP),%RSP
	add $-2848, %RSP
	mov -2680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e2f7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e2f6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e2f9
uuid_000000000007e2f7:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $5
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	movq -2768(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -2712(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -2704(%rbp), %r15
	movq %r15, -752(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e2f9:
	mov -2520(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007e316:
	mov -1992(%RBP),%RSP
	add $-2848, %RSP
	add $152, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $152, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e317
uuid_000000000007e319:
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -1984(%rbp)
	pushq -1976(%rbp)
	pushq -1968(%rbp)
	pushq -1960(%rbp)
	pushq -1952(%rbp)
	pushq -1944(%rbp)
	pushq -1936(%rbp)
	pushq -1928(%rbp)
	pushq -1920(%rbp)
	pushq -1912(%rbp)
	pushq -1904(%rbp)
	pushq -1896(%rbp)
	pushq -1888(%rbp)
	pushq -1880(%rbp)
	pushq -1872(%rbp)
	pushq -1864(%rbp)
	pushq -1856(%rbp)
	pushq -1848(%rbp)
	pushq -1840(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007e365:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e366
	jmp uuid_000000000007e367
uuid_000000000007e366:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e330
	jmp uuid_000000000007e332
uuid_000000000007e330:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e32d
	jmp uuid_000000000007e32f
uuid_000000000007e32d:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e327
	jmp uuid_000000000007e329
uuid_000000000007e327:
	push %RBP
	jmp uuid_000000000007e324
	jmp uuid_000000000007e326
uuid_000000000007e324:
	push %RBP
	jmp uuid_000000000007e321
	jmp uuid_000000000007e323
uuid_000000000007e321:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $uuid_000000000007b7e4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e31e
	jmp uuid_000000000007e320
uuid_000000000007e31e:
	movb $1, -544(%rbp)
uuid_000000000007e320:
	mov -576(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007e323:
	mov -568(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007e326:
	mov -560(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007e329:
	mov -552(%RBP),%RSP
	add $-584, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e32a
	jmp uuid_000000000007e32c
uuid_000000000007e32a:
	movb $1, -384(%rbp)
uuid_000000000007e32c:
	mov -480(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007e32f:
	mov -400(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007e332:
	mov -392(%RBP),%RSP
	add $-584, %RSP
	mov -384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e362
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e345
	jmp uuid_000000000007e347
uuid_000000000007e345:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e342
	jmp uuid_000000000007e344
uuid_000000000007e342:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e33c
	jmp uuid_000000000007e33e
uuid_000000000007e33c:
	push %RBP
	jmp uuid_000000000007e339
	jmp uuid_000000000007e33b
uuid_000000000007e339:
	push %RBP
	jmp uuid_000000000007e336
	jmp uuid_000000000007e338
uuid_000000000007e336:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e333
	jmp uuid_000000000007e335
uuid_000000000007e333:
	movb $1, -832(%rbp)
uuid_000000000007e335:
	mov -864(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e338:
	mov -856(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e33b:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e33e:
	mov -840(%RBP),%RSP
	add $-872, %RSP
	mov -832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e33f
	jmp uuid_000000000007e341
uuid_000000000007e33f:
	movb $1, -672(%rbp)
uuid_000000000007e341:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e344:
	mov -688(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e347:
	mov -680(%RBP),%RSP
	add $-872, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e35f
	push %RBP
	jmp uuid_000000000007e35c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e35b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e35e
uuid_000000000007e35c:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e351
	jmp uuid_000000000007e353
uuid_000000000007e351:
	push %RBP
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	jmp uuid_000000000007e34e
	jmp uuid_000000000007e350
uuid_000000000007e34e:
	push %RBP
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	jmp uuid_000000000007e34b
	jmp uuid_000000000007e34d
uuid_000000000007e34b:
	movb $1, -1200(%rbp)
uuid_000000000007e34d:
	mov -1296(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007e350:
	mov -1216(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007e353:
	mov -1208(%RBP),%RSP
	add $-1368, %RSP
	mov -1200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e358
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e357
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e35a
uuid_000000000007e358:
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e354
	movq -1368(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -88(%rbp)
	jmp uuid_000000000007e356
uuid_000000000007e354:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e356:
	mov -1376(%RBP),%RSP
	add $-1376, %RSP
	movq -1288(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e35a:
	mov -1040(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007e35e:
	mov -880(%RBP),%RSP
	add $-1376, %RSP
	jmp uuid_000000000007e361
uuid_000000000007e35f:
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e348
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007e34a
uuid_000000000007e348:
uuid_000000000007e34a:
	mov -880(%RBP),%RSP
	add $-880, %RSP
	movq -760(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e361:
	mov -592(%RBP),%RSP
	add $-880, %RSP
	jmp uuid_000000000007e364
uuid_000000000007e362:
	movq -72(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -48(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -24(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e364:
	mov -304(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e365
uuid_000000000007e367:
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_one_SB_expression_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e400
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e37e
	jmp uuid_000000000007e380
uuid_000000000007e37e:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e37b
	jmp uuid_000000000007e37d
uuid_000000000007e37b:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e375
	jmp uuid_000000000007e377
uuid_000000000007e375:
	push %RBP
	jmp uuid_000000000007e372
	jmp uuid_000000000007e374
uuid_000000000007e372:
	push %RBP
	jmp uuid_000000000007e36f
	jmp uuid_000000000007e371
uuid_000000000007e36f:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq $uuid_000000000007b7e7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e36c
	jmp uuid_000000000007e36e
uuid_000000000007e36c:
	movb $1, -624(%rbp)
uuid_000000000007e36e:
	mov -656(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007e371:
	mov -648(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007e374:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007e377:
	mov -632(%RBP),%RSP
	add $-664, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e378
	jmp uuid_000000000007e37a
uuid_000000000007e378:
	movb $1, -464(%rbp)
uuid_000000000007e37a:
	mov -560(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007e37d:
	mov -480(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007e380:
	mov -472(%RBP),%RSP
	add $-664, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3fd
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -744(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3a0
	jmp uuid_000000000007e3a2
uuid_000000000007e3a0:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e39d
	jmp uuid_000000000007e39f
uuid_000000000007e39d:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq $0
	push %RBP
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e397
	jmp uuid_000000000007e399
uuid_000000000007e397:
	push %RBP
	jmp uuid_000000000007e394
	jmp uuid_000000000007e396
uuid_000000000007e394:
	push %RBP
	jmp uuid_000000000007e391
	jmp uuid_000000000007e393
uuid_000000000007e391:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e38e
	jmp uuid_000000000007e390
uuid_000000000007e38e:
	movb $1, -912(%rbp)
uuid_000000000007e390:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007e393:
	mov -936(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007e396:
	mov -928(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007e399:
	mov -920(%RBP),%RSP
	add $-952, %RSP
	mov -912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e39a
	jmp uuid_000000000007e39c
uuid_000000000007e39a:
	movb $1, -752(%rbp)
uuid_000000000007e39c:
	mov -848(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007e39f:
	mov -768(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007e3a2:
	mov -760(%RBP),%RSP
	add $-952, %RSP
	mov -752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3fa
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3b6
	jmp uuid_000000000007e3b8
uuid_000000000007e3b6:
	push %RBP
	mov -1024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3b3
	jmp uuid_000000000007e3b5
uuid_000000000007e3b3:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3ad
	jmp uuid_000000000007e3af
uuid_000000000007e3ad:
	push %RBP
	jmp uuid_000000000007e3aa
	jmp uuid_000000000007e3ac
uuid_000000000007e3aa:
	push %RBP
	jmp uuid_000000000007e3a7
	jmp uuid_000000000007e3a9
uuid_000000000007e3a7:
	push %RBP
	mov -1144(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq $uuid_000000000007b5d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e3a4
	jmp uuid_000000000007e3a6
uuid_000000000007e3a4:
	movb $1, -1200(%rbp)
uuid_000000000007e3a6:
	mov -1232(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007e3a9:
	mov -1224(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007e3ac:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007e3af:
	mov -1208(%RBP),%RSP
	add $-1240, %RSP
	mov -1200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3b0
	jmp uuid_000000000007e3b2
uuid_000000000007e3b0:
	movb $1, -1040(%rbp)
uuid_000000000007e3b2:
	mov -1136(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007e3b5:
	mov -1056(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007e3b8:
	mov -1048(%RBP),%RSP
	add $-1240, %RSP
	mov -1040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3f7
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3e1
	jmp uuid_000000000007e3e3
uuid_000000000007e3e1:
	push %RBP
	mov -1312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3cc
	jmp uuid_000000000007e3ce
uuid_000000000007e3cc:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3c9
	jmp uuid_000000000007e3cb
uuid_000000000007e3c9:
	push %RBP
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	jmp uuid_000000000007e3c6
	jmp uuid_000000000007e3c8
uuid_000000000007e3c6:
	movb $1, -1424(%rbp)
uuid_000000000007e3c8:
	mov -1520(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007e3cb:
	mov -1440(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007e3ce:
	mov -1432(%RBP),%RSP
	add $-1576, %RSP
	mov -1424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3de
	jmp uuid_000000000007e3e0
uuid_000000000007e3de:
	push %RBP
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3d8
	jmp uuid_000000000007e3da
uuid_000000000007e3d8:
	push %RBP
	jmp uuid_000000000007e3d5
	jmp uuid_000000000007e3d7
uuid_000000000007e3d5:
	push %RBP
	jmp uuid_000000000007e3d2
	jmp uuid_000000000007e3d4
uuid_000000000007e3d2:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $uuid_000000000007b7e6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e3cf
	jmp uuid_000000000007e3d1
uuid_000000000007e3cf:
	movb $1, -1648(%rbp)
uuid_000000000007e3d1:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007e3d4:
	mov -1672(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007e3d7:
	mov -1664(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007e3da:
	mov -1656(%RBP),%RSP
	add $-1688, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3db
	jmp uuid_000000000007e3dd
uuid_000000000007e3db:
	movb $1, -1328(%rbp)
uuid_000000000007e3dd:
	mov -1584(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007e3e0:
	mov -1344(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007e3e3:
	mov -1336(%RBP),%RSP
	add $-1688, %RSP
	mov -1328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3f4
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3ea
	jmp uuid_000000000007e3ec
uuid_000000000007e3ea:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e3e7
	jmp uuid_000000000007e3e9
uuid_000000000007e3e7:
	push %RBP
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	jmp uuid_000000000007e3e4
	jmp uuid_000000000007e3e6
uuid_000000000007e3e4:
	movb $1, -1776(%rbp)
uuid_000000000007e3e6:
	mov -1872(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007e3e9:
	mov -1792(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007e3ec:
	mov -1784(%RBP),%RSP
	add $-1928, %RSP
	mov -1776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3f1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e3f0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e3f3
uuid_000000000007e3f1:
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -1880(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e3ed
	mov -1880(%RBP), %RAX
	push %RAX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007e3ef
uuid_000000000007e3ed:
	mov -1880(%RBP), %RAX
	push %RAX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007e3ef:
	mov -1936(%RBP),%RSP
	add $-1936, %RSP
	movq -1864(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1856(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1848(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1840(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1832(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1800(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007e3f3:
	mov -1696(%RBP),%RSP
	add $-1936, %RSP
	jmp uuid_000000000007e3f6
uuid_000000000007e3f4:
	mov -1528(%RBP), %RAX
	push %RAX
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1512(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007e3f6:
	mov -1248(%RBP),%RSP
	add $-1688, %RSP
	jmp uuid_000000000007e3f9
uuid_000000000007e3f7:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e3bf
	jmp uuid_000000000007e3c1
uuid_000000000007e3bf:
	push %RBP
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	jmp uuid_000000000007e3bc
	jmp uuid_000000000007e3be
uuid_000000000007e3bc:
	push %RBP
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	jmp uuid_000000000007e3b9
	jmp uuid_000000000007e3bb
uuid_000000000007e3b9:
	movb $1, -1560(%rbp)
uuid_000000000007e3bb:
	mov -1656(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007e3be:
	mov -1576(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007e3c1:
	mov -1568(%RBP),%RSP
	add $-1728, %RSP
	mov -1560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e3c3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e3c2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e3c5
uuid_000000000007e3c3:
	movq -1728(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1608(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007e3c5:
	mov -1400(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007e3f9:
	mov -960(%RBP),%RSP
	add $-1728, %RSP
	jmp uuid_000000000007e3fc
uuid_000000000007e3fa:
#call function parse-unexpect : Arrow<Cons<String,List<Token>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e3a3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_unexpect_CL_ArrowNilConsListTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e3fc:
	mov -672(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007e3ff
uuid_000000000007e3fd:
#call function parse-lambda : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call parse_SB_lambda_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e387
	jmp uuid_000000000007e389
uuid_000000000007e387:
	push %RBP
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007e384
	jmp uuid_000000000007e386
uuid_000000000007e384:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	jmp uuid_000000000007e381
	jmp uuid_000000000007e383
uuid_000000000007e381:
	movb $1, -984(%rbp)
uuid_000000000007e383:
	mov -1080(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007e386:
	mov -1000(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007e389:
	mov -992(%RBP),%RSP
	add $-1152, %RSP
	mov -984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e38b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e38a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e38d
uuid_000000000007e38b:
	movq -1152(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007e38d:
	mov -824(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007e3ff:
	mov -384(%RBP),%RSP
	add $-1152, %RSP
	jmp uuid_000000000007e402
uuid_000000000007e400:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
uuid_000000000007e402:
	mov -304(%RBP),%RSP
	add $-376, %RSP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_toplevel_CL_ArrowASTListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
uuid_000000000007e64e:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e64f
	jmp uuid_000000000007e650
uuid_000000000007e64f:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e417
	jmp uuid_000000000007e419
uuid_000000000007e417:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e414
	jmp uuid_000000000007e416
uuid_000000000007e414:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e40e
	jmp uuid_000000000007e410
uuid_000000000007e40e:
	push %RBP
	jmp uuid_000000000007e40b
	jmp uuid_000000000007e40d
uuid_000000000007e40b:
	push %RBP
	jmp uuid_000000000007e408
	jmp uuid_000000000007e40a
uuid_000000000007e408:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $uuid_000000000007b7e4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e405
	jmp uuid_000000000007e407
uuid_000000000007e405:
	movb $1, -472(%rbp)
uuid_000000000007e407:
	mov -504(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007e40a:
	mov -496(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007e40d:
	mov -488(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007e410:
	mov -480(%RBP),%RSP
	add $-512, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e411
	jmp uuid_000000000007e413
uuid_000000000007e411:
	movb $1, -312(%rbp)
uuid_000000000007e413:
	mov -408(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007e416:
	mov -328(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007e419:
	mov -320(%RBP),%RSP
	add $-512, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e64b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e42d
	jmp uuid_000000000007e42f
uuid_000000000007e42d:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e42a
	jmp uuid_000000000007e42c
uuid_000000000007e42a:
	push %RBP
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e424
	jmp uuid_000000000007e426
uuid_000000000007e424:
	push %RBP
	jmp uuid_000000000007e421
	jmp uuid_000000000007e423
uuid_000000000007e421:
	push %RBP
	jmp uuid_000000000007e41e
	jmp uuid_000000000007e420
uuid_000000000007e41e:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq $uuid_000000000007e41a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e41b
	jmp uuid_000000000007e41d
uuid_000000000007e41b:
	movb $1, -760(%rbp)
uuid_000000000007e41d:
	mov -792(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e420:
	mov -784(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e423:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e426:
	mov -768(%RBP),%RSP
	add $-800, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e427
	jmp uuid_000000000007e429
uuid_000000000007e427:
	movb $1, -600(%rbp)
uuid_000000000007e429:
	mov -696(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e42c:
	mov -616(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e42f:
	mov -608(%RBP),%RSP
	add $-800, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e648
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e46d
	jmp uuid_000000000007e46f
uuid_000000000007e46d:
	push %RBP
	mov -872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e46a
	jmp uuid_000000000007e46c
uuid_000000000007e46a:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq $0
	push %RBP
	mov -1040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e464
	jmp uuid_000000000007e466
uuid_000000000007e464:
	push %RBP
	jmp uuid_000000000007e461
	jmp uuid_000000000007e463
uuid_000000000007e461:
	push %RBP
	jmp uuid_000000000007e45e
	jmp uuid_000000000007e460
uuid_000000000007e45e:
	push %RBP
	mov -992(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1088(%rbp)
	pushq $uuid_000000000007e45a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e45b
	jmp uuid_000000000007e45d
uuid_000000000007e45b:
	movb $1, -1048(%rbp)
uuid_000000000007e45d:
	mov -1080(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007e460:
	mov -1072(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007e463:
	mov -1064(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007e466:
	mov -1056(%RBP),%RSP
	add $-1088, %RSP
	mov -1048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e467
	jmp uuid_000000000007e469
uuid_000000000007e467:
	movb $1, -888(%rbp)
uuid_000000000007e469:
	mov -984(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007e46c:
	mov -904(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007e46f:
	mov -896(%RBP),%RSP
	add $-1088, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e645
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4a6
	jmp uuid_000000000007e4a8
uuid_000000000007e4a6:
	push %RBP
	mov -1160(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e490
	jmp uuid_000000000007e492
uuid_000000000007e490:
	push %RBP
	mov -1256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e48d
	jmp uuid_000000000007e48f
uuid_000000000007e48d:
	push %RBP
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq $0
	push %RBP
	mov -1424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e487
	jmp uuid_000000000007e489
uuid_000000000007e487:
	push %RBP
	jmp uuid_000000000007e484
	jmp uuid_000000000007e486
uuid_000000000007e484:
	push %RBP
	jmp uuid_000000000007e481
	jmp uuid_000000000007e483
uuid_000000000007e481:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq $uuid_000000000007e47d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e47e
	jmp uuid_000000000007e480
uuid_000000000007e47e:
	movb $1, -1432(%rbp)
uuid_000000000007e480:
	mov -1464(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007e483:
	mov -1456(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007e486:
	mov -1448(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007e489:
	mov -1440(%RBP),%RSP
	add $-1472, %RSP
	mov -1432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e48a
	jmp uuid_000000000007e48c
uuid_000000000007e48a:
	movb $1, -1272(%rbp)
uuid_000000000007e48c:
	mov -1368(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007e48f:
	mov -1288(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007e492:
	mov -1280(%RBP),%RSP
	add $-1472, %RSP
	mov -1272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4a3
	jmp uuid_000000000007e4a5
uuid_000000000007e4a3:
	push %RBP
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e49d
	jmp uuid_000000000007e49f
uuid_000000000007e49d:
	push %RBP
	jmp uuid_000000000007e49a
	jmp uuid_000000000007e49c
uuid_000000000007e49a:
	push %RBP
	jmp uuid_000000000007e497
	jmp uuid_000000000007e499
uuid_000000000007e497:
	push %RBP
	mov -1488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1584(%rbp)
	pushq $uuid_000000000007e493
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e494
	jmp uuid_000000000007e496
uuid_000000000007e494:
	movb $1, -1544(%rbp)
uuid_000000000007e496:
	mov -1576(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007e499:
	mov -1568(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007e49c:
	mov -1560(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007e49f:
	mov -1552(%RBP),%RSP
	add $-1584, %RSP
	mov -1544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4a0
	jmp uuid_000000000007e4a2
uuid_000000000007e4a0:
	movb $1, -1176(%rbp)
uuid_000000000007e4a2:
	mov -1480(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007e4a5:
	mov -1192(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007e4a8:
	mov -1184(%RBP),%RSP
	add $-1584, %RSP
	mov -1176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e642
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4d5
	jmp uuid_000000000007e4d7
uuid_000000000007e4d5:
	push %RBP
	mov -1656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e4d2
	jmp uuid_000000000007e4d4
uuid_000000000007e4d2:
	push %RBP
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq $0
	push %RBP
	mov -1824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4cc
	jmp uuid_000000000007e4ce
uuid_000000000007e4cc:
	push %RBP
	jmp uuid_000000000007e4c9
	jmp uuid_000000000007e4cb
uuid_000000000007e4c9:
	push %RBP
	jmp uuid_000000000007e4c6
	jmp uuid_000000000007e4c8
uuid_000000000007e4c6:
	push %RBP
	mov -1776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq $uuid_000000000007e47d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e4c3
	jmp uuid_000000000007e4c5
uuid_000000000007e4c3:
	movb $1, -1832(%rbp)
uuid_000000000007e4c5:
	mov -1864(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007e4c8:
	mov -1856(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007e4cb:
	mov -1848(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007e4ce:
	mov -1840(%RBP),%RSP
	add $-1872, %RSP
	mov -1832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4cf
	jmp uuid_000000000007e4d1
uuid_000000000007e4cf:
	movb $1, -1672(%rbp)
uuid_000000000007e4d1:
	mov -1768(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007e4d4:
	mov -1688(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007e4d7:
	mov -1680(%RBP),%RSP
	add $-1872, %RSP
	mov -1672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e63f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e545
	jmp uuid_000000000007e547
uuid_000000000007e545:
	push %RBP
	mov -1944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e52f
	jmp uuid_000000000007e531
uuid_000000000007e52f:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e519
	jmp uuid_000000000007e51b
uuid_000000000007e519:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e504
	jmp uuid_000000000007e506
uuid_000000000007e504:
	push %RBP
	mov -2232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e501
	jmp uuid_000000000007e503
uuid_000000000007e501:
	push %RBP
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq $0
	push %RBP
	mov -2400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4fb
	jmp uuid_000000000007e4fd
uuid_000000000007e4fb:
	push %RBP
	jmp uuid_000000000007e4f8
	jmp uuid_000000000007e4fa
uuid_000000000007e4f8:
	push %RBP
	jmp uuid_000000000007e4f5
	jmp uuid_000000000007e4f7
uuid_000000000007e4f5:
	push %RBP
	mov -2352(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e4f2
	jmp uuid_000000000007e4f4
uuid_000000000007e4f2:
	movb $1, -2408(%rbp)
uuid_000000000007e4f4:
	mov -2440(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007e4f7:
	mov -2432(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007e4fa:
	mov -2424(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007e4fd:
	mov -2416(%RBP),%RSP
	add $-2448, %RSP
	mov -2408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4fe
	jmp uuid_000000000007e500
uuid_000000000007e4fe:
	movb $1, -2248(%rbp)
uuid_000000000007e500:
	mov -2344(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007e503:
	mov -2264(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007e506:
	mov -2256(%RBP),%RSP
	add $-2448, %RSP
	mov -2248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e516
	jmp uuid_000000000007e518
uuid_000000000007e516:
	push %RBP
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq $0
	push %RBP
	mov -2512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e510
	jmp uuid_000000000007e512
uuid_000000000007e510:
	push %RBP
	jmp uuid_000000000007e50d
	jmp uuid_000000000007e50f
uuid_000000000007e50d:
	push %RBP
	jmp uuid_000000000007e50a
	jmp uuid_000000000007e50c
uuid_000000000007e50a:
	push %RBP
	mov -2464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e507
	jmp uuid_000000000007e509
uuid_000000000007e507:
	movb $1, -2520(%rbp)
uuid_000000000007e509:
	mov -2552(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e50c:
	mov -2544(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e50f:
	mov -2536(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e512:
	mov -2528(%RBP),%RSP
	add $-2560, %RSP
	mov -2520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e513
	jmp uuid_000000000007e515
uuid_000000000007e513:
	movb $1, -2152(%rbp)
uuid_000000000007e515:
	mov -2456(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e518:
	mov -2168(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e51b:
	mov -2160(%RBP),%RSP
	add $-2560, %RSP
	mov -2152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e52c
	jmp uuid_000000000007e52e
uuid_000000000007e52c:
	push %RBP
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e526
	jmp uuid_000000000007e528
uuid_000000000007e526:
	push %RBP
	jmp uuid_000000000007e523
	jmp uuid_000000000007e525
uuid_000000000007e523:
	push %RBP
	jmp uuid_000000000007e520
	jmp uuid_000000000007e522
uuid_000000000007e520:
	push %RBP
	mov -2576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2672(%rbp)
	pushq $uuid_000000000007e51c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e51d
	jmp uuid_000000000007e51f
uuid_000000000007e51d:
	movb $1, -2632(%rbp)
uuid_000000000007e51f:
	mov -2664(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007e522:
	mov -2656(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007e525:
	mov -2648(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007e528:
	mov -2640(%RBP),%RSP
	add $-2672, %RSP
	mov -2632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e529
	jmp uuid_000000000007e52b
uuid_000000000007e529:
	movb $1, -2056(%rbp)
uuid_000000000007e52b:
	mov -2568(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007e52e:
	mov -2072(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007e531:
	mov -2064(%RBP),%RSP
	add $-2672, %RSP
	mov -2056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e542
	jmp uuid_000000000007e544
uuid_000000000007e542:
	push %RBP
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e53c
	jmp uuid_000000000007e53e
uuid_000000000007e53c:
	push %RBP
	jmp uuid_000000000007e539
	jmp uuid_000000000007e53b
uuid_000000000007e539:
	push %RBP
	jmp uuid_000000000007e536
	jmp uuid_000000000007e538
uuid_000000000007e536:
	push %RBP
	mov -2688(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq $uuid_000000000007e532
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e533
	jmp uuid_000000000007e535
uuid_000000000007e533:
	movb $1, -2744(%rbp)
uuid_000000000007e535:
	mov -2776(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007e538:
	mov -2768(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007e53b:
	mov -2760(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007e53e:
	mov -2752(%RBP),%RSP
	add $-2784, %RSP
	mov -2744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e53f
	jmp uuid_000000000007e541
uuid_000000000007e53f:
	movb $1, -1960(%rbp)
uuid_000000000007e541:
	mov -2680(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007e544:
	mov -1976(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007e547:
	mov -1968(%RBP),%RSP
	add $-2784, %RSP
	mov -1960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e63c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e58d
	jmp uuid_000000000007e58f
uuid_000000000007e58d:
	push %RBP
	mov -2856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e577
	jmp uuid_000000000007e579
uuid_000000000007e577:
	push %RBP
	mov -2952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3056(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e562
	jmp uuid_000000000007e564
uuid_000000000007e562:
	push %RBP
	mov -3048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e55f
	jmp uuid_000000000007e561
uuid_000000000007e55f:
	push %RBP
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq $0
	push %RBP
	mov -3216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e559
	jmp uuid_000000000007e55b
uuid_000000000007e559:
	push %RBP
	jmp uuid_000000000007e556
	jmp uuid_000000000007e558
uuid_000000000007e556:
	push %RBP
	jmp uuid_000000000007e553
	jmp uuid_000000000007e555
uuid_000000000007e553:
	push %RBP
	mov -3168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e550
	jmp uuid_000000000007e552
uuid_000000000007e550:
	movb $1, -3224(%rbp)
uuid_000000000007e552:
	mov -3256(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007e555:
	mov -3248(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007e558:
	mov -3240(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007e55b:
	mov -3232(%RBP),%RSP
	add $-3264, %RSP
	mov -3224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e55c
	jmp uuid_000000000007e55e
uuid_000000000007e55c:
	movb $1, -3064(%rbp)
uuid_000000000007e55e:
	mov -3160(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007e561:
	mov -3080(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007e564:
	mov -3072(%RBP),%RSP
	add $-3264, %RSP
	mov -3064(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e574
	jmp uuid_000000000007e576
uuid_000000000007e574:
	push %RBP
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq $0
	push %RBP
	mov -3328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e56e
	jmp uuid_000000000007e570
uuid_000000000007e56e:
	push %RBP
	jmp uuid_000000000007e56b
	jmp uuid_000000000007e56d
uuid_000000000007e56b:
	push %RBP
	jmp uuid_000000000007e568
	jmp uuid_000000000007e56a
uuid_000000000007e568:
	push %RBP
	mov -3280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e565
	jmp uuid_000000000007e567
uuid_000000000007e565:
	movb $1, -3336(%rbp)
uuid_000000000007e567:
	mov -3368(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007e56a:
	mov -3360(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007e56d:
	mov -3352(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007e570:
	mov -3344(%RBP),%RSP
	add $-3376, %RSP
	mov -3336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e571
	jmp uuid_000000000007e573
uuid_000000000007e571:
	movb $1, -2968(%rbp)
uuid_000000000007e573:
	mov -3272(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007e576:
	mov -2984(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007e579:
	mov -2976(%RBP),%RSP
	add $-3376, %RSP
	mov -2968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e58a
	jmp uuid_000000000007e58c
uuid_000000000007e58a:
	push %RBP
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	pushq $0
	push %RBP
	mov -3440(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e584
	jmp uuid_000000000007e586
uuid_000000000007e584:
	push %RBP
	jmp uuid_000000000007e581
	jmp uuid_000000000007e583
uuid_000000000007e581:
	push %RBP
	jmp uuid_000000000007e57e
	jmp uuid_000000000007e580
uuid_000000000007e57e:
	push %RBP
	mov -3392(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3488(%rbp)
	pushq $uuid_000000000007e57a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e57b
	jmp uuid_000000000007e57d
uuid_000000000007e57b:
	movb $1, -3448(%rbp)
uuid_000000000007e57d:
	mov -3480(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007e580:
	mov -3472(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007e583:
	mov -3464(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007e586:
	mov -3456(%RBP),%RSP
	add $-3488, %RSP
	mov -3448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e587
	jmp uuid_000000000007e589
uuid_000000000007e587:
	movb $1, -2872(%rbp)
uuid_000000000007e589:
	mov -3384(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007e58c:
	mov -2888(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007e58f:
	mov -2880(%RBP),%RSP
	add $-3488, %RSP
	mov -2872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e639
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -3568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5b8
	jmp uuid_000000000007e5ba
uuid_000000000007e5b8:
	push %RBP
	mov -3560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5a2
	jmp uuid_000000000007e5a4
uuid_000000000007e5a2:
	push %RBP
	mov -3656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e59f
	jmp uuid_000000000007e5a1
uuid_000000000007e59f:
	push %RBP
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	pushq -3616(%RBP)
	pushq -3624(%RBP)
	pushq -3632(%RBP)
	pushq -3640(%RBP)
	pushq -3648(%RBP)
	pushq $0
	push %RBP
	mov -3824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e599
	jmp uuid_000000000007e59b
uuid_000000000007e599:
	push %RBP
	jmp uuid_000000000007e596
	jmp uuid_000000000007e598
uuid_000000000007e596:
	push %RBP
	jmp uuid_000000000007e593
	jmp uuid_000000000007e595
uuid_000000000007e593:
	push %RBP
	mov -3776(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e590
	jmp uuid_000000000007e592
uuid_000000000007e590:
	movb $1, -3832(%rbp)
uuid_000000000007e592:
	mov -3864(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007e595:
	mov -3856(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007e598:
	mov -3848(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007e59b:
	mov -3840(%RBP),%RSP
	add $-3872, %RSP
	mov -3832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e59c
	jmp uuid_000000000007e59e
uuid_000000000007e59c:
	movb $1, -3672(%rbp)
uuid_000000000007e59e:
	mov -3768(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007e5a1:
	mov -3688(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007e5a4:
	mov -3680(%RBP),%RSP
	add $-3872, %RSP
	mov -3672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5b5
	jmp uuid_000000000007e5b7
uuid_000000000007e5b5:
	push %RBP
	pushq -3504(%RBP)
	pushq -3512(%RBP)
	pushq -3520(%RBP)
	pushq -3528(%RBP)
	pushq -3536(%RBP)
	pushq -3544(%RBP)
	pushq -3552(%RBP)
	pushq $0
	push %RBP
	mov -3936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5af
	jmp uuid_000000000007e5b1
uuid_000000000007e5af:
	push %RBP
	jmp uuid_000000000007e5ac
	jmp uuid_000000000007e5ae
uuid_000000000007e5ac:
	push %RBP
	jmp uuid_000000000007e5a9
	jmp uuid_000000000007e5ab
uuid_000000000007e5a9:
	push %RBP
	mov -3888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3984(%rbp)
	pushq $uuid_000000000007e5a5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e5a6
	jmp uuid_000000000007e5a8
uuid_000000000007e5a6:
	movb $1, -3944(%rbp)
uuid_000000000007e5a8:
	mov -3976(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007e5ab:
	mov -3968(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007e5ae:
	mov -3960(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007e5b1:
	mov -3952(%RBP),%RSP
	add $-3984, %RSP
	mov -3944(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5b2
	jmp uuid_000000000007e5b4
uuid_000000000007e5b2:
	movb $1, -3576(%rbp)
uuid_000000000007e5b4:
	mov -3880(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007e5b7:
	mov -3592(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007e5ba:
	mov -3584(%RBP),%RSP
	add $-3984, %RSP
	mov -3576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e636
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4064(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5ec
	jmp uuid_000000000007e5ee
uuid_000000000007e5ec:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5d6
	jmp uuid_000000000007e5d8
uuid_000000000007e5d6:
	push %RBP
	mov -4152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5cd
	jmp uuid_000000000007e5cf
uuid_000000000007e5cd:
	push %RBP
	mov -4248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e5ca
	jmp uuid_000000000007e5cc
uuid_000000000007e5ca:
	push %RBP
	pushq -4192(%RBP)
	pushq -4200(%RBP)
	pushq -4208(%RBP)
	pushq -4216(%RBP)
	pushq -4224(%RBP)
	pushq -4232(%RBP)
	pushq -4240(%RBP)
	pushq $0
	push %RBP
	mov -4416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5c4
	jmp uuid_000000000007e5c6
uuid_000000000007e5c4:
	push %RBP
	jmp uuid_000000000007e5c1
	jmp uuid_000000000007e5c3
uuid_000000000007e5c1:
	push %RBP
	jmp uuid_000000000007e5be
	jmp uuid_000000000007e5c0
uuid_000000000007e5be:
	push %RBP
	mov -4368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e5bb
	jmp uuid_000000000007e5bd
uuid_000000000007e5bb:
	movb $1, -4424(%rbp)
uuid_000000000007e5bd:
	mov -4456(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e5c0:
	mov -4448(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e5c3:
	mov -4440(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e5c6:
	mov -4432(%RBP),%RSP
	add $-4464, %RSP
	mov -4424(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5c7
	jmp uuid_000000000007e5c9
uuid_000000000007e5c7:
	movb $1, -4264(%rbp)
uuid_000000000007e5c9:
	mov -4360(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e5cc:
	mov -4280(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007e5cf:
	mov -4272(%RBP),%RSP
	add $-4464, %RSP
	mov -4264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5d3
	jmp uuid_000000000007e5d5
uuid_000000000007e5d3:
	push %RBP
	pushq -4096(%RBP)
	pushq -4104(%RBP)
	pushq -4112(%RBP)
	pushq -4120(%RBP)
	pushq -4128(%RBP)
	pushq -4136(%RBP)
	pushq -4144(%RBP)
	jmp uuid_000000000007e5d0
	jmp uuid_000000000007e5d2
uuid_000000000007e5d0:
	movb $1, -4168(%rbp)
uuid_000000000007e5d2:
	mov -4472(%RBP),%RSP
	add $-4528, %RSP
uuid_000000000007e5d5:
	mov -4184(%RBP),%RSP
	add $-4528, %RSP
uuid_000000000007e5d8:
	mov -4176(%RBP),%RSP
	add $-4528, %RSP
	mov -4168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5e9
	jmp uuid_000000000007e5eb
uuid_000000000007e5e9:
	push %RBP
	pushq -4000(%RBP)
	pushq -4008(%RBP)
	pushq -4016(%RBP)
	pushq -4024(%RBP)
	pushq -4032(%RBP)
	pushq -4040(%RBP)
	pushq -4048(%RBP)
	pushq $0
	push %RBP
	mov -4592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5e3
	jmp uuid_000000000007e5e5
uuid_000000000007e5e3:
	push %RBP
	jmp uuid_000000000007e5e0
	jmp uuid_000000000007e5e2
uuid_000000000007e5e0:
	push %RBP
	jmp uuid_000000000007e5dd
	jmp uuid_000000000007e5df
uuid_000000000007e5dd:
	push %RBP
	mov -4544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4640(%rbp)
	pushq $uuid_000000000007e5d9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e5da
	jmp uuid_000000000007e5dc
uuid_000000000007e5da:
	movb $1, -4600(%rbp)
uuid_000000000007e5dc:
	mov -4632(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007e5df:
	mov -4624(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007e5e2:
	mov -4616(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007e5e5:
	mov -4608(%RBP),%RSP
	add $-4640, %RSP
	mov -4600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e5e6
	jmp uuid_000000000007e5e8
uuid_000000000007e5e6:
	movb $1, -4072(%rbp)
uuid_000000000007e5e8:
	mov -4536(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007e5eb:
	mov -4088(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007e5ee:
	mov -4080(%RBP),%RSP
	add $-4640, %RSP
	mov -4072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e633
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4720(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e60f
	jmp uuid_000000000007e611
uuid_000000000007e60f:
	push %RBP
	mov -4712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4816(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e606
	jmp uuid_000000000007e608
uuid_000000000007e606:
	push %RBP
	mov -4808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e603
	jmp uuid_000000000007e605
uuid_000000000007e603:
	push %RBP
	pushq -4752(%RBP)
	pushq -4760(%RBP)
	pushq -4768(%RBP)
	pushq -4776(%RBP)
	pushq -4784(%RBP)
	pushq -4792(%RBP)
	pushq -4800(%RBP)
	pushq $0
	push %RBP
	mov -4976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e5fd
	jmp uuid_000000000007e5ff
uuid_000000000007e5fd:
	push %RBP
	jmp uuid_000000000007e5fa
	jmp uuid_000000000007e5fc
uuid_000000000007e5fa:
	push %RBP
	jmp uuid_000000000007e5f7
	jmp uuid_000000000007e5f9
uuid_000000000007e5f7:
	push %RBP
	mov -4928(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5024(%rbp)
	pushq $uuid_000000000007e5f3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e5f4
	jmp uuid_000000000007e5f6
uuid_000000000007e5f4:
	movb $1, -4984(%rbp)
uuid_000000000007e5f6:
	mov -5016(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007e5f9:
	mov -5008(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007e5fc:
	mov -5000(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007e5ff:
	mov -4992(%RBP),%RSP
	add $-5024, %RSP
	mov -4984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e600
	jmp uuid_000000000007e602
uuid_000000000007e600:
	movb $1, -4824(%rbp)
uuid_000000000007e602:
	mov -4920(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007e605:
	mov -4840(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007e608:
	mov -4832(%RBP),%RSP
	add $-5024, %RSP
	mov -4824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e60c
	jmp uuid_000000000007e60e
uuid_000000000007e60c:
	push %RBP
	pushq -4656(%RBP)
	pushq -4664(%RBP)
	pushq -4672(%RBP)
	pushq -4680(%RBP)
	pushq -4688(%RBP)
	pushq -4696(%RBP)
	pushq -4704(%RBP)
	jmp uuid_000000000007e609
	jmp uuid_000000000007e60b
uuid_000000000007e609:
	movb $1, -4728(%rbp)
uuid_000000000007e60b:
	mov -5032(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007e60e:
	mov -4744(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007e611:
	mov -4736(%RBP),%RSP
	add $-5088, %RSP
	mov -4728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e630
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007e62d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e62c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e62f
uuid_000000000007e62d:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq $0
	push %RBP
	mov -5480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e625
	jmp uuid_000000000007e627
uuid_000000000007e625:
	push %RBP
	pushq -5408(%RBP)
	pushq -5416(%RBP)
	pushq -5424(%RBP)
	pushq -5432(%RBP)
	pushq -5440(%RBP)
	pushq -5448(%RBP)
	pushq -5456(%RBP)
	pushq -5464(%RBP)
	pushq -5472(%RBP)
	jmp uuid_000000000007e622
	jmp uuid_000000000007e624
uuid_000000000007e622:
	push %RBP
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	pushq -5392(%RBP)
	pushq -5400(%RBP)
	jmp uuid_000000000007e61f
	jmp uuid_000000000007e621
uuid_000000000007e61f:
	movb $1, -5488(%rbp)
uuid_000000000007e621:
	mov -5584(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007e624:
	mov -5504(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007e627:
	mov -5496(%RBP),%RSP
	add $-5656, %RSP
	mov -5488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e629
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e628
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e62b
uuid_000000000007e629:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -5576(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -5568(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -5560(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -5552(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -5544(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -5536(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -5528(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -5520(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -5512(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e62b:
	mov -5328(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007e62f:
	mov -5096(%RBP),%RSP
	add $-5656, %RSP
	jmp uuid_000000000007e632
uuid_000000000007e630:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	pushq -4864(%rbp)
	pushq -4872(%rbp)
	pushq -4880(%rbp)
	pushq -4888(%rbp)
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq $0
	push %RBP
	mov -5400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e618
	jmp uuid_000000000007e61a
uuid_000000000007e618:
	push %RBP
	pushq -5328(%RBP)
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	pushq -5392(%RBP)
	jmp uuid_000000000007e615
	jmp uuid_000000000007e617
uuid_000000000007e615:
	push %RBP
	pushq -5256(%RBP)
	pushq -5264(%RBP)
	pushq -5272(%RBP)
	pushq -5280(%RBP)
	pushq -5288(%RBP)
	pushq -5296(%RBP)
	pushq -5304(%RBP)
	pushq -5312(%RBP)
	pushq -5320(%RBP)
	jmp uuid_000000000007e612
	jmp uuid_000000000007e614
uuid_000000000007e612:
	movb $1, -5408(%rbp)
uuid_000000000007e614:
	mov -5504(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007e617:
	mov -5424(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007e61a:
	mov -5416(%RBP),%RSP
	add $-5576, %RSP
	mov -5408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e61c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e61b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e61e
uuid_000000000007e61c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -5496(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -5488(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -5480(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -5472(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -5464(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -5456(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -5448(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -5440(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -5432(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e61e:
	mov -5248(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007e632:
	mov -4648(%RBP),%RSP
	add $-5576, %RSP
	jmp uuid_000000000007e635
uuid_000000000007e633:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007e5ef
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e5f0
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007e5f0
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4480(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e5f1
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007e5f1
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e5f2
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007e5f2
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e5f0
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007e5f0
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e5f2
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007e5f2
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4464(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4464(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4480(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb79
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $3
	pushq $5
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -4352(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -4344(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -4336(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -4328(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -4320(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -4312(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -4304(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -4296(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -4288(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e635:
	mov -3992(%RBP),%RSP
	add $-4640, %RSP
	jmp uuid_000000000007e638
uuid_000000000007e636:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3872(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -3760(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3752(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -3744(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -3736(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -3728(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -3720(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -3712(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -3704(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -3696(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e638:
	mov -3496(%RBP),%RSP
	add $-3984, %RSP
	jmp uuid_000000000007e63b
uuid_000000000007e639:
#call function index-size-of-class : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3376(%rbp)
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3264(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -3152(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3144(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -3136(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -3128(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -3120(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -3112(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -3104(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -3096(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -3088(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e63b:
	mov -2792(%RBP),%RSP
	add $-3488, %RSP
	jmp uuid_000000000007e63e
uuid_000000000007e63c:
#call function close : Arrow<SfxList,Array<SfxList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SfxListSfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2448(%rbp)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c056
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cbd1
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2560(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	movq -2336(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2272(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e63e:
	mov -1880(%RBP),%RSP
	add $-2784, %RSP
	jmp uuid_000000000007e641
uuid_000000000007e63f:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq $0
	push %RBP
	mov -2184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4de
	jmp uuid_000000000007e4e0
uuid_000000000007e4de:
	push %RBP
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	jmp uuid_000000000007e4db
	jmp uuid_000000000007e4dd
uuid_000000000007e4db:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	jmp uuid_000000000007e4d8
	jmp uuid_000000000007e4da
uuid_000000000007e4d8:
	movb $1, -2192(%rbp)
uuid_000000000007e4da:
	mov -2288(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007e4dd:
	mov -2208(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007e4e0:
	mov -2200(%RBP),%RSP
	add $-2360, %RSP
	mov -2192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4ef
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e4ee
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e4f1
uuid_000000000007e4ef:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4e7
	jmp uuid_000000000007e4e9
uuid_000000000007e4e7:
	push %RBP
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	jmp uuid_000000000007e4e4
	jmp uuid_000000000007e4e6
uuid_000000000007e4e4:
	push %RBP
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	jmp uuid_000000000007e4e1
	jmp uuid_000000000007e4e3
uuid_000000000007e4e1:
	movb $1, -2680(%rbp)
uuid_000000000007e4e3:
	mov -2776(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007e4e6:
	mov -2696(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007e4e9:
	mov -2688(%RBP),%RSP
	add $-2848, %RSP
	mov -2680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4eb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e4ea
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e4ed
uuid_000000000007e4eb:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -2768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e4ed:
	mov -2520(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007e4f1:
	mov -2032(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007e641:
	mov -1592(%RBP),%RSP
	add $-2848, %RSP
	jmp uuid_000000000007e644
uuid_000000000007e642:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4af
	jmp uuid_000000000007e4b1
uuid_000000000007e4af:
	push %RBP
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	jmp uuid_000000000007e4ac
	jmp uuid_000000000007e4ae
uuid_000000000007e4ac:
	push %RBP
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007e4a9
	jmp uuid_000000000007e4ab
uuid_000000000007e4a9:
	movb $1, -1904(%rbp)
uuid_000000000007e4ab:
	mov -2000(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007e4ae:
	mov -1920(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007e4b1:
	mov -1912(%RBP),%RSP
	add $-2072, %RSP
	mov -1904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4c0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e4bf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e4c2
uuid_000000000007e4c0:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq $0
	push %RBP
	mov -2384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e4b8
	jmp uuid_000000000007e4ba
uuid_000000000007e4b8:
	push %RBP
	pushq -2312(%RBP)
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	jmp uuid_000000000007e4b5
	jmp uuid_000000000007e4b7
uuid_000000000007e4b5:
	push %RBP
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	jmp uuid_000000000007e4b2
	jmp uuid_000000000007e4b4
uuid_000000000007e4b2:
	movb $1, -2392(%rbp)
uuid_000000000007e4b4:
	mov -2488(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e4b7:
	mov -2408(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007e4ba:
	mov -2400(%RBP),%RSP
	add $-2560, %RSP
	mov -2392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e4bc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e4bb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e4be
uuid_000000000007e4bc:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function index-tag-is-fragment : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call index_SB_tag_SB_is_SB_fragment_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -2480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2416(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e4be:
	mov -2232(%RBP),%RSP
	add $-2584, %RSP
uuid_000000000007e4c2:
	mov -1744(%RBP),%RSP
	add $-2584, %RSP
uuid_000000000007e644:
	mov -1096(%RBP),%RSP
	add $-2584, %RSP
	jmp uuid_000000000007e647
uuid_000000000007e645:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e476
	jmp uuid_000000000007e478
uuid_000000000007e476:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	jmp uuid_000000000007e473
	jmp uuid_000000000007e475
uuid_000000000007e473:
	push %RBP
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_000000000007e470
	jmp uuid_000000000007e472
uuid_000000000007e470:
	movb $1, -1408(%rbp)
uuid_000000000007e472:
	mov -1504(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007e475:
	mov -1424(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007e478:
	mov -1416(%RBP),%RSP
	add $-1576, %RSP
	mov -1408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e47a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e479
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e47c
uuid_000000000007e47a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1496(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e47c:
	mov -1248(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007e647:
	mov -808(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007e64a
uuid_000000000007e648:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e436
	jmp uuid_000000000007e438
uuid_000000000007e436:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007e433
	jmp uuid_000000000007e435
uuid_000000000007e433:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	jmp uuid_000000000007e430
	jmp uuid_000000000007e432
uuid_000000000007e430:
	movb $1, -1120(%rbp)
uuid_000000000007e432:
	mov -1216(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007e435:
	mov -1136(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007e438:
	mov -1128(%RBP),%RSP
	add $-1288, %RSP
	mov -1120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e457
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e456
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e459
uuid_000000000007e457:
#call function take-one-expr : Arrow<List<Token>,Tuple<List<Token>,List<Token>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	mov %RBX, %RBP
	call take_SB_one_SB_expr_CL_ArrowTupleListTokenListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e43f
	jmp uuid_000000000007e441
uuid_000000000007e43f:
	push %RBP
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	jmp uuid_000000000007e43c
	jmp uuid_000000000007e43e
uuid_000000000007e43c:
	push %RBP
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	jmp uuid_000000000007e439
	jmp uuid_000000000007e43b
uuid_000000000007e439:
	movb $1, -1608(%rbp)
uuid_000000000007e43b:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007e43e:
	mov -1624(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007e441:
	mov -1616(%RBP),%RSP
	add $-1776, %RSP
	mov -1608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e453
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e452
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e455
uuid_000000000007e453:
#call function parse-toplevel : Arrow<List<Token>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	mov %RBX, %RBP
	call parse_SB_toplevel_CL_ArrowASTListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	push %RBP
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq $0
	push %RBP
	mov -2000(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e448
	jmp uuid_000000000007e44a
uuid_000000000007e448:
	push %RBP
	mov -1992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e445
	jmp uuid_000000000007e447
uuid_000000000007e445:
	push %RBP
	mov -1984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2176(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e442
	jmp uuid_000000000007e444
uuid_000000000007e442:
	movb $1, -2008(%rbp)
uuid_000000000007e444:
	mov -2104(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007e447:
	mov -2024(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007e44a:
	mov -2016(%RBP),%RSP
	add $-2176, %RSP
	mov -2008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e44f
	push %RBP
	jmp uuid_000000000007e44c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e44b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e44e
uuid_000000000007e44c:
uuid_000000000007e44e:
	mov -2184(%RBP),%RSP
	add $-2184, %RSP
	jmp uuid_000000000007e451
uuid_000000000007e44f:
	movq -2096(%rbp), %r15
	movq %r15, -1848(%rbp)
	movq -2088(%rbp), %r15
	movq %r15, -1840(%rbp)
	movq -2080(%rbp), %r15
	movq %r15, -1832(%rbp)
	movq -2072(%rbp), %r15
	movq %r15, -1824(%rbp)
	movq -2064(%rbp), %r15
	movq %r15, -1816(%rbp)
	movq -2056(%rbp), %r15
	movq %r15, -1808(%rbp)
	movq -2048(%rbp), %r15
	movq %r15, -1800(%rbp)
	movq -2040(%rbp), %r15
	movq %r15, -1792(%rbp)
	movq -2032(%rbp), %r15
	movq %r15, -1784(%rbp)
uuid_000000000007e451:
	mov -1928(%RBP),%RSP
	add $-2176, %RSP
#call function close : Arrow<MacroList,Array<MacroList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_MacroListMacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $0
	pushq $0
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	movq -1696(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e455:
	mov -1448(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007e459:
	mov -960(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007e64a:
	mov -520(%RBP),%RSP
	add $-2176, %RSP
	jmp uuid_000000000007e64d
uuid_000000000007e64b:
	movq -400(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e64d:
	mov -232(%RBP),%RSP
	add $-512, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e64e
uuid_000000000007e650:
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007e669:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007e66a
	jmp uuid_000000000007e66b
uuid_000000000007e66a:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e660
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e65d
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e65a
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e657
	push %RBP
	jmp uuid_000000000007e654
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e653
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e656
uuid_000000000007e654:
uuid_000000000007e656:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007e659
uuid_000000000007e657:
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007e659:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007e65c
uuid_000000000007e65a:
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007e65c:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007e65f
uuid_000000000007e65d:
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007e65f:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007e662
uuid_000000000007e660:
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007e662:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e666
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007e668
uuid_000000000007e666:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $44, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e663
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007e665
uuid_000000000007e663:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007e665:
	mov -128(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007e668:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e669
uuid_000000000007e66b:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_type_SB_single_CL_ArrowTypeString:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007e6ca:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007e6cb
	jmp uuid_000000000007e6cc
uuid_000000000007e6cb:
	push %RBP
	movq -24(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6c7
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e69d
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e69a
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e697
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e694
	push %RBP
	jmp uuid_000000000007e691
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e690
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e693
uuid_000000000007e691:
uuid_000000000007e693:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007e696
uuid_000000000007e694:
	movq -24(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007e696:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007e699
uuid_000000000007e697:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007e699:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007e69c
uuid_000000000007e69a:
	movq -24(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007e69c:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007e69f
uuid_000000000007e69d:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007e69f:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -24(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6c4
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	jmp uuid_000000000007e6c6
uuid_000000000007e6c4:
	pushq -32(%rbp)
	push %RBP
	pushq -128(%rbp)
	mov -144(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6c1
	push %RBP
	pushq -128(%rbp)
	mov -160(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6be
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e6bd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e6c0
uuid_000000000007e6be:
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6a9
	jmp uuid_000000000007e6ab
uuid_000000000007e6a9:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6a6
	jmp uuid_000000000007e6a8
uuid_000000000007e6a6:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e6a3
	jmp uuid_000000000007e6a5
uuid_000000000007e6a3:
	movb $1, -224(%rbp)
uuid_000000000007e6a5:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007e6a8:
	mov -240(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007e6ab:
	mov -232(%RBP),%RSP
	add $-296, %RSP
	mov -224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6ba
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6af
	jmp uuid_000000000007e6b1
uuid_000000000007e6af:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e6ac
	jmp uuid_000000000007e6ae
uuid_000000000007e6ac:
	movb $1, -336(%rbp)
uuid_000000000007e6ae:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007e6b1:
	mov -344(%RBP),%RSP
	add $-360, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6b7
	push %RBP
	jmp uuid_000000000007e6b4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e6b3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e6b6
uuid_000000000007e6b4:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e6b2
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007e6b6:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007e6b9
uuid_000000000007e6b7:
	pushq -360(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-comma-sep : Arrow<String,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007e6b9:
	mov -304(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_000000000007e6bc
uuid_000000000007e6ba:
	pushq -296(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-comma-sep : Arrow<String,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007e6bc:
	mov -192(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007e6c0:
	mov -152(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007e6c3
uuid_000000000007e6c1:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e6a0
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbad
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007e6a2
uuid_000000000007e6a0:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbad
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007e6a2:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007e6c3:
	mov -136(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007e6c6:
	mov -120(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007e6c9
uuid_000000000007e6c7:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e68d
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e68a
	push %RBP
	pushq -96(%rbp)
	jmp uuid_000000000007e687
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e686
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e689
uuid_000000000007e687:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007e689:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007e68c
uuid_000000000007e68a:
	movb $60, -32(%rbp)
	movq $1, -24(%rbp)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e683
	jmp uuid_000000000007e685
uuid_000000000007e683:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007b785
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e680
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e67d
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007e67f
uuid_000000000007e67d:
	pushq $0
	pushq -144(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007e67f:
	mov -160(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007e682
uuid_000000000007e680:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007e682:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007e685:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007e68c:
	mov -120(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007e68f
uuid_000000000007e68d:
	movb $91, -32(%rbp)
	movq $1, -24(%rbp)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e676
	jmp uuid_000000000007e678
uuid_000000000007e676:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007b785
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e673
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e670
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007e672
uuid_000000000007e670:
	pushq $0
	pushq -128(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007e672:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007e675
uuid_000000000007e673:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007e675:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007e678:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007e68f:
	mov -104(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007e6c9:
	mov -88(%RBP),%RSP
	add $-136, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e6ca
uuid_000000000007e6cc:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e6d7
	jmp uuid_000000000007e6d9
uuid_000000000007e6d7:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007b785
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e6d4
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e6d1
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007e6d3
uuid_000000000007e6d1:
	pushq $0
	pushq -96(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007e6d3:
	mov -112(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007e6d6
uuid_000000000007e6d4:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007e6d6:
	mov -104(%RBP),%RSP
	add $-104, %RSP
uuid_000000000007e6d9:
	mov -88(%RBP),%RSP
	add $-104, %RSP
	subq $24, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_type_CL_ArrowTypeString:
	pushq $0
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e6da
	jmp uuid_000000000007e6dc
uuid_000000000007e6da:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007b96d
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	movb $1, -24(%rbp)
uuid_000000000007e6dc:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007e703:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007e704
	jmp uuid_000000000007e705
uuid_000000000007e704:
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %R13B
	mov $60, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6ea
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %R13B
	mov $62, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6e7
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %R13B
	mov $91, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6e4
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %R13B
	mov $93, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6e1
	push %RBP
	jmp uuid_000000000007e6de
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e6dd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e6e0
uuid_000000000007e6de:
uuid_000000000007e6e0:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007e6e3
uuid_000000000007e6e1:
	movq -40(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007e6e3:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007e6e6
uuid_000000000007e6e4:
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007e6e6:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007e6e9
uuid_000000000007e6e7:
	movq -40(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007e6e9:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007e6ec
uuid_000000000007e6ea:
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007e6ec:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e700
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007e702
uuid_000000000007e700:
	push %RBP
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %R13B
	mov $43, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6fd
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -8(%RBP), %RAX
	mov 0(%RAX), %AL
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007e6ff
uuid_000000000007e6fd:
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6f3
	jmp uuid_000000000007e6f5
uuid_000000000007e6f3:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e6f0
	jmp uuid_000000000007e6f2
uuid_000000000007e6f0:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e6ed
	jmp uuid_000000000007e6ef
uuid_000000000007e6ed:
	movb $1, -192(%rbp)
uuid_000000000007e6ef:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007e6f2:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007e6f5:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e6fa
	push %RBP
	jmp uuid_000000000007e6f7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e6f6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e6f9
uuid_000000000007e6f7:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007e6f9:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007e6fc
uuid_000000000007e6fa:
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -288(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -72(%rbp)
uuid_000000000007e6fc:
	mov -160(%RBP),%RSP
	add $-288, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007e6ff:
	mov -128(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007e702:
	mov -120(%RBP),%RSP
	add $-288, %RSP
	mov -8(%RBP), %RAX
	inc %RAX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e703
uuid_000000000007e705:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e716
	jmp uuid_000000000007e718
uuid_000000000007e716:
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e70c
	jmp uuid_000000000007e70e
uuid_000000000007e70c:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e709
	jmp uuid_000000000007e70b
uuid_000000000007e709:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e706
	jmp uuid_000000000007e708
uuid_000000000007e706:
	movb $1, -160(%rbp)
uuid_000000000007e708:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007e70b:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007e70e:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e713
	push %RBP
	jmp uuid_000000000007e710
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e70f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e712
uuid_000000000007e710:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007e712:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007e715
uuid_000000000007e713:
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -256(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -248(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -72(%rbp)
uuid_000000000007e715:
	mov -128(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007e718:
	mov -96(%RBP),%RSP
	add $-256, %RSP
	push %RBP
	mov -24(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e71d
	jmp uuid_000000000007e71f
uuid_000000000007e71d:
	pushq $uuid_000000000007b96d
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007e71f:
	mov -264(%RBP),%RSP
	add $-264, %RSP
	subq $24, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_unexpect_CL_ArrowNilConsListTokenString:
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
parse_CL_ArrowNilNil:
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
#call function parse-toplevel : Arrow<List<Token>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call parse_SB_toplevel_CL_ArrowASTListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
remove_SB_parens_CL_ArrowListTokenListToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e73a
	jmp uuid_000000000007e73c
uuid_000000000007e73a:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e737
	jmp uuid_000000000007e739
uuid_000000000007e737:
	push %RBP
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e731
	jmp uuid_000000000007e733
uuid_000000000007e731:
	push %RBP
	jmp uuid_000000000007e72e
	jmp uuid_000000000007e730
uuid_000000000007e72e:
	push %RBP
	jmp uuid_000000000007e72b
	jmp uuid_000000000007e72d
uuid_000000000007e72b:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $uuid_000000000007b5d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e728
	jmp uuid_000000000007e72a
uuid_000000000007e728:
	movb $1, -400(%rbp)
uuid_000000000007e72a:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007e72d:
	mov -424(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007e730:
	mov -416(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007e733:
	mov -408(%RBP),%RSP
	add $-440, %RSP
	mov -400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e734
	jmp uuid_000000000007e736
uuid_000000000007e734:
	movb $1, -240(%rbp)
uuid_000000000007e736:
	mov -336(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007e739:
	mov -256(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007e73c:
	mov -248(%RBP),%RSP
	add $-440, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e768
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e767
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e76a
uuid_000000000007e768:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007e764:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e765
	jmp uuid_000000000007e766
uuid_000000000007e765:
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e751
	jmp uuid_000000000007e753
uuid_000000000007e751:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e74e
	jmp uuid_000000000007e750
uuid_000000000007e74e:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e748
	jmp uuid_000000000007e74a
uuid_000000000007e748:
	push %RBP
	jmp uuid_000000000007e745
	jmp uuid_000000000007e747
uuid_000000000007e745:
	push %RBP
	jmp uuid_000000000007e742
	jmp uuid_000000000007e744
uuid_000000000007e742:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e73f
	jmp uuid_000000000007e741
uuid_000000000007e73f:
	movb $1, -832(%rbp)
uuid_000000000007e741:
	mov -864(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e744:
	mov -856(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e747:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e74a:
	mov -840(%RBP),%RSP
	add $-872, %RSP
	mov -832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e74b
	jmp uuid_000000000007e74d
uuid_000000000007e74b:
	movb $1, -672(%rbp)
uuid_000000000007e74d:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e750:
	mov -688(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007e753:
	mov -680(%RBP),%RSP
	add $-872, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e761
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e75a
	jmp uuid_000000000007e75c
uuid_000000000007e75a:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e757
	jmp uuid_000000000007e759
uuid_000000000007e757:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007e754
	jmp uuid_000000000007e756
uuid_000000000007e754:
	movb $1, -960(%rbp)
uuid_000000000007e756:
	mov -1056(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007e759:
	mov -976(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007e75c:
	mov -968(%RBP),%RSP
	add $-1112, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e75e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e75d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e760
uuid_000000000007e75e:
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	movq -1048(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -264(%rbp)
uuid_000000000007e760:
	mov -880(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007e763
uuid_000000000007e761:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
uuid_000000000007e763:
	mov -592(%RBP),%RSP
	add $-872, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e764
uuid_000000000007e766:
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e76a:
	mov -160(%RBP),%RSP
	add $-512, %RSP
	subq $72, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
take_SB_one_SB_expr_CL_ArrowTupleListTokenListTokenListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
uuid_000000000007e7bb:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e7bc
	jmp uuid_000000000007e7bd
uuid_000000000007e7bc:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e783
	jmp uuid_000000000007e785
uuid_000000000007e783:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e780
	jmp uuid_000000000007e782
uuid_000000000007e780:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e77a
	jmp uuid_000000000007e77c
uuid_000000000007e77a:
	push %RBP
	jmp uuid_000000000007e777
	jmp uuid_000000000007e779
uuid_000000000007e777:
	push %RBP
	jmp uuid_000000000007e774
	jmp uuid_000000000007e776
uuid_000000000007e774:
	push %RBP
	mov -496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007b7e4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e771
	jmp uuid_000000000007e773
uuid_000000000007e771:
	movb $1, -552(%rbp)
uuid_000000000007e773:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007e776:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007e779:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007e77c:
	mov -560(%RBP),%RSP
	add $-592, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e77d
	jmp uuid_000000000007e77f
uuid_000000000007e77d:
	movb $1, -392(%rbp)
uuid_000000000007e77f:
	mov -488(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007e782:
	mov -408(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007e785:
	mov -400(%RBP),%RSP
	add $-592, %RSP
	mov -392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7b8
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e78f
	jmp uuid_000000000007e791
uuid_000000000007e78f:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e78c
	jmp uuid_000000000007e78e
uuid_000000000007e78c:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	jmp uuid_000000000007e789
	jmp uuid_000000000007e78b
uuid_000000000007e789:
	movb $1, -680(%rbp)
uuid_000000000007e78b:
	mov -776(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007e78e:
	mov -696(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007e791:
	mov -688(%RBP),%RSP
	add $-832, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7b5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e7b4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e7b7
uuid_000000000007e7b5:
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	push %RBP
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e79b
	jmp uuid_000000000007e79d
uuid_000000000007e79b:
	push %RBP
	jmp uuid_000000000007e798
	jmp uuid_000000000007e79a
uuid_000000000007e798:
	push %RBP
	jmp uuid_000000000007e795
	jmp uuid_000000000007e797
uuid_000000000007e795:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq $uuid_000000000007b5d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e792
	jmp uuid_000000000007e794
uuid_000000000007e792:
	movb $1, -960(%rbp)
uuid_000000000007e794:
	mov -992(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007e797:
	mov -984(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007e79a:
	mov -976(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007e79d:
	mov -968(%RBP),%RSP
	add $-1000, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7b1
	push %RBP
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7a7
	jmp uuid_000000000007e7a9
uuid_000000000007e7a7:
	push %RBP
	jmp uuid_000000000007e7a4
	jmp uuid_000000000007e7a6
uuid_000000000007e7a4:
	push %RBP
	jmp uuid_000000000007e7a1
	jmp uuid_000000000007e7a3
uuid_000000000007e7a1:
	push %RBP
	mov -1016(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $uuid_000000000007b5da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e79e
	jmp uuid_000000000007e7a0
uuid_000000000007e79e:
	movb $1, -1072(%rbp)
uuid_000000000007e7a0:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007e7a3:
	mov -1096(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007e7a6:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007e7a9:
	mov -1080(%RBP),%RSP
	add $-1112, %RSP
	mov -1072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7ae
	push %RBP
	jmp uuid_000000000007e7ab
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e7aa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e7ad
uuid_000000000007e7ab:
uuid_000000000007e7ad:
	mov -1120(%RBP),%RSP
	add $-1120, %RSP
	jmp uuid_000000000007e7b0
uuid_000000000007e7ae:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -232(%rbp)
uuid_000000000007e7b0:
	mov -1008(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007e7b3
uuid_000000000007e7b1:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -232(%rbp)
uuid_000000000007e7b3:
	mov -896(%RBP),%RSP
	add $-1000, %RSP
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -768(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007e7b7:
	mov -600(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007e7ba
uuid_000000000007e7b8:
	push %RBP
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e786
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head : Arrow<List<Token>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call head_CL_ArrowTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -480(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007e788
uuid_000000000007e786:
	movq -72(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -48(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -24(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007e788:
	mov -600(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007e7ba:
	mov -312(%RBP),%RSP
	add $-600, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e7bb
uuid_000000000007e7bd:
#call function remove-parens : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call remove_SB_parens_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	subq %R14, %RAX
	movq %RAX, %RAX
	movq $8, %R14
	subq %R14, %RAX
	push %RAX
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -352(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc57
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc59
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc5a
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc58
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $uuid_000000000007e7be
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
	popq -648(%RBP)
	popq -640(%RBP)
	popq -632(%RBP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $uuid_000000000007bc5b
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -336(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	subq $152, %rsp
	pushq -880(%rbp)
	pushq -872(%rbp)
	pushq -864(%rbp)
	pushq -856(%rbp)
	pushq -848(%rbp)
	pushq -840(%rbp)
	pushq -832(%rbp)
	pushq -824(%rbp)
	pushq -816(%rbp)
	pushq -808(%rbp)
	pushq -800(%rbp)
	pushq -792(%rbp)
	pushq -784(%rbp)
	pushq -776(%rbp)
	pushq -768(%rbp)
	pushq -760(%rbp)
	pushq -752(%rbp)
	pushq -744(%rbp)
	pushq -736(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $344, %rsp
	ret
compile_SB_declare_SB_cstring_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %r15
	pushq 0(%r15)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e7da
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $uuid_000000000007b6a7
uuid_000000000007e7d2:
#call function non-zero : Arrow<StringStringList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64StringStringList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e7d3
	jmp uuid_000000000007e7d4
uuid_000000000007e7d3:
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7c8
	jmp uuid_000000000007e7ca
uuid_000000000007e7c8:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e7c5
	jmp uuid_000000000007e7c7
uuid_000000000007e7c5:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e7c2
	jmp uuid_000000000007e7c4
uuid_000000000007e7c2:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e7bf
	jmp uuid_000000000007e7c1
uuid_000000000007e7bf:
	movb $1, -296(%rbp)
uuid_000000000007e7c1:
	mov -344(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e7c4:
	mov -328(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e7c7:
	mov -312(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007e7ca:
	mov -304(%RBP),%RSP
	add $-376, %RSP
	mov -296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7cf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e7ce
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e7d1
uuid_000000000007e7cf:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e7cb
	movq -376(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -184(%rbp)
	jmp uuid_000000000007e7cd
uuid_000000000007e7cb:
	movq -320(%rbp), %r15
	movq %r15, -216(%rbp)
	mov -320(%rbp), %r15
	mov %r15, -216(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007e7cd:
	mov -384(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007e7d1:
	mov -256(%RBP),%RSP
	add $-384, %RSP
	add $32, %rsp
	add $32, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $32, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007e7d2
uuid_000000000007e7d4:
	push %RBP
	mov -216(%RBP), %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007e7d7
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -216(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -216(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007e7d5
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function escape-literal : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call escape_SB_literal_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007e7d6
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<StringStringList,Array<StringStringList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_StringStringListStringStringList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -216(%rbp)
	pushq $0
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	jmp uuid_000000000007e7d9
uuid_000000000007e7d7:
uuid_000000000007e7d9:
	mov -224(%RBP),%RSP
	add $-224, %RSP
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007da57
	pushq $0
	pushq -216(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007e7dc
uuid_000000000007e7da:
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007da57
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007e7dc:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e80d
	jmp uuid_000000000007e80f
uuid_000000000007e80d:
	push %RBP
	mov -456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e804
	jmp uuid_000000000007e806
uuid_000000000007e804:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -656(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7f2
	jmp uuid_000000000007e7f4
uuid_000000000007e7f2:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7e0
	jmp uuid_000000000007e7e2
uuid_000000000007e7e0:
	push %RBP
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007e7dd
	jmp uuid_000000000007e7df
uuid_000000000007e7dd:
	movb $1, -760(%rbp)
uuid_000000000007e7df:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e7e2:
	mov -768(%RBP),%RSP
	add $-800, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7ef
	jmp uuid_000000000007e7f1
uuid_000000000007e7ef:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7e9
	jmp uuid_000000000007e7eb
uuid_000000000007e7e9:
	push %RBP
	jmp uuid_000000000007e7e6
	jmp uuid_000000000007e7e8
uuid_000000000007e7e6:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e7e3
	jmp uuid_000000000007e7e5
uuid_000000000007e7e3:
	movb $1, -888(%rbp)
uuid_000000000007e7e5:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007e7e8:
	mov -904(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007e7eb:
	mov -896(%RBP),%RSP
	add $-920, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7ec
	jmp uuid_000000000007e7ee
uuid_000000000007e7ec:
	movb $1, -664(%rbp)
uuid_000000000007e7ee:
	mov -808(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007e7f1:
	mov -680(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007e7f4:
	mov -672(%RBP),%RSP
	add $-920, %RSP
	mov -664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e801
	jmp uuid_000000000007e803
uuid_000000000007e801:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e7fb
	jmp uuid_000000000007e7fd
uuid_000000000007e7fb:
	push %RBP
	jmp uuid_000000000007e7f8
	jmp uuid_000000000007e7fa
uuid_000000000007e7f8:
	push %RBP
	mov -936(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e7f5
	jmp uuid_000000000007e7f7
uuid_000000000007e7f5:
	movb $1, -1008(%rbp)
uuid_000000000007e7f7:
	mov -1032(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e7fa:
	mov -1024(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e7fd:
	mov -1016(%RBP),%RSP
	add $-1040, %RSP
	mov -1008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e7fe
	jmp uuid_000000000007e800
uuid_000000000007e7fe:
	movb $1, -568(%rbp)
uuid_000000000007e800:
	mov -928(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e803:
	mov -584(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007e806:
	mov -576(%RBP),%RSP
	add $-1040, %RSP
	mov -568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e80a
	jmp uuid_000000000007e80c
uuid_000000000007e80a:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e807
	jmp uuid_000000000007e809
uuid_000000000007e807:
	movb $1, -472(%rbp)
uuid_000000000007e809:
	mov -1048(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007e80c:
	mov -488(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007e80f:
	mov -480(%RBP),%RSP
	add $-1120, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e844
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e83a
	jmp uuid_000000000007e83c
uuid_000000000007e83a:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e828
	jmp uuid_000000000007e82a
uuid_000000000007e828:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e816
	jmp uuid_000000000007e818
uuid_000000000007e816:
	push %RBP
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007e813
	jmp uuid_000000000007e815
uuid_000000000007e813:
	movb $1, -1400(%rbp)
uuid_000000000007e815:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007e818:
	mov -1408(%RBP),%RSP
	add $-1440, %RSP
	mov -1400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e825
	jmp uuid_000000000007e827
uuid_000000000007e825:
	push %RBP
	mov -1280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e81f
	jmp uuid_000000000007e821
uuid_000000000007e81f:
	push %RBP
	jmp uuid_000000000007e81c
	jmp uuid_000000000007e81e
uuid_000000000007e81c:
	push %RBP
	mov -1456(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e819
	jmp uuid_000000000007e81b
uuid_000000000007e819:
	movb $1, -1528(%rbp)
uuid_000000000007e81b:
	mov -1552(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007e81e:
	mov -1544(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007e821:
	mov -1536(%RBP),%RSP
	add $-1560, %RSP
	mov -1528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e822
	jmp uuid_000000000007e824
uuid_000000000007e822:
	movb $1, -1304(%rbp)
uuid_000000000007e824:
	mov -1448(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007e827:
	mov -1320(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007e82a:
	mov -1312(%RBP),%RSP
	add $-1560, %RSP
	mov -1304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e837
	jmp uuid_000000000007e839
uuid_000000000007e837:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e831
	jmp uuid_000000000007e833
uuid_000000000007e831:
	push %RBP
	jmp uuid_000000000007e82e
	jmp uuid_000000000007e830
uuid_000000000007e82e:
	push %RBP
	mov -1576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e82b
	jmp uuid_000000000007e82d
uuid_000000000007e82b:
	movb $1, -1648(%rbp)
uuid_000000000007e82d:
	mov -1672(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007e830:
	mov -1664(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007e833:
	mov -1656(%RBP),%RSP
	add $-1680, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e834
	jmp uuid_000000000007e836
uuid_000000000007e834:
	movb $1, -1208(%rbp)
uuid_000000000007e836:
	mov -1568(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007e839:
	mov -1224(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007e83c:
	mov -1216(%RBP),%RSP
	add $-1680, %RSP
	mov -1208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e841
	push %RBP
	jmp uuid_000000000007e83e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e83d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e840
uuid_000000000007e83e:
uuid_000000000007e840:
	mov -1688(%RBP),%RSP
	add $-1688, %RSP
	jmp uuid_000000000007e843
uuid_000000000007e841:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c0bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -1688(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -1560(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007e843:
	mov -1128(%RBP),%RSP
	add $-1696, %RSP
	jmp uuid_000000000007e846
uuid_000000000007e844:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e810
	jmp uuid_000000000007e812
uuid_000000000007e810:
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function compile-destructure-args : Arrow<Cons<Cons<Cons<Type,FContext>,AST>,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -1160(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c0bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -920(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007e812:
	mov -1128(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007e846:
	mov -392(%RBP),%RSP
	add $-1184, %RSP
	subq $200, %rsp
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
compile_SB_expr_SB_direct_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaa9
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaa6
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e84d
	jmp uuid_000000000007e84f
uuid_000000000007e84d:
	push %RBP
	jmp uuid_000000000007e84a
	jmp uuid_000000000007e84c
uuid_000000000007e84a:
	push %RBP
	mov -696(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e847
	jmp uuid_000000000007e849
uuid_000000000007e847:
	movb $1, -768(%rbp)
uuid_000000000007e849:
	mov -792(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e84c:
	mov -784(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007e84f:
	mov -776(%RBP),%RSP
	add $-800, %RSP
	mov -768(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eaa3
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e856
	jmp uuid_000000000007e858
uuid_000000000007e856:
	push %RBP
	jmp uuid_000000000007e853
	jmp uuid_000000000007e855
uuid_000000000007e853:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e850
	jmp uuid_000000000007e852
uuid_000000000007e850:
	movb $1, -888(%rbp)
uuid_000000000007e852:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007e855:
	mov -904(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007e858:
	mov -896(%RBP),%RSP
	add $-920, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eaa0
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8be
	jmp uuid_000000000007e8c0
uuid_000000000007e8be:
	push %RBP
	mov -992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1096(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8ac
	jmp uuid_000000000007e8ae
uuid_000000000007e8ac:
	push %RBP
	mov -1088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8a3
	jmp uuid_000000000007e8a5
uuid_000000000007e8a3:
	push %RBP
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	jmp uuid_000000000007e8a0
	jmp uuid_000000000007e8a2
uuid_000000000007e8a0:
	movb $1, -1200(%rbp)
uuid_000000000007e8a2:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007e8a5:
	mov -1208(%RBP),%RSP
	add $-1240, %RSP
	mov -1200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8a9
	jmp uuid_000000000007e8ab
uuid_000000000007e8a9:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e8a6
	jmp uuid_000000000007e8a8
uuid_000000000007e8a6:
	movb $1, -1104(%rbp)
uuid_000000000007e8a8:
	mov -1248(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007e8ab:
	mov -1120(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007e8ae:
	mov -1112(%RBP),%RSP
	add $-1320, %RSP
	mov -1104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8bb
	jmp uuid_000000000007e8bd
uuid_000000000007e8bb:
	push %RBP
	mov -984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8b5
	jmp uuid_000000000007e8b7
uuid_000000000007e8b5:
	push %RBP
	jmp uuid_000000000007e8b2
	jmp uuid_000000000007e8b4
uuid_000000000007e8b2:
	push %RBP
	mov -1336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e8af
	jmp uuid_000000000007e8b1
uuid_000000000007e8af:
	movb $1, -1408(%rbp)
uuid_000000000007e8b1:
	mov -1432(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007e8b4:
	mov -1424(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007e8b7:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
	mov -1408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8b8
	jmp uuid_000000000007e8ba
uuid_000000000007e8b8:
	movb $1, -1008(%rbp)
uuid_000000000007e8ba:
	mov -1328(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007e8bd:
	mov -1024(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007e8c0:
	mov -1016(%RBP),%RSP
	add $-1440, %RSP
	mov -1008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea9d
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8d9
	jmp uuid_000000000007e8db
uuid_000000000007e8d9:
	push %RBP
	mov -1512(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8c7
	jmp uuid_000000000007e8c9
uuid_000000000007e8c7:
	push %RBP
	jmp uuid_000000000007e8c4
	jmp uuid_000000000007e8c6
uuid_000000000007e8c4:
	push %RBP
	mov -1552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e8c1
	jmp uuid_000000000007e8c3
uuid_000000000007e8c1:
	movb $1, -1624(%rbp)
uuid_000000000007e8c3:
	mov -1648(%RBP),%RSP
	add $-1656, %RSP
uuid_000000000007e8c6:
	mov -1640(%RBP),%RSP
	add $-1656, %RSP
uuid_000000000007e8c9:
	mov -1632(%RBP),%RSP
	add $-1656, %RSP
	mov -1624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8d6
	jmp uuid_000000000007e8d8
uuid_000000000007e8d6:
	push %RBP
	mov -1504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8d0
	jmp uuid_000000000007e8d2
uuid_000000000007e8d0:
	push %RBP
	jmp uuid_000000000007e8cd
	jmp uuid_000000000007e8cf
uuid_000000000007e8cd:
	push %RBP
	mov -1672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $uuid_000000000007baba
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e8ca
	jmp uuid_000000000007e8cc
uuid_000000000007e8ca:
	movb $1, -1744(%rbp)
uuid_000000000007e8cc:
	mov -1768(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007e8cf:
	mov -1760(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007e8d2:
	mov -1752(%RBP),%RSP
	add $-1776, %RSP
	mov -1744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8d3
	jmp uuid_000000000007e8d5
uuid_000000000007e8d3:
	movb $1, -1528(%rbp)
uuid_000000000007e8d5:
	mov -1664(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007e8d8:
	mov -1544(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007e8db:
	mov -1536(%RBP),%RSP
	add $-1776, %RSP
	mov -1528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea9a
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1856(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8f4
	jmp uuid_000000000007e8f6
uuid_000000000007e8f4:
	push %RBP
	mov -1848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1952(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8e2
	jmp uuid_000000000007e8e4
uuid_000000000007e8e2:
	push %RBP
	jmp uuid_000000000007e8df
	jmp uuid_000000000007e8e1
uuid_000000000007e8df:
	push %RBP
	mov -1888(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e8dc
	jmp uuid_000000000007e8de
uuid_000000000007e8dc:
	movb $1, -1960(%rbp)
uuid_000000000007e8de:
	mov -1984(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007e8e1:
	mov -1976(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007e8e4:
	mov -1968(%RBP),%RSP
	add $-1992, %RSP
	mov -1960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8f1
	jmp uuid_000000000007e8f3
uuid_000000000007e8f1:
	push %RBP
	mov -1840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2072(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8eb
	jmp uuid_000000000007e8ed
uuid_000000000007e8eb:
	push %RBP
	jmp uuid_000000000007e8e8
	jmp uuid_000000000007e8ea
uuid_000000000007e8e8:
	push %RBP
	mov -2008(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $uuid_000000000007bad7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e8e5
	jmp uuid_000000000007e8e7
uuid_000000000007e8e5:
	movb $1, -2080(%rbp)
uuid_000000000007e8e7:
	mov -2104(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e8ea:
	mov -2096(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e8ed:
	mov -2088(%RBP),%RSP
	add $-2112, %RSP
	mov -2080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e8ee
	jmp uuid_000000000007e8f0
uuid_000000000007e8ee:
	movb $1, -1864(%rbp)
uuid_000000000007e8f0:
	mov -2000(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e8f3:
	mov -1880(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007e8f6:
	mov -1872(%RBP),%RSP
	add $-2112, %RSP
	mov -1864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea97
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e906
	jmp uuid_000000000007e908
uuid_000000000007e906:
	push %RBP
	mov -2184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e903
	jmp uuid_000000000007e905
uuid_000000000007e903:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e8fd
	jmp uuid_000000000007e8ff
uuid_000000000007e8fd:
	push %RBP
	jmp uuid_000000000007e8fa
	jmp uuid_000000000007e8fc
uuid_000000000007e8fa:
	push %RBP
	mov -2304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2408(%rbp)
	pushq $uuid_000000000007bb87
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e8f7
	jmp uuid_000000000007e8f9
uuid_000000000007e8f7:
	movb $1, -2376(%rbp)
uuid_000000000007e8f9:
	mov -2400(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007e8fc:
	mov -2392(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007e8ff:
	mov -2384(%RBP),%RSP
	add $-2408, %RSP
	mov -2376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e900
	jmp uuid_000000000007e902
uuid_000000000007e900:
	movb $1, -2200(%rbp)
uuid_000000000007e902:
	mov -2296(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007e905:
	mov -2216(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007e908:
	mov -2208(%RBP),%RSP
	add $-2408, %RSP
	mov -2200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea94
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e918
	jmp uuid_000000000007e91a
uuid_000000000007e918:
	push %RBP
	mov -2480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e915
	jmp uuid_000000000007e917
uuid_000000000007e915:
	push %RBP
	mov -2472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e90f
	jmp uuid_000000000007e911
uuid_000000000007e90f:
	push %RBP
	jmp uuid_000000000007e90c
	jmp uuid_000000000007e90e
uuid_000000000007e90c:
	push %RBP
	mov -2600(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2704(%rbp)
	pushq $uuid_000000000007bb9a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e909
	jmp uuid_000000000007e90b
uuid_000000000007e909:
	movb $1, -2672(%rbp)
uuid_000000000007e90b:
	mov -2696(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007e90e:
	mov -2688(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007e911:
	mov -2680(%RBP),%RSP
	add $-2704, %RSP
	mov -2672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e912
	jmp uuid_000000000007e914
uuid_000000000007e912:
	movb $1, -2496(%rbp)
uuid_000000000007e914:
	mov -2592(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007e917:
	mov -2512(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007e91a:
	mov -2504(%RBP),%RSP
	add $-2704, %RSP
	mov -2496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea91
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e970
	jmp uuid_000000000007e972
uuid_000000000007e970:
	push %RBP
	mov -2776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2880(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e95e
	jmp uuid_000000000007e960
uuid_000000000007e95e:
	push %RBP
	pushq -2856(%RBP)
	pushq -2864(%RBP)
	pushq -2872(%RBP)
	jmp uuid_000000000007e95b
	jmp uuid_000000000007e95d
uuid_000000000007e95b:
	movb $1, -2888(%rbp)
uuid_000000000007e95d:
	mov -2904(%RBP),%RSP
	add $-2928, %RSP
uuid_000000000007e960:
	mov -2896(%RBP),%RSP
	add $-2928, %RSP
	mov -2888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e96d
	jmp uuid_000000000007e96f
uuid_000000000007e96d:
	push %RBP
	mov -2768(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3008(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e967
	jmp uuid_000000000007e969
uuid_000000000007e967:
	push %RBP
	jmp uuid_000000000007e964
	jmp uuid_000000000007e966
uuid_000000000007e964:
	push %RBP
	mov -2944(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq $uuid_000000000007bb66
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e961
	jmp uuid_000000000007e963
uuid_000000000007e961:
	movb $1, -3016(%rbp)
uuid_000000000007e963:
	mov -3040(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007e966:
	mov -3032(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007e969:
	mov -3024(%RBP),%RSP
	add $-3048, %RSP
	mov -3016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e96a
	jmp uuid_000000000007e96c
uuid_000000000007e96a:
	movb $1, -2792(%rbp)
uuid_000000000007e96c:
	mov -2936(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007e96f:
	mov -2808(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007e972:
	mov -2800(%RBP),%RSP
	add $-3048, %RSP
	mov -2792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea8e
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -3128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e991
	jmp uuid_000000000007e993
uuid_000000000007e991:
	push %RBP
	mov -3120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3224(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e97f
	jmp uuid_000000000007e981
uuid_000000000007e97f:
	push %RBP
	mov -3216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e976
	jmp uuid_000000000007e978
uuid_000000000007e976:
	push %RBP
	pushq -3296(%RBP)
	pushq -3304(%RBP)
	pushq -3312(%RBP)
	jmp uuid_000000000007e973
	jmp uuid_000000000007e975
uuid_000000000007e973:
	movb $1, -3328(%rbp)
uuid_000000000007e975:
	mov -3344(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007e978:
	mov -3336(%RBP),%RSP
	add $-3368, %RSP
	mov -3328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e97c
	jmp uuid_000000000007e97e
uuid_000000000007e97c:
	push %RBP
	mov -3208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e979
	jmp uuid_000000000007e97b
uuid_000000000007e979:
	movb $1, -3232(%rbp)
uuid_000000000007e97b:
	mov -3376(%RBP),%RSP
	add $-3448, %RSP
uuid_000000000007e97e:
	mov -3248(%RBP),%RSP
	add $-3448, %RSP
uuid_000000000007e981:
	mov -3240(%RBP),%RSP
	add $-3448, %RSP
	mov -3232(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e98e
	jmp uuid_000000000007e990
uuid_000000000007e98e:
	push %RBP
	mov -3112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3528(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e988
	jmp uuid_000000000007e98a
uuid_000000000007e988:
	push %RBP
	jmp uuid_000000000007e985
	jmp uuid_000000000007e987
uuid_000000000007e985:
	push %RBP
	mov -3464(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3568(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e982
	jmp uuid_000000000007e984
uuid_000000000007e982:
	movb $1, -3536(%rbp)
uuid_000000000007e984:
	mov -3560(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007e987:
	mov -3552(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007e98a:
	mov -3544(%RBP),%RSP
	add $-3568, %RSP
	mov -3536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e98b
	jmp uuid_000000000007e98d
uuid_000000000007e98b:
	movb $1, -3136(%rbp)
uuid_000000000007e98d:
	mov -3456(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007e990:
	mov -3152(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007e993:
	mov -3144(%RBP),%RSP
	add $-3568, %RSP
	mov -3136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea8b
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -3648(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9b5
	jmp uuid_000000000007e9b7
uuid_000000000007e9b5:
	push %RBP
	mov -3640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e9b2
	jmp uuid_000000000007e9b4
uuid_000000000007e9b2:
	push %RBP
	mov -3632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3824(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9ac
	jmp uuid_000000000007e9ae
uuid_000000000007e9ac:
	push %RBP
	mov -3816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e9a9
	jmp uuid_000000000007e9ab
uuid_000000000007e9a9:
	push %RBP
	mov -3808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4000(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9a3
	jmp uuid_000000000007e9a5
uuid_000000000007e9a3:
	push %RBP
	mov -3992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e9a0
	jmp uuid_000000000007e9a2
uuid_000000000007e9a0:
	push %RBP
	mov -3984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4176(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e99a
	jmp uuid_000000000007e99c
uuid_000000000007e99a:
	push %RBP
	jmp uuid_000000000007e997
	jmp uuid_000000000007e999
uuid_000000000007e997:
	push %RBP
	mov -4112(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4216(%rbp)
	pushq $uuid_000000000007baea
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e994
	jmp uuid_000000000007e996
uuid_000000000007e994:
	movb $1, -4184(%rbp)
uuid_000000000007e996:
	mov -4208(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e999:
	mov -4200(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e99c:
	mov -4192(%RBP),%RSP
	add $-4216, %RSP
	mov -4184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e99d
	jmp uuid_000000000007e99f
uuid_000000000007e99d:
	movb $1, -4008(%rbp)
uuid_000000000007e99f:
	mov -4104(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e9a2:
	mov -4024(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e9a5:
	mov -4016(%RBP),%RSP
	add $-4216, %RSP
	mov -4008(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9a6
	jmp uuid_000000000007e9a8
uuid_000000000007e9a6:
	movb $1, -3832(%rbp)
uuid_000000000007e9a8:
	mov -3928(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e9ab:
	mov -3848(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e9ae:
	mov -3840(%RBP),%RSP
	add $-4216, %RSP
	mov -3832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9af
	jmp uuid_000000000007e9b1
uuid_000000000007e9af:
	movb $1, -3656(%rbp)
uuid_000000000007e9b1:
	mov -3752(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e9b4:
	mov -3672(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007e9b7:
	mov -3664(%RBP),%RSP
	add $-4216, %RSP
	mov -3656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea88
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -4296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9dd
	jmp uuid_000000000007e9df
uuid_000000000007e9dd:
	push %RBP
	mov -4288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e9da
	jmp uuid_000000000007e9dc
uuid_000000000007e9da:
	push %RBP
	mov -4280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9d4
	jmp uuid_000000000007e9d6
uuid_000000000007e9d4:
	push %RBP
	pushq -4448(%RBP)
	pushq -4456(%RBP)
	pushq -4464(%RBP)
	jmp uuid_000000000007e9d1
	jmp uuid_000000000007e9d3
uuid_000000000007e9d1:
	push %RBP
	mov -4440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4600(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9ce
	jmp uuid_000000000007e9d0
uuid_000000000007e9ce:
	push %RBP
	mov -4432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq $0
	push %RBP
	mov -4752(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9c8
	jmp uuid_000000000007e9ca
uuid_000000000007e9c8:
	push %RBP
	jmp uuid_000000000007e9c5
	jmp uuid_000000000007e9c7
uuid_000000000007e9c5:
	push %RBP
	mov -4688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007e9c2
	jmp uuid_000000000007e9c4
uuid_000000000007e9c2:
	movb $1, -4760(%rbp)
uuid_000000000007e9c4:
	mov -4784(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007e9c7:
	mov -4776(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007e9ca:
	mov -4768(%RBP),%RSP
	add $-4792, %RSP
	mov -4760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9cb
	jmp uuid_000000000007e9cd
uuid_000000000007e9cb:
	movb $1, -4480(%rbp)
uuid_000000000007e9cd:
	mov -4608(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007e9d0:
	mov -4528(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007e9d3:
	mov -4496(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007e9d6:
	mov -4488(%RBP),%RSP
	add $-4792, %RSP
	mov -4480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9d7
	jmp uuid_000000000007e9d9
uuid_000000000007e9d7:
	movb $1, -4304(%rbp)
uuid_000000000007e9d9:
	mov -4400(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007e9dc:
	mov -4320(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007e9df:
	mov -4312(%RBP),%RSP
	add $-4792, %RSP
	mov -4304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea85
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -4872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea05
	jmp uuid_000000000007ea07
uuid_000000000007ea05:
	push %RBP
	mov -4864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ea02
	jmp uuid_000000000007ea04
uuid_000000000007ea02:
	push %RBP
	mov -4856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e9ff
	jmp uuid_000000000007ea01
uuid_000000000007e9ff:
	movb $1, -4880(%rbp)
uuid_000000000007ea01:
	mov -4976(%RBP),%RSP
	add $-5048, %RSP
uuid_000000000007ea04:
	mov -4896(%RBP),%RSP
	add $-5048, %RSP
uuid_000000000007ea07:
	mov -4888(%RBP),%RSP
	add $-5048, %RSP
	mov -4880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea82
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ea81
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ea84
uuid_000000000007ea82:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ea7e
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ea7b
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -280(%rbp)
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -5184(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov -5152(%RBP), %RAX
	push %RAX
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007ea7d
uuid_000000000007ea7b:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -280(%rbp)
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -5184(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov -5152(%RBP), %RAX
	push %RAX
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea7d:
	mov -5064(%RBP),%RSP
	add $-5368, %RSP
	jmp uuid_000000000007ea80
uuid_000000000007ea7e:
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5208(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea0e
	jmp uuid_000000000007ea10
uuid_000000000007ea0e:
	push %RBP
	jmp uuid_000000000007ea0b
	jmp uuid_000000000007ea0d
uuid_000000000007ea0b:
	push %RBP
	mov -5144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea08
	jmp uuid_000000000007ea0a
uuid_000000000007ea08:
	movb $1, -5216(%rbp)
uuid_000000000007ea0a:
	mov -5240(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007ea0d:
	mov -5232(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007ea10:
	mov -5224(%RBP),%RSP
	add $-5248, %RSP
	mov -5216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea78
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5328(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea38
	jmp uuid_000000000007ea3a
uuid_000000000007ea38:
	push %RBP
	mov -5320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5424(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea26
	jmp uuid_000000000007ea28
uuid_000000000007ea26:
	push %RBP
	mov -5416(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5520(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea14
	jmp uuid_000000000007ea16
uuid_000000000007ea14:
	push %RBP
	pushq -5496(%RBP)
	pushq -5504(%RBP)
	pushq -5512(%RBP)
	jmp uuid_000000000007ea11
	jmp uuid_000000000007ea13
uuid_000000000007ea11:
	movb $1, -5528(%rbp)
uuid_000000000007ea13:
	mov -5544(%RBP),%RSP
	add $-5568, %RSP
uuid_000000000007ea16:
	mov -5536(%RBP),%RSP
	add $-5568, %RSP
	mov -5528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea23
	jmp uuid_000000000007ea25
uuid_000000000007ea23:
	push %RBP
	mov -5408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5648(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea1d
	jmp uuid_000000000007ea1f
uuid_000000000007ea1d:
	push %RBP
	jmp uuid_000000000007ea1a
	jmp uuid_000000000007ea1c
uuid_000000000007ea1a:
	push %RBP
	mov -5584(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea17
	jmp uuid_000000000007ea19
uuid_000000000007ea17:
	movb $1, -5656(%rbp)
uuid_000000000007ea19:
	mov -5680(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007ea1c:
	mov -5672(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007ea1f:
	mov -5664(%RBP),%RSP
	add $-5688, %RSP
	mov -5656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea20
	jmp uuid_000000000007ea22
uuid_000000000007ea20:
	movb $1, -5432(%rbp)
uuid_000000000007ea22:
	mov -5576(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007ea25:
	mov -5448(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007ea28:
	mov -5440(%RBP),%RSP
	add $-5688, %RSP
	mov -5432(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea35
	jmp uuid_000000000007ea37
uuid_000000000007ea35:
	push %RBP
	mov -5312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5768(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea2f
	jmp uuid_000000000007ea31
uuid_000000000007ea2f:
	push %RBP
	jmp uuid_000000000007ea2c
	jmp uuid_000000000007ea2e
uuid_000000000007ea2c:
	push %RBP
	mov -5704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ea29
	jmp uuid_000000000007ea2b
uuid_000000000007ea29:
	movb $1, -5776(%rbp)
uuid_000000000007ea2b:
	mov -5800(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007ea2e:
	mov -5792(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007ea31:
	mov -5784(%RBP),%RSP
	add $-5808, %RSP
	mov -5776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea32
	jmp uuid_000000000007ea34
uuid_000000000007ea32:
	movb $1, -5336(%rbp)
uuid_000000000007ea34:
	mov -5696(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007ea37:
	mov -5352(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007ea3a:
	mov -5344(%RBP),%RSP
	add $-5808, %RSP
	mov -5336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea75
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5888(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea41
	jmp uuid_000000000007ea43
uuid_000000000007ea41:
	push %RBP
	jmp uuid_000000000007ea3e
	jmp uuid_000000000007ea40
uuid_000000000007ea3e:
	push %RBP
	mov -5824(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea3b
	jmp uuid_000000000007ea3d
uuid_000000000007ea3b:
	movb $1, -5896(%rbp)
uuid_000000000007ea3d:
	mov -5920(%RBP),%RSP
	add $-5928, %RSP
uuid_000000000007ea40:
	mov -5912(%RBP),%RSP
	add $-5928, %RSP
uuid_000000000007ea43:
	mov -5904(%RBP),%RSP
	add $-5928, %RSP
	mov -5896(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea72
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -6008(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea6b
	jmp uuid_000000000007ea6d
uuid_000000000007ea6b:
	push %RBP
	mov -6000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6104(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea59
	jmp uuid_000000000007ea5b
uuid_000000000007ea59:
	push %RBP
	mov -6096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6200(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea47
	jmp uuid_000000000007ea49
uuid_000000000007ea47:
	push %RBP
	pushq -6176(%RBP)
	pushq -6184(%RBP)
	pushq -6192(%RBP)
	jmp uuid_000000000007ea44
	jmp uuid_000000000007ea46
uuid_000000000007ea44:
	movb $1, -6208(%rbp)
uuid_000000000007ea46:
	mov -6224(%RBP),%RSP
	add $-6248, %RSP
uuid_000000000007ea49:
	mov -6216(%RBP),%RSP
	add $-6248, %RSP
	mov -6208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea56
	jmp uuid_000000000007ea58
uuid_000000000007ea56:
	push %RBP
	mov -6088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6328(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea50
	jmp uuid_000000000007ea52
uuid_000000000007ea50:
	push %RBP
	jmp uuid_000000000007ea4d
	jmp uuid_000000000007ea4f
uuid_000000000007ea4d:
	push %RBP
	mov -6264(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ea4a
	jmp uuid_000000000007ea4c
uuid_000000000007ea4a:
	movb $1, -6336(%rbp)
uuid_000000000007ea4c:
	mov -6360(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007ea4f:
	mov -6352(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007ea52:
	mov -6344(%RBP),%RSP
	add $-6368, %RSP
	mov -6336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea53
	jmp uuid_000000000007ea55
uuid_000000000007ea53:
	movb $1, -6112(%rbp)
uuid_000000000007ea55:
	mov -6256(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007ea58:
	mov -6128(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007ea5b:
	mov -6120(%RBP),%RSP
	add $-6368, %RSP
	mov -6112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea68
	jmp uuid_000000000007ea6a
uuid_000000000007ea68:
	push %RBP
	mov -5992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6448(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ea62
	jmp uuid_000000000007ea64
uuid_000000000007ea62:
	push %RBP
	jmp uuid_000000000007ea5f
	jmp uuid_000000000007ea61
uuid_000000000007ea5f:
	push %RBP
	mov -6384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6488(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ea5c
	jmp uuid_000000000007ea5e
uuid_000000000007ea5c:
	movb $1, -6456(%rbp)
uuid_000000000007ea5e:
	mov -6480(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007ea61:
	mov -6472(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007ea64:
	mov -6464(%RBP),%RSP
	add $-6488, %RSP
	mov -6456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea65
	jmp uuid_000000000007ea67
uuid_000000000007ea65:
	movb $1, -6016(%rbp)
uuid_000000000007ea67:
	mov -6376(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007ea6a:
	mov -6032(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007ea6d:
	mov -6024(%RBP),%RSP
	add $-6488, %RSP
	mov -6016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ea6f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ea6e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ea71
uuid_000000000007ea6f:
#call function compile-constructor : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,Type>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -6368(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea71:
	mov -5936(%RBP),%RSP
	add $-6488, %RSP
	jmp uuid_000000000007ea74
uuid_000000000007ea72:
#call function compile-constructor : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,Type>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5928(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea74:
	mov -5816(%RBP),%RSP
	add $-5928, %RSP
	jmp uuid_000000000007ea77
uuid_000000000007ea75:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea77:
	mov -5256(%RBP),%RSP
	add $-5808, %RSP
	jmp uuid_000000000007ea7a
uuid_000000000007ea78:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5248(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea7a:
	mov -5136(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007ea80:
	mov -5056(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007ea84:
	mov -4800(%RBP),%RSP
	add $-5248, %RSP
	jmp uuid_000000000007ea87
uuid_000000000007ea85:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function compile-push-rvalue : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -4824(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $3
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4832(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -4864(%rbp)
	pushq -4872(%rbp)
	pushq -4880(%rbp)
	pushq -4888(%rbp)
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq $0
	push %RBP
	mov -5008(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9f2
	jmp uuid_000000000007e9f4
uuid_000000000007e9f2:
	push %RBP
	jmp uuid_000000000007e9ef
	jmp uuid_000000000007e9f1
uuid_000000000007e9ef:
	push %RBP
	mov -4992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9e9
	jmp uuid_000000000007e9eb
uuid_000000000007e9e9:
	push %RBP
	jmp uuid_000000000007e9e6
	jmp uuid_000000000007e9e8
uuid_000000000007e9e6:
	push %RBP
	jmp uuid_000000000007e9e3
	jmp uuid_000000000007e9e5
uuid_000000000007e9e3:
	push %RBP
	mov -5072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007e9e0
	jmp uuid_000000000007e9e2
uuid_000000000007e9e0:
	movb $1, -5120(%rbp)
uuid_000000000007e9e2:
	mov -5152(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007e9e5:
	mov -5144(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007e9e8:
	mov -5136(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007e9eb:
	mov -5128(%RBP),%RSP
	add $-5224, %RSP
	mov -5120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9ec
	jmp uuid_000000000007e9ee
uuid_000000000007e9ec:
	movb $1, -5016(%rbp)
uuid_000000000007e9ee:
	mov -5040(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007e9f1:
	mov -5032(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007e9f4:
	mov -5024(%RBP),%RSP
	add $-5224, %RSP
	mov -5016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e9f9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e9f8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e9fb
uuid_000000000007e9f9:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007bc32
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -5320(%RBP)
	pushq -5328(%RBP)
	pushq -5336(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5384(%rbp)
	pushq -5392(%rbp)
	pushq -5400(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e9f5
	jmp uuid_000000000007e9f7
uuid_000000000007e9f5:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007bc32
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq $uuid_000000000007c217
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -4856(%RBP)
	popq -4848(%RBP)
	popq -4840(%RBP)
uuid_000000000007e9f7:
	mov -5408(%RBP),%RSP
	add $-5560, %RSP
uuid_000000000007e9fb:
	mov -4936(%RBP),%RSP
	add $-5560, %RSP
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007bc32
	pushq -4840(%rbp)
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007e9fc
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007e9fc
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007e9fd
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4824(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007e9fe
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -4832(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea87:
	mov -4224(%RBP),%RSP
	add $-5560, %RSP
	jmp uuid_000000000007ea8a
uuid_000000000007ea88:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $-8
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007e9b8
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4224(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4344(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov -4312(%RBP), %RAX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -4464(%RBP), %RAX
	push %RAX
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4496(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4464(%RBP), %RAX
	push %RAX
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -4528(%RBP)
	popq -4520(%RBP)
	popq -4512(%RBP)
	popq -4504(%RBP)
	popq -4496(%RBP)
	popq -4488(%RBP)
	popq -4480(%RBP)
	popq -4472(%RBP)
	popq -4464(%RBP)
	popq -4456(%RBP)
	popq -4448(%RBP)
	popq -4440(%RBP)
	popq -4432(%RBP)
	popq -4424(%RBP)
	popq -4416(%RBP)
	popq -4408(%RBP)
	popq -4400(%RBP)
	popq -4392(%RBP)
	popq -4384(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4528(%RBP)
	popq -4520(%RBP)
	popq -4512(%RBP)
	popq -4504(%RBP)
	popq -4496(%RBP)
	popq -4488(%RBP)
	popq -4480(%RBP)
	popq -4472(%RBP)
	popq -4464(%RBP)
	popq -4456(%RBP)
	popq -4448(%RBP)
	popq -4440(%RBP)
	popq -4432(%RBP)
	popq -4424(%RBP)
	popq -4416(%RBP)
	popq -4408(%RBP)
	popq -4400(%RBP)
	popq -4392(%RBP)
	popq -4384(%RBP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4344(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov -4312(%RBP), %RAX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4656(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4624(%RBP), %RAX
	push %RAX
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -4688(%RBP)
	popq -4680(%RBP)
	popq -4672(%RBP)
	popq -4664(%RBP)
	popq -4656(%RBP)
	popq -4648(%RBP)
	popq -4640(%RBP)
	popq -4632(%RBP)
	popq -4624(%RBP)
	popq -4616(%RBP)
	popq -4608(%RBP)
	popq -4600(%RBP)
	popq -4592(%RBP)
	popq -4584(%RBP)
	popq -4576(%RBP)
	popq -4568(%RBP)
	popq -4560(%RBP)
	popq -4552(%RBP)
	popq -4544(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4688(%RBP)
	popq -4680(%RBP)
	popq -4672(%RBP)
	popq -4664(%RBP)
	popq -4656(%RBP)
	popq -4648(%RBP)
	popq -4640(%RBP)
	popq -4632(%RBP)
	popq -4624(%RBP)
	popq -4616(%RBP)
	popq -4608(%RBP)
	popq -4600(%RBP)
	popq -4592(%RBP)
	popq -4584(%RBP)
	popq -4576(%RBP)
	popq -4568(%RBP)
	popq -4560(%RBP)
	popq -4552(%RBP)
	popq -4544(%RBP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007e9b9
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4224(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007e9ba
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007e9bb
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e9bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007e9bd
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e9bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007b66f
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df85
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -4232(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007e5f0
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007b672
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e9bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007df85
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007e9be
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	pushq -4864(%rbp)
	pushq -280(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov -4496(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e9bf
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007e9c1
uuid_000000000007e9bf:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e9c1:
	mov -4872(%RBP),%RSP
	add $-4872, %RSP
uuid_000000000007ea8a:
	mov -3576(%RBP),%RSP
	add $-4872, %RSP
	jmp uuid_000000000007ea8d
uuid_000000000007ea8b:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -3384(%rbp)
	pushq -3392(%rbp)
	pushq -3400(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	pushq -3424(%rbp)
	pushq -3432(%rbp)
	pushq -3440(%rbp)
	pushq -3448(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea8d:
	mov -3056(%RBP),%RSP
	add $-3568, %RSP
	jmp uuid_000000000007ea90
uuid_000000000007ea8e:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3056(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cbd1
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c056
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb79
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc59
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b66b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -3064(%rbp)
	pushq -3072(%rbp)
	pushq -3080(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea90:
	mov -2712(%RBP),%RSP
	add $-3080, %RSP
	jmp uuid_000000000007ea93
uuid_000000000007ea91:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e933
	jmp uuid_000000000007e935
uuid_000000000007e933:
	push %RBP
	mov -2776(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2848(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e92a
	jmp uuid_000000000007e92c
uuid_000000000007e92a:
	push %RBP
	mov -2840(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2912(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e921
	jmp uuid_000000000007e923
uuid_000000000007e921:
	push %RBP
	mov -2904(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2976(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e91e
	jmp uuid_000000000007e920
uuid_000000000007e91e:
	push %RBP
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	mov -3008(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e91b
	jmp uuid_000000000007e91d
uuid_000000000007e91b:
	movb $1, -2920(%rbp)
uuid_000000000007e91d:
	mov -2984(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007e920:
	mov -2936(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007e923:
	mov -2928(%RBP),%RSP
	add $-3008, %RSP
	mov -2920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e927
	jmp uuid_000000000007e929
uuid_000000000007e927:
	push %RBP
	jmp uuid_000000000007e924
	jmp uuid_000000000007e926
uuid_000000000007e924:
	movb $1, -2856(%rbp)
uuid_000000000007e926:
	mov -3016(%RBP),%RSP
	add $-3016, %RSP
uuid_000000000007e929:
	mov -2872(%RBP),%RSP
	add $-3016, %RSP
uuid_000000000007e92c:
	mov -2864(%RBP),%RSP
	add $-3016, %RSP
	mov -2856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e930
	jmp uuid_000000000007e932
uuid_000000000007e930:
	push %RBP
	mov -2768(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3032(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e92d
	jmp uuid_000000000007e92f
uuid_000000000007e92d:
	movb $1, -2792(%rbp)
uuid_000000000007e92f:
	mov -3024(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007e932:
	mov -2808(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007e935:
	mov -2800(%RBP),%RSP
	add $-3032, %RSP
	mov -2792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e958
	push %RBP
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq $0
	push %RBP
	mov -3064(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e94e
	jmp uuid_000000000007e950
uuid_000000000007e94e:
	push %RBP
	mov -3056(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e945
	jmp uuid_000000000007e947
uuid_000000000007e945:
	push %RBP
	mov -3120(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e93c
	jmp uuid_000000000007e93e
uuid_000000000007e93c:
	push %RBP
	mov -3184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e939
	jmp uuid_000000000007e93b
uuid_000000000007e939:
	push %RBP
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	jmp uuid_000000000007e936
	jmp uuid_000000000007e938
uuid_000000000007e936:
	movb $1, -3200(%rbp)
uuid_000000000007e938:
	mov -3264(%RBP),%RSP
	add $-3288, %RSP
uuid_000000000007e93b:
	mov -3216(%RBP),%RSP
	add $-3288, %RSP
uuid_000000000007e93e:
	mov -3208(%RBP),%RSP
	add $-3288, %RSP
	mov -3200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e942
	jmp uuid_000000000007e944
uuid_000000000007e942:
	push %RBP
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007e93f
	jmp uuid_000000000007e941
uuid_000000000007e93f:
	movb $1, -3136(%rbp)
uuid_000000000007e941:
	mov -3296(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007e944:
	mov -3152(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007e947:
	mov -3144(%RBP),%RSP
	add $-3320, %RSP
	mov -3136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e94b
	jmp uuid_000000000007e94d
uuid_000000000007e94b:
	push %RBP
	mov -3048(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $uuid_000000000007bbad
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e948
	jmp uuid_000000000007e94a
uuid_000000000007e948:
	movb $1, -3072(%rbp)
uuid_000000000007e94a:
	mov -3328(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007e94d:
	mov -3088(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007e950:
	mov -3080(%RBP),%RSP
	add $-3336, %RSP
	mov -3072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e955
	push %RBP
	jmp uuid_000000000007e952
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e951
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e954
uuid_000000000007e952:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e954:
	mov -3344(%RBP),%RSP
	add $-3344, %RSP
	jmp uuid_000000000007e957
uuid_000000000007e955:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007bbe4
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -3344(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e957:
	mov -3040(%RBP),%RSP
	add $-3344, %RSP
	jmp uuid_000000000007e95a
uuid_000000000007e958:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e95a:
	mov -2760(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007ea93:
	mov -2416(%RBP),%RSP
	add $-3032, %RSP
	jmp uuid_000000000007ea96
uuid_000000000007ea94:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -280(%rbp)
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea96:
	mov -2120(%RBP),%RSP
	add $-2408, %RSP
	jmp uuid_000000000007ea99
uuid_000000000007ea97:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1992(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bacd
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq $uuid_000000000007da57
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b85e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007c217
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea99:
	mov -1784(%RBP),%RSP
	add $-2288, %RSP
	jmp uuid_000000000007ea9c
uuid_000000000007ea9a:
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1656(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bacd
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function fragment::label : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_label_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea9c:
	mov -1448(%RBP),%RSP
	add $-1776, %RSP
	jmp uuid_000000000007ea9f
uuid_000000000007ea9d:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ea9f:
	mov -928(%RBP),%RSP
	add $-1440, %RSP
	jmp uuid_000000000007eaa2
uuid_000000000007eaa0:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e89d
	pushq $0
	push %RBP
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e859
	jmp uuid_000000000007e85b
uuid_000000000007e859:
	movb $1, -960(%rbp)
uuid_000000000007e85b:
	mov -968(%RBP),%RSP
	add $-968, %RSP
	push %RBP
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e85c
	jmp uuid_000000000007e85e
uuid_000000000007e85c:
	movb $1, -960(%rbp)
uuid_000000000007e85e:
	mov -976(%RBP),%RSP
	add $-976, %RSP
	push %RBP
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e85f
	jmp uuid_000000000007e861
uuid_000000000007e85f:
	movb $1, -960(%rbp)
uuid_000000000007e861:
	mov -984(%RBP),%RSP
	add $-984, %RSP
	push %RBP
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e862
	jmp uuid_000000000007e864
uuid_000000000007e862:
	movb $1, -960(%rbp)
uuid_000000000007e864:
	mov -992(%RBP),%RSP
	add $-992, %RSP
	push %RBP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007e89a
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function class-of-tag : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call class_SB_of_SB_tag_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e897
	pushq -920(%rbp)
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq $uuid_000000000007e865
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e894
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq $uuid_000000000007e866
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e891
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $uuid_000000000007e867
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e88e
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq $uuid_000000000007b811
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e88b
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq $uuid_000000000007e869
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e888
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $uuid_000000000007e86b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e885
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq $uuid_000000000007e86d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e882
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq $uuid_000000000007e86f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e87f
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $uuid_000000000007e871
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e87c
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $uuid_000000000007e873
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007e879
	push %RBP
	jmp uuid_000000000007e876
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007e875
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007e878
uuid_000000000007e876:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e878:
	mov -1184(%RBP),%RSP
	add $-1184, %RSP
	jmp uuid_000000000007e87b
uuid_000000000007e879:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e874
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e87b:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
	jmp uuid_000000000007e87e
uuid_000000000007e87c:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e872
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e87e:
	mov -1152(%RBP),%RSP
	add $-1160, %RSP
	jmp uuid_000000000007e881
uuid_000000000007e87f:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e870
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e881:
	mov -1136(%RBP),%RSP
	add $-1144, %RSP
	jmp uuid_000000000007e884
uuid_000000000007e882:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e86e
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e884:
	mov -1120(%RBP),%RSP
	add $-1128, %RSP
	jmp uuid_000000000007e887
uuid_000000000007e885:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e86c
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e887:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007e88a
uuid_000000000007e888:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e86a
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e88a:
	mov -1088(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007e88d
uuid_000000000007e88b:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e868
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e88d:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007e890
uuid_000000000007e88e:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b66c
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e890:
	mov -1056(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007e893
uuid_000000000007e891:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b62b
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e893:
	mov -1040(%RBP),%RSP
	add $-1048, %RSP
	jmp uuid_000000000007e896
uuid_000000000007e894:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b664
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e896:
	mov -1024(%RBP),%RSP
	add $-1032, %RSP
	jmp uuid_000000000007e899
uuid_000000000007e897:
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007c217
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e899:
	mov -1008(%RBP),%RSP
	add $-1016, %RSP
	jmp uuid_000000000007e89c
uuid_000000000007e89a:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e89c:
	mov -1000(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007e89f
uuid_000000000007e89d:
#call function compile-declare-cstring : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call compile_SB_declare_SB_cstring_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007e89f:
	mov -952(%RBP),%RSP
	add $-952, %RSP
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007eaa2:
	mov -808(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007eaa5
uuid_000000000007eaa3:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -800(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007eaa5:
	mov -688(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007eaa8
uuid_000000000007eaa6:
uuid_000000000007eaa8:
	mov -608(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007eaab
uuid_000000000007eaa9:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007eaab:
	mov -528(%RBP),%RSP
	add $-600, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -288(%rbp)
	push %RBP
	pushq -456(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eab0
	push %RBP
	jmp uuid_000000000007eaad
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007eaac
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eaaf
uuid_000000000007eaad:
#call function compile-expr-direct : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_SB_direct_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007eaaf:
	mov -480(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_000000000007eab2
uuid_000000000007eab0:
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007bc9b
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007eab2:
	mov -464(%RBP),%RSP
	add $-472, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_fragment_SB_args_CL_ArrowFragmentListConsI64ConsASTConsTypeFContext:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eacb
	jmp uuid_000000000007eacd
uuid_000000000007eacb:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eac2
	jmp uuid_000000000007eac4
uuid_000000000007eac2:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eab9
	jmp uuid_000000000007eabb
uuid_000000000007eab9:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eab6
	jmp uuid_000000000007eab8
uuid_000000000007eab6:
	push %RBP
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	jmp uuid_000000000007eab3
	jmp uuid_000000000007eab5
uuid_000000000007eab3:
	movb $1, -672(%rbp)
uuid_000000000007eab5:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007eab8:
	mov -688(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007eabb:
	mov -680(%RBP),%RSP
	add $-760, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eabf
	jmp uuid_000000000007eac1
uuid_000000000007eabf:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_000000000007eabc
	jmp uuid_000000000007eabe
uuid_000000000007eabc:
	movb $1, -608(%rbp)
uuid_000000000007eabe:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007eac1:
	mov -624(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007eac4:
	mov -616(%RBP),%RSP
	add $-792, %RSP
	mov -608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eac8
	jmp uuid_000000000007eaca
uuid_000000000007eac8:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eac5
	jmp uuid_000000000007eac7
uuid_000000000007eac5:
	movb $1, -544(%rbp)
uuid_000000000007eac7:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007eaca:
	mov -560(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007eacd:
	mov -552(%RBP),%RSP
	add $-808, %RSP
	mov -544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eaeb
	push %RBP
	jmp uuid_000000000007eae8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007eae7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eaea
uuid_000000000007eae8:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eae4
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	jmp uuid_000000000007eae6
uuid_000000000007eae4:
uuid_000000000007eae6:
	mov -976(%RBP),%RSP
	add $-976, %RSP
#call function close : Arrow<FragmentList+CaseNumber<1>,Array<FragmentList+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListCaseNumber1FragmentListCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007eaea:
	mov -816(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007eaed
uuid_000000000007eaeb:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	push %RBP
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ead4
	jmp uuid_000000000007ead6
uuid_000000000007ead4:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ead1
	jmp uuid_000000000007ead3
uuid_000000000007ead1:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eace
	jmp uuid_000000000007ead0
uuid_000000000007eace:
	movb $1, -968(%rbp)
uuid_000000000007ead0:
	mov -1064(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007ead3:
	mov -984(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007ead6:
	mov -976(%RBP),%RSP
	add $-1136, %RSP
	mov -968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eae1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007eae0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eae3
uuid_000000000007eae1:
#call function compile-fragment-args : Arrow<Cons<Cons<Cons<FContext,Type>,AST>,I64>,FragmentList>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call compile_SB_fragment_SB_args_CL_ArrowFragmentListConsI64ConsASTConsTypeFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Cons<Type,String>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007c27d
	pushq $uuid_000000000007df27
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ead7
	jmp uuid_000000000007ead9
uuid_000000000007ead7:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -304(%rbp)
uuid_000000000007ead9:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Cons<Type,String>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call cons_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007c27d
	pushq $uuid_000000000007df27
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eada
	jmp uuid_000000000007eadc
uuid_000000000007eada:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call cons_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -304(%rbp)
uuid_000000000007eadc:
	mov -1320(%RBP),%RSP
	add $-1320, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -304(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eadd
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	jmp uuid_000000000007eadf
uuid_000000000007eadd:
uuid_000000000007eadf:
	mov -1480(%RBP),%RSP
	add $-1480, %RSP
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007eae3:
	mov -888(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007eaed:
	mov -512(%RBP),%RSP
	add $-1480, %RSP
	subq $168, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
compile_SB_global_CL_ArrowNilConsASTConsStringFContext:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaf7
	jmp uuid_000000000007eaf9
uuid_000000000007eaf7:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007eaf4
	jmp uuid_000000000007eaf6
uuid_000000000007eaf4:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eaf1
	jmp uuid_000000000007eaf3
uuid_000000000007eaf1:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eaee
	jmp uuid_000000000007eaf0
uuid_000000000007eaee:
	movb $1, -472(%rbp)
uuid_000000000007eaf0:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007eaf3:
	mov -520(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007eaf6:
	mov -488(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007eaf9:
	mov -480(%RBP),%RSP
	add $-672, %RSP
	mov -472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb3f
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb37
	jmp uuid_000000000007eb39
uuid_000000000007eb37:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb25
	jmp uuid_000000000007eb27
uuid_000000000007eb25:
	push %RBP
	mov -840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -944(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb1c
	jmp uuid_000000000007eb1e
uuid_000000000007eb1c:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007eb19
	jmp uuid_000000000007eb1b
uuid_000000000007eb19:
	movb $1, -952(%rbp)
uuid_000000000007eb1b:
	mov -968(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007eb1e:
	mov -960(%RBP),%RSP
	add $-992, %RSP
	mov -952(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb22
	jmp uuid_000000000007eb24
uuid_000000000007eb22:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eb1f
	jmp uuid_000000000007eb21
uuid_000000000007eb1f:
	movb $1, -856(%rbp)
uuid_000000000007eb21:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007eb24:
	mov -872(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007eb27:
	mov -864(%RBP),%RSP
	add $-1072, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb34
	jmp uuid_000000000007eb36
uuid_000000000007eb34:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb2e
	jmp uuid_000000000007eb30
uuid_000000000007eb2e:
	push %RBP
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	jmp uuid_000000000007eb2b
	jmp uuid_000000000007eb2d
uuid_000000000007eb2b:
	push %RBP
	mov -1088(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb28
	jmp uuid_000000000007eb2a
uuid_000000000007eb28:
	movb $1, -1160(%rbp)
uuid_000000000007eb2a:
	mov -1240(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007eb2d:
	mov -1176(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007eb30:
	mov -1168(%RBP),%RSP
	add $-1248, %RSP
	mov -1160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb31
	jmp uuid_000000000007eb33
uuid_000000000007eb31:
	movb $1, -760(%rbp)
uuid_000000000007eb33:
	mov -1080(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007eb36:
	mov -776(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007eb39:
	mov -768(%RBP),%RSP
	add $-1248, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb3c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007eb3b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eb3e
uuid_000000000007eb3c:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -1280(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007eb3a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b5fd
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	pushq -208(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq $7
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2d
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007ba2e
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba11
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq $-8
	pushq $4
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq $uuid_000000000007c217
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
uuid_000000000007eb3e:
	mov -680(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007eb41
uuid_000000000007eb3f:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $uuid_000000000007d14a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb16
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function compile-destructure-args : Arrow<Cons<Cons<Cons<Type,FContext>,AST>,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq $0
	mov %RBX, %RBP
	call compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $uuid_000000000007eafa
	pushq $0
	pushq $0
	pushq $3
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq $0
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq $8
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -720(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq -712(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -720(%rbp)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -720(%rbp)
	pushq $1
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007da86
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb02
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	jmp uuid_000000000007eb04
uuid_000000000007eb02:
	mov $main_SB_with_CL_U8, %r15
	movb $1, 0(%r15)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	push %RBP
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov -1056(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eaff
	push %RBP
	jmp uuid_000000000007eafc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007eafb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eafe
uuid_000000000007eafc:
	mov $main_SB_with_SB_argv_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007eafe:
	mov -1064(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007eb01
uuid_000000000007eaff:
uuid_000000000007eb01:
	mov -984(%RBP),%RSP
	add $-1056, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007da86
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
uuid_000000000007eb04:
	mov -904(%RBP),%RSP
	add $-1056, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b85e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	push %RBP
	mov $config_SB_profile_SB_invocations_CL_U8, %R13
	mov 0(%R13), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb10
	jmp uuid_000000000007eb12
uuid_000000000007eb10:
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	pushq $0
	pushq $uuid_000000000007eb05
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007eb06
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007eb07
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007eb08
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007eb09
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007eb0a
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007eb0b
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007eb09
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007eb0a
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007eb0c
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007eb0d
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007eb0e
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007eb0f
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
uuid_000000000007eb12:
	mov -1064(%RBP),%RSP
	add $-1088, %RSP
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $uuid_000000000007eb13
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $uuid_000000000007c217
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d9a8
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007eb14
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq -712(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007e9fe
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007eb15
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	jmp uuid_000000000007eb18
uuid_000000000007eb16:
uuid_000000000007eb18:
	mov -680(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007eb41:
	mov -392(%RBP),%RSP
	add $-680, %RSP
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext:
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb42
	movq -384(%rbp), %r15
	movq %r15, -488(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -472(%rbp)
	jmp uuid_000000000007eb44
uuid_000000000007eb42:
uuid_000000000007eb44:
	mov -496(%RBP),%RSP
	add $-496, %RSP
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb4b
	jmp uuid_000000000007eb4d
uuid_000000000007eb4b:
	push %RBP
	jmp uuid_000000000007eb48
	jmp uuid_000000000007eb4a
uuid_000000000007eb48:
	push %RBP
	mov -536(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb45
	jmp uuid_000000000007eb47
uuid_000000000007eb45:
	movb $1, -560(%rbp)
uuid_000000000007eb47:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007eb4a:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007eb4d:
	mov -568(%RBP),%RSP
	add $-592, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb52
	push %RBP
	jmp uuid_000000000007eb4f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007eb4e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eb51
uuid_000000000007eb4f:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007e7be
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
	popq -648(%RBP)
	popq -640(%RBP)
	popq -632(%RBP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007bc5b
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -208(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bbe5
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -808(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
uuid_000000000007eb51:
	mov -600(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007eb54
uuid_000000000007eb52:
uuid_000000000007eb54:
	mov -528(%RBP),%RSP
	add $-592, %RSP
	subq $152, %rsp
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $464, %rsp
	ret
compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext:
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq $0
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb6d
	jmp uuid_000000000007eb6f
uuid_000000000007eb6d:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb64
	jmp uuid_000000000007eb66
uuid_000000000007eb64:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb5b
	jmp uuid_000000000007eb5d
uuid_000000000007eb5b:
	push %RBP
	mov -624(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb58
	jmp uuid_000000000007eb5a
uuid_000000000007eb58:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	jmp uuid_000000000007eb55
	jmp uuid_000000000007eb57
uuid_000000000007eb55:
	movb $1, -640(%rbp)
uuid_000000000007eb57:
	mov -704(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007eb5a:
	mov -656(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007eb5d:
	mov -648(%RBP),%RSP
	add $-728, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb61
	jmp uuid_000000000007eb63
uuid_000000000007eb61:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007eb5e
	jmp uuid_000000000007eb60
uuid_000000000007eb5e:
	movb $1, -576(%rbp)
uuid_000000000007eb60:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007eb63:
	mov -592(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007eb66:
	mov -584(%RBP),%RSP
	add $-760, %RSP
	mov -576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb6a
	jmp uuid_000000000007eb6c
uuid_000000000007eb6a:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb67
	jmp uuid_000000000007eb69
uuid_000000000007eb67:
	movb $1, -512(%rbp)
uuid_000000000007eb69:
	mov -768(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007eb6c:
	mov -528(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007eb6f:
	mov -520(%RBP),%RSP
	add $-776, %RSP
	mov -512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb90
	push %RBP
	jmp uuid_000000000007eb8d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007eb8c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eb8f
uuid_000000000007eb8d:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -792(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb89
	push %RBP
	movq -288(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb86
	jmp uuid_000000000007eb88
uuid_000000000007eb86:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $uuid_000000000007bc48
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb83
	jmp uuid_000000000007eb85
uuid_000000000007eb83:
	pushq $uuid_000000000007bc49
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc49
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $7
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc9a
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007eb85:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007eb88:
	mov -808(%RBP),%RSP
	add $-912, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -384(%RBP), %RAX
	push %RAX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007eb8b
uuid_000000000007eb89:
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007c217
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007eb8b:
	mov -800(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007eb8f:
	mov -784(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007eb92
uuid_000000000007eb90:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq $0
	push %RBP
	mov -928(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb76
	jmp uuid_000000000007eb78
uuid_000000000007eb76:
	push %RBP
	mov -920(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eb73
	jmp uuid_000000000007eb75
uuid_000000000007eb73:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eb70
	jmp uuid_000000000007eb72
uuid_000000000007eb70:
	movb $1, -936(%rbp)
uuid_000000000007eb72:
	mov -1032(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007eb75:
	mov -952(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007eb78:
	mov -944(%RBP),%RSP
	add $-1104, %RSP
	mov -936(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eb80
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007eb7f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007eb82
uuid_000000000007eb80:
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
	movq -288(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eb7c
	jmp uuid_000000000007eb7e
uuid_000000000007eb7c:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $uuid_000000000007bc48
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb79
	jmp uuid_000000000007eb7b
uuid_000000000007eb79:
	pushq $uuid_000000000007bc49
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc49
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $7
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc9a
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -1024(%RBP)
	popq -1016(%RBP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007eb7b:
	mov -1296(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007eb7e:
	mov -1264(%RBP),%RSP
	add $-1368, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov -1192(%RBP), %RAX
	push %RAX
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -1456(%RBP), %RAX
	push %RAX
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -1520(%RBP)
	popq -1512(%RBP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	popq -1480(%RBP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -1520(%RBP)
	popq -1512(%RBP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	popq -1480(%RBP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007eb82:
	mov -856(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007eb92:
	mov -480(%RBP),%RSP
	add $-1528, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_stack_SB_call_SB_push_SB_args_CL_ArrowFragmentConsI64ConsASTFContext:
#call function compile-push-rvalue : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	subq $152, %rsp
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq $uuid_000000000007d14a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eba7
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $2
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb93
	jmp uuid_000000000007eb95
uuid_000000000007eb93:
	pushq $4
	popq -472(%RBP)
uuid_000000000007eb95:
	mov -872(%RBP),%RSP
	add $-872, %RSP
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eb96
	jmp uuid_000000000007eb98
uuid_000000000007eb96:
	pushq $4
	popq -472(%RBP)
uuid_000000000007eb98:
	mov -880(%RBP),%RSP
	add $-880, %RSP
#call function compile-stack-call-push-args : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_SB_push_SB_args_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007eb99
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1032(%RBP)
	popq -1024(%RBP)
	popq -1016(%RBP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	pushq $0
	pushq $0
	pushq $3
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007eb9a
	pushq $0
	pushq -1064(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007eb9b
	pushq $0
	pushq -360(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007eb9c
	pushq $0
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007eb9a
	pushq $0
	pushq -1064(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007e9bb
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007eb9d
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007eb9e
	pushq $0
#call function to-string : Arrow<IsUsed,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringIsUsed
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e9bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007e9bd
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e9bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007eb9f
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007eba0
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba2f
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007e9bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -464(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	push %RBP
	movq -1072(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eba4
	jmp uuid_000000000007eba6
uuid_000000000007eba4:
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $4
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eba1
	jmp uuid_000000000007eba3
uuid_000000000007eba1:
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq -1072(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
uuid_000000000007eba3:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007eba6:
	mov -1256(%RBP),%RSP
	add $-1264, %RSP
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	jmp uuid_000000000007eba9
uuid_000000000007eba7:
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -360(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
uuid_000000000007eba9:
	mov -864(%RBP),%RSP
	add $-864, %RSP
	subq $152, %rsp
	pushq -856(%rbp)
	pushq -848(%rbp)
	pushq -840(%rbp)
	pushq -832(%rbp)
	pushq -824(%rbp)
	pushq -816(%rbp)
	pushq -808(%rbp)
	pushq -800(%rbp)
	pushq -792(%rbp)
	pushq -784(%rbp)
	pushq -776(%rbp)
	pushq -768(%rbp)
	pushq -760(%rbp)
	pushq -752(%rbp)
	pushq -744(%rbp)
	pushq -736(%rbp)
	pushq -728(%rbp)
	pushq -720(%rbp)
	pushq -712(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	popq -632(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $480, %rsp
	ret
compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<Cons<FContext,Fragment>,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
#call function fragment-context::lookups : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
uuid_000000000007ebb7:
#call function non-zero : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ebb8
	jmp uuid_000000000007ebb9
uuid_000000000007ebb8:
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ebb0
	jmp uuid_000000000007ebb2
uuid_000000000007ebb0:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ebad
	jmp uuid_000000000007ebaf
uuid_000000000007ebad:
	push %RBP
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	jmp uuid_000000000007ebaa
	jmp uuid_000000000007ebac
uuid_000000000007ebaa:
	movb $1, -1168(%rbp)
uuid_000000000007ebac:
	mov -1360(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007ebaf:
	mov -1184(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007ebb2:
	mov -1176(%RBP),%RSP
	add $-1512, %RSP
	mov -1168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ebb4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ebb3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ebb6
uuid_000000000007ebb4:
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<Cons<FContext,Fragment>,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	movq -1352(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -752(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -744(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -736(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -728(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -720(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -712(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -704(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -680(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -656(%rbp)
uuid_000000000007ebb6:
	mov -992(%RBP),%RSP
	add $-1512, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $168, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ebb7
uuid_000000000007ebb9:
	subq $152, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
translate_SB_local_SB_variables_CL_ArrowFContextConsI64FContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ebe4
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq $0
	push %RBP
	mov -832(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ebc6
	jmp uuid_000000000007ebc8
uuid_000000000007ebc6:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007ebc3
	jmp uuid_000000000007ebc5
uuid_000000000007ebc3:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007ebc0
	jmp uuid_000000000007ebc2
uuid_000000000007ebc0:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ebbd
	jmp uuid_000000000007ebbf
uuid_000000000007ebbd:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ebba
	jmp uuid_000000000007ebbc
uuid_000000000007ebba:
	movb $1, -840(%rbp)
uuid_000000000007ebbc:
	mov -1064(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007ebbf:
	mov -1048(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007ebc2:
	mov -1016(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007ebc5:
	mov -856(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007ebc8:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
	mov -840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ebe1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ebe0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ebe3
uuid_000000000007ebe1:
#call function translate-local-variables : Arrow<Cons<FContext,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call translate_SB_local_SB_variables_CL_ArrowFContextConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
	popq -1240(%RBP)
	popq -1232(%RBP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
	popq -1072(%RBP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007d9f0
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ebcc
	jmp uuid_000000000007ebce
uuid_000000000007ebcc:
	push %RBP
	mov -1312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1352(%rbp)
	pushq $uuid_000000000007c0bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ebc9
	jmp uuid_000000000007ebcb
uuid_000000000007ebc9:
	movb $1, -1328(%rbp)
uuid_000000000007ebcb:
	mov -1344(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007ebce:
	mov -1336(%RBP),%RSP
	add $-1352, %RSP
	mov -1328(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ebdd
	push %RBP
	jmp uuid_000000000007ebda
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ebd9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ebdc
uuid_000000000007ebda:
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1056(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ebdc:
	mov -1360(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007ebdf
uuid_000000000007ebdd:
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007da57
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq $0
	push %RBP
	mov -1408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ebd2
	jmp uuid_000000000007ebd4
uuid_000000000007ebd2:
	push %RBP
	mov -1400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ebcf
	jmp uuid_000000000007ebd1
uuid_000000000007ebcf:
	movb $1, -1416(%rbp)
uuid_000000000007ebd1:
	mov -1432(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007ebd4:
	mov -1424(%RBP),%RSP
	add $-1440, %RSP
	mov -1416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ebd6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ebd5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ebd8
uuid_000000000007ebd6:
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1448(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007da57
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1056(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ebd8:
	mov -1384(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007ebdf:
	mov -1296(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007ebe3:
	mov -632(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_000000000007ebe6
uuid_000000000007ebe4:
uuid_000000000007ebe6:
	mov -424(%RBP),%RSP
	add $-624, %RSP
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $216, %rsp
	ret
cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	push %RBP
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ebf0
	jmp uuid_000000000007ebf2
uuid_000000000007ebf0:
	push %RBP
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007ebed
	jmp uuid_000000000007ebef
uuid_000000000007ebed:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ebea
	jmp uuid_000000000007ebec
uuid_000000000007ebea:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ebe7
	jmp uuid_000000000007ebe9
uuid_000000000007ebe7:
	movb $1, -760(%rbp)
uuid_000000000007ebe9:
	mov -888(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007ebec:
	mov -808(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007ebef:
	mov -776(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007ebf2:
	mov -768(%RBP),%RSP
	add $-960, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ebf8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ebf7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ebfa
uuid_000000000007ebf8:
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	mov -968(%RBP), %RAX
	movq %RAX, -288(%rbp)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007bc9b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ebf4
	jmp uuid_000000000007ebf6
uuid_000000000007ebf4:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007eafa
	pushq $0
	pushq $0
	pushq $3
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq $uuid_000000000007eafa
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ebf3
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -1992(%RBP)
	popq -1984(%RBP)
	popq -1976(%RBP)
	popq -1968(%RBP)
	popq -1960(%RBP)
	popq -1952(%RBP)
	popq -1944(%RBP)
	popq -1936(%RBP)
	popq -1928(%RBP)
	popq -1920(%RBP)
	popq -1912(%RBP)
	popq -1904(%RBP)
	popq -1896(%RBP)
	popq -1888(%RBP)
	popq -1880(%RBP)
	popq -1872(%RBP)
	popq -1864(%RBP)
	popq -1856(%RBP)
	popq -1848(%RBP)
	popq -1840(%RBP)
	popq -1832(%RBP)
	popq -1824(%RBP)
	popq -1816(%RBP)
	popq -1808(%RBP)
	popq -1800(%RBP)
uuid_000000000007ebf6:
	mov -2000(%RBP),%RSP
	add $-2152, %RSP
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
#call function range : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call range_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
uuid_000000000007ebfa:
	mov -680(%RBP),%RSP
	add $-2224, %RSP
	subq $152, %rsp
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	push %RBP
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq $0
	push %RBP
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec04
	jmp uuid_000000000007ec06
uuid_000000000007ec04:
	push %RBP
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	jmp uuid_000000000007ec01
	jmp uuid_000000000007ec03
uuid_000000000007ec01:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ebfe
	jmp uuid_000000000007ec00
uuid_000000000007ebfe:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ebfb
	jmp uuid_000000000007ebfd
uuid_000000000007ebfb:
	movb $1, -784(%rbp)
uuid_000000000007ebfd:
	mov -912(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007ec00:
	mov -832(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007ec03:
	mov -800(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007ec06:
	mov -792(%RBP),%RSP
	add $-984, %RSP
	mov -784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec08
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ec07
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ec0a
uuid_000000000007ec08:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
#call function range : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call range_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
uuid_000000000007ec0a:
	mov -704(%RBP),%RSP
	add $-1056, %RSP
	subq $152, %rsp
	pushq -624(%rbp)
	pushq -616(%rbp)
	pushq -608(%rbp)
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext:
	pushq -552(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec3b
	jmp uuid_000000000007ec3d
uuid_000000000007ec3b:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec32
	jmp uuid_000000000007ec34
uuid_000000000007ec32:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -912(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec20
	jmp uuid_000000000007ec22
uuid_000000000007ec20:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec0e
	jmp uuid_000000000007ec10
uuid_000000000007ec0e:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007ec0b
	jmp uuid_000000000007ec0d
uuid_000000000007ec0b:
	movb $1, -1016(%rbp)
uuid_000000000007ec0d:
	mov -1032(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007ec10:
	mov -1024(%RBP),%RSP
	add $-1056, %RSP
	mov -1016(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec1d
	jmp uuid_000000000007ec1f
uuid_000000000007ec1d:
	push %RBP
	mov -896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1136(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec17
	jmp uuid_000000000007ec19
uuid_000000000007ec17:
	push %RBP
	jmp uuid_000000000007ec14
	jmp uuid_000000000007ec16
uuid_000000000007ec14:
	push %RBP
	mov -1072(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ec11
	jmp uuid_000000000007ec13
uuid_000000000007ec11:
	movb $1, -1144(%rbp)
uuid_000000000007ec13:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007ec16:
	mov -1160(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007ec19:
	mov -1152(%RBP),%RSP
	add $-1176, %RSP
	mov -1144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec1a
	jmp uuid_000000000007ec1c
uuid_000000000007ec1a:
	movb $1, -920(%rbp)
uuid_000000000007ec1c:
	mov -1064(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007ec1f:
	mov -936(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007ec22:
	mov -928(%RBP),%RSP
	add $-1176, %RSP
	mov -920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec2f
	jmp uuid_000000000007ec31
uuid_000000000007ec2f:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec29
	jmp uuid_000000000007ec2b
uuid_000000000007ec29:
	push %RBP
	jmp uuid_000000000007ec26
	jmp uuid_000000000007ec28
uuid_000000000007ec26:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec23
	jmp uuid_000000000007ec25
uuid_000000000007ec23:
	movb $1, -1264(%rbp)
uuid_000000000007ec25:
	mov -1288(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007ec28:
	mov -1280(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007ec2b:
	mov -1272(%RBP),%RSP
	add $-1296, %RSP
	mov -1264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec2c
	jmp uuid_000000000007ec2e
uuid_000000000007ec2c:
	movb $1, -824(%rbp)
uuid_000000000007ec2e:
	mov -1184(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007ec31:
	mov -840(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007ec34:
	mov -832(%RBP),%RSP
	add $-1296, %RSP
	mov -824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec38
	jmp uuid_000000000007ec3a
uuid_000000000007ec38:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ec35
	jmp uuid_000000000007ec37
uuid_000000000007ec35:
	movb $1, -728(%rbp)
uuid_000000000007ec37:
	mov -1304(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007ec3a:
	mov -744(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007ec3d:
	mov -736(%RBP),%RSP
	add $-1376, %RSP
	mov -728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eccc
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq $0
	push %RBP
	mov -1456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec9f
	jmp uuid_000000000007eca1
uuid_000000000007ec9f:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec8d
	jmp uuid_000000000007ec8f
uuid_000000000007ec8d:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1648(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec7b
	jmp uuid_000000000007ec7d
uuid_000000000007ec7b:
	push %RBP
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	jmp uuid_000000000007ec78
	jmp uuid_000000000007ec7a
uuid_000000000007ec78:
	movb $1, -1656(%rbp)
uuid_000000000007ec7a:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007ec7d:
	mov -1664(%RBP),%RSP
	add $-1696, %RSP
	mov -1656(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec8a
	jmp uuid_000000000007ec8c
uuid_000000000007ec8a:
	push %RBP
	mov -1536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1776(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec84
	jmp uuid_000000000007ec86
uuid_000000000007ec84:
	push %RBP
	jmp uuid_000000000007ec81
	jmp uuid_000000000007ec83
uuid_000000000007ec81:
	push %RBP
	mov -1712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ec7e
	jmp uuid_000000000007ec80
uuid_000000000007ec7e:
	movb $1, -1784(%rbp)
uuid_000000000007ec80:
	mov -1808(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ec83:
	mov -1800(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ec86:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
	mov -1784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec87
	jmp uuid_000000000007ec89
uuid_000000000007ec87:
	movb $1, -1560(%rbp)
uuid_000000000007ec89:
	mov -1704(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ec8c:
	mov -1576(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ec8f:
	mov -1568(%RBP),%RSP
	add $-1816, %RSP
	mov -1560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec9c
	jmp uuid_000000000007ec9e
uuid_000000000007ec9c:
	push %RBP
	mov -1440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec96
	jmp uuid_000000000007ec98
uuid_000000000007ec96:
	push %RBP
	jmp uuid_000000000007ec93
	jmp uuid_000000000007ec95
uuid_000000000007ec93:
	push %RBP
	mov -1832(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec90
	jmp uuid_000000000007ec92
uuid_000000000007ec90:
	movb $1, -1904(%rbp)
uuid_000000000007ec92:
	mov -1928(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007ec95:
	mov -1920(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007ec98:
	mov -1912(%RBP),%RSP
	add $-1936, %RSP
	mov -1904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec99
	jmp uuid_000000000007ec9b
uuid_000000000007ec99:
	movb $1, -1464(%rbp)
uuid_000000000007ec9b:
	mov -1824(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007ec9e:
	mov -1480(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007eca1:
	mov -1472(%RBP),%RSP
	add $-1936, %RSP
	mov -1464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ecc9
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	mov -2016(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ecc6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ecc5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ecc8
uuid_000000000007ecc6:
uuid_000000000007ecc8:
	mov -1944(%RBP),%RSP
	add $-2016, %RSP
	jmp uuid_000000000007eccb
uuid_000000000007ecc9:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ecc2
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ecbf
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ecb9
	jmp uuid_000000000007ecbb
uuid_000000000007ecb9:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ecbb:
	mov -1960(%RBP),%RSP
	add $-1960, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ecbc
	jmp uuid_000000000007ecbe
uuid_000000000007ecbc:
	mov -2048(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007ecbe:
	mov -2120(%RBP),%RSP
	add $-2120, %RSP
	mov -2080(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007ecc1
uuid_000000000007ecbf:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1696(%RBP)
	popq -1688(%RBP)
	popq -1680(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ecb6
	jmp uuid_000000000007ecb8
uuid_000000000007ecb6:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ecb8:
	mov -1960(%RBP),%RSP
	add $-1960, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -2080(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ecc1:
	mov -1952(%RBP),%RSP
	add $-2112, %RSP
	jmp uuid_000000000007ecc4
uuid_000000000007ecc2:
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	push %RBP
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq $0
	push %RBP
	mov -2096(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eca8
	jmp uuid_000000000007ecaa
uuid_000000000007eca8:
	push %RBP
	mov -2088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eca5
	jmp uuid_000000000007eca7
uuid_000000000007eca5:
	push %RBP
	mov -2080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eca2
	jmp uuid_000000000007eca4
uuid_000000000007eca2:
	movb $1, -2104(%rbp)
uuid_000000000007eca4:
	mov -2200(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007eca7:
	mov -2120(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007ecaa:
	mov -2112(%RBP),%RSP
	add $-2272, %RSP
	mov -2104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ecb3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ecb2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ecb5
uuid_000000000007ecb3:
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ecaf
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ecae
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ecb1
uuid_000000000007ecaf:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1696(%RBP)
	popq -1688(%RBP)
	popq -1680(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ecab
	jmp uuid_000000000007ecad
uuid_000000000007ecab:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ecad:
	mov -2288(%RBP),%RSP
	add $-2288, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -2408(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	pushq -2856(%RBP)
	pushq -2872(%RBP)
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq -3056(%RBP)
	pushq -3064(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	pushq -3088(%RBP)
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	pushq -3120(%RBP)
	pushq -3128(%RBP)
	pushq -3136(%RBP)
	pushq -3144(%RBP)
	pushq -3152(%RBP)
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	pushq -3184(%RBP)
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq -3208(%RBP)
	pushq -3216(%RBP)
	pushq -3224(%RBP)
	pushq -3232(%RBP)
	pushq -3240(%RBP)
	pushq -3248(%RBP)
	pushq -3256(%RBP)
	pushq -3264(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -2448(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007ecb1:
	mov -2280(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007ecb5:
	mov -2024(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007ecc4:
	mov -1944(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007eccb:
	mov -1384(%RBP),%RSP
	add $-3272, %RSP
	jmp uuid_000000000007ecce
uuid_000000000007eccc:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec72
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec6f
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec69
	jmp uuid_000000000007ec6b
uuid_000000000007ec69:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ec6b:
	mov -1400(%RBP),%RSP
	add $-1400, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec6c
	jmp uuid_000000000007ec6e
uuid_000000000007ec6c:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007ec6e:
	mov -1560(%RBP),%RSP
	add $-1560, %RSP
	mov -1520(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007ec71
uuid_000000000007ec6f:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1056(%RBP)
	popq -1048(%RBP)
	popq -1040(%RBP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec66
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1408(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007ec68
uuid_000000000007ec66:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec60
	jmp uuid_000000000007ec62
uuid_000000000007ec60:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ec62:
	mov -1408(%RBP),%RSP
	add $-1408, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec63
	jmp uuid_000000000007ec65
uuid_000000000007ec63:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007ec65:
	mov -1568(%RBP),%RSP
	add $-1568, %RSP
	mov -1528(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ec68:
	mov -1400(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007ec71:
	mov -1392(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007ec74
uuid_000000000007ec72:
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	push %RBP
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ec44
	jmp uuid_000000000007ec46
uuid_000000000007ec44:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ec41
	jmp uuid_000000000007ec43
uuid_000000000007ec41:
	push %RBP
	mov -1520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ec3e
	jmp uuid_000000000007ec40
uuid_000000000007ec3e:
	movb $1, -1544(%rbp)
uuid_000000000007ec40:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007ec43:
	mov -1560(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007ec46:
	mov -1552(%RBP),%RSP
	add $-1712, %RSP
	mov -1544(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ec5d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ec5c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ec5f
uuid_000000000007ec5d:
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec59
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec50
	jmp uuid_000000000007ec52
uuid_000000000007ec50:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ec52:
	mov -1728(%RBP),%RSP
	add $-1728, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec53
	jmp uuid_000000000007ec55
uuid_000000000007ec53:
	mov -1816(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007ec55:
	mov -1888(%RBP),%RSP
	add $-1888, %RSP
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec56
	jmp uuid_000000000007ec58
uuid_000000000007ec56:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007ec58:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
	mov -1848(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1904(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007ec5b
uuid_000000000007ec59:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1056(%RBP)
	popq -1048(%RBP)
	popq -1040(%RBP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec4d
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1736(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007ec4f
uuid_000000000007ec4d:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec47
	jmp uuid_000000000007ec49
uuid_000000000007ec47:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ec49:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec4a
	jmp uuid_000000000007ec4c
uuid_000000000007ec4a:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007ec4c:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
	mov -1856(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1904(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007ec4f:
	mov -1728(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007ec5b:
	mov -1720(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007ec5f:
	mov -1464(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007ec74:
	mov -1384(%RBP),%RSP
	add $-2728, %RSP
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ec75
	jmp uuid_000000000007ec77
uuid_000000000007ec75:
	movq -568(%rbp), %r15
	movq %r15, -552(%rbp)
	mov -568(%rbp), %r15
	mov %r15, -552(%rbp)
uuid_000000000007ec77:
	mov -2736(%RBP),%RSP
	add $-2736, %RSP
uuid_000000000007ecce:
	mov -648(%RBP),%RSP
	add $-2736, %RSP
	pushq -552(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	pushq $0
	subq $424, %rsp
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	pushq 504(%rsp)
	pushq 520(%rsp)
	pushq 536(%rsp)
	pushq 552(%rsp)
	pushq 568(%rsp)
	pushq 584(%rsp)
	pushq 600(%rsp)
	pushq 616(%rsp)
	pushq 632(%rsp)
	pushq 648(%rsp)
	pushq 664(%rsp)
	pushq 680(%rsp)
	pushq 696(%rsp)
	pushq 712(%rsp)
	pushq 728(%rsp)
	pushq 744(%rsp)
	pushq 760(%rsp)
	pushq 776(%rsp)
	pushq 792(%rsp)
	pushq 808(%rsp)
	pushq 824(%rsp)
	pushq 840(%rsp)
	pushq 856(%rsp)
	pushq 872(%rsp)
	pushq 888(%rsp)
	pushq 904(%rsp)
	pushq 920(%rsp)
	pushq 936(%rsp)
	pushq 952(%rsp)
	pushq 968(%rsp)
	pushq 984(%rsp)
	pushq 1000(%rsp)
	pushq 1016(%rsp)
	pushq 1032(%rsp)
	pushq 1048(%rsp)
	pushq 1064(%rsp)
	pushq 1080(%rsp)
	pushq 1096(%rsp)
	pushq 1112(%rsp)
	pushq 1128(%rsp)
	pushq 1144(%rsp)
	pushq 1160(%rsp)
	pushq 1176(%rsp)
	pushq 1192(%rsp)
	pushq 1208(%rsp)
	pushq 1224(%rsp)
	pushq 1240(%rsp)
	pushq 1256(%rsp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	popq -632(%rbp)
	popq -640(%rbp)
	popq -648(%rbp)
	popq -656(%rbp)
	popq -664(%rbp)
	popq -672(%rbp)
	popq -680(%rbp)
	popq -688(%rbp)
	popq -696(%rbp)
	popq -704(%rbp)
	popq -712(%rbp)
	popq -720(%rbp)
	popq -728(%rbp)
	popq -736(%rbp)
	popq -744(%rbp)
	popq -752(%rbp)
	popq -760(%rbp)
	popq -768(%rbp)
	popq -776(%rbp)
	popq -784(%rbp)
	popq -792(%rbp)
	popq -800(%rbp)
	popq -808(%rbp)
	popq -816(%rbp)
	popq -824(%rbp)
	popq -832(%rbp)
	popq -840(%rbp)
	popq -848(%rbp)
	popq -856(%rbp)
	popq -864(%rbp)
	popq -872(%rbp)
	popq -880(%rbp)
	popq -888(%rbp)
	popq -896(%rbp)
	popq -904(%rbp)
	popq -912(%rbp)
	popq -920(%rbp)
	popq -928(%rbp)
	popq -936(%rbp)
	popq -944(%rbp)
	popq -952(%rbp)
	popq -960(%rbp)
	popq -968(%rbp)
	popq -976(%rbp)
	popq -984(%rbp)
	addq $424, %rsp
	mov %rbp, %rsp
	sub $560, %rsp
	ret
blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext:
	pushq $0
	pushq $0
	pushq $3
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007efe5
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007efe2
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ecd5
	jmp uuid_000000000007ecd7
uuid_000000000007ecd5:
	push %RBP
	jmp uuid_000000000007ecd2
	jmp uuid_000000000007ecd4
uuid_000000000007ecd2:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007eccf
	jmp uuid_000000000007ecd1
uuid_000000000007eccf:
	movb $1, -640(%rbp)
uuid_000000000007ecd1:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007ecd4:
	mov -656(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007ecd7:
	mov -648(%RBP),%RSP
	add $-672, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efdf
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ecde
	jmp uuid_000000000007ece0
uuid_000000000007ecde:
	push %RBP
	jmp uuid_000000000007ecdb
	jmp uuid_000000000007ecdd
uuid_000000000007ecdb:
	push %RBP
	mov -688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ecd8
	jmp uuid_000000000007ecda
uuid_000000000007ecd8:
	movb $1, -760(%rbp)
uuid_000000000007ecda:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007ecdd:
	mov -776(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007ece0:
	mov -768(%RBP),%RSP
	add $-792, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efdc
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ecff
	jmp uuid_000000000007ed01
uuid_000000000007ecff:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eced
	jmp uuid_000000000007ecef
uuid_000000000007eced:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ece4
	jmp uuid_000000000007ece6
uuid_000000000007ece4:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	jmp uuid_000000000007ece1
	jmp uuid_000000000007ece3
uuid_000000000007ece1:
	movb $1, -1072(%rbp)
uuid_000000000007ece3:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007ece6:
	mov -1080(%RBP),%RSP
	add $-1112, %RSP
	mov -1072(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ecea
	jmp uuid_000000000007ecec
uuid_000000000007ecea:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ece7
	jmp uuid_000000000007ece9
uuid_000000000007ece7:
	movb $1, -976(%rbp)
uuid_000000000007ece9:
	mov -1120(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007ecec:
	mov -992(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007ecef:
	mov -984(%RBP),%RSP
	add $-1192, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ecfc
	jmp uuid_000000000007ecfe
uuid_000000000007ecfc:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ecf6
	jmp uuid_000000000007ecf8
uuid_000000000007ecf6:
	push %RBP
	jmp uuid_000000000007ecf3
	jmp uuid_000000000007ecf5
uuid_000000000007ecf3:
	push %RBP
	mov -1208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1312(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ecf0
	jmp uuid_000000000007ecf2
uuid_000000000007ecf0:
	movb $1, -1280(%rbp)
uuid_000000000007ecf2:
	mov -1304(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ecf5:
	mov -1296(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ecf8:
	mov -1288(%RBP),%RSP
	add $-1312, %RSP
	mov -1280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ecf9
	jmp uuid_000000000007ecfb
uuid_000000000007ecf9:
	movb $1, -880(%rbp)
uuid_000000000007ecfb:
	mov -1200(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ecfe:
	mov -896(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ed01:
	mov -888(%RBP),%RSP
	add $-1312, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efd9
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed20
	jmp uuid_000000000007ed22
uuid_000000000007ed20:
	push %RBP
	mov -1384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed0e
	jmp uuid_000000000007ed10
uuid_000000000007ed0e:
	push %RBP
	mov -1480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1584(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed05
	jmp uuid_000000000007ed07
uuid_000000000007ed05:
	push %RBP
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	jmp uuid_000000000007ed02
	jmp uuid_000000000007ed04
uuid_000000000007ed02:
	movb $1, -1592(%rbp)
uuid_000000000007ed04:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007ed07:
	mov -1600(%RBP),%RSP
	add $-1632, %RSP
	mov -1592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed0b
	jmp uuid_000000000007ed0d
uuid_000000000007ed0b:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ed08
	jmp uuid_000000000007ed0a
uuid_000000000007ed08:
	movb $1, -1496(%rbp)
uuid_000000000007ed0a:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007ed0d:
	mov -1512(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007ed10:
	mov -1504(%RBP),%RSP
	add $-1712, %RSP
	mov -1496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed1d
	jmp uuid_000000000007ed1f
uuid_000000000007ed1d:
	push %RBP
	mov -1376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed17
	jmp uuid_000000000007ed19
uuid_000000000007ed17:
	push %RBP
	jmp uuid_000000000007ed14
	jmp uuid_000000000007ed16
uuid_000000000007ed14:
	push %RBP
	mov -1728(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ed11
	jmp uuid_000000000007ed13
uuid_000000000007ed11:
	movb $1, -1800(%rbp)
uuid_000000000007ed13:
	mov -1824(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007ed16:
	mov -1816(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007ed19:
	mov -1808(%RBP),%RSP
	add $-1832, %RSP
	mov -1800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed1a
	jmp uuid_000000000007ed1c
uuid_000000000007ed1a:
	movb $1, -1400(%rbp)
uuid_000000000007ed1c:
	mov -1720(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007ed1f:
	mov -1416(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007ed22:
	mov -1408(%RBP),%RSP
	add $-1832, %RSP
	mov -1400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efd6
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -1912(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed32
	jmp uuid_000000000007ed34
uuid_000000000007ed32:
	push %RBP
	mov -1904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ed2f
	jmp uuid_000000000007ed31
uuid_000000000007ed2f:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2088(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed29
	jmp uuid_000000000007ed2b
uuid_000000000007ed29:
	push %RBP
	jmp uuid_000000000007ed26
	jmp uuid_000000000007ed28
uuid_000000000007ed26:
	push %RBP
	mov -2024(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2128(%rbp)
	pushq $uuid_000000000007bb87
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ed23
	jmp uuid_000000000007ed25
uuid_000000000007ed23:
	movb $1, -2096(%rbp)
uuid_000000000007ed25:
	mov -2120(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007ed28:
	mov -2112(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007ed2b:
	mov -2104(%RBP),%RSP
	add $-2128, %RSP
	mov -2096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed2c
	jmp uuid_000000000007ed2e
uuid_000000000007ed2c:
	movb $1, -1920(%rbp)
uuid_000000000007ed2e:
	mov -2016(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007ed31:
	mov -1936(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007ed34:
	mov -1928(%RBP),%RSP
	add $-2128, %RSP
	mov -1920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efd3
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -2208(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eda9
	jmp uuid_000000000007edab
uuid_000000000007eda9:
	push %RBP
	mov -2200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed75
	jmp uuid_000000000007ed77
uuid_000000000007ed75:
	push %RBP
	mov -2296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ed72
	jmp uuid_000000000007ed74
uuid_000000000007ed72:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed6c
	jmp uuid_000000000007ed6e
uuid_000000000007ed6c:
	push %RBP
	mov -2472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2576(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed4e
	jmp uuid_000000000007ed50
uuid_000000000007ed4e:
	push %RBP
	mov -2568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed3b
	jmp uuid_000000000007ed3d
uuid_000000000007ed3b:
	push %RBP
	jmp uuid_000000000007ed38
	jmp uuid_000000000007ed3a
uuid_000000000007ed38:
	push %RBP
	mov -2608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ed35
	jmp uuid_000000000007ed37
uuid_000000000007ed35:
	movb $1, -2680(%rbp)
uuid_000000000007ed37:
	mov -2704(%RBP),%RSP
	add $-2712, %RSP
uuid_000000000007ed3a:
	mov -2696(%RBP),%RSP
	add $-2712, %RSP
uuid_000000000007ed3d:
	mov -2688(%RBP),%RSP
	add $-2712, %RSP
	mov -2680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed4b
	jmp uuid_000000000007ed4d
uuid_000000000007ed4b:
	push %RBP
	mov -2560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed45
	jmp uuid_000000000007ed47
uuid_000000000007ed45:
	push %RBP
	jmp uuid_000000000007ed42
	jmp uuid_000000000007ed44
uuid_000000000007ed42:
	push %RBP
	mov -2728(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2832(%rbp)
	pushq $uuid_000000000007ed3e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ed3f
	jmp uuid_000000000007ed41
uuid_000000000007ed3f:
	movb $1, -2800(%rbp)
uuid_000000000007ed41:
	mov -2824(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007ed44:
	mov -2816(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007ed47:
	mov -2808(%RBP),%RSP
	add $-2832, %RSP
	mov -2800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed48
	jmp uuid_000000000007ed4a
uuid_000000000007ed48:
	movb $1, -2584(%rbp)
uuid_000000000007ed4a:
	mov -2720(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007ed4d:
	mov -2600(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007ed50:
	mov -2592(%RBP),%RSP
	add $-2832, %RSP
	mov -2584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed69
	jmp uuid_000000000007ed6b
uuid_000000000007ed69:
	push %RBP
	mov -2464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2912(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed63
	jmp uuid_000000000007ed65
uuid_000000000007ed63:
	push %RBP
	jmp uuid_000000000007ed60
	jmp uuid_000000000007ed62
uuid_000000000007ed60:
	push %RBP
	mov -2880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3016(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed5d
	jmp uuid_000000000007ed5f
uuid_000000000007ed5d:
	push %RBP
	mov -2872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed57
	jmp uuid_000000000007ed59
uuid_000000000007ed57:
	push %RBP
	jmp uuid_000000000007ed54
	jmp uuid_000000000007ed56
uuid_000000000007ed54:
	push %RBP
	mov -3032(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ed51
	jmp uuid_000000000007ed53
uuid_000000000007ed51:
	movb $1, -3104(%rbp)
uuid_000000000007ed53:
	mov -3128(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed56:
	mov -3120(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed59:
	mov -3112(%RBP),%RSP
	add $-3136, %RSP
	mov -3104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed5a
	jmp uuid_000000000007ed5c
uuid_000000000007ed5a:
	movb $1, -2920(%rbp)
uuid_000000000007ed5c:
	mov -3024(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed5f:
	mov -2944(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed62:
	mov -2936(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed65:
	mov -2928(%RBP),%RSP
	add $-3136, %RSP
	mov -2920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed66
	jmp uuid_000000000007ed68
uuid_000000000007ed66:
	movb $1, -2488(%rbp)
uuid_000000000007ed68:
	mov -2840(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed6b:
	mov -2504(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed6e:
	mov -2496(%RBP),%RSP
	add $-3136, %RSP
	mov -2488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed6f
	jmp uuid_000000000007ed71
uuid_000000000007ed6f:
	movb $1, -2312(%rbp)
uuid_000000000007ed71:
	mov -2408(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed74:
	mov -2328(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007ed77:
	mov -2320(%RBP),%RSP
	add $-3136, %RSP
	mov -2312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eda6
	jmp uuid_000000000007eda8
uuid_000000000007eda6:
	push %RBP
	mov -2192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3216(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eda0
	jmp uuid_000000000007eda2
uuid_000000000007eda0:
	push %RBP
	mov -3208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3312(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed8e
	jmp uuid_000000000007ed90
uuid_000000000007ed8e:
	push %RBP
	mov -3304(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3408(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed7b
	jmp uuid_000000000007ed7d
uuid_000000000007ed7b:
	push %RBP
	jmp uuid_000000000007ed78
	jmp uuid_000000000007ed7a
uuid_000000000007ed78:
	movb $1, -3416(%rbp)
uuid_000000000007ed7a:
	mov -3432(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007ed7d:
	mov -3424(%RBP),%RSP
	add $-3432, %RSP
	mov -3416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed8b
	jmp uuid_000000000007ed8d
uuid_000000000007ed8b:
	push %RBP
	mov -3296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed85
	jmp uuid_000000000007ed87
uuid_000000000007ed85:
	push %RBP
	jmp uuid_000000000007ed82
	jmp uuid_000000000007ed84
uuid_000000000007ed82:
	push %RBP
	mov -3448(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3552(%rbp)
	pushq $uuid_000000000007ed7e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ed7f
	jmp uuid_000000000007ed81
uuid_000000000007ed7f:
	movb $1, -3520(%rbp)
uuid_000000000007ed81:
	mov -3544(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007ed84:
	mov -3536(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007ed87:
	mov -3528(%RBP),%RSP
	add $-3552, %RSP
	mov -3520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed88
	jmp uuid_000000000007ed8a
uuid_000000000007ed88:
	movb $1, -3320(%rbp)
uuid_000000000007ed8a:
	mov -3440(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007ed8d:
	mov -3336(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007ed90:
	mov -3328(%RBP),%RSP
	add $-3552, %RSP
	mov -3320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed9d
	jmp uuid_000000000007ed9f
uuid_000000000007ed9d:
	push %RBP
	mov -3200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3632(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ed97
	jmp uuid_000000000007ed99
uuid_000000000007ed97:
	push %RBP
	jmp uuid_000000000007ed94
	jmp uuid_000000000007ed96
uuid_000000000007ed94:
	push %RBP
	mov -3568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3672(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ed91
	jmp uuid_000000000007ed93
uuid_000000000007ed91:
	movb $1, -3640(%rbp)
uuid_000000000007ed93:
	mov -3664(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007ed96:
	mov -3656(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007ed99:
	mov -3648(%RBP),%RSP
	add $-3672, %RSP
	mov -3640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ed9a
	jmp uuid_000000000007ed9c
uuid_000000000007ed9a:
	movb $1, -3224(%rbp)
uuid_000000000007ed9c:
	mov -3560(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007ed9f:
	mov -3240(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007eda2:
	mov -3232(%RBP),%RSP
	add $-3672, %RSP
	mov -3224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eda3
	jmp uuid_000000000007eda5
uuid_000000000007eda3:
	movb $1, -2216(%rbp)
uuid_000000000007eda5:
	mov -3144(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007eda8:
	mov -2232(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007edab:
	mov -2224(%RBP),%RSP
	add $-3672, %RSP
	mov -2216(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efd0
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee14
	jmp uuid_000000000007ee16
uuid_000000000007ee14:
	push %RBP
	mov -3744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ede0
	jmp uuid_000000000007ede2
uuid_000000000007ede0:
	push %RBP
	mov -3840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eddd
	jmp uuid_000000000007eddf
uuid_000000000007eddd:
	push %RBP
	mov -3832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4024(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007edd7
	jmp uuid_000000000007edd9
uuid_000000000007edd7:
	push %RBP
	mov -4016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007edd4
	jmp uuid_000000000007edd6
uuid_000000000007edd4:
	push %RBP
	mov -4008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4200(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007edce
	jmp uuid_000000000007edd0
uuid_000000000007edce:
	push %RBP
	jmp uuid_000000000007edcb
	jmp uuid_000000000007edcd
uuid_000000000007edcb:
	push %RBP
	mov -4168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4304(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007edc8
	jmp uuid_000000000007edca
uuid_000000000007edc8:
	push %RBP
	mov -4160(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007edc2
	jmp uuid_000000000007edc4
uuid_000000000007edc2:
	push %RBP
	jmp uuid_000000000007edbf
	jmp uuid_000000000007edc1
uuid_000000000007edbf:
	push %RBP
	mov -4320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007edbc
	jmp uuid_000000000007edbe
uuid_000000000007edbc:
	movb $1, -4392(%rbp)
uuid_000000000007edbe:
	mov -4416(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007edc1:
	mov -4408(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007edc4:
	mov -4400(%RBP),%RSP
	add $-4424, %RSP
	mov -4392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007edc5
	jmp uuid_000000000007edc7
uuid_000000000007edc5:
	movb $1, -4208(%rbp)
uuid_000000000007edc7:
	mov -4312(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007edca:
	mov -4232(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007edcd:
	mov -4224(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007edd0:
	mov -4216(%RBP),%RSP
	add $-4424, %RSP
	mov -4208(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007edd1
	jmp uuid_000000000007edd3
uuid_000000000007edd1:
	movb $1, -4032(%rbp)
uuid_000000000007edd3:
	mov -4128(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007edd6:
	mov -4048(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007edd9:
	mov -4040(%RBP),%RSP
	add $-4424, %RSP
	mov -4032(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007edda
	jmp uuid_000000000007eddc
uuid_000000000007edda:
	movb $1, -3856(%rbp)
uuid_000000000007eddc:
	mov -3952(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007eddf:
	mov -3872(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007ede2:
	mov -3864(%RBP),%RSP
	add $-4424, %RSP
	mov -3856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee11
	jmp uuid_000000000007ee13
uuid_000000000007ee11:
	push %RBP
	mov -3736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4504(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee0b
	jmp uuid_000000000007ee0d
uuid_000000000007ee0b:
	push %RBP
	mov -4496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007edf9
	jmp uuid_000000000007edfb
uuid_000000000007edf9:
	push %RBP
	mov -4592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4696(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ede6
	jmp uuid_000000000007ede8
uuid_000000000007ede6:
	push %RBP
	jmp uuid_000000000007ede3
	jmp uuid_000000000007ede5
uuid_000000000007ede3:
	movb $1, -4704(%rbp)
uuid_000000000007ede5:
	mov -4720(%RBP),%RSP
	add $-4720, %RSP
uuid_000000000007ede8:
	mov -4712(%RBP),%RSP
	add $-4720, %RSP
	mov -4704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007edf6
	jmp uuid_000000000007edf8
uuid_000000000007edf6:
	push %RBP
	mov -4584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4800(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007edf0
	jmp uuid_000000000007edf2
uuid_000000000007edf0:
	push %RBP
	jmp uuid_000000000007eded
	jmp uuid_000000000007edef
uuid_000000000007eded:
	push %RBP
	mov -4736(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4840(%rbp)
	pushq $uuid_000000000007ede9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007edea
	jmp uuid_000000000007edec
uuid_000000000007edea:
	movb $1, -4808(%rbp)
uuid_000000000007edec:
	mov -4832(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007edef:
	mov -4824(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007edf2:
	mov -4816(%RBP),%RSP
	add $-4840, %RSP
	mov -4808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007edf3
	jmp uuid_000000000007edf5
uuid_000000000007edf3:
	movb $1, -4608(%rbp)
uuid_000000000007edf5:
	mov -4728(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007edf8:
	mov -4624(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007edfb:
	mov -4616(%RBP),%RSP
	add $-4840, %RSP
	mov -4608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee08
	jmp uuid_000000000007ee0a
uuid_000000000007ee08:
	push %RBP
	mov -4488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4920(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee02
	jmp uuid_000000000007ee04
uuid_000000000007ee02:
	push %RBP
	jmp uuid_000000000007edff
	jmp uuid_000000000007ee01
uuid_000000000007edff:
	push %RBP
	mov -4856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007edfc
	jmp uuid_000000000007edfe
uuid_000000000007edfc:
	movb $1, -4928(%rbp)
uuid_000000000007edfe:
	mov -4952(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007ee01:
	mov -4944(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007ee04:
	mov -4936(%RBP),%RSP
	add $-4960, %RSP
	mov -4928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee05
	jmp uuid_000000000007ee07
uuid_000000000007ee05:
	movb $1, -4512(%rbp)
uuid_000000000007ee07:
	mov -4848(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007ee0a:
	mov -4528(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007ee0d:
	mov -4520(%RBP),%RSP
	add $-4960, %RSP
	mov -4512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee0e
	jmp uuid_000000000007ee10
uuid_000000000007ee0e:
	movb $1, -3760(%rbp)
uuid_000000000007ee10:
	mov -4432(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007ee13:
	mov -3776(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007ee16:
	mov -3768(%RBP),%RSP
	add $-4960, %RSP
	mov -3760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efcd
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5040(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee43
	jmp uuid_000000000007ee45
uuid_000000000007ee43:
	push %RBP
	mov -5032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5136(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee30
	jmp uuid_000000000007ee32
uuid_000000000007ee30:
	push %RBP
	mov -5128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee2d
	jmp uuid_000000000007ee2f
uuid_000000000007ee2d:
	push %RBP
	mov -5120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee2a
	jmp uuid_000000000007ee2c
uuid_000000000007ee2a:
	movb $1, -5144(%rbp)
uuid_000000000007ee2c:
	mov -5240(%RBP),%RSP
	add $-5312, %RSP
uuid_000000000007ee2f:
	mov -5160(%RBP),%RSP
	add $-5312, %RSP
uuid_000000000007ee32:
	mov -5152(%RBP),%RSP
	add $-5312, %RSP
	mov -5144(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee40
	jmp uuid_000000000007ee42
uuid_000000000007ee40:
	push %RBP
	mov -5024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee3a
	jmp uuid_000000000007ee3c
uuid_000000000007ee3a:
	push %RBP
	jmp uuid_000000000007ee37
	jmp uuid_000000000007ee39
uuid_000000000007ee37:
	push %RBP
	mov -5328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5432(%rbp)
	pushq $uuid_000000000007ee33
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ee34
	jmp uuid_000000000007ee36
uuid_000000000007ee34:
	movb $1, -5400(%rbp)
uuid_000000000007ee36:
	mov -5424(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007ee39:
	mov -5416(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007ee3c:
	mov -5408(%RBP),%RSP
	add $-5432, %RSP
	mov -5400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee3d
	jmp uuid_000000000007ee3f
uuid_000000000007ee3d:
	movb $1, -5048(%rbp)
uuid_000000000007ee3f:
	mov -5320(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007ee42:
	mov -5064(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007ee45:
	mov -5056(%RBP),%RSP
	add $-5432, %RSP
	mov -5048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efca
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee59
	jmp uuid_000000000007ee5b
uuid_000000000007ee59:
	push %RBP
	jmp uuid_000000000007ee56
	jmp uuid_000000000007ee58
uuid_000000000007ee56:
	push %RBP
	mov -5496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee50
	jmp uuid_000000000007ee52
uuid_000000000007ee50:
	push %RBP
	jmp uuid_000000000007ee4d
	jmp uuid_000000000007ee4f
uuid_000000000007ee4d:
	push %RBP
	mov -5552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5656(%rbp)
	pushq $uuid_000000000007ee49
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ee4a
	jmp uuid_000000000007ee4c
uuid_000000000007ee4a:
	movb $1, -5624(%rbp)
uuid_000000000007ee4c:
	mov -5648(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007ee4f:
	mov -5640(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007ee52:
	mov -5632(%RBP),%RSP
	add $-5656, %RSP
	mov -5624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee53
	jmp uuid_000000000007ee55
uuid_000000000007ee53:
	movb $1, -5520(%rbp)
uuid_000000000007ee55:
	mov -5544(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007ee58:
	mov -5536(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007ee5b:
	mov -5528(%RBP),%RSP
	add $-5656, %RSP
	mov -5520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efc7
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee6c
	jmp uuid_000000000007ee6e
uuid_000000000007ee6c:
	push %RBP
	mov -5728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee69
	jmp uuid_000000000007ee6b
uuid_000000000007ee69:
	push %RBP
	mov -5720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5912(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee63
	jmp uuid_000000000007ee65
uuid_000000000007ee63:
	push %RBP
	jmp uuid_000000000007ee60
	jmp uuid_000000000007ee62
uuid_000000000007ee60:
	push %RBP
	mov -5848(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq $uuid_000000000007ee5c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ee5d
	jmp uuid_000000000007ee5f
uuid_000000000007ee5d:
	movb $1, -5920(%rbp)
uuid_000000000007ee5f:
	mov -5944(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007ee62:
	mov -5936(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007ee65:
	mov -5928(%RBP),%RSP
	add $-5952, %RSP
	mov -5920(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee66
	jmp uuid_000000000007ee68
uuid_000000000007ee66:
	movb $1, -5744(%rbp)
uuid_000000000007ee68:
	mov -5840(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007ee6b:
	mov -5760(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007ee6e:
	mov -5752(%RBP),%RSP
	add $-5952, %RSP
	mov -5744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efc4
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee88
	jmp uuid_000000000007ee8a
uuid_000000000007ee88:
	push %RBP
	mov -6024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee75
	jmp uuid_000000000007ee77
uuid_000000000007ee75:
	push %RBP
	mov -6120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee72
	jmp uuid_000000000007ee74
uuid_000000000007ee72:
	push %RBP
	mov -6112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee6f
	jmp uuid_000000000007ee71
uuid_000000000007ee6f:
	movb $1, -6136(%rbp)
uuid_000000000007ee71:
	mov -6232(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007ee74:
	mov -6152(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007ee77:
	mov -6144(%RBP),%RSP
	add $-6304, %RSP
	mov -6136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee85
	jmp uuid_000000000007ee87
uuid_000000000007ee85:
	push %RBP
	mov -6016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee7f
	jmp uuid_000000000007ee81
uuid_000000000007ee7f:
	push %RBP
	jmp uuid_000000000007ee7c
	jmp uuid_000000000007ee7e
uuid_000000000007ee7c:
	push %RBP
	mov -6320(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6424(%rbp)
	pushq $uuid_000000000007ee78
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ee79
	jmp uuid_000000000007ee7b
uuid_000000000007ee79:
	movb $1, -6392(%rbp)
uuid_000000000007ee7b:
	mov -6416(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007ee7e:
	mov -6408(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007ee81:
	mov -6400(%RBP),%RSP
	add $-6424, %RSP
	mov -6392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee82
	jmp uuid_000000000007ee84
uuid_000000000007ee82:
	movb $1, -6040(%rbp)
uuid_000000000007ee84:
	mov -6312(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007ee87:
	mov -6056(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007ee8a:
	mov -6048(%RBP),%RSP
	add $-6424, %RSP
	mov -6040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efc1
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6504(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eea6
	jmp uuid_000000000007eea8
uuid_000000000007eea6:
	push %RBP
	mov -6496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee94
	jmp uuid_000000000007ee96
uuid_000000000007ee94:
	push %RBP
	mov -6592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee91
	jmp uuid_000000000007ee93
uuid_000000000007ee91:
	push %RBP
	mov -6584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee8e
	jmp uuid_000000000007ee90
uuid_000000000007ee8e:
	movb $1, -6608(%rbp)
uuid_000000000007ee90:
	mov -6704(%RBP),%RSP
	add $-6776, %RSP
uuid_000000000007ee93:
	mov -6624(%RBP),%RSP
	add $-6776, %RSP
uuid_000000000007ee96:
	mov -6616(%RBP),%RSP
	add $-6776, %RSP
	mov -6608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eea3
	jmp uuid_000000000007eea5
uuid_000000000007eea3:
	push %RBP
	mov -6488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6856(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee9d
	jmp uuid_000000000007ee9f
uuid_000000000007ee9d:
	push %RBP
	jmp uuid_000000000007ee9a
	jmp uuid_000000000007ee9c
uuid_000000000007ee9a:
	push %RBP
	mov -6792(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6896(%rbp)
	pushq $uuid_000000000007b981
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ee97
	jmp uuid_000000000007ee99
uuid_000000000007ee97:
	movb $1, -6864(%rbp)
uuid_000000000007ee99:
	mov -6888(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007ee9c:
	mov -6880(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007ee9f:
	mov -6872(%RBP),%RSP
	add $-6896, %RSP
	mov -6864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eea0
	jmp uuid_000000000007eea2
uuid_000000000007eea0:
	movb $1, -6512(%rbp)
uuid_000000000007eea2:
	mov -6784(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007eea5:
	mov -6528(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007eea8:
	mov -6520(%RBP),%RSP
	add $-6896, %RSP
	mov -6512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efbe
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6976(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eec5
	jmp uuid_000000000007eec7
uuid_000000000007eec5:
	push %RBP
	mov -6968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eeb2
	jmp uuid_000000000007eeb4
uuid_000000000007eeb2:
	push %RBP
	mov -7064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eeaf
	jmp uuid_000000000007eeb1
uuid_000000000007eeaf:
	push %RBP
	mov -7056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eeac
	jmp uuid_000000000007eeae
uuid_000000000007eeac:
	movb $1, -7080(%rbp)
uuid_000000000007eeae:
	mov -7176(%RBP),%RSP
	add $-7248, %RSP
uuid_000000000007eeb1:
	mov -7096(%RBP),%RSP
	add $-7248, %RSP
uuid_000000000007eeb4:
	mov -7088(%RBP),%RSP
	add $-7248, %RSP
	mov -7080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eec2
	jmp uuid_000000000007eec4
uuid_000000000007eec2:
	push %RBP
	mov -6960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7328(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eebc
	jmp uuid_000000000007eebe
uuid_000000000007eebc:
	push %RBP
	jmp uuid_000000000007eeb9
	jmp uuid_000000000007eebb
uuid_000000000007eeb9:
	push %RBP
	mov -7264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7368(%rbp)
	pushq $uuid_000000000007eeb5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eeb6
	jmp uuid_000000000007eeb8
uuid_000000000007eeb6:
	movb $1, -7336(%rbp)
uuid_000000000007eeb8:
	mov -7360(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007eebb:
	mov -7352(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007eebe:
	mov -7344(%RBP),%RSP
	add $-7368, %RSP
	mov -7336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eebf
	jmp uuid_000000000007eec1
uuid_000000000007eebf:
	movb $1, -6984(%rbp)
uuid_000000000007eec1:
	mov -7256(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007eec4:
	mov -7000(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007eec7:
	mov -6992(%RBP),%RSP
	add $-7368, %RSP
	mov -6984(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efbb
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -7448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eee1
	jmp uuid_000000000007eee3
uuid_000000000007eee1:
	push %RBP
	mov -7440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7544(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eece
	jmp uuid_000000000007eed0
uuid_000000000007eece:
	push %RBP
	mov -7536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eecb
	jmp uuid_000000000007eecd
uuid_000000000007eecb:
	push %RBP
	mov -7528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eec8
	jmp uuid_000000000007eeca
uuid_000000000007eec8:
	movb $1, -7552(%rbp)
uuid_000000000007eeca:
	mov -7648(%RBP),%RSP
	add $-7720, %RSP
uuid_000000000007eecd:
	mov -7568(%RBP),%RSP
	add $-7720, %RSP
uuid_000000000007eed0:
	mov -7560(%RBP),%RSP
	add $-7720, %RSP
	mov -7552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eede
	jmp uuid_000000000007eee0
uuid_000000000007eede:
	push %RBP
	mov -7432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7800(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eed8
	jmp uuid_000000000007eeda
uuid_000000000007eed8:
	push %RBP
	jmp uuid_000000000007eed5
	jmp uuid_000000000007eed7
uuid_000000000007eed5:
	push %RBP
	mov -7736(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7840(%rbp)
	pushq $uuid_000000000007eed1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eed2
	jmp uuid_000000000007eed4
uuid_000000000007eed2:
	movb $1, -7808(%rbp)
uuid_000000000007eed4:
	mov -7832(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007eed7:
	mov -7824(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007eeda:
	mov -7816(%RBP),%RSP
	add $-7840, %RSP
	mov -7808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eedb
	jmp uuid_000000000007eedd
uuid_000000000007eedb:
	movb $1, -7456(%rbp)
uuid_000000000007eedd:
	mov -7728(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007eee0:
	mov -7472(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007eee3:
	mov -7464(%RBP),%RSP
	add $-7840, %RSP
	mov -7456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efb8
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -7920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eefd
	jmp uuid_000000000007eeff
uuid_000000000007eefd:
	push %RBP
	mov -7912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eeea
	jmp uuid_000000000007eeec
uuid_000000000007eeea:
	push %RBP
	mov -8008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eee7
	jmp uuid_000000000007eee9
uuid_000000000007eee7:
	push %RBP
	mov -8000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007eee4
	jmp uuid_000000000007eee6
uuid_000000000007eee4:
	movb $1, -8024(%rbp)
uuid_000000000007eee6:
	mov -8120(%RBP),%RSP
	add $-8192, %RSP
uuid_000000000007eee9:
	mov -8040(%RBP),%RSP
	add $-8192, %RSP
uuid_000000000007eeec:
	mov -8032(%RBP),%RSP
	add $-8192, %RSP
	mov -8024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eefa
	jmp uuid_000000000007eefc
uuid_000000000007eefa:
	push %RBP
	mov -7904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8272(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eef4
	jmp uuid_000000000007eef6
uuid_000000000007eef4:
	push %RBP
	jmp uuid_000000000007eef1
	jmp uuid_000000000007eef3
uuid_000000000007eef1:
	push %RBP
	mov -8208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8312(%rbp)
	pushq $uuid_000000000007eeed
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eeee
	jmp uuid_000000000007eef0
uuid_000000000007eeee:
	movb $1, -8280(%rbp)
uuid_000000000007eef0:
	mov -8304(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007eef3:
	mov -8296(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007eef6:
	mov -8288(%RBP),%RSP
	add $-8312, %RSP
	mov -8280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eef7
	jmp uuid_000000000007eef9
uuid_000000000007eef7:
	movb $1, -7928(%rbp)
uuid_000000000007eef9:
	mov -8200(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007eefc:
	mov -7944(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007eeff:
	mov -7936(%RBP),%RSP
	add $-8312, %RSP
	mov -7928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efb5
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -8392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef18
	jmp uuid_000000000007ef1a
uuid_000000000007ef18:
	push %RBP
	mov -8384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef06
	jmp uuid_000000000007ef08
uuid_000000000007ef06:
	push %RBP
	mov -8480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef03
	jmp uuid_000000000007ef05
uuid_000000000007ef03:
	push %RBP
	mov -8472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef00
	jmp uuid_000000000007ef02
uuid_000000000007ef00:
	movb $1, -8496(%rbp)
uuid_000000000007ef02:
	mov -8592(%RBP),%RSP
	add $-8664, %RSP
uuid_000000000007ef05:
	mov -8512(%RBP),%RSP
	add $-8664, %RSP
uuid_000000000007ef08:
	mov -8504(%RBP),%RSP
	add $-8664, %RSP
	mov -8496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef15
	jmp uuid_000000000007ef17
uuid_000000000007ef15:
	push %RBP
	mov -8376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8744(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef0f
	jmp uuid_000000000007ef11
uuid_000000000007ef0f:
	push %RBP
	jmp uuid_000000000007ef0c
	jmp uuid_000000000007ef0e
uuid_000000000007ef0c:
	push %RBP
	mov -8680(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8784(%rbp)
	pushq $uuid_000000000007b95a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ef09
	jmp uuid_000000000007ef0b
uuid_000000000007ef09:
	movb $1, -8752(%rbp)
uuid_000000000007ef0b:
	mov -8776(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007ef0e:
	mov -8768(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007ef11:
	mov -8760(%RBP),%RSP
	add $-8784, %RSP
	mov -8752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef12
	jmp uuid_000000000007ef14
uuid_000000000007ef12:
	movb $1, -8400(%rbp)
uuid_000000000007ef14:
	mov -8672(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007ef17:
	mov -8416(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007ef1a:
	mov -8408(%RBP),%RSP
	add $-8784, %RSP
	mov -8400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efb2
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -8864(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef33
	jmp uuid_000000000007ef35
uuid_000000000007ef33:
	push %RBP
	mov -8856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8960(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef21
	jmp uuid_000000000007ef23
uuid_000000000007ef21:
	push %RBP
	mov -8952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef1e
	jmp uuid_000000000007ef20
uuid_000000000007ef1e:
	push %RBP
	mov -8944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef1b
	jmp uuid_000000000007ef1d
uuid_000000000007ef1b:
	movb $1, -8968(%rbp)
uuid_000000000007ef1d:
	mov -9064(%RBP),%RSP
	add $-9136, %RSP
uuid_000000000007ef20:
	mov -8984(%RBP),%RSP
	add $-9136, %RSP
uuid_000000000007ef23:
	mov -8976(%RBP),%RSP
	add $-9136, %RSP
	mov -8968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef30
	jmp uuid_000000000007ef32
uuid_000000000007ef30:
	push %RBP
	mov -8848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9216(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef2a
	jmp uuid_000000000007ef2c
uuid_000000000007ef2a:
	push %RBP
	jmp uuid_000000000007ef27
	jmp uuid_000000000007ef29
uuid_000000000007ef27:
	push %RBP
	mov -9152(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9256(%rbp)
	pushq $uuid_000000000007b62f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ef24
	jmp uuid_000000000007ef26
uuid_000000000007ef24:
	movb $1, -9224(%rbp)
uuid_000000000007ef26:
	mov -9248(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007ef29:
	mov -9240(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007ef2c:
	mov -9232(%RBP),%RSP
	add $-9256, %RSP
	mov -9224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef2d
	jmp uuid_000000000007ef2f
uuid_000000000007ef2d:
	movb $1, -8872(%rbp)
uuid_000000000007ef2f:
	mov -9144(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007ef32:
	mov -8888(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007ef35:
	mov -8880(%RBP),%RSP
	add $-9256, %RSP
	mov -8872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efaf
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -9336(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef57
	jmp uuid_000000000007ef59
uuid_000000000007ef57:
	push %RBP
	mov -9328(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef54
	jmp uuid_000000000007ef56
uuid_000000000007ef54:
	push %RBP
	mov -9320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef4e
	jmp uuid_000000000007ef50
uuid_000000000007ef4e:
	push %RBP
	mov -9504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef4b
	jmp uuid_000000000007ef4d
uuid_000000000007ef4b:
	push %RBP
	mov -9496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef45
	jmp uuid_000000000007ef47
uuid_000000000007ef45:
	push %RBP
	mov -9680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef42
	jmp uuid_000000000007ef44
uuid_000000000007ef42:
	push %RBP
	mov -9672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9864(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef3c
	jmp uuid_000000000007ef3e
uuid_000000000007ef3c:
	push %RBP
	jmp uuid_000000000007ef39
	jmp uuid_000000000007ef3b
uuid_000000000007ef39:
	push %RBP
	mov -9800(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9904(%rbp)
	pushq $uuid_000000000007baea
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ef36
	jmp uuid_000000000007ef38
uuid_000000000007ef36:
	movb $1, -9872(%rbp)
uuid_000000000007ef38:
	mov -9896(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007ef3b:
	mov -9888(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007ef3e:
	mov -9880(%RBP),%RSP
	add $-9904, %RSP
	mov -9872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef3f
	jmp uuid_000000000007ef41
uuid_000000000007ef3f:
	movb $1, -9696(%rbp)
uuid_000000000007ef41:
	mov -9792(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007ef44:
	mov -9712(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007ef47:
	mov -9704(%RBP),%RSP
	add $-9904, %RSP
	mov -9696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef48
	jmp uuid_000000000007ef4a
uuid_000000000007ef48:
	movb $1, -9520(%rbp)
uuid_000000000007ef4a:
	mov -9616(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007ef4d:
	mov -9536(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007ef50:
	mov -9528(%RBP),%RSP
	add $-9904, %RSP
	mov -9520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef51
	jmp uuid_000000000007ef53
uuid_000000000007ef51:
	movb $1, -9344(%rbp)
uuid_000000000007ef53:
	mov -9440(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007ef56:
	mov -9360(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007ef59:
	mov -9352(%RBP),%RSP
	add $-9904, %RSP
	mov -9344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efac
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -9984(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef82
	jmp uuid_000000000007ef84
uuid_000000000007ef82:
	push %RBP
	mov -9976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef7f
	jmp uuid_000000000007ef81
uuid_000000000007ef7f:
	push %RBP
	mov -9968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -10160(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef79
	jmp uuid_000000000007ef7b
uuid_000000000007ef79:
	push %RBP
	pushq -10136(%RBP)
	pushq -10144(%RBP)
	pushq -10152(%RBP)
	jmp uuid_000000000007ef76
	jmp uuid_000000000007ef78
uuid_000000000007ef76:
	push %RBP
	mov -10128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -10288(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef73
	jmp uuid_000000000007ef75
uuid_000000000007ef73:
	push %RBP
	mov -10120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -10368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef6d
	jmp uuid_000000000007ef6f
uuid_000000000007ef6d:
	push %RBP
	jmp uuid_000000000007ef6a
	jmp uuid_000000000007ef6c
uuid_000000000007ef6a:
	push %RBP
	mov -10304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ef67
	jmp uuid_000000000007ef69
uuid_000000000007ef67:
	movb $1, -10376(%rbp)
uuid_000000000007ef69:
	mov -10400(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007ef6c:
	mov -10392(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007ef6f:
	mov -10384(%RBP),%RSP
	add $-10408, %RSP
	mov -10376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef70
	jmp uuid_000000000007ef72
uuid_000000000007ef70:
	movb $1, -10168(%rbp)
uuid_000000000007ef72:
	mov -10296(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007ef75:
	mov -10216(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007ef78:
	mov -10184(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007ef7b:
	mov -10176(%RBP),%RSP
	add $-10408, %RSP
	mov -10168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef7c
	jmp uuid_000000000007ef7e
uuid_000000000007ef7c:
	movb $1, -9992(%rbp)
uuid_000000000007ef7e:
	mov -10088(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007ef81:
	mov -10008(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007ef84:
	mov -10000(%RBP),%RSP
	add $-10408, %RSP
	mov -9992(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efa9
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -10488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef8b
	jmp uuid_000000000007ef8d
uuid_000000000007ef8b:
	push %RBP
	mov -10480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef88
	jmp uuid_000000000007ef8a
uuid_000000000007ef88:
	push %RBP
	mov -10472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ef85
	jmp uuid_000000000007ef87
uuid_000000000007ef85:
	movb $1, -10496(%rbp)
uuid_000000000007ef87:
	mov -10592(%RBP),%RSP
	add $-10664, %RSP
uuid_000000000007ef8a:
	mov -10512(%RBP),%RSP
	add $-10664, %RSP
uuid_000000000007ef8d:
	mov -10504(%RBP),%RSP
	add $-10664, %RSP
	mov -10496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007efa6
	push %RBP
	jmp uuid_000000000007efa3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007efa2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007efa5
uuid_000000000007efa3:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007efa1
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007efa5:
	mov -10672(%RBP),%RSP
	add $-10672, %RSP
	jmp uuid_000000000007efa8
uuid_000000000007efa6:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ef9e
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10680(%RBP)
	pushq -10688(%RBP)
	pushq -10696(%RBP)
	pushq -10704(%RBP)
	pushq -10712(%RBP)
	pushq -10720(%RBP)
	pushq -10728(%RBP)
	pushq -10736(%RBP)
	pushq -10744(%RBP)
	pushq -10752(%RBP)
	pushq -10760(%RBP)
	pushq -10768(%RBP)
	pushq -10776(%RBP)
	pushq -10784(%RBP)
	pushq -10792(%RBP)
	pushq -10800(%RBP)
	pushq -10808(%RBP)
	pushq -10816(%RBP)
	pushq -10824(%RBP)
	pushq -10832(%RBP)
	pushq -10840(%RBP)
	pushq -10848(%RBP)
	pushq -10856(%RBP)
	pushq -10864(%RBP)
	pushq -10872(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10912(%RBP)
	pushq -10920(%RBP)
	pushq -10928(%RBP)
	pushq -10936(%RBP)
	pushq -10944(%RBP)
	pushq -10952(%RBP)
	pushq -10960(%RBP)
	pushq -10968(%RBP)
	pushq -10976(%RBP)
	pushq -10984(%RBP)
	pushq -10992(%RBP)
	pushq -11000(%RBP)
	pushq -11008(%RBP)
	pushq -11016(%RBP)
	pushq -11024(%RBP)
	pushq -11032(%RBP)
	pushq -11040(%RBP)
	pushq -11048(%RBP)
	pushq -11056(%RBP)
	pushq -11064(%RBP)
	pushq -11072(%RBP)
	pushq -11080(%RBP)
	pushq -11088(%RBP)
	pushq -11096(%RBP)
	pushq -11104(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -10880(%RBP)
	pushq -10888(%RBP)
	pushq -10896(%RBP)
	pushq -11112(%RBP)
	pushq -11120(%RBP)
	pushq -11128(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -11144(%rbp)
	pushq -11152(%rbp)
	pushq -11160(%rbp)
	pushq -11168(%rbp)
	pushq -11176(%rbp)
	pushq -11184(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007efa0
uuid_000000000007ef9e:
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	push %RBP
	pushq -10680(%rbp)
	pushq -10688(%rbp)
	pushq -10696(%rbp)
	pushq -10704(%rbp)
	pushq -10712(%rbp)
	pushq -10720(%rbp)
	pushq -10728(%rbp)
	pushq -10736(%rbp)
	pushq -10744(%rbp)
	pushq $0
	push %RBP
	mov -10824(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef94
	jmp uuid_000000000007ef96
uuid_000000000007ef94:
	push %RBP
	jmp uuid_000000000007ef91
	jmp uuid_000000000007ef93
uuid_000000000007ef91:
	push %RBP
	mov -10760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ef8e
	jmp uuid_000000000007ef90
uuid_000000000007ef8e:
	movb $1, -10832(%rbp)
uuid_000000000007ef90:
	mov -10856(%RBP),%RSP
	add $-10864, %RSP
uuid_000000000007ef93:
	mov -10848(%RBP),%RSP
	add $-10864, %RSP
uuid_000000000007ef96:
	mov -10840(%RBP),%RSP
	add $-10864, %RSP
	mov -10832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef9b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ef9a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ef9d
uuid_000000000007ef9b:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10864(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ef97
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -10864(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10880(%rbp)
	pushq -10888(%rbp)
	pushq -10896(%rbp)
	pushq -10904(%rbp)
	pushq -10912(%rbp)
	pushq -10920(%rbp)
	pushq -10928(%rbp)
	pushq -10936(%rbp)
	pushq -10944(%rbp)
	pushq -10952(%rbp)
	pushq -10960(%rbp)
	pushq -10968(%rbp)
	pushq -10976(%rbp)
	pushq -10984(%rbp)
	pushq -10992(%rbp)
	pushq -11000(%rbp)
	pushq -11008(%rbp)
	pushq -11016(%rbp)
	pushq -11024(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007ef99
uuid_000000000007ef97:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -10864(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -11080(%RBP)
	pushq -11088(%RBP)
	pushq -11096(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ef99:
	mov -10872(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007ef9d:
	mov -10752(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007efa0:
	mov -10672(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007efa8:
	mov -10416(%RBP),%RSP
	add $-11104, %RSP
	jmp uuid_000000000007efab
uuid_000000000007efa9:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10016(%rbp)
	pushq -10024(%rbp)
	pushq -10032(%rbp)
	pushq -10040(%rbp)
	pushq -10048(%rbp)
	pushq -10056(%rbp)
	pushq -10064(%rbp)
	pushq -10072(%rbp)
	pushq -10080(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10768(%RBP)
	pushq -10776(%RBP)
	pushq -10784(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -208(%rbp)
	pushq -10800(%rbp)
	pushq -10808(%rbp)
	pushq -10816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -10560(%RBP)
	popq -10552(%RBP)
	popq -10544(%RBP)
	popq -10536(%RBP)
	popq -10528(%RBP)
	popq -10520(%RBP)
	popq -10512(%RBP)
	popq -10504(%RBP)
	popq -10496(%RBP)
	popq -10488(%RBP)
	popq -10480(%RBP)
	popq -10472(%RBP)
	popq -10464(%RBP)
	popq -10456(%RBP)
	popq -10448(%RBP)
	popq -10440(%RBP)
	popq -10432(%RBP)
	popq -10424(%RBP)
	popq -10416(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq $uuid_000000000007da57
	pushq -10800(%rbp)
	pushq -10808(%rbp)
	pushq -10816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -10560(%RBP)
	popq -10552(%RBP)
	popq -10544(%RBP)
	popq -10536(%RBP)
	popq -10528(%RBP)
	popq -10520(%RBP)
	popq -10512(%RBP)
	popq -10504(%RBP)
	popq -10496(%RBP)
	popq -10488(%RBP)
	popq -10480(%RBP)
	popq -10472(%RBP)
	popq -10464(%RBP)
	popq -10456(%RBP)
	popq -10448(%RBP)
	popq -10440(%RBP)
	popq -10432(%RBP)
	popq -10424(%RBP)
	popq -10416(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -10408(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10016(%rbp)
	pushq -10024(%rbp)
	pushq -10032(%rbp)
	pushq -10040(%rbp)
	pushq -10048(%rbp)
	pushq -10056(%rbp)
	pushq -10064(%rbp)
	pushq -10072(%rbp)
	pushq -10080(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007efab:
	mov -9912(%RBP),%RSP
	add $-10816, %RSP
	jmp uuid_000000000007efae
uuid_000000000007efac:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9720(%rbp)
	pushq -9728(%rbp)
	pushq -9736(%rbp)
	pushq -9744(%rbp)
	pushq -9752(%rbp)
	pushq -9760(%rbp)
	pushq -9768(%rbp)
	pushq -9776(%rbp)
	pushq -9784(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10112(%RBP)
	pushq -10120(%RBP)
	pushq -10128(%RBP)
	pushq -10144(%rbp)
	pushq -10152(%rbp)
	pushq -10160(%rbp)
	push %RBP
	pushq -10168(%rbp)
	pushq -10176(%rbp)
	pushq -10184(%rbp)
	pushq $0
	push %RBP
	mov -10216(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ef5d
	jmp uuid_000000000007ef5f
uuid_000000000007ef5d:
	push %RBP
	mov -10208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10248(%rbp)
	pushq $uuid_000000000007b664
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ef5a
	jmp uuid_000000000007ef5c
uuid_000000000007ef5a:
	movb $1, -10224(%rbp)
uuid_000000000007ef5c:
	mov -10240(%RBP),%RSP
	add $-10248, %RSP
uuid_000000000007ef5f:
	mov -10232(%RBP),%RSP
	add $-10248, %RSP
	mov -10224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ef64
	push %RBP
	jmp uuid_000000000007ef61
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ef60
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ef63
uuid_000000000007ef61:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9368(%rbp)
	pushq -9376(%rbp)
	pushq -9384(%rbp)
	pushq -9392(%rbp)
	pushq -9400(%rbp)
	pushq -9408(%rbp)
	pushq -9416(%rbp)
	pushq -9424(%rbp)
	pushq -9432(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10464(%RBP)
	pushq -10472(%RBP)
	pushq -10480(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ef63:
	mov -10256(%RBP),%RSP
	add $-10488, %RSP
	jmp uuid_000000000007ef66
uuid_000000000007ef64:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9544(%rbp)
	pushq -9552(%rbp)
	pushq -9560(%rbp)
	pushq -9568(%rbp)
	pushq -9576(%rbp)
	pushq -9584(%rbp)
	pushq -9592(%rbp)
	pushq -9600(%rbp)
	pushq -9608(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10456(%RBP)
	pushq -10464(%RBP)
	pushq -10472(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ef66:
	mov -10192(%RBP),%RSP
	add $-10480, %RSP
uuid_000000000007efae:
	mov -9264(%RBP),%RSP
	add $-10480, %RSP
	jmp uuid_000000000007efb1
uuid_000000000007efaf:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9072(%rbp)
	pushq -9080(%rbp)
	pushq -9088(%rbp)
	pushq -9096(%rbp)
	pushq -9104(%rbp)
	pushq -9112(%rbp)
	pushq -9120(%rbp)
	pushq -9128(%rbp)
	pushq -9136(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9464(%RBP)
	pushq -9472(%RBP)
	pushq -9480(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8992(%rbp)
	pushq -9000(%rbp)
	pushq -9008(%rbp)
	pushq -9016(%rbp)
	pushq -9024(%rbp)
	pushq -9032(%rbp)
	pushq -9040(%rbp)
	pushq -9048(%rbp)
	pushq -9056(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9720(%RBP)
	pushq -9728(%RBP)
	pushq -9736(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9496(%rbp)
	pushq -9504(%rbp)
	pushq -9512(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9752(%rbp)
	pushq -9760(%rbp)
	pushq -9768(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9776(%rbp)
	pushq -9784(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efb1:
	mov -8792(%RBP),%RSP
	add $-9784, %RSP
	jmp uuid_000000000007efb4
uuid_000000000007efb2:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -8648(%rbp)
	pushq -8656(%rbp)
	pushq -8664(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8992(%RBP)
	pushq -9000(%RBP)
	pushq -9008(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8520(%rbp)
	pushq -8528(%rbp)
	pushq -8536(%rbp)
	pushq -8544(%rbp)
	pushq -8552(%rbp)
	pushq -8560(%rbp)
	pushq -8568(%rbp)
	pushq -8576(%rbp)
	pushq -8584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9248(%RBP)
	pushq -9256(%RBP)
	pushq -9264(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9024(%rbp)
	pushq -9032(%rbp)
	pushq -9040(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9280(%rbp)
	pushq -9288(%rbp)
	pushq -9296(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9304(%rbp)
	pushq -9312(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efb4:
	mov -8320(%RBP),%RSP
	add $-9312, %RSP
	jmp uuid_000000000007efb7
uuid_000000000007efb5:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8128(%rbp)
	pushq -8136(%rbp)
	pushq -8144(%rbp)
	pushq -8152(%rbp)
	pushq -8160(%rbp)
	pushq -8168(%rbp)
	pushq -8176(%rbp)
	pushq -8184(%rbp)
	pushq -8192(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8520(%RBP)
	pushq -8528(%RBP)
	pushq -8536(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8048(%rbp)
	pushq -8056(%rbp)
	pushq -8064(%rbp)
	pushq -8072(%rbp)
	pushq -8080(%rbp)
	pushq -8088(%rbp)
	pushq -8096(%rbp)
	pushq -8104(%rbp)
	pushq -8112(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8776(%RBP)
	pushq -8784(%RBP)
	pushq -8792(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8552(%rbp)
	pushq -8560(%rbp)
	pushq -8568(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8808(%rbp)
	pushq -8816(%rbp)
	pushq -8824(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function % : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8832(%rbp)
	pushq -8840(%rbp)
	mov %RBX, %RBP
	call _MD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efb7:
	mov -7848(%RBP),%RSP
	add $-8840, %RSP
	jmp uuid_000000000007efba
uuid_000000000007efb8:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7656(%rbp)
	pushq -7664(%rbp)
	pushq -7672(%rbp)
	pushq -7680(%rbp)
	pushq -7688(%rbp)
	pushq -7696(%rbp)
	pushq -7704(%rbp)
	pushq -7712(%rbp)
	pushq -7720(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8048(%RBP)
	pushq -8056(%RBP)
	pushq -8064(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7576(%rbp)
	pushq -7584(%rbp)
	pushq -7592(%rbp)
	pushq -7600(%rbp)
	pushq -7608(%rbp)
	pushq -7616(%rbp)
	pushq -7624(%rbp)
	pushq -7632(%rbp)
	pushq -7640(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8304(%RBP)
	pushq -8312(%RBP)
	pushq -8320(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8080(%rbp)
	pushq -8088(%rbp)
	pushq -8096(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8336(%rbp)
	pushq -8344(%rbp)
	pushq -8352(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function * : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8360(%rbp)
	pushq -8368(%rbp)
	mov %RBX, %RBP
	call _ML__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efba:
	mov -7376(%RBP),%RSP
	add $-8368, %RSP
	jmp uuid_000000000007efbd
uuid_000000000007efbb:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7184(%rbp)
	pushq -7192(%rbp)
	pushq -7200(%rbp)
	pushq -7208(%rbp)
	pushq -7216(%rbp)
	pushq -7224(%rbp)
	pushq -7232(%rbp)
	pushq -7240(%rbp)
	pushq -7248(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7576(%RBP)
	pushq -7584(%RBP)
	pushq -7592(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7104(%rbp)
	pushq -7112(%rbp)
	pushq -7120(%rbp)
	pushq -7128(%rbp)
	pushq -7136(%rbp)
	pushq -7144(%rbp)
	pushq -7152(%rbp)
	pushq -7160(%rbp)
	pushq -7168(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7832(%RBP)
	pushq -7840(%RBP)
	pushq -7848(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7608(%rbp)
	pushq -7616(%rbp)
	pushq -7624(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7864(%rbp)
	pushq -7872(%rbp)
	pushq -7880(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function / : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7888(%rbp)
	pushq -7896(%rbp)
	mov %RBX, %RBP
	call _DV__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efbd:
	mov -6904(%RBP),%RSP
	add $-7896, %RSP
	jmp uuid_000000000007efc0
uuid_000000000007efbe:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6712(%rbp)
	pushq -6720(%rbp)
	pushq -6728(%rbp)
	pushq -6736(%rbp)
	pushq -6744(%rbp)
	pushq -6752(%rbp)
	pushq -6760(%rbp)
	pushq -6768(%rbp)
	pushq -6776(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7104(%RBP)
	pushq -7112(%RBP)
	pushq -7120(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6632(%rbp)
	pushq -6640(%rbp)
	pushq -6648(%rbp)
	pushq -6656(%rbp)
	pushq -6664(%rbp)
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6688(%rbp)
	pushq -6696(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7360(%RBP)
	pushq -7368(%RBP)
	pushq -7376(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7136(%rbp)
	pushq -7144(%rbp)
	pushq -7152(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7392(%rbp)
	pushq -7400(%rbp)
	pushq -7408(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7416(%rbp)
	pushq -7424(%rbp)
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eea9
	pushq $0
	pushq $uuid_000000000007b62b
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007eeab
uuid_000000000007eea9:
	pushq $0
	pushq $uuid_000000000007b664
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007eeab:
	mov -7432(%RBP),%RSP
	add $-7432, %RSP
uuid_000000000007efc0:
	mov -6432(%RBP),%RSP
	add $-7432, %RSP
	jmp uuid_000000000007efc3
uuid_000000000007efc1:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6240(%rbp)
	pushq -6248(%rbp)
	pushq -6256(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	pushq -6288(%rbp)
	pushq -6296(%rbp)
	pushq -6304(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6632(%RBP)
	pushq -6640(%RBP)
	pushq -6648(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6160(%rbp)
	pushq -6168(%rbp)
	pushq -6176(%rbp)
	pushq -6184(%rbp)
	pushq -6192(%rbp)
	pushq -6200(%rbp)
	pushq -6208(%rbp)
	pushq -6216(%rbp)
	pushq -6224(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6888(%RBP)
	pushq -6896(%RBP)
	pushq -6904(%RBP)
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6664(%rbp)
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6920(%rbp)
	pushq -6928(%rbp)
	pushq -6936(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ee8b
	pushq $0
	pushq $uuid_000000000007b62b
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007ee8d
uuid_000000000007ee8b:
	pushq $0
	pushq $uuid_000000000007b664
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007ee8d:
	mov -6944(%RBP),%RSP
	add $-6944, %RSP
uuid_000000000007efc3:
	mov -5960(%RBP),%RSP
	add $-6944, %RSP
	jmp uuid_000000000007efc6
uuid_000000000007efc4:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5768(%rbp)
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6160(%RBP)
	pushq -6168(%RBP)
	pushq -6176(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6192(%rbp)
	pushq -6200(%rbp)
	pushq -6208(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function align : Arrow<I64,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6216(%rbp)
	mov %RBX, %RBP
	call align_CL_ArrowI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efc6:
	mov -5664(%RBP),%RSP
	add $-6216, %RSP
	jmp uuid_000000000007efc9
uuid_000000000007efc7:
	pushq $0
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efc9:
	mov -5440(%RBP),%RSP
	add $-5656, %RSP
	jmp uuid_000000000007efcc
uuid_000000000007efca:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5640(%RBP)
	pushq -5648(%RBP)
	pushq -5656(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5896(%RBP)
	pushq -5904(%RBP)
	pushq -5912(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5672(%rbp)
	pushq -5680(%rbp)
	pushq -5688(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007ee46:
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ee47
	jmp uuid_000000000007ee48
uuid_000000000007ee47:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -5960(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007ee46
uuid_000000000007ee48:
uuid_000000000007efcc:
	mov -4968(%RBP),%RSP
	add $-5960, %RSP
	jmp uuid_000000000007efcf
uuid_000000000007efcd:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5168(%RBP)
	pushq -5176(%RBP)
	pushq -5184(%RBP)
uuid_000000000007ee27:
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ee28
	jmp uuid_000000000007ee29
uuid_000000000007ee28:
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	push %RBP
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq $0
	push %RBP
	mov -5272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ee1d
	jmp uuid_000000000007ee1f
uuid_000000000007ee1d:
	push %RBP
	mov -5264(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee1a
	jmp uuid_000000000007ee1c
uuid_000000000007ee1a:
	push %RBP
	mov -5256(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ee17
	jmp uuid_000000000007ee19
uuid_000000000007ee17:
	movb $1, -5280(%rbp)
uuid_000000000007ee19:
	mov -5328(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007ee1c:
	mov -5296(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007ee1f:
	mov -5288(%RBP),%RSP
	add $-5352, %RSP
	mov -5280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007ee24
	push %RBP
	jmp uuid_000000000007ee21
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007ee20
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ee23
uuid_000000000007ee21:
	pushq $0
	pushq $0
	pushq $3
	popq -5216(%RBP)
	popq -5208(%RBP)
	popq -5200(%RBP)
uuid_000000000007ee23:
	mov -5360(%RBP),%RSP
	add $-5360, %RSP
	jmp uuid_000000000007ee26
uuid_000000000007ee24:
#call function fragment::expression : Arrow<S,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4424(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ebf3
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	pushq -5376(%rbp)
	pushq -5384(%rbp)
	pushq -5392(%rbp)
	pushq -5400(%rbp)
	pushq -5408(%rbp)
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	pushq -5672(%rbp)
	pushq -5680(%rbp)
	pushq -5688(%rbp)
	pushq -5696(%rbp)
	pushq -5704(%rbp)
	pushq -208(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	pushq -3928(%rbp)
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5912(%RBP)
	pushq -5920(%RBP)
	pushq -5928(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	movq -5320(%rbp), %r15
	movq %r15, -5216(%rbp)
	movq -5312(%rbp), %r15
	movq %r15, -5208(%rbp)
	movq -5304(%rbp), %r15
	movq %r15, -5200(%rbp)
uuid_000000000007ee26:
	mov -5248(%RBP),%RSP
	add $-5960, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $152, %rsp
	add $200, %rsp
	add $232, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007ee27
uuid_000000000007ee29:
uuid_000000000007efcf:
	mov -3680(%RBP),%RSP
	add $-5216, %RSP
	jmp uuid_000000000007efd2
uuid_000000000007efd0:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2712(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -3800(%RBP)
	pushq -3808(%RBP)
	pushq -3816(%RBP)
uuid_000000000007edb9:
#call function non-zero : Arrow<List<Array<Fragment,?>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007edba
	jmp uuid_000000000007edbb
uuid_000000000007edba:
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	push %RBP
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq $0
	push %RBP
	mov -3904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007edb2
	jmp uuid_000000000007edb4
uuid_000000000007edb2:
	push %RBP
	mov -3896(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007edaf
	jmp uuid_000000000007edb1
uuid_000000000007edaf:
	push %RBP
	mov -3888(%RBP), %RAX
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007edac
	jmp uuid_000000000007edae
uuid_000000000007edac:
	movb $1, -3912(%rbp)
uuid_000000000007edae:
	mov -3960(%RBP),%RSP
	add $-4112, %RSP
uuid_000000000007edb1:
	mov -3928(%RBP),%RSP
	add $-4112, %RSP
uuid_000000000007edb4:
	mov -3920(%RBP),%RSP
	add $-4112, %RSP
	mov -3912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007edb6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007edb5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007edb8
uuid_000000000007edb6:
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -3136(%rbp)
	pushq -3768(%RBP)
	pushq -3776(%RBP)
	pushq -3784(%RBP)
	pushq -3968(%rbp)
	pushq -3976(%rbp)
	pushq -3984(%rbp)
	pushq -3992(%rbp)
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	pushq -4136(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	pushq -4216(%rbp)
	pushq -4224(%rbp)
	pushq -4232(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	pushq -208(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -4520(%RBP)
	pushq -4528(%RBP)
	pushq -4536(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	movq -3952(%rbp), %r15
	movq %r15, -3848(%rbp)
	movq -3944(%rbp), %r15
	movq %r15, -3840(%rbp)
	movq -3936(%rbp), %r15
	movq %r15, -3832(%rbp)
uuid_000000000007edb8:
	mov -3880(%RBP),%RSP
	add $-4568, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $200, %rsp
	add $232, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007edb9
uuid_000000000007edbb:
uuid_000000000007efd2:
	mov -2136(%RBP),%RSP
	add $-3848, %RSP
	jmp uuid_000000000007efd5
uuid_000000000007efd3:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efd5:
	mov -1840(%RBP),%RSP
	add $-2360, %RSP
	jmp uuid_000000000007efd8
uuid_000000000007efd6:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efd8:
	mov -1320(%RBP),%RSP
	add $-2064, %RSP
	jmp uuid_000000000007efdb
uuid_000000000007efd9:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efdb:
	mov -800(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007efde
uuid_000000000007efdc:
	pushq $0
	pushq -792(%rbp)
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efde:
	mov -680(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007efe1
uuid_000000000007efdf:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -672(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007efe1:
	mov -560(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007efe4
uuid_000000000007efe2:
uuid_000000000007efe4:
	mov -480(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007efe7
uuid_000000000007efe5:
uuid_000000000007efe7:
	mov -400(%RBP),%RSP
	add $-472, %RSP
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	subq $232, %rsp
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	pushq 504(%rsp)
	pushq 520(%rsp)
	pushq 536(%rsp)
	pushq 552(%rsp)
	pushq 568(%rsp)
	pushq 584(%rsp)
	pushq 600(%rsp)
	pushq 616(%rsp)
	pushq 632(%rsp)
	pushq 648(%rsp)
	pushq 664(%rsp)
	pushq 680(%rsp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	addq $232, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f006
	jmp uuid_000000000007f008
uuid_000000000007f006:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007eff4
	jmp uuid_000000000007eff6
uuid_000000000007eff4:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -784(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007efeb
	jmp uuid_000000000007efed
uuid_000000000007efeb:
	push %RBP
	jmp uuid_000000000007efe8
	jmp uuid_000000000007efea
uuid_000000000007efe8:
	movb $1, -792(%rbp)
uuid_000000000007efea:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007efed:
	mov -800(%RBP),%RSP
	add $-808, %RSP
	mov -792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007eff1
	jmp uuid_000000000007eff3
uuid_000000000007eff1:
	push %RBP
	mov -672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007efee
	jmp uuid_000000000007eff0
uuid_000000000007efee:
	movb $1, -696(%rbp)
uuid_000000000007eff0:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007eff3:
	mov -712(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007eff6:
	mov -704(%RBP),%RSP
	add $-888, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f003
	jmp uuid_000000000007f005
uuid_000000000007f003:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007effd
	jmp uuid_000000000007efff
uuid_000000000007effd:
	push %RBP
	jmp uuid_000000000007effa
	jmp uuid_000000000007effc
uuid_000000000007effa:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007eff7
	jmp uuid_000000000007eff9
uuid_000000000007eff7:
	movb $1, -976(%rbp)
uuid_000000000007eff9:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007effc:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007efff:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f000
	jmp uuid_000000000007f002
uuid_000000000007f000:
	movb $1, -600(%rbp)
uuid_000000000007f002:
	mov -896(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007f005:
	mov -616(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007f008:
	mov -608(%RBP),%RSP
	add $-1008, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f046
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -1088(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f018
	jmp uuid_000000000007f01a
uuid_000000000007f018:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f015
	jmp uuid_000000000007f017
uuid_000000000007f015:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f00f
	jmp uuid_000000000007f011
uuid_000000000007f00f:
	push %RBP
	jmp uuid_000000000007f00c
	jmp uuid_000000000007f00e
uuid_000000000007f00c:
	push %RBP
	mov -1200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f009
	jmp uuid_000000000007f00b
uuid_000000000007f009:
	movb $1, -1272(%rbp)
uuid_000000000007f00b:
	mov -1296(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007f00e:
	mov -1288(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007f011:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
	mov -1272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f012
	jmp uuid_000000000007f014
uuid_000000000007f012:
	movb $1, -1096(%rbp)
uuid_000000000007f014:
	mov -1192(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007f017:
	mov -1112(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007f01a:
	mov -1104(%RBP),%RSP
	add $-1304, %RSP
	mov -1096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f043
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f036
	jmp uuid_000000000007f038
uuid_000000000007f036:
	push %RBP
	mov -1376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f02d
	jmp uuid_000000000007f02f
uuid_000000000007f02d:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f02a
	jmp uuid_000000000007f02c
uuid_000000000007f02a:
	push %RBP
	mov -1464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f024
	jmp uuid_000000000007f026
uuid_000000000007f024:
	push %RBP
	jmp uuid_000000000007f021
	jmp uuid_000000000007f023
uuid_000000000007f021:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f01e
	jmp uuid_000000000007f020
uuid_000000000007f01e:
	movb $1, -1664(%rbp)
uuid_000000000007f020:
	mov -1688(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007f023:
	mov -1680(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007f026:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
	mov -1664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f027
	jmp uuid_000000000007f029
uuid_000000000007f027:
	movb $1, -1488(%rbp)
uuid_000000000007f029:
	mov -1584(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007f02c:
	mov -1504(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007f02f:
	mov -1496(%RBP),%RSP
	add $-1696, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f033
	jmp uuid_000000000007f035
uuid_000000000007f033:
	push %RBP
	mov -1368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f030
	jmp uuid_000000000007f032
uuid_000000000007f030:
	movb $1, -1392(%rbp)
uuid_000000000007f032:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007f035:
	mov -1408(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007f038:
	mov -1400(%RBP),%RSP
	add $-1776, %RSP
	mov -1392(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f040
	push %RBP
	jmp uuid_000000000007f03d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f03c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f03f
uuid_000000000007f03d:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007da57
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007da57
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007f03f:
	mov -1784(%RBP),%RSP
	add $-2040, %RSP
	jmp uuid_000000000007f042
uuid_000000000007f040:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f039
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007da57
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007da57
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	jmp uuid_000000000007f03b
uuid_000000000007f039:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -1696(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov -1696(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007f03b:
	mov -1784(%RBP),%RSP
	add $-2040, %RSP
uuid_000000000007f042:
	mov -1312(%RBP),%RSP
	add $-2040, %RSP
	jmp uuid_000000000007f045
uuid_000000000007f043:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f01b
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007da57
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007da57
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	jmp uuid_000000000007f01d
uuid_000000000007f01b:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -1304(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov -1304(%RBP), %RAX
	inc %RAX
	push %RAX
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007f01d:
	mov -1312(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007f045:
	mov -1016(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007f048
uuid_000000000007f046:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007f048:
	mov -520(%RBP),%RSP
	add $-1008, %RSP
	subq $152, %rsp
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $440, %rsp
	ret
extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f061
	jmp uuid_000000000007f063
uuid_000000000007f061:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f04f
	jmp uuid_000000000007f051
uuid_000000000007f04f:
	push %RBP
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	jmp uuid_000000000007f04c
	jmp uuid_000000000007f04e
uuid_000000000007f04c:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f049
	jmp uuid_000000000007f04b
uuid_000000000007f049:
	movb $1, -560(%rbp)
uuid_000000000007f04b:
	mov -640(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007f04e:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007f051:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f05e
	jmp uuid_000000000007f060
uuid_000000000007f05e:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f058
	jmp uuid_000000000007f05a
uuid_000000000007f058:
	push %RBP
	jmp uuid_000000000007f055
	jmp uuid_000000000007f057
uuid_000000000007f055:
	push %RBP
	mov -664(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $uuid_000000000007ee49
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f052
	jmp uuid_000000000007f054
uuid_000000000007f052:
	movb $1, -736(%rbp)
uuid_000000000007f054:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007f057:
	mov -752(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007f05a:
	mov -744(%RBP),%RSP
	add $-768, %RSP
	mov -736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f05b
	jmp uuid_000000000007f05d
uuid_000000000007f05b:
	movb $1, -464(%rbp)
uuid_000000000007f05d:
	mov -656(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007f060:
	mov -480(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007f063:
	mov -472(%RBP),%RSP
	add $-768, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0cb
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f06a
	jmp uuid_000000000007f06c
uuid_000000000007f06a:
	push %RBP
	mov -840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f067
	jmp uuid_000000000007f069
uuid_000000000007f067:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f064
	jmp uuid_000000000007f066
uuid_000000000007f064:
	movb $1, -856(%rbp)
uuid_000000000007f066:
	mov -952(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007f069:
	mov -872(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007f06c:
	mov -864(%RBP),%RSP
	add $-1024, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0c8
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1104(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f076
	jmp uuid_000000000007f078
uuid_000000000007f076:
	push %RBP
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	jmp uuid_000000000007f073
	jmp uuid_000000000007f075
uuid_000000000007f073:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f070
	jmp uuid_000000000007f072
uuid_000000000007f070:
	push %RBP
	mov -1064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f06d
	jmp uuid_000000000007f06f
uuid_000000000007f06d:
	movb $1, -1112(%rbp)
uuid_000000000007f06f:
	mov -1240(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007f072:
	mov -1160(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007f075:
	mov -1128(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007f078:
	mov -1120(%RBP),%RSP
	add $-1312, %RSP
	mov -1112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0c5
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f0c2
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov -1472(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f0bf
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f07c
	jmp uuid_000000000007f07e
uuid_000000000007f07c:
	push %RBP
	jmp uuid_000000000007f079
	jmp uuid_000000000007f07b
uuid_000000000007f079:
	movb $1, -1560(%rbp)
uuid_000000000007f07b:
	mov -1576(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007f07e:
	mov -1568(%RBP),%RSP
	add $-1576, %RSP
	mov -1560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0bc
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f085
	jmp uuid_000000000007f087
uuid_000000000007f085:
	push %RBP
	jmp uuid_000000000007f082
	jmp uuid_000000000007f084
uuid_000000000007f082:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f07f
	jmp uuid_000000000007f081
uuid_000000000007f07f:
	movb $1, -1664(%rbp)
uuid_000000000007f081:
	mov -1688(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007f084:
	mov -1680(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007f087:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
	mov -1664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0b9
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1776(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f08e
	jmp uuid_000000000007f090
uuid_000000000007f08e:
	push %RBP
	jmp uuid_000000000007f08b
	jmp uuid_000000000007f08d
uuid_000000000007f08b:
	push %RBP
	mov -1712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f088
	jmp uuid_000000000007f08a
uuid_000000000007f088:
	movb $1, -1784(%rbp)
uuid_000000000007f08a:
	mov -1808(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007f08d:
	mov -1800(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007f090:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
	mov -1784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0b6
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f097
	jmp uuid_000000000007f099
uuid_000000000007f097:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f094
	jmp uuid_000000000007f096
uuid_000000000007f094:
	push %RBP
	mov -1880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f091
	jmp uuid_000000000007f093
uuid_000000000007f091:
	movb $1, -1904(%rbp)
uuid_000000000007f093:
	mov -2000(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007f096:
	mov -1920(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007f099:
	mov -1912(%RBP),%RSP
	add $-2072, %RSP
	mov -1904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0b3
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f0a0
	jmp uuid_000000000007f0a2
uuid_000000000007f0a0:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f09d
	jmp uuid_000000000007f09f
uuid_000000000007f09d:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f09a
	jmp uuid_000000000007f09c
uuid_000000000007f09a:
	movb $1, -2160(%rbp)
uuid_000000000007f09c:
	mov -2256(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007f09f:
	mov -2176(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007f0a2:
	mov -2168(%RBP),%RSP
	add $-2328, %RSP
	mov -2160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0b0
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -2408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f0a9
	jmp uuid_000000000007f0ab
uuid_000000000007f0a9:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f0a6
	jmp uuid_000000000007f0a8
uuid_000000000007f0a6:
	push %RBP
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	jmp uuid_000000000007f0a3
	jmp uuid_000000000007f0a5
uuid_000000000007f0a3:
	movb $1, -2416(%rbp)
uuid_000000000007f0a5:
	mov -2512(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007f0a8:
	mov -2432(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007f0ab:
	mov -2424(%RBP),%RSP
	add $-2568, %RSP
	mov -2416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0ad
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f0ac
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f0af
uuid_000000000007f0ad:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2664(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2656(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2648(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2640(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2632(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2624(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2616(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2608(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2600(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2592(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2584(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2576(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007f0af:
	mov -2336(%RBP),%RSP
	add $-2664, %RSP
	jmp uuid_000000000007f0b2
uuid_000000000007f0b0:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2520(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2512(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2504(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2496(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2488(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2480(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2472(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2464(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2456(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2448(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2440(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2432(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007f0b2:
	mov -2080(%RBP),%RSP
	add $-2520, %RSP
	jmp uuid_000000000007f0b5
uuid_000000000007f0b3:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2264(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2256(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2248(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2240(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2216(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2208(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2200(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2192(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2184(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2176(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007f0b5:
	mov -1824(%RBP),%RSP
	add $-2264, %RSP
	jmp uuid_000000000007f0b8
uuid_000000000007f0b6:
uuid_000000000007f0b8:
	mov -1704(%RBP),%RSP
	add $-1816, %RSP
	jmp uuid_000000000007f0bb
uuid_000000000007f0b9:
uuid_000000000007f0bb:
	mov -1584(%RBP),%RSP
	add $-1696, %RSP
	jmp uuid_000000000007f0be
uuid_000000000007f0bc:
uuid_000000000007f0be:
	mov -1480(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007f0c1
uuid_000000000007f0bf:
uuid_000000000007f0c1:
	mov -1400(%RBP),%RSP
	add $-1472, %RSP
	jmp uuid_000000000007f0c4
uuid_000000000007f0c2:
uuid_000000000007f0c4:
	mov -1320(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007f0c7
uuid_000000000007f0c5:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -1504(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007f0c7:
	mov -1032(%RBP),%RSP
	add $-1504, %RSP
	jmp uuid_000000000007f0ca
uuid_000000000007f0c8:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -1216(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007f0ca:
	mov -776(%RBP),%RSP
	add $-1216, %RSP
	jmp uuid_000000000007f0cd
uuid_000000000007f0cb:
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -648(%rbp)
	pushq -776(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	pushq $0
	movq -872(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -832(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -824(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -816(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007f0cd:
	mov -384(%RBP),%RSP
	add $-872, %RSP
	subq $96, %rsp
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
index_SB_typedefs_CL_ArrowNilAST:
uuid_000000000007f0f3:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f0f4
	jmp uuid_000000000007f0f5
uuid_000000000007f0f4:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f0dd
	jmp uuid_000000000007f0df
uuid_000000000007f0dd:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f0d4
	jmp uuid_000000000007f0d6
uuid_000000000007f0d4:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f0d1
	jmp uuid_000000000007f0d3
uuid_000000000007f0d1:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f0ce
	jmp uuid_000000000007f0d0
uuid_000000000007f0ce:
	movb $1, -336(%rbp)
uuid_000000000007f0d0:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007f0d3:
	mov -352(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007f0d6:
	mov -344(%RBP),%RSP
	add $-504, %RSP
	mov -336(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0da
	jmp uuid_000000000007f0dc
uuid_000000000007f0da:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f0d7
	jmp uuid_000000000007f0d9
uuid_000000000007f0d7:
	movb $1, -240(%rbp)
uuid_000000000007f0d9:
	mov -512(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007f0dc:
	mov -256(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007f0df:
	mov -248(%RBP),%RSP
	add $-584, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0f0
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f0e6
	jmp uuid_000000000007f0e8
uuid_000000000007f0e6:
	push %RBP
	jmp uuid_000000000007f0e3
	jmp uuid_000000000007f0e5
uuid_000000000007f0e3:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f0e0
	jmp uuid_000000000007f0e2
uuid_000000000007f0e0:
	movb $1, -672(%rbp)
uuid_000000000007f0e2:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007f0e5:
	mov -688(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007f0e8:
	mov -680(%RBP),%RSP
	add $-768, %RSP
	mov -672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f0ed
	push %RBP
	jmp uuid_000000000007f0ea
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f0e9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f0ec
uuid_000000000007f0ea:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007f0ec:
	mov -776(%RBP),%RSP
	add $-776, %RSP
	jmp uuid_000000000007f0ef
uuid_000000000007f0ed:
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007f0ef:
	mov -592(%RBP),%RSP
	add $-768, %RSP
	jmp uuid_000000000007f0f2
uuid_000000000007f0f0:
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $0
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -584(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -536(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -528(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -520(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007f0f2:
	mov -160(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f0f3
uuid_000000000007f0f5:
	mov %rbp, %rsp
	sub $80, %rsp
	ret
index_SB_typedefs_CL_ArrowNilConsU64AST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f117
	jmp uuid_000000000007f119
uuid_000000000007f117:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f0fc
	jmp uuid_000000000007f0fe
uuid_000000000007f0fc:
	push %RBP
	jmp uuid_000000000007f0f9
	jmp uuid_000000000007f0fb
uuid_000000000007f0f9:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f0f6
	jmp uuid_000000000007f0f8
uuid_000000000007f0f6:
	movb $1, -344(%rbp)
uuid_000000000007f0f8:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007f0fb:
	mov -360(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007f0fe:
	mov -352(%RBP),%RSP
	add $-376, %RSP
	mov -344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f114
	jmp uuid_000000000007f116
uuid_000000000007f114:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f10e
	jmp uuid_000000000007f110
uuid_000000000007f10e:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f105
	jmp uuid_000000000007f107
uuid_000000000007f105:
	push %RBP
	jmp uuid_000000000007f102
	jmp uuid_000000000007f104
uuid_000000000007f102:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007d1d0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f0ff
	jmp uuid_000000000007f101
uuid_000000000007f0ff:
	movb $1, -560(%rbp)
uuid_000000000007f101:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007f104:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007f107:
	mov -568(%RBP),%RSP
	add $-592, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f10b
	jmp uuid_000000000007f10d
uuid_000000000007f10b:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f108
	jmp uuid_000000000007f10a
uuid_000000000007f108:
	movb $1, -464(%rbp)
uuid_000000000007f10a:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007f10d:
	mov -480(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007f110:
	mov -472(%RBP),%RSP
	add $-672, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f111
	jmp uuid_000000000007f113
uuid_000000000007f111:
	movb $1, -248(%rbp)
uuid_000000000007f113:
	mov -384(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007f116:
	mov -264(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007f119:
	mov -256(%RBP),%RSP
	add $-672, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f173
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f144
	jmp uuid_000000000007f146
uuid_000000000007f144:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f129
	jmp uuid_000000000007f12b
uuid_000000000007f129:
	push %RBP
	jmp uuid_000000000007f126
	jmp uuid_000000000007f128
uuid_000000000007f126:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f120
	jmp uuid_000000000007f122
uuid_000000000007f120:
	push %RBP
	jmp uuid_000000000007f11d
	jmp uuid_000000000007f11f
uuid_000000000007f11d:
	push %RBP
	mov -888(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f11a
	jmp uuid_000000000007f11c
uuid_000000000007f11a:
	movb $1, -960(%rbp)
uuid_000000000007f11c:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007f11f:
	mov -976(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007f122:
	mov -968(%RBP),%RSP
	add $-992, %RSP
	mov -960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f123
	jmp uuid_000000000007f125
uuid_000000000007f123:
	movb $1, -856(%rbp)
uuid_000000000007f125:
	mov -880(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007f128:
	mov -872(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007f12b:
	mov -864(%RBP),%RSP
	add $-992, %RSP
	mov -856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f141
	jmp uuid_000000000007f143
uuid_000000000007f141:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f13b
	jmp uuid_000000000007f13d
uuid_000000000007f13b:
	push %RBP
	mov -1064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f132
	jmp uuid_000000000007f134
uuid_000000000007f132:
	push %RBP
	jmp uuid_000000000007f12f
	jmp uuid_000000000007f131
uuid_000000000007f12f:
	push %RBP
	mov -1104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1208(%rbp)
	pushq $uuid_000000000007d1d0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f12c
	jmp uuid_000000000007f12e
uuid_000000000007f12c:
	movb $1, -1176(%rbp)
uuid_000000000007f12e:
	mov -1200(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007f131:
	mov -1192(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007f134:
	mov -1184(%RBP),%RSP
	add $-1208, %RSP
	mov -1176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f138
	jmp uuid_000000000007f13a
uuid_000000000007f138:
	push %RBP
	mov -1056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f135
	jmp uuid_000000000007f137
uuid_000000000007f135:
	movb $1, -1080(%rbp)
uuid_000000000007f137:
	mov -1216(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007f13a:
	mov -1096(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007f13d:
	mov -1088(%RBP),%RSP
	add $-1288, %RSP
	mov -1080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f13e
	jmp uuid_000000000007f140
uuid_000000000007f13e:
	movb $1, -760(%rbp)
uuid_000000000007f140:
	mov -1000(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007f143:
	mov -776(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007f146:
	mov -768(%RBP),%RSP
	add $-1288, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f170
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -1368(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f14d
	jmp uuid_000000000007f14f
uuid_000000000007f14d:
	push %RBP
	jmp uuid_000000000007f14a
	jmp uuid_000000000007f14c
uuid_000000000007f14a:
	push %RBP
	mov -1304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f147
	jmp uuid_000000000007f149
uuid_000000000007f147:
	movb $1, -1376(%rbp)
uuid_000000000007f149:
	mov -1400(%RBP),%RSP
	add $-1408, %RSP
uuid_000000000007f14c:
	mov -1392(%RBP),%RSP
	add $-1408, %RSP
uuid_000000000007f14f:
	mov -1384(%RBP),%RSP
	add $-1408, %RSP
	mov -1376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f16d
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -1488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f15f
	jmp uuid_000000000007f161
uuid_000000000007f15f:
	push %RBP
	jmp uuid_000000000007f15c
	jmp uuid_000000000007f15e
uuid_000000000007f15c:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f156
	jmp uuid_000000000007f158
uuid_000000000007f156:
	push %RBP
	jmp uuid_000000000007f153
	jmp uuid_000000000007f155
uuid_000000000007f153:
	push %RBP
	mov -1528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f150
	jmp uuid_000000000007f152
uuid_000000000007f150:
	movb $1, -1600(%rbp)
uuid_000000000007f152:
	mov -1624(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007f155:
	mov -1616(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007f158:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
	mov -1600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f159
	jmp uuid_000000000007f15b
uuid_000000000007f159:
	movb $1, -1496(%rbp)
uuid_000000000007f15b:
	mov -1520(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007f15e:
	mov -1512(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007f161:
	mov -1504(%RBP),%RSP
	add $-1632, %RSP
	mov -1496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f16a
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov -1712(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f167
	push %RBP
	jmp uuid_000000000007f164
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f163
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f166
uuid_000000000007f164:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f162
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007f166:
	mov -1720(%RBP),%RSP
	add $-1720, %RSP
	jmp uuid_000000000007f169
uuid_000000000007f167:
uuid_000000000007f169:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_000000000007f16c
uuid_000000000007f16a:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007f16c:
	mov -1416(%RBP),%RSP
	add $-1632, %RSP
	jmp uuid_000000000007f16f
uuid_000000000007f16d:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-lone-tag : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	mov %RBX, %RBP
	call index_SB_lone_SB_tag_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007f16f:
	mov -1296(%RBP),%RSP
	add $-1408, %RSP
	jmp uuid_000000000007f172
uuid_000000000007f170:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007f172:
	mov -680(%RBP),%RSP
	add $-1288, %RSP
	jmp uuid_000000000007f175
uuid_000000000007f173:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-lone-tag : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	mov %RBX, %RBP
	call index_SB_lone_SB_tag_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007f175:
	mov -168(%RBP),%RSP
	add $-672, %RSP
	mov %rbp, %rsp
	sub $88, %rsp
	ret
is_SB_macro_SB_head_CL_ArrowU64ConsU64String:
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
uuid_000000000007f1ea:
#call function non-zero : Arrow<MacroList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64MacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f1eb
	jmp uuid_000000000007f1ec
uuid_000000000007f1eb:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f197
	jmp uuid_000000000007f199
uuid_000000000007f197:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f18e
	jmp uuid_000000000007f190
uuid_000000000007f18e:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	jmp uuid_000000000007f18b
	jmp uuid_000000000007f18d
uuid_000000000007f18b:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f185
	jmp uuid_000000000007f187
uuid_000000000007f185:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f182
	jmp uuid_000000000007f184
uuid_000000000007f182:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f17c
	jmp uuid_000000000007f17e
uuid_000000000007f17c:
	push %RBP
	jmp uuid_000000000007f179
	jmp uuid_000000000007f17b
uuid_000000000007f179:
	push %RBP
	mov -1008(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f176
	jmp uuid_000000000007f178
uuid_000000000007f176:
	movb $1, -1080(%rbp)
uuid_000000000007f178:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007f17b:
	mov -1096(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007f17e:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
	mov -1080(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f17f
	jmp uuid_000000000007f181
uuid_000000000007f17f:
	movb $1, -904(%rbp)
uuid_000000000007f181:
	mov -1000(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007f184:
	mov -920(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007f187:
	mov -912(%RBP),%RSP
	add $-1112, %RSP
	mov -904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f188
	jmp uuid_000000000007f18a
uuid_000000000007f188:
	movb $1, -728(%rbp)
uuid_000000000007f18a:
	mov -824(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007f18d:
	mov -744(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007f190:
	mov -736(%RBP),%RSP
	add $-1112, %RSP
	mov -728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f194
	jmp uuid_000000000007f196
uuid_000000000007f194:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f191
	jmp uuid_000000000007f193
uuid_000000000007f191:
	movb $1, -552(%rbp)
uuid_000000000007f193:
	mov -1120(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007f196:
	mov -568(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007f199:
	mov -560(%RBP),%RSP
	add $-1288, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1e7
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1c7
	jmp uuid_000000000007f1c9
uuid_000000000007f1c7:
	push %RBP
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1be
	jmp uuid_000000000007f1c0
uuid_000000000007f1be:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	jmp uuid_000000000007f1bb
	jmp uuid_000000000007f1bd
uuid_000000000007f1bb:
	push %RBP
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1b5
	jmp uuid_000000000007f1b7
uuid_000000000007f1b5:
	push %RBP
	mov -1808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f1b2
	jmp uuid_000000000007f1b4
uuid_000000000007f1b2:
	push %RBP
	mov -1800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1992(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1ac
	jmp uuid_000000000007f1ae
uuid_000000000007f1ac:
	push %RBP
	mov -1984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f1a9
	jmp uuid_000000000007f1ab
uuid_000000000007f1a9:
	push %RBP
	mov -1976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1a3
	jmp uuid_000000000007f1a5
uuid_000000000007f1a3:
	push %RBP
	jmp uuid_000000000007f1a0
	jmp uuid_000000000007f1a2
uuid_000000000007f1a0:
	push %RBP
	mov -2104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f19d
	jmp uuid_000000000007f19f
uuid_000000000007f19d:
	movb $1, -2176(%rbp)
uuid_000000000007f19f:
	mov -2200(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007f1a2:
	mov -2192(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007f1a5:
	mov -2184(%RBP),%RSP
	add $-2208, %RSP
	mov -2176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1a6
	jmp uuid_000000000007f1a8
uuid_000000000007f1a6:
	movb $1, -2000(%rbp)
uuid_000000000007f1a8:
	mov -2096(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007f1ab:
	mov -2016(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007f1ae:
	mov -2008(%RBP),%RSP
	add $-2208, %RSP
	mov -2000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1af
	jmp uuid_000000000007f1b1
uuid_000000000007f1af:
	movb $1, -1824(%rbp)
uuid_000000000007f1b1:
	mov -1920(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007f1b4:
	mov -1840(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007f1b7:
	mov -1832(%RBP),%RSP
	add $-2208, %RSP
	mov -1824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1b8
	jmp uuid_000000000007f1ba
uuid_000000000007f1b8:
	movb $1, -1648(%rbp)
uuid_000000000007f1ba:
	mov -1744(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007f1bd:
	mov -1664(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007f1c0:
	mov -1656(%RBP),%RSP
	add $-2208, %RSP
	mov -1648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1c4
	jmp uuid_000000000007f1c6
uuid_000000000007f1c4:
	push %RBP
	mov -1304(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f1c1
	jmp uuid_000000000007f1c3
uuid_000000000007f1c1:
	movb $1, -1472(%rbp)
uuid_000000000007f1c3:
	mov -2216(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007f1c6:
	mov -1488(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007f1c9:
	mov -1480(%RBP),%RSP
	add $-2384, %RSP
	mov -1472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1e4
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1dc
	jmp uuid_000000000007f1de
uuid_000000000007f1dc:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1d3
	jmp uuid_000000000007f1d5
uuid_000000000007f1d3:
	push %RBP
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	jmp uuid_000000000007f1d0
	jmp uuid_000000000007f1d2
uuid_000000000007f1d0:
	push %RBP
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	jmp uuid_000000000007f1cd
	jmp uuid_000000000007f1cf
uuid_000000000007f1cd:
	movb $1, -2744(%rbp)
uuid_000000000007f1cf:
	mov -2840(%RBP),%RSP
	add $-2912, %RSP
uuid_000000000007f1d2:
	mov -2760(%RBP),%RSP
	add $-2912, %RSP
uuid_000000000007f1d5:
	mov -2752(%RBP),%RSP
	add $-2912, %RSP
	mov -2744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1d9
	jmp uuid_000000000007f1db
uuid_000000000007f1d9:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f1d6
	jmp uuid_000000000007f1d8
uuid_000000000007f1d6:
	movb $1, -2568(%rbp)
uuid_000000000007f1d8:
	mov -2920(%RBP),%RSP
	add $-3088, %RSP
uuid_000000000007f1db:
	mov -2584(%RBP),%RSP
	add $-3088, %RSP
uuid_000000000007f1de:
	mov -2576(%RBP),%RSP
	add $-3088, %RSP
	mov -2568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1e1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f1e0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f1e3
uuid_000000000007f1e1:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f1df
	pushq -2848(%rbp)
	pushq -2856(%rbp)
	pushq -2864(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007f1e3:
	mov -2392(%RBP),%RSP
	add $-3088, %RSP
	jmp uuid_000000000007f1e6
uuid_000000000007f1e4:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1ca
	jmp uuid_000000000007f1cc
uuid_000000000007f1ca:
	movq $1, -200(%rbp)
uuid_000000000007f1cc:
	mov -2392(%RBP),%RSP
	add $-2392, %RSP
	movq -2384(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -2376(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -2368(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -2360(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -2352(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -2344(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2272(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2264(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2256(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007f1e6:
	mov -1296(%RBP),%RSP
	add $-2392, %RSP
	jmp uuid_000000000007f1e9
uuid_000000000007f1e7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f19a
	jmp uuid_000000000007f19c
uuid_000000000007f19a:
	movq $1, -200(%rbp)
uuid_000000000007f19c:
	mov -1296(%RBP),%RSP
	add $-1296, %RSP
	movq -1288(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007f1e9:
	mov -376(%RBP),%RSP
	add $-1296, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f1ea
uuid_000000000007f1ec:
	mov -200(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String:
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
uuid_000000000007f24d:
#call function non-zero : Arrow<MacroList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64MacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f24e
	jmp uuid_000000000007f24f
uuid_000000000007f24e:
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	push %RBP
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1fc
	jmp uuid_000000000007f1fe
uuid_000000000007f1fc:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f1f3
	jmp uuid_000000000007f1f5
uuid_000000000007f1f3:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	jmp uuid_000000000007f1f0
	jmp uuid_000000000007f1f2
uuid_000000000007f1f0:
	push %RBP
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	jmp uuid_000000000007f1ed
	jmp uuid_000000000007f1ef
uuid_000000000007f1ed:
	movb $1, -872(%rbp)
uuid_000000000007f1ef:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007f1f2:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007f1f5:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f1f9
	jmp uuid_000000000007f1fb
uuid_000000000007f1f9:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f1f6
	jmp uuid_000000000007f1f8
uuid_000000000007f1f6:
	movb $1, -696(%rbp)
uuid_000000000007f1f8:
	mov -1048(%RBP),%RSP
	add $-1216, %RSP
uuid_000000000007f1fb:
	mov -712(%RBP),%RSP
	add $-1216, %RSP
uuid_000000000007f1fe:
	mov -704(%RBP),%RSP
	add $-1216, %RSP
	mov -696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f24a
	push %RBP
	jmp uuid_000000000007f247
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f246
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f249
uuid_000000000007f247:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
uuid_000000000007f249:
	mov -1224(%RBP),%RSP
	add $-1224, %RSP
	jmp uuid_000000000007f24c
uuid_000000000007f24a:
	movq -1216(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -176(%rbp)
	pushq $0
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	push %RBP
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f20e
	jmp uuid_000000000007f210
uuid_000000000007f20e:
	push %RBP
	jmp uuid_000000000007f20b
	jmp uuid_000000000007f20d
uuid_000000000007f20b:
	push %RBP
	mov -1360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f205
	jmp uuid_000000000007f207
uuid_000000000007f205:
	push %RBP
	jmp uuid_000000000007f202
	jmp uuid_000000000007f204
uuid_000000000007f202:
	push %RBP
	mov -1416(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f1ff
	jmp uuid_000000000007f201
uuid_000000000007f1ff:
	movb $1, -1488(%rbp)
uuid_000000000007f201:
	mov -1512(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007f204:
	mov -1504(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007f207:
	mov -1496(%RBP),%RSP
	add $-1520, %RSP
	mov -1488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f208
	jmp uuid_000000000007f20a
uuid_000000000007f208:
	movb $1, -1384(%rbp)
uuid_000000000007f20a:
	mov -1408(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007f20d:
	mov -1400(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007f210:
	mov -1392(%RBP),%RSP
	add $-1520, %RSP
	mov -1384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f236
	push %RBP
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f22c
	jmp uuid_000000000007f22e
uuid_000000000007f22c:
	push %RBP
	jmp uuid_000000000007f229
	jmp uuid_000000000007f22b
uuid_000000000007f229:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f223
	jmp uuid_000000000007f225
uuid_000000000007f223:
	push %RBP
	jmp uuid_000000000007f220
	jmp uuid_000000000007f222
uuid_000000000007f220:
	push %RBP
	mov -1688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f21a
	jmp uuid_000000000007f21c
uuid_000000000007f21a:
	push %RBP
	jmp uuid_000000000007f217
	jmp uuid_000000000007f219
uuid_000000000007f217:
	push %RBP
	mov -1744(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f214
	jmp uuid_000000000007f216
uuid_000000000007f214:
	movb $1, -1816(%rbp)
uuid_000000000007f216:
	mov -1840(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007f219:
	mov -1832(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007f21c:
	mov -1824(%RBP),%RSP
	add $-1848, %RSP
	mov -1816(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f21d
	jmp uuid_000000000007f21f
uuid_000000000007f21d:
	movb $1, -1712(%rbp)
uuid_000000000007f21f:
	mov -1736(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007f222:
	mov -1728(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007f225:
	mov -1720(%RBP),%RSP
	add $-1848, %RSP
	mov -1712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f226
	jmp uuid_000000000007f228
uuid_000000000007f226:
	movb $1, -1608(%rbp)
uuid_000000000007f228:
	mov -1632(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007f22b:
	mov -1624(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007f22e:
	mov -1616(%RBP),%RSP
	add $-1848, %RSP
	mov -1608(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f233
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f232
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f235
uuid_000000000007f233:
	push %RBP
	movq -16(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1848(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f22f
	jmp uuid_000000000007f231
uuid_000000000007f22f:
	movb $1, -1224(%rbp)
uuid_000000000007f231:
	mov -1856(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007f235:
	mov -1528(%RBP),%RSP
	add $-1856, %RSP
	jmp uuid_000000000007f238
uuid_000000000007f236:
	push %RBP
	movq -16(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1520(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f211
	jmp uuid_000000000007f213
uuid_000000000007f211:
	movb $1, -1224(%rbp)
uuid_000000000007f213:
	mov -1528(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007f238:
	mov -1304(%RBP),%RSP
	add $-1528, %RSP
	push %RBP
	mov -1224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f243
	jmp uuid_000000000007f245
uuid_000000000007f243:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f240
	push %RBP
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	jmp uuid_000000000007f23d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f23c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f23f
uuid_000000000007f23d:
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f239
	jmp uuid_000000000007f23b
uuid_000000000007f239:
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	popq -1912(%RBP)
	popq -1904(%RBP)
	popq -1896(%RBP)
	popq -1888(%RBP)
	popq -1880(%RBP)
	popq -1872(%RBP)
	popq -1864(%RBP)
	popq -1856(%RBP)
	popq -1848(%RBP)
uuid_000000000007f23b:
	mov -2016(%RBP),%RSP
	add $-2016, %RSP
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	movb $1, -344(%rbp)
uuid_000000000007f23f:
	mov -1744(%RBP),%RSP
	add $-2016, %RSP
	jmp uuid_000000000007f242
uuid_000000000007f240:
	movq -1216(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -176(%rbp)
uuid_000000000007f242:
	mov -1640(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007f245:
	mov -1536(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007f24c:
	mov -520(%RBP),%RSP
	add $-1736, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f24d
uuid_000000000007f24f:
	push %RBP
#call function not : Arrow<U8,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	mov %RBX, %RBP
	call not_CL_ArrowU64U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f251
	jmp uuid_000000000007f253
uuid_000000000007f251:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f250
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007f253:
	mov -352(%RBP),%RSP
	add $-352, %RSP
	subq $72, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $96, %rsp
	ret
preprocess_SB_apply_SB_literals_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f275
	jmp uuid_000000000007f277
uuid_000000000007f275:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f25a
	jmp uuid_000000000007f25c
uuid_000000000007f25a:
	push %RBP
	jmp uuid_000000000007f257
	jmp uuid_000000000007f259
uuid_000000000007f257:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f254
	jmp uuid_000000000007f256
uuid_000000000007f254:
	movb $1, -408(%rbp)
uuid_000000000007f256:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007f259:
	mov -424(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007f25c:
	mov -416(%RBP),%RSP
	add $-440, %RSP
	mov -408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f272
	jmp uuid_000000000007f274
uuid_000000000007f272:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f26c
	jmp uuid_000000000007f26e
uuid_000000000007f26c:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f269
	jmp uuid_000000000007f26b
uuid_000000000007f269:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f263
	jmp uuid_000000000007f265
uuid_000000000007f263:
	push %RBP
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007f260
	jmp uuid_000000000007f262
uuid_000000000007f260:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f25d
	jmp uuid_000000000007f25f
uuid_000000000007f25d:
	movb $1, -704(%rbp)
uuid_000000000007f25f:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007f262:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007f265:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f266
	jmp uuid_000000000007f268
uuid_000000000007f266:
	movb $1, -528(%rbp)
uuid_000000000007f268:
	mov -624(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007f26b:
	mov -544(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007f26e:
	mov -536(%RBP),%RSP
	add $-792, %RSP
	mov -528(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f26f
	jmp uuid_000000000007f271
uuid_000000000007f26f:
	movb $1, -312(%rbp)
uuid_000000000007f271:
	mov -448(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007f274:
	mov -328(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007f277:
	mov -320(%RBP),%RSP
	add $-792, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f304
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f299
	jmp uuid_000000000007f29b
uuid_000000000007f299:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f27e
	jmp uuid_000000000007f280
uuid_000000000007f27e:
	push %RBP
	jmp uuid_000000000007f27b
	jmp uuid_000000000007f27d
uuid_000000000007f27b:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f278
	jmp uuid_000000000007f27a
uuid_000000000007f278:
	movb $1, -976(%rbp)
uuid_000000000007f27a:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007f27d:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007f280:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
	mov -976(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f296
	jmp uuid_000000000007f298
uuid_000000000007f296:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1088(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f290
	jmp uuid_000000000007f292
uuid_000000000007f290:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f28d
	jmp uuid_000000000007f28f
uuid_000000000007f28d:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f287
	jmp uuid_000000000007f289
uuid_000000000007f287:
	push %RBP
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	jmp uuid_000000000007f284
	jmp uuid_000000000007f286
uuid_000000000007f284:
	push %RBP
	mov -1200(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f281
	jmp uuid_000000000007f283
uuid_000000000007f281:
	movb $1, -1272(%rbp)
uuid_000000000007f283:
	mov -1352(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007f286:
	mov -1288(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007f289:
	mov -1280(%RBP),%RSP
	add $-1360, %RSP
	mov -1272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f28a
	jmp uuid_000000000007f28c
uuid_000000000007f28a:
	movb $1, -1096(%rbp)
uuid_000000000007f28c:
	mov -1192(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007f28f:
	mov -1112(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007f292:
	mov -1104(%RBP),%RSP
	add $-1360, %RSP
	mov -1096(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f293
	jmp uuid_000000000007f295
uuid_000000000007f293:
	movb $1, -880(%rbp)
uuid_000000000007f295:
	mov -1016(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007f298:
	mov -896(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007f29b:
	mov -888(%RBP),%RSP
	add $-1360, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f301
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1440(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f2a2
	jmp uuid_000000000007f2a4
uuid_000000000007f2a2:
	push %RBP
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	jmp uuid_000000000007f29f
	jmp uuid_000000000007f2a1
uuid_000000000007f29f:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f29c
	jmp uuid_000000000007f29e
uuid_000000000007f29c:
	movb $1, -1448(%rbp)
uuid_000000000007f29e:
	mov -1528(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007f2a1:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007f2a4:
	mov -1456(%RBP),%RSP
	add $-1536, %RSP
	mov -1448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f2fe
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f2b2
	jmp uuid_000000000007f2b4
uuid_000000000007f2b2:
	push %RBP
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007f2af
	jmp uuid_000000000007f2b1
uuid_000000000007f2af:
	push %RBP
	mov -1552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f2ac
	jmp uuid_000000000007f2ae
uuid_000000000007f2ac:
	movb $1, -1624(%rbp)
uuid_000000000007f2ae:
	mov -1704(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007f2b1:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007f2b4:
	mov -1632(%RBP),%RSP
	add $-1712, %RSP
	mov -1624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f2fb
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f2be
	jmp uuid_000000000007f2c0
uuid_000000000007f2be:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2bb
	jmp uuid_000000000007f2bd
uuid_000000000007f2bb:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2b8
	jmp uuid_000000000007f2ba
uuid_000000000007f2b8:
	movb $1, -1800(%rbp)
uuid_000000000007f2ba:
	mov -1896(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007f2bd:
	mov -1816(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007f2c0:
	mov -1808(%RBP),%RSP
	add $-1968, %RSP
	mov -1800(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f2f8
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2048(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f2c7
	jmp uuid_000000000007f2c9
uuid_000000000007f2c7:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2c4
	jmp uuid_000000000007f2c6
uuid_000000000007f2c4:
	push %RBP
	mov -2032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2c1
	jmp uuid_000000000007f2c3
uuid_000000000007f2c1:
	movb $1, -2056(%rbp)
uuid_000000000007f2c3:
	mov -2152(%RBP),%RSP
	add $-2224, %RSP
uuid_000000000007f2c6:
	mov -2072(%RBP),%RSP
	add $-2224, %RSP
uuid_000000000007f2c9:
	mov -2064(%RBP),%RSP
	add $-2224, %RSP
	mov -2056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f2f5
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f2d0
	jmp uuid_000000000007f2d2
uuid_000000000007f2d0:
	push %RBP
	mov -2296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2cd
	jmp uuid_000000000007f2cf
uuid_000000000007f2cd:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2ca
	jmp uuid_000000000007f2cc
uuid_000000000007f2ca:
	movb $1, -2312(%rbp)
uuid_000000000007f2cc:
	mov -2408(%RBP),%RSP
	add $-2480, %RSP
uuid_000000000007f2cf:
	mov -2328(%RBP),%RSP
	add $-2480, %RSP
uuid_000000000007f2d2:
	mov -2320(%RBP),%RSP
	add $-2480, %RSP
	mov -2312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f2f2
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f2dc
	jmp uuid_000000000007f2de
uuid_000000000007f2dc:
	push %RBP
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	jmp uuid_000000000007f2d9
	jmp uuid_000000000007f2db
uuid_000000000007f2d9:
	push %RBP
	mov -2528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2d6
	jmp uuid_000000000007f2d8
uuid_000000000007f2d6:
	push %RBP
	mov -2520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2d3
	jmp uuid_000000000007f2d5
uuid_000000000007f2d3:
	movb $1, -2568(%rbp)
uuid_000000000007f2d5:
	mov -2696(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007f2d8:
	mov -2616(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007f2db:
	mov -2584(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007f2de:
	mov -2576(%RBP),%RSP
	add $-2768, %RSP
	mov -2568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f2ef
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2848(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f2e5
	jmp uuid_000000000007f2e7
uuid_000000000007f2e5:
	push %RBP
	mov -2840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f2e2
	jmp uuid_000000000007f2e4
uuid_000000000007f2e2:
	push %RBP
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	jmp uuid_000000000007f2df
	jmp uuid_000000000007f2e1
uuid_000000000007f2df:
	movb $1, -2856(%rbp)
uuid_000000000007f2e1:
	mov -2952(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007f2e4:
	mov -2872(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007f2e7:
	mov -2864(%RBP),%RSP
	add $-3008, %RSP
	mov -2856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f2ec
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007f2e9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f2e8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f2eb
uuid_000000000007f2e9:
	movq -3088(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -3080(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -3072(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -3064(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -3056(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -3048(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -3040(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -3032(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -3024(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007f2eb:
	mov -3016(%RBP),%RSP
	add $-3088, %RSP
	jmp uuid_000000000007f2ee
uuid_000000000007f2ec:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f2ee:
	mov -2776(%RBP),%RSP
	add $-3008, %RSP
	jmp uuid_000000000007f2f1
uuid_000000000007f2ef:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	pushq -2648(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f2f1:
	mov -2488(%RBP),%RSP
	add $-2768, %RSP
	jmp uuid_000000000007f2f4
uuid_000000000007f2f2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f2f4:
	mov -2232(%RBP),%RSP
	add $-2480, %RSP
	jmp uuid_000000000007f2f7
uuid_000000000007f2f5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f2f7:
	mov -1976(%RBP),%RSP
	add $-2224, %RSP
	jmp uuid_000000000007f2fa
uuid_000000000007f2f8:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f2fa:
	mov -1720(%RBP),%RSP
	add $-1968, %RSP
	jmp uuid_000000000007f2fd
uuid_000000000007f2fb:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $uuid_000000000007f2a5
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f2b5
	jmp uuid_000000000007f2b7
uuid_000000000007f2b5:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $uuid_000000000007f2a5
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f2a6
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007f2a6
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f2a8
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007f2a8
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f2a8
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007f2a8
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f2b7:
	mov -1720(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007f2fd:
	mov -1544(%RBP),%RSP
	add $-1728, %RSP
	jmp uuid_000000000007f300
uuid_000000000007f2fe:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq $uuid_000000000007f2a5
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f2a9
	jmp uuid_000000000007f2ab
uuid_000000000007f2a9:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq $uuid_000000000007f2a5
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f2a6
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007f2a6
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1552(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f2a7
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f2a8
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007f2a8
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f2a8
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007f2a8
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f2ab:
	mov -1544(%RBP),%RSP
	add $-1552, %RSP
uuid_000000000007f300:
	mov -1368(%RBP),%RSP
	add $-1552, %RSP
	jmp uuid_000000000007f303
uuid_000000000007f301:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f303:
	mov -800(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007f306
uuid_000000000007f304:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f306:
	mov -232(%RBP),%RSP
	add $-792, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_apply_SB_locations_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f321
	jmp uuid_000000000007f323
uuid_000000000007f321:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f30e
	jmp uuid_000000000007f310
uuid_000000000007f30e:
	push %RBP
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007f30b
	jmp uuid_000000000007f30d
uuid_000000000007f30b:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $uuid_000000000007f307
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f308
	jmp uuid_000000000007f30a
uuid_000000000007f308:
	movb $1, -408(%rbp)
uuid_000000000007f30a:
	mov -488(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007f30d:
	mov -424(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007f310:
	mov -416(%RBP),%RSP
	add $-496, %RSP
	mov -408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f31e
	jmp uuid_000000000007f320
uuid_000000000007f31e:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f318
	jmp uuid_000000000007f31a
uuid_000000000007f318:
	push %RBP
	jmp uuid_000000000007f315
	jmp uuid_000000000007f317
uuid_000000000007f315:
	push %RBP
	mov -512(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_000000000007f311
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f312
	jmp uuid_000000000007f314
uuid_000000000007f312:
	movb $1, -584(%rbp)
uuid_000000000007f314:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007f317:
	mov -600(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007f31a:
	mov -592(%RBP),%RSP
	add $-616, %RSP
	mov -584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f31b
	jmp uuid_000000000007f31d
uuid_000000000007f31b:
	movb $1, -312(%rbp)
uuid_000000000007f31d:
	mov -504(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007f320:
	mov -328(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007f323:
	mov -320(%RBP),%RSP
	add $-616, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f393
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f33e
	jmp uuid_000000000007f340
uuid_000000000007f33e:
	push %RBP
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007f33b
	jmp uuid_000000000007f33d
uuid_000000000007f33b:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f338
	jmp uuid_000000000007f33a
uuid_000000000007f338:
	movb $1, -704(%rbp)
uuid_000000000007f33a:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007f33d:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007f340:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f390
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f347
	jmp uuid_000000000007f349
uuid_000000000007f347:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	jmp uuid_000000000007f344
	jmp uuid_000000000007f346
uuid_000000000007f344:
	push %RBP
	mov -808(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f341
	jmp uuid_000000000007f343
uuid_000000000007f341:
	movb $1, -880(%rbp)
uuid_000000000007f343:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007f346:
	mov -896(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007f349:
	mov -888(%RBP),%RSP
	add $-968, %RSP
	mov -880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f38d
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f350
	jmp uuid_000000000007f352
uuid_000000000007f350:
	push %RBP
	mov -1040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f34d
	jmp uuid_000000000007f34f
uuid_000000000007f34d:
	push %RBP
	mov -1032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f34a
	jmp uuid_000000000007f34c
uuid_000000000007f34a:
	movb $1, -1056(%rbp)
uuid_000000000007f34c:
	mov -1152(%RBP),%RSP
	add $-1224, %RSP
uuid_000000000007f34f:
	mov -1072(%RBP),%RSP
	add $-1224, %RSP
uuid_000000000007f352:
	mov -1064(%RBP),%RSP
	add $-1224, %RSP
	mov -1056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f38a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f359
	jmp uuid_000000000007f35b
uuid_000000000007f359:
	push %RBP
	mov -1296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f356
	jmp uuid_000000000007f358
uuid_000000000007f356:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f353
	jmp uuid_000000000007f355
uuid_000000000007f353:
	movb $1, -1312(%rbp)
uuid_000000000007f355:
	mov -1408(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007f358:
	mov -1328(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007f35b:
	mov -1320(%RBP),%RSP
	add $-1480, %RSP
	mov -1312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f387
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f362
	jmp uuid_000000000007f364
uuid_000000000007f362:
	push %RBP
	mov -1552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f35f
	jmp uuid_000000000007f361
uuid_000000000007f35f:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f35c
	jmp uuid_000000000007f35e
uuid_000000000007f35c:
	movb $1, -1568(%rbp)
uuid_000000000007f35e:
	mov -1664(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007f361:
	mov -1584(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007f364:
	mov -1576(%RBP),%RSP
	add $-1736, %RSP
	mov -1568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f384
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f36e
	jmp uuid_000000000007f370
uuid_000000000007f36e:
	push %RBP
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	jmp uuid_000000000007f36b
	jmp uuid_000000000007f36d
uuid_000000000007f36b:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f368
	jmp uuid_000000000007f36a
uuid_000000000007f368:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f365
	jmp uuid_000000000007f367
uuid_000000000007f365:
	movb $1, -1824(%rbp)
uuid_000000000007f367:
	mov -1952(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007f36a:
	mov -1872(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007f36d:
	mov -1840(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007f370:
	mov -1832(%RBP),%RSP
	add $-2024, %RSP
	mov -1824(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f381
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2104(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f377
	jmp uuid_000000000007f379
uuid_000000000007f377:
	push %RBP
	mov -2096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f374
	jmp uuid_000000000007f376
uuid_000000000007f374:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	jmp uuid_000000000007f371
	jmp uuid_000000000007f373
uuid_000000000007f371:
	movb $1, -2112(%rbp)
uuid_000000000007f373:
	mov -2208(%RBP),%RSP
	add $-2264, %RSP
uuid_000000000007f376:
	mov -2128(%RBP),%RSP
	add $-2264, %RSP
uuid_000000000007f379:
	mov -2120(%RBP),%RSP
	add $-2264, %RSP
	mov -2112(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f37e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007f37b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f37a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f37d
uuid_000000000007f37b:
	movq -2344(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007f37d:
	mov -2272(%RBP),%RSP
	add $-2344, %RSP
	jmp uuid_000000000007f380
uuid_000000000007f37e:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f380:
	mov -2032(%RBP),%RSP
	add $-2264, %RSP
	jmp uuid_000000000007f383
uuid_000000000007f381:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f383:
	mov -1744(%RBP),%RSP
	add $-2024, %RSP
	jmp uuid_000000000007f386
uuid_000000000007f384:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f386:
	mov -1488(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007f389
uuid_000000000007f387:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f389:
	mov -1232(%RBP),%RSP
	add $-1480, %RSP
	jmp uuid_000000000007f38c
uuid_000000000007f38a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f38c:
	mov -976(%RBP),%RSP
	add $-1224, %RSP
	jmp uuid_000000000007f38f
uuid_000000000007f38d:
	pushq -968(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f38f:
	mov -800(%RBP),%RSP
	add $-968, %RSP
	jmp uuid_000000000007f392
uuid_000000000007f390:
	pushq -792(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f392:
	mov -624(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007f395
uuid_000000000007f393:
	pushq $uuid_000000000007f324
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	push %RBP
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f32e
	jmp uuid_000000000007f330
uuid_000000000007f32e:
	push %RBP
	mov -688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f32b
	jmp uuid_000000000007f32d
uuid_000000000007f32b:
	push %RBP
	mov -680(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f328
	jmp uuid_000000000007f32a
uuid_000000000007f328:
	push %RBP
	mov -672(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f325
	jmp uuid_000000000007f327
uuid_000000000007f325:
	movb $1, -704(%rbp)
uuid_000000000007f327:
	mov -752(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007f32a:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007f32d:
	mov -720(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007f330:
	mov -712(%RBP),%RSP
	add $-760, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f335
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f334
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f337
uuid_000000000007f335:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007f331
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -760(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007f332
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007f333
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -624(%rbp)
uuid_000000000007f337:
	mov -664(%RBP),%RSP
	add $-760, %RSP
	pushq -624(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f395:
	mov -232(%RBP),%RSP
	add $-760, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_apply_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3bd
	jmp uuid_000000000007f3bf
uuid_000000000007f3bd:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f3ba
	jmp uuid_000000000007f3bc
uuid_000000000007f3ba:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3b4
	jmp uuid_000000000007f3b6
uuid_000000000007f3b4:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3a2
	jmp uuid_000000000007f3a4
uuid_000000000007f3a2:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f399
	jmp uuid_000000000007f39b
uuid_000000000007f399:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007f396
	jmp uuid_000000000007f398
uuid_000000000007f396:
	movb $1, -680(%rbp)
uuid_000000000007f398:
	mov -696(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007f39b:
	mov -688(%RBP),%RSP
	add $-720, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f39f
	jmp uuid_000000000007f3a1
uuid_000000000007f39f:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f39c
	jmp uuid_000000000007f39e
uuid_000000000007f39c:
	movb $1, -584(%rbp)
uuid_000000000007f39e:
	mov -728(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007f3a1:
	mov -600(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007f3a4:
	mov -592(%RBP),%RSP
	add $-800, %RSP
	mov -584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f3b1
	jmp uuid_000000000007f3b3
uuid_000000000007f3b1:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3ab
	jmp uuid_000000000007f3ad
uuid_000000000007f3ab:
	push %RBP
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	jmp uuid_000000000007f3a8
	jmp uuid_000000000007f3aa
uuid_000000000007f3a8:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f3a5
	jmp uuid_000000000007f3a7
uuid_000000000007f3a5:
	movb $1, -888(%rbp)
uuid_000000000007f3a7:
	mov -968(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007f3aa:
	mov -904(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007f3ad:
	mov -896(%RBP),%RSP
	add $-976, %RSP
	mov -888(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f3ae
	jmp uuid_000000000007f3b0
uuid_000000000007f3ae:
	movb $1, -488(%rbp)
uuid_000000000007f3b0:
	mov -808(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007f3b3:
	mov -504(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007f3b6:
	mov -496(%RBP),%RSP
	add $-976, %RSP
	mov -488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f3b7
	jmp uuid_000000000007f3b9
uuid_000000000007f3b7:
	movb $1, -312(%rbp)
uuid_000000000007f3b9:
	mov -408(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007f3bc:
	mov -328(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007f3bf:
	mov -320(%RBP),%RSP
	add $-976, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f579
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1056(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3e1
	jmp uuid_000000000007f3e3
uuid_000000000007f3e1:
	push %RBP
	mov -1048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3c6
	jmp uuid_000000000007f3c8
uuid_000000000007f3c6:
	push %RBP
	jmp uuid_000000000007f3c3
	jmp uuid_000000000007f3c5
uuid_000000000007f3c3:
	push %RBP
	mov -1088(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f3c0
	jmp uuid_000000000007f3c2
uuid_000000000007f3c0:
	movb $1, -1160(%rbp)
uuid_000000000007f3c2:
	mov -1184(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007f3c5:
	mov -1176(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007f3c8:
	mov -1168(%RBP),%RSP
	add $-1192, %RSP
	mov -1160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f3de
	jmp uuid_000000000007f3e0
uuid_000000000007f3de:
	push %RBP
	mov -1040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3d8
	jmp uuid_000000000007f3da
uuid_000000000007f3d8:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f3d5
	jmp uuid_000000000007f3d7
uuid_000000000007f3d5:
	push %RBP
	mov -1256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3cf
	jmp uuid_000000000007f3d1
uuid_000000000007f3cf:
	push %RBP
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	jmp uuid_000000000007f3cc
	jmp uuid_000000000007f3ce
uuid_000000000007f3cc:
	push %RBP
	mov -1384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f3c9
	jmp uuid_000000000007f3cb
uuid_000000000007f3c9:
	movb $1, -1456(%rbp)
uuid_000000000007f3cb:
	mov -1536(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007f3ce:
	mov -1472(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007f3d1:
	mov -1464(%RBP),%RSP
	add $-1544, %RSP
	mov -1456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f3d2
	jmp uuid_000000000007f3d4
uuid_000000000007f3d2:
	movb $1, -1280(%rbp)
uuid_000000000007f3d4:
	mov -1376(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007f3d7:
	mov -1296(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007f3da:
	mov -1288(%RBP),%RSP
	add $-1544, %RSP
	mov -1280(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f3db
	jmp uuid_000000000007f3dd
uuid_000000000007f3db:
	movb $1, -1064(%rbp)
uuid_000000000007f3dd:
	mov -1200(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007f3e0:
	mov -1080(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007f3e3:
	mov -1072(%RBP),%RSP
	add $-1544, %RSP
	mov -1064(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f576
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1624(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f405
	jmp uuid_000000000007f407
uuid_000000000007f405:
	push %RBP
	mov -1616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3ea
	jmp uuid_000000000007f3ec
uuid_000000000007f3ea:
	push %RBP
	jmp uuid_000000000007f3e7
	jmp uuid_000000000007f3e9
uuid_000000000007f3e7:
	push %RBP
	mov -1656(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f3e4
	jmp uuid_000000000007f3e6
uuid_000000000007f3e4:
	movb $1, -1728(%rbp)
uuid_000000000007f3e6:
	mov -1752(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007f3e9:
	mov -1744(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007f3ec:
	mov -1736(%RBP),%RSP
	add $-1760, %RSP
	mov -1728(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f402
	jmp uuid_000000000007f404
uuid_000000000007f402:
	push %RBP
	mov -1608(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1840(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3fc
	jmp uuid_000000000007f3fe
uuid_000000000007f3fc:
	push %RBP
	mov -1832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f3f9
	jmp uuid_000000000007f3fb
uuid_000000000007f3f9:
	push %RBP
	mov -1824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2016(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f3f3
	jmp uuid_000000000007f3f5
uuid_000000000007f3f3:
	push %RBP
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	jmp uuid_000000000007f3f0
	jmp uuid_000000000007f3f2
uuid_000000000007f3f0:
	push %RBP
	mov -1952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f3ed
	jmp uuid_000000000007f3ef
uuid_000000000007f3ed:
	movb $1, -2024(%rbp)
uuid_000000000007f3ef:
	mov -2104(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007f3f2:
	mov -2040(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007f3f5:
	mov -2032(%RBP),%RSP
	add $-2112, %RSP
	mov -2024(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f3f6
	jmp uuid_000000000007f3f8
uuid_000000000007f3f6:
	movb $1, -1848(%rbp)
uuid_000000000007f3f8:
	mov -1944(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007f3fb:
	mov -1864(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007f3fe:
	mov -1856(%RBP),%RSP
	add $-2112, %RSP
	mov -1848(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f3ff
	jmp uuid_000000000007f401
uuid_000000000007f3ff:
	movb $1, -1632(%rbp)
uuid_000000000007f401:
	mov -1768(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007f404:
	mov -1648(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007f407:
	mov -1640(%RBP),%RSP
	add $-2112, %RSP
	mov -1632(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f573
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f42f
	jmp uuid_000000000007f431
uuid_000000000007f42f:
	push %RBP
	mov -2184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f42c
	jmp uuid_000000000007f42e
uuid_000000000007f42c:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2368(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f426
	jmp uuid_000000000007f428
uuid_000000000007f426:
	push %RBP
	mov -2360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2464(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f414
	jmp uuid_000000000007f416
uuid_000000000007f414:
	push %RBP
	mov -2456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f40b
	jmp uuid_000000000007f40d
uuid_000000000007f40b:
	push %RBP
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	jmp uuid_000000000007f408
	jmp uuid_000000000007f40a
uuid_000000000007f408:
	movb $1, -2568(%rbp)
uuid_000000000007f40a:
	mov -2584(%RBP),%RSP
	add $-2608, %RSP
uuid_000000000007f40d:
	mov -2576(%RBP),%RSP
	add $-2608, %RSP
	mov -2568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f411
	jmp uuid_000000000007f413
uuid_000000000007f411:
	push %RBP
	mov -2448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f40e
	jmp uuid_000000000007f410
uuid_000000000007f40e:
	movb $1, -2472(%rbp)
uuid_000000000007f410:
	mov -2616(%RBP),%RSP
	add $-2688, %RSP
uuid_000000000007f413:
	mov -2488(%RBP),%RSP
	add $-2688, %RSP
uuid_000000000007f416:
	mov -2480(%RBP),%RSP
	add $-2688, %RSP
	mov -2472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f423
	jmp uuid_000000000007f425
uuid_000000000007f423:
	push %RBP
	mov -2352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f41d
	jmp uuid_000000000007f41f
uuid_000000000007f41d:
	push %RBP
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	jmp uuid_000000000007f41a
	jmp uuid_000000000007f41c
uuid_000000000007f41a:
	push %RBP
	mov -2704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2864(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f417
	jmp uuid_000000000007f419
uuid_000000000007f417:
	movb $1, -2776(%rbp)
uuid_000000000007f419:
	mov -2856(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007f41c:
	mov -2792(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007f41f:
	mov -2784(%RBP),%RSP
	add $-2864, %RSP
	mov -2776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f420
	jmp uuid_000000000007f422
uuid_000000000007f420:
	movb $1, -2376(%rbp)
uuid_000000000007f422:
	mov -2696(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007f425:
	mov -2392(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007f428:
	mov -2384(%RBP),%RSP
	add $-2864, %RSP
	mov -2376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f429
	jmp uuid_000000000007f42b
uuid_000000000007f429:
	movb $1, -2200(%rbp)
uuid_000000000007f42b:
	mov -2296(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007f42e:
	mov -2216(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007f431:
	mov -2208(%RBP),%RSP
	add $-2864, %RSP
	mov -2200(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f570
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2944(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f453
	jmp uuid_000000000007f455
uuid_000000000007f453:
	push %RBP
	mov -2936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3040(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f438
	jmp uuid_000000000007f43a
uuid_000000000007f438:
	push %RBP
	jmp uuid_000000000007f435
	jmp uuid_000000000007f437
uuid_000000000007f435:
	push %RBP
	mov -2976(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f432
	jmp uuid_000000000007f434
uuid_000000000007f432:
	movb $1, -3048(%rbp)
uuid_000000000007f434:
	mov -3072(%RBP),%RSP
	add $-3080, %RSP
uuid_000000000007f437:
	mov -3064(%RBP),%RSP
	add $-3080, %RSP
uuid_000000000007f43a:
	mov -3056(%RBP),%RSP
	add $-3080, %RSP
	mov -3048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f450
	jmp uuid_000000000007f452
uuid_000000000007f450:
	push %RBP
	mov -2928(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f44a
	jmp uuid_000000000007f44c
uuid_000000000007f44a:
	push %RBP
	mov -3152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f447
	jmp uuid_000000000007f449
uuid_000000000007f447:
	push %RBP
	mov -3144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3336(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f441
	jmp uuid_000000000007f443
uuid_000000000007f441:
	push %RBP
	pushq -3280(%RBP)
	pushq -3288(%RBP)
	pushq -3296(%RBP)
	pushq -3304(%RBP)
	pushq -3312(%RBP)
	pushq -3320(%RBP)
	pushq -3328(%RBP)
	jmp uuid_000000000007f43e
	jmp uuid_000000000007f440
uuid_000000000007f43e:
	push %RBP
	mov -3272(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3432(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f43b
	jmp uuid_000000000007f43d
uuid_000000000007f43b:
	movb $1, -3344(%rbp)
uuid_000000000007f43d:
	mov -3424(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007f440:
	mov -3360(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007f443:
	mov -3352(%RBP),%RSP
	add $-3432, %RSP
	mov -3344(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f444
	jmp uuid_000000000007f446
uuid_000000000007f444:
	movb $1, -3168(%rbp)
uuid_000000000007f446:
	mov -3264(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007f449:
	mov -3184(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007f44c:
	mov -3176(%RBP),%RSP
	add $-3432, %RSP
	mov -3168(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f44d
	jmp uuid_000000000007f44f
uuid_000000000007f44d:
	movb $1, -2952(%rbp)
uuid_000000000007f44f:
	mov -3088(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007f452:
	mov -2968(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007f455:
	mov -2960(%RBP),%RSP
	add $-3432, %RSP
	mov -2952(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f56d
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -3512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f477
	jmp uuid_000000000007f479
uuid_000000000007f477:
	push %RBP
	mov -3504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3608(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f45c
	jmp uuid_000000000007f45e
uuid_000000000007f45c:
	push %RBP
	jmp uuid_000000000007f459
	jmp uuid_000000000007f45b
uuid_000000000007f459:
	push %RBP
	mov -3544(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f456
	jmp uuid_000000000007f458
uuid_000000000007f456:
	movb $1, -3616(%rbp)
uuid_000000000007f458:
	mov -3640(%RBP),%RSP
	add $-3648, %RSP
uuid_000000000007f45b:
	mov -3632(%RBP),%RSP
	add $-3648, %RSP
uuid_000000000007f45e:
	mov -3624(%RBP),%RSP
	add $-3648, %RSP
	mov -3616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f474
	jmp uuid_000000000007f476
uuid_000000000007f474:
	push %RBP
	mov -3496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3728(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f46e
	jmp uuid_000000000007f470
uuid_000000000007f46e:
	push %RBP
	mov -3720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f46b
	jmp uuid_000000000007f46d
uuid_000000000007f46b:
	push %RBP
	mov -3712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3904(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f465
	jmp uuid_000000000007f467
uuid_000000000007f465:
	push %RBP
	pushq -3848(%RBP)
	pushq -3856(%RBP)
	pushq -3864(%RBP)
	pushq -3872(%RBP)
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	jmp uuid_000000000007f462
	jmp uuid_000000000007f464
uuid_000000000007f462:
	push %RBP
	mov -3840(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq $uuid_000000000007b84a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f45f
	jmp uuid_000000000007f461
uuid_000000000007f45f:
	movb $1, -3912(%rbp)
uuid_000000000007f461:
	mov -3992(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007f464:
	mov -3928(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007f467:
	mov -3920(%RBP),%RSP
	add $-4000, %RSP
	mov -3912(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f468
	jmp uuid_000000000007f46a
uuid_000000000007f468:
	movb $1, -3736(%rbp)
uuid_000000000007f46a:
	mov -3832(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007f46d:
	mov -3752(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007f470:
	mov -3744(%RBP),%RSP
	add $-4000, %RSP
	mov -3736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f471
	jmp uuid_000000000007f473
uuid_000000000007f471:
	movb $1, -3520(%rbp)
uuid_000000000007f473:
	mov -3656(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007f476:
	mov -3536(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007f479:
	mov -3528(%RBP),%RSP
	add $-4000, %RSP
	mov -3520(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f56a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4080(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f492
	jmp uuid_000000000007f494
uuid_000000000007f492:
	push %RBP
	mov -4072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4176(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f480
	jmp uuid_000000000007f482
uuid_000000000007f480:
	push %RBP
	jmp uuid_000000000007f47d
	jmp uuid_000000000007f47f
uuid_000000000007f47d:
	push %RBP
	mov -4112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f47a
	jmp uuid_000000000007f47c
uuid_000000000007f47a:
	movb $1, -4184(%rbp)
uuid_000000000007f47c:
	mov -4208(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007f47f:
	mov -4200(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007f482:
	mov -4192(%RBP),%RSP
	add $-4216, %RSP
	mov -4184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f48f
	jmp uuid_000000000007f491
uuid_000000000007f48f:
	push %RBP
	mov -4064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4296(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f489
	jmp uuid_000000000007f48b
uuid_000000000007f489:
	push %RBP
	pushq -4240(%RBP)
	pushq -4248(%RBP)
	pushq -4256(%RBP)
	pushq -4264(%RBP)
	pushq -4272(%RBP)
	pushq -4280(%RBP)
	pushq -4288(%RBP)
	jmp uuid_000000000007f486
	jmp uuid_000000000007f488
uuid_000000000007f486:
	push %RBP
	mov -4232(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq $uuid_000000000007bb66
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f483
	jmp uuid_000000000007f485
uuid_000000000007f483:
	movb $1, -4304(%rbp)
uuid_000000000007f485:
	mov -4384(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007f488:
	mov -4320(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007f48b:
	mov -4312(%RBP),%RSP
	add $-4392, %RSP
	mov -4304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f48c
	jmp uuid_000000000007f48e
uuid_000000000007f48c:
	movb $1, -4088(%rbp)
uuid_000000000007f48e:
	mov -4224(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007f491:
	mov -4104(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007f494:
	mov -4096(%RBP),%RSP
	add $-4392, %RSP
	mov -4088(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f567
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f4ad
	jmp uuid_000000000007f4af
uuid_000000000007f4ad:
	push %RBP
	mov -4464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f49b
	jmp uuid_000000000007f49d
uuid_000000000007f49b:
	push %RBP
	jmp uuid_000000000007f498
	jmp uuid_000000000007f49a
uuid_000000000007f498:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f495
	jmp uuid_000000000007f497
uuid_000000000007f495:
	movb $1, -4576(%rbp)
uuid_000000000007f497:
	mov -4600(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007f49a:
	mov -4592(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007f49d:
	mov -4584(%RBP),%RSP
	add $-4608, %RSP
	mov -4576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f4aa
	jmp uuid_000000000007f4ac
uuid_000000000007f4aa:
	push %RBP
	mov -4456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4688(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f4a4
	jmp uuid_000000000007f4a6
uuid_000000000007f4a4:
	push %RBP
	pushq -4632(%RBP)
	pushq -4640(%RBP)
	pushq -4648(%RBP)
	pushq -4656(%RBP)
	pushq -4664(%RBP)
	pushq -4672(%RBP)
	pushq -4680(%RBP)
	jmp uuid_000000000007f4a1
	jmp uuid_000000000007f4a3
uuid_000000000007f4a1:
	push %RBP
	mov -4624(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4784(%rbp)
	pushq $uuid_000000000007bb66
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f49e
	jmp uuid_000000000007f4a0
uuid_000000000007f49e:
	movb $1, -4696(%rbp)
uuid_000000000007f4a0:
	mov -4776(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007f4a3:
	mov -4712(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007f4a6:
	mov -4704(%RBP),%RSP
	add $-4784, %RSP
	mov -4696(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f4a7
	jmp uuid_000000000007f4a9
uuid_000000000007f4a7:
	movb $1, -4480(%rbp)
uuid_000000000007f4a9:
	mov -4616(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007f4ac:
	mov -4496(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007f4af:
	mov -4488(%RBP),%RSP
	add $-4784, %RSP
	mov -4480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f564
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4864(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f4b6
	jmp uuid_000000000007f4b8
uuid_000000000007f4b6:
	push %RBP
	pushq -4808(%RBP)
	pushq -4816(%RBP)
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq -4840(%RBP)
	pushq -4848(%RBP)
	pushq -4856(%RBP)
	jmp uuid_000000000007f4b3
	jmp uuid_000000000007f4b5
uuid_000000000007f4b3:
	push %RBP
	mov -4800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f4b0
	jmp uuid_000000000007f4b2
uuid_000000000007f4b0:
	movb $1, -4872(%rbp)
uuid_000000000007f4b2:
	mov -4952(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007f4b5:
	mov -4888(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007f4b8:
	mov -4880(%RBP),%RSP
	add $-4960, %RSP
	mov -4872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f561
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5040(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f4d5
	jmp uuid_000000000007f4d7
uuid_000000000007f4d5:
	push %RBP
	pushq -4984(%RBP)
	pushq -4992(%RBP)
	pushq -5000(%RBP)
	pushq -5008(%RBP)
	pushq -5016(%RBP)
	pushq -5024(%RBP)
	pushq -5032(%RBP)
	jmp uuid_000000000007f4d2
	jmp uuid_000000000007f4d4
uuid_000000000007f4d2:
	push %RBP
	mov -4976(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f4cf
	jmp uuid_000000000007f4d1
uuid_000000000007f4cf:
	movb $1, -5048(%rbp)
uuid_000000000007f4d1:
	mov -5128(%RBP),%RSP
	add $-5136, %RSP
uuid_000000000007f4d4:
	mov -5064(%RBP),%RSP
	add $-5136, %RSP
uuid_000000000007f4d7:
	mov -5056(%RBP),%RSP
	add $-5136, %RSP
	mov -5048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f55e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5216(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f4fd
	jmp uuid_000000000007f4ff
uuid_000000000007f4fd:
	push %RBP
	mov -5208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f4fa
	jmp uuid_000000000007f4fc
uuid_000000000007f4fa:
	push %RBP
	mov -5200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f4f4
	jmp uuid_000000000007f4f6
uuid_000000000007f4f4:
	push %RBP
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	jmp uuid_000000000007f4f1
	jmp uuid_000000000007f4f3
uuid_000000000007f4f1:
	push %RBP
	mov -5328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f4ee
	jmp uuid_000000000007f4f0
uuid_000000000007f4ee:
	movb $1, -5400(%rbp)
uuid_000000000007f4f0:
	mov -5480(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007f4f3:
	mov -5416(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007f4f6:
	mov -5408(%RBP),%RSP
	add $-5488, %RSP
	mov -5400(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f4f7
	jmp uuid_000000000007f4f9
uuid_000000000007f4f7:
	movb $1, -5224(%rbp)
uuid_000000000007f4f9:
	mov -5320(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007f4fc:
	mov -5240(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007f4ff:
	mov -5232(%RBP),%RSP
	add $-5488, %RSP
	mov -5224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f55b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5568(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f51b
	jmp uuid_000000000007f51d
uuid_000000000007f51b:
	push %RBP
	mov -5560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f518
	jmp uuid_000000000007f51a
uuid_000000000007f518:
	push %RBP
	mov -5552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5744(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f512
	jmp uuid_000000000007f514
uuid_000000000007f512:
	push %RBP
	mov -5736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f50f
	jmp uuid_000000000007f511
uuid_000000000007f50f:
	push %RBP
	mov -5728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5920(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f509
	jmp uuid_000000000007f50b
uuid_000000000007f509:
	push %RBP
	pushq -5864(%RBP)
	pushq -5872(%RBP)
	pushq -5880(%RBP)
	pushq -5888(%RBP)
	pushq -5896(%RBP)
	pushq -5904(%RBP)
	pushq -5912(%RBP)
	jmp uuid_000000000007f506
	jmp uuid_000000000007f508
uuid_000000000007f506:
	push %RBP
	mov -5856(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f503
	jmp uuid_000000000007f505
uuid_000000000007f503:
	movb $1, -5928(%rbp)
uuid_000000000007f505:
	mov -6008(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007f508:
	mov -5944(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007f50b:
	mov -5936(%RBP),%RSP
	add $-6016, %RSP
	mov -5928(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f50c
	jmp uuid_000000000007f50e
uuid_000000000007f50c:
	movb $1, -5752(%rbp)
uuid_000000000007f50e:
	mov -5848(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007f511:
	mov -5768(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007f514:
	mov -5760(%RBP),%RSP
	add $-6016, %RSP
	mov -5752(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f515
	jmp uuid_000000000007f517
uuid_000000000007f515:
	movb $1, -5576(%rbp)
uuid_000000000007f517:
	mov -5672(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007f51a:
	mov -5592(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007f51d:
	mov -5584(%RBP),%RSP
	add $-6016, %RSP
	mov -5576(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f558
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6096(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f527
	jmp uuid_000000000007f529
uuid_000000000007f527:
	push %RBP
	mov -6088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f524
	jmp uuid_000000000007f526
uuid_000000000007f524:
	push %RBP
	mov -6080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f521
	jmp uuid_000000000007f523
uuid_000000000007f521:
	movb $1, -6104(%rbp)
uuid_000000000007f523:
	mov -6200(%RBP),%RSP
	add $-6272, %RSP
uuid_000000000007f526:
	mov -6120(%RBP),%RSP
	add $-6272, %RSP
uuid_000000000007f529:
	mov -6112(%RBP),%RSP
	add $-6272, %RSP
	mov -6104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f555
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f530
	jmp uuid_000000000007f532
uuid_000000000007f530:
	push %RBP
	mov -6344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f52d
	jmp uuid_000000000007f52f
uuid_000000000007f52d:
	push %RBP
	mov -6336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f52a
	jmp uuid_000000000007f52c
uuid_000000000007f52a:
	movb $1, -6360(%rbp)
uuid_000000000007f52c:
	mov -6456(%RBP),%RSP
	add $-6528, %RSP
uuid_000000000007f52f:
	mov -6376(%RBP),%RSP
	add $-6528, %RSP
uuid_000000000007f532:
	mov -6368(%RBP),%RSP
	add $-6528, %RSP
	mov -6360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f552
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6608(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f53c
	jmp uuid_000000000007f53e
uuid_000000000007f53c:
	push %RBP
	pushq -6584(%RBP)
	pushq -6592(%RBP)
	pushq -6600(%RBP)
	jmp uuid_000000000007f539
	jmp uuid_000000000007f53b
uuid_000000000007f539:
	push %RBP
	mov -6576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f536
	jmp uuid_000000000007f538
uuid_000000000007f536:
	push %RBP
	mov -6568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f533
	jmp uuid_000000000007f535
uuid_000000000007f533:
	movb $1, -6616(%rbp)
uuid_000000000007f535:
	mov -6744(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007f538:
	mov -6664(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007f53b:
	mov -6632(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007f53e:
	mov -6624(%RBP),%RSP
	add $-6816, %RSP
	mov -6616(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f54f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6896(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f545
	jmp uuid_000000000007f547
uuid_000000000007f545:
	push %RBP
	mov -6888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f542
	jmp uuid_000000000007f544
uuid_000000000007f542:
	push %RBP
	pushq -6832(%RBP)
	pushq -6840(%RBP)
	pushq -6848(%RBP)
	pushq -6856(%RBP)
	pushq -6864(%RBP)
	pushq -6872(%RBP)
	pushq -6880(%RBP)
	jmp uuid_000000000007f53f
	jmp uuid_000000000007f541
uuid_000000000007f53f:
	movb $1, -6904(%rbp)
uuid_000000000007f541:
	mov -7000(%RBP),%RSP
	add $-7056, %RSP
uuid_000000000007f544:
	mov -6920(%RBP),%RSP
	add $-7056, %RSP
uuid_000000000007f547:
	mov -6912(%RBP),%RSP
	add $-7056, %RSP
	mov -6904(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f54c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007f549
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f548
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f54b
uuid_000000000007f549:
	movq -7136(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -7128(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -7120(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -7112(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -7104(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -7096(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -7088(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -7080(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -7072(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007f54b:
	mov -7064(%RBP),%RSP
	add $-7136, %RSP
	jmp uuid_000000000007f54e
uuid_000000000007f54c:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7008(%rbp)
	pushq -7016(%rbp)
	pushq -7024(%rbp)
	pushq -7032(%rbp)
	pushq -7040(%rbp)
	pushq -7048(%rbp)
	pushq -7056(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6928(%rbp)
	pushq -6936(%rbp)
	pushq -6944(%rbp)
	pushq -6952(%rbp)
	pushq -6960(%rbp)
	pushq -6968(%rbp)
	pushq -6976(%rbp)
	pushq -6984(%rbp)
	pushq -6992(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f54e:
	mov -6824(%RBP),%RSP
	add $-7056, %RSP
	jmp uuid_000000000007f551
uuid_000000000007f54f:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6752(%rbp)
	pushq -6760(%rbp)
	pushq -6768(%rbp)
	pushq -6776(%rbp)
	pushq -6784(%rbp)
	pushq -6792(%rbp)
	pushq -6800(%rbp)
	pushq -6808(%rbp)
	pushq -6816(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6688(%rbp)
	pushq -6696(%rbp)
	pushq -6704(%rbp)
	pushq -6712(%rbp)
	pushq -6720(%rbp)
	pushq -6728(%rbp)
	pushq -6736(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -6640(%rbp)
	pushq -6648(%rbp)
	pushq -6656(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f551:
	mov -6536(%RBP),%RSP
	add $-6816, %RSP
	jmp uuid_000000000007f554
uuid_000000000007f552:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6464(%rbp)
	pushq -6472(%rbp)
	pushq -6480(%rbp)
	pushq -6488(%rbp)
	pushq -6496(%rbp)
	pushq -6504(%rbp)
	pushq -6512(%rbp)
	pushq -6520(%rbp)
	pushq -6528(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6384(%rbp)
	pushq -6392(%rbp)
	pushq -6400(%rbp)
	pushq -6408(%rbp)
	pushq -6416(%rbp)
	pushq -6424(%rbp)
	pushq -6432(%rbp)
	pushq -6440(%rbp)
	pushq -6448(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f554:
	mov -6280(%RBP),%RSP
	add $-6528, %RSP
	jmp uuid_000000000007f557
uuid_000000000007f555:
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6208(%rbp)
	pushq -6216(%rbp)
	pushq -6224(%rbp)
	pushq -6232(%rbp)
	pushq -6240(%rbp)
	pushq -6248(%rbp)
	pushq -6256(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6128(%rbp)
	pushq -6136(%rbp)
	pushq -6144(%rbp)
	pushq -6152(%rbp)
	pushq -6160(%rbp)
	pushq -6168(%rbp)
	pushq -6176(%rbp)
	pushq -6184(%rbp)
	pushq -6192(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f557:
	mov -6024(%RBP),%RSP
	add $-6272, %RSP
	jmp uuid_000000000007f55a
uuid_000000000007f558:
	push %RBP
#call function is-macro-head : Arrow<Cons<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $2
	mov %RBX, %RBP
	call is_SB_macro_SB_head_CL_ArrowU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f51e
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	pushq -5968(%rbp)
	pushq -5976(%rbp)
	pushq -5984(%rbp)
	pushq -5992(%rbp)
	pushq -6000(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007f520
uuid_000000000007f51e:
#call function preprocess-apply-hard : Arrow<Cons<Cons<String,U64>,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	movq -6096(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -6088(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -6080(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -6072(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -6064(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -6056(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -6048(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -6040(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -6032(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007f520:
	mov -6024(%RBP),%RSP
	add $-6096, %RSP
uuid_000000000007f55a:
	mov -5496(%RBP),%RSP
	add $-6096, %RSP
	jmp uuid_000000000007f55d
uuid_000000000007f55b:
	push %RBP
#call function is-macro-head : Arrow<Cons<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call is_SB_macro_SB_head_CL_ArrowU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f500
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007f502
uuid_000000000007f500:
#call function preprocess-apply-hard : Arrow<Cons<Cons<String,U64>,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	movq -5568(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -5560(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -5552(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -5544(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -5536(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -5528(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -5520(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -5512(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -5504(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007f502:
	mov -5496(%RBP),%RSP
	add $-5568, %RSP
uuid_000000000007f55d:
	mov -5144(%RBP),%RSP
	add $-5568, %RSP
	jmp uuid_000000000007f560
uuid_000000000007f55e:
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007f4eb:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f4ec
	jmp uuid_000000000007f4ed
uuid_000000000007f4ec:
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	push %RBP
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq $0
	push %RBP
	mov -5288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f4e1
	jmp uuid_000000000007f4e3
uuid_000000000007f4e1:
	push %RBP
	pushq -5264(%RBP)
	pushq -5272(%RBP)
	pushq -5280(%RBP)
	jmp uuid_000000000007f4de
	jmp uuid_000000000007f4e0
uuid_000000000007f4de:
	push %RBP
	mov -5256(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f4db
	jmp uuid_000000000007f4dd
uuid_000000000007f4db:
	push %RBP
	mov -5248(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f4d8
	jmp uuid_000000000007f4da
uuid_000000000007f4d8:
	movb $1, -5296(%rbp)
uuid_000000000007f4da:
	mov -5360(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007f4dd:
	mov -5344(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007f4e0:
	mov -5312(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007f4e3:
	mov -5304(%RBP),%RSP
	add $-5408, %RSP
	mov -5296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f4e8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f4e7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f4ea
uuid_000000000007f4e8:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5136(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f4e4
	movq -5408(%rbp), %r15
	movq %r15, -5184(%rbp)
	movq -5400(%rbp), %r15
	movq %r15, -5176(%rbp)
	movq -5392(%rbp), %r15
	movq %r15, -5168(%rbp)
	movq -5384(%rbp), %r15
	movq %r15, -5160(%rbp)
	movq -5376(%rbp), %r15
	movq %r15, -5152(%rbp)
	movq -5368(%rbp), %r15
	movq %r15, -5144(%rbp)
	jmp uuid_000000000007f4e6
uuid_000000000007f4e4:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5136(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5424(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5424(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -5184(%RBP)
	popq -5176(%RBP)
	popq -5168(%RBP)
	popq -5160(%RBP)
	popq -5152(%RBP)
	popq -5144(%RBP)
uuid_000000000007f4e6:
	mov -5416(%RBP),%RSP
	add $-5424, %RSP
uuid_000000000007f4ea:
	mov -5240(%RBP),%RSP
	add $-5424, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f4eb
uuid_000000000007f4ed:
uuid_000000000007f560:
	mov -4968(%RBP),%RSP
	add $-5184, %RSP
	jmp uuid_000000000007f563
uuid_000000000007f561:
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007f4cc:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f4cd
	jmp uuid_000000000007f4ce
uuid_000000000007f4cd:
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	push %RBP
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f4c2
	jmp uuid_000000000007f4c4
uuid_000000000007f4c2:
	push %RBP
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	pushq -5104(%RBP)
	jmp uuid_000000000007f4bf
	jmp uuid_000000000007f4c1
uuid_000000000007f4bf:
	push %RBP
	mov -5080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f4bc
	jmp uuid_000000000007f4be
uuid_000000000007f4bc:
	push %RBP
	mov -5072(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f4b9
	jmp uuid_000000000007f4bb
uuid_000000000007f4b9:
	movb $1, -5120(%rbp)
uuid_000000000007f4bb:
	mov -5184(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007f4be:
	mov -5168(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007f4c1:
	mov -5136(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007f4c4:
	mov -5128(%RBP),%RSP
	add $-5232, %RSP
	mov -5120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f4c9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f4c8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f4cb
uuid_000000000007f4c9:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -5176(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f4c5
	movq -5232(%rbp), %r15
	movq %r15, -5008(%rbp)
	movq -5224(%rbp), %r15
	movq %r15, -5000(%rbp)
	movq -5216(%rbp), %r15
	movq %r15, -4992(%rbp)
	movq -5208(%rbp), %r15
	movq %r15, -4984(%rbp)
	movq -5200(%rbp), %r15
	movq %r15, -4976(%rbp)
	movq -5192(%rbp), %r15
	movq %r15, -4968(%rbp)
	jmp uuid_000000000007f4c7
uuid_000000000007f4c5:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -5176(%rbp)
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5248(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -5248(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -5008(%RBP)
	popq -5000(%RBP)
	popq -4992(%RBP)
	popq -4984(%RBP)
	popq -4976(%RBP)
	popq -4968(%RBP)
uuid_000000000007f4c7:
	mov -5240(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007f4cb:
	mov -5064(%RBP),%RSP
	add $-5248, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f4cc
uuid_000000000007f4ce:
uuid_000000000007f563:
	mov -4792(%RBP),%RSP
	add $-5008, %RSP
	jmp uuid_000000000007f566
uuid_000000000007f564:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb66
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f566:
	mov -4400(%RBP),%RSP
	add $-4784, %RSP
	jmp uuid_000000000007f569
uuid_000000000007f567:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bb66
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4216(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f569:
	mov -4008(%RBP),%RSP
	add $-4392, %RSP
	jmp uuid_000000000007f56c
uuid_000000000007f56a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b84a
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -3952(%rbp)
	pushq -3960(%rbp)
	pushq -3968(%rbp)
	pushq -3976(%rbp)
	pushq -3984(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3760(%rbp)
	pushq -3768(%rbp)
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -3800(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3648(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f56c:
	mov -3440(%RBP),%RSP
	add $-4000, %RSP
	jmp uuid_000000000007f56f
uuid_000000000007f56d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b84a
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3368(%rbp)
	pushq -3376(%rbp)
	pushq -3384(%rbp)
	pushq -3392(%rbp)
	pushq -3400(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3192(%rbp)
	pushq -3200(%rbp)
	pushq -3208(%rbp)
	pushq -3216(%rbp)
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	pushq -3240(%rbp)
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3080(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f56f:
	mov -2872(%RBP),%RSP
	add $-3432, %RSP
	jmp uuid_000000000007f572
uuid_000000000007f570:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b84a
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	pushq -2648(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f572:
	mov -2120(%RBP),%RSP
	add $-2864, %RSP
	jmp uuid_000000000007f575
uuid_000000000007f573:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f575:
	mov -1552(%RBP),%RSP
	add $-2112, %RSP
	jmp uuid_000000000007f578
uuid_000000000007f576:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f578:
	mov -984(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007f57b
uuid_000000000007f579:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007f57b:
	mov -232(%RBP),%RSP
	add $-976, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_is_SB_suffixed_CL_ArrowU64String:
	pushq $0
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007f58f:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f590
	jmp uuid_000000000007f591
uuid_000000000007f590:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f585
	jmp uuid_000000000007f587
uuid_000000000007f585:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007f582
	jmp uuid_000000000007f584
uuid_000000000007f582:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f57f
	jmp uuid_000000000007f581
uuid_000000000007f57f:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f57c
	jmp uuid_000000000007f57e
uuid_000000000007f57c:
	movb $1, -184(%rbp)
uuid_000000000007f57e:
	mov -248(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007f581:
	mov -232(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007f584:
	mov -200(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007f587:
	mov -192(%RBP),%RSP
	add $-296, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f58c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f58b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f58e
uuid_000000000007f58c:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f588
	jmp uuid_000000000007f58a
uuid_000000000007f588:
	movq $1, -24(%rbp)
uuid_000000000007f58a:
	mov -304(%RBP),%RSP
	add $-304, %RSP
	movq -296(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007f58e:
	mov -128(%RBP),%RSP
	add $-304, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f58f
uuid_000000000007f591:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
preprocess_CL_ArrowNilNil:
#call function index-typedefs : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
substitute_SB_uuids_CL_ArrowASTConsASTContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5aa
	jmp uuid_000000000007f5ac
uuid_000000000007f5aa:
	push %RBP
	mov -392(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f598
	jmp uuid_000000000007f59a
uuid_000000000007f598:
	push %RBP
	jmp uuid_000000000007f595
	jmp uuid_000000000007f597
uuid_000000000007f595:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f592
	jmp uuid_000000000007f594
uuid_000000000007f592:
	movb $1, -504(%rbp)
uuid_000000000007f594:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007f597:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007f59a:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f5a7
	jmp uuid_000000000007f5a9
uuid_000000000007f5a7:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5a1
	jmp uuid_000000000007f5a3
uuid_000000000007f5a1:
	push %RBP
	jmp uuid_000000000007f59e
	jmp uuid_000000000007f5a0
uuid_000000000007f59e:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq $uuid_000000000007ee49
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f59b
	jmp uuid_000000000007f59d
uuid_000000000007f59b:
	movb $1, -624(%rbp)
uuid_000000000007f59d:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007f5a0:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007f5a3:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f5a4
	jmp uuid_000000000007f5a6
uuid_000000000007f5a4:
	movb $1, -408(%rbp)
uuid_000000000007f5a6:
	mov -544(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007f5a9:
	mov -424(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007f5ac:
	mov -416(%RBP),%RSP
	add $-656, %RSP
	mov -408(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f62d
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5cc
	jmp uuid_000000000007f5ce
uuid_000000000007f5cc:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5c9
	jmp uuid_000000000007f5cb
uuid_000000000007f5c9:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5c6
	jmp uuid_000000000007f5c8
uuid_000000000007f5c6:
	movb $1, -744(%rbp)
uuid_000000000007f5c8:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007f5cb:
	mov -760(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007f5ce:
	mov -752(%RBP),%RSP
	add $-912, %RSP
	mov -744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f62a
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5d8
	jmp uuid_000000000007f5da
uuid_000000000007f5d8:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007f5d5
	jmp uuid_000000000007f5d7
uuid_000000000007f5d5:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5d2
	jmp uuid_000000000007f5d4
uuid_000000000007f5d2:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5cf
	jmp uuid_000000000007f5d1
uuid_000000000007f5cf:
	movb $1, -1000(%rbp)
uuid_000000000007f5d1:
	mov -1128(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007f5d4:
	mov -1048(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007f5d7:
	mov -1016(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007f5da:
	mov -1008(%RBP),%RSP
	add $-1200, %RSP
	mov -1000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f627
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -1280(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f624
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f621
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1440(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5de
	jmp uuid_000000000007f5e0
uuid_000000000007f5de:
	push %RBP
	jmp uuid_000000000007f5db
	jmp uuid_000000000007f5dd
uuid_000000000007f5db:
	movb $1, -1448(%rbp)
uuid_000000000007f5dd:
	mov -1464(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007f5e0:
	mov -1456(%RBP),%RSP
	add $-1464, %RSP
	mov -1448(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f61e
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5e7
	jmp uuid_000000000007f5e9
uuid_000000000007f5e7:
	push %RBP
	jmp uuid_000000000007f5e4
	jmp uuid_000000000007f5e6
uuid_000000000007f5e4:
	push %RBP
	mov -1480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f5e1
	jmp uuid_000000000007f5e3
uuid_000000000007f5e1:
	movb $1, -1552(%rbp)
uuid_000000000007f5e3:
	mov -1576(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007f5e6:
	mov -1568(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007f5e9:
	mov -1560(%RBP),%RSP
	add $-1584, %RSP
	mov -1552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f61b
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5f0
	jmp uuid_000000000007f5f2
uuid_000000000007f5f0:
	push %RBP
	jmp uuid_000000000007f5ed
	jmp uuid_000000000007f5ef
uuid_000000000007f5ed:
	push %RBP
	mov -1600(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f5ea
	jmp uuid_000000000007f5ec
uuid_000000000007f5ea:
	movb $1, -1672(%rbp)
uuid_000000000007f5ec:
	mov -1696(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007f5ef:
	mov -1688(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007f5f2:
	mov -1680(%RBP),%RSP
	add $-1704, %RSP
	mov -1672(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f618
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5f9
	jmp uuid_000000000007f5fb
uuid_000000000007f5f9:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5f6
	jmp uuid_000000000007f5f8
uuid_000000000007f5f6:
	push %RBP
	mov -1768(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5f3
	jmp uuid_000000000007f5f5
uuid_000000000007f5f3:
	movb $1, -1792(%rbp)
uuid_000000000007f5f5:
	mov -1888(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007f5f8:
	mov -1808(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007f5fb:
	mov -1800(%RBP),%RSP
	add $-1960, %RSP
	mov -1792(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f615
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -2040(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f602
	jmp uuid_000000000007f604
uuid_000000000007f602:
	push %RBP
	mov -2032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5ff
	jmp uuid_000000000007f601
uuid_000000000007f5ff:
	push %RBP
	mov -2024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5fc
	jmp uuid_000000000007f5fe
uuid_000000000007f5fc:
	movb $1, -2048(%rbp)
uuid_000000000007f5fe:
	mov -2144(%RBP),%RSP
	add $-2216, %RSP
uuid_000000000007f601:
	mov -2064(%RBP),%RSP
	add $-2216, %RSP
uuid_000000000007f604:
	mov -2056(%RBP),%RSP
	add $-2216, %RSP
	mov -2048(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f612
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -2296(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f60b
	jmp uuid_000000000007f60d
uuid_000000000007f60b:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f608
	jmp uuid_000000000007f60a
uuid_000000000007f608:
	push %RBP
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	jmp uuid_000000000007f605
	jmp uuid_000000000007f607
uuid_000000000007f605:
	movb $1, -2304(%rbp)
uuid_000000000007f607:
	mov -2400(%RBP),%RSP
	add $-2456, %RSP
uuid_000000000007f60a:
	mov -2320(%RBP),%RSP
	add $-2456, %RSP
uuid_000000000007f60d:
	mov -2312(%RBP),%RSP
	add $-2456, %RSP
	mov -2304(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f60f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f60e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f611
uuid_000000000007f60f:
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007f611:
	mov -2224(%RBP),%RSP
	add $-2456, %RSP
	jmp uuid_000000000007f614
uuid_000000000007f612:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007f614:
	mov -1968(%RBP),%RSP
	add $-2216, %RSP
	jmp uuid_000000000007f617
uuid_000000000007f615:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007f617:
	mov -1712(%RBP),%RSP
	add $-1960, %RSP
	jmp uuid_000000000007f61a
uuid_000000000007f618:
uuid_000000000007f61a:
	mov -1592(%RBP),%RSP
	add $-1704, %RSP
	jmp uuid_000000000007f61d
uuid_000000000007f61b:
uuid_000000000007f61d:
	mov -1472(%RBP),%RSP
	add $-1584, %RSP
	jmp uuid_000000000007f620
uuid_000000000007f61e:
uuid_000000000007f620:
	mov -1368(%RBP),%RSP
	add $-1464, %RSP
	jmp uuid_000000000007f623
uuid_000000000007f621:
uuid_000000000007f623:
	mov -1288(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007f626
uuid_000000000007f624:
uuid_000000000007f626:
	mov -1208(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007f629
uuid_000000000007f627:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq $5
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007f629:
	mov -920(%RBP),%RSP
	add $-1200, %RSP
	jmp uuid_000000000007f62c
uuid_000000000007f62a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007f62c:
	mov -664(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007f62f
uuid_000000000007f62d:
uuid_000000000007f5c3:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f5c4
	jmp uuid_000000000007f5c5
uuid_000000000007f5c4:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f5b6
	jmp uuid_000000000007f5b8
uuid_000000000007f5b6:
	push %RBP
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	jmp uuid_000000000007f5b3
	jmp uuid_000000000007f5b5
uuid_000000000007f5b3:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f5b0
	jmp uuid_000000000007f5b2
uuid_000000000007f5b0:
	push %RBP
	mov -768(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f5ad
	jmp uuid_000000000007f5af
uuid_000000000007f5ad:
	movb $1, -864(%rbp)
uuid_000000000007f5af:
	mov -976(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f5b2:
	mov -960(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f5b5:
	mov -880(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f5b8:
	mov -872(%RBP),%RSP
	add $-1072, %RSP
	mov -864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f5c0
	push %RBP
	jmp uuid_000000000007f5bd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f5bc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f5bf
uuid_000000000007f5bd:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007f5bf:
	mov -1080(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007f5c2
uuid_000000000007f5c0:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f5b9
	movq -1072(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007f5bb
uuid_000000000007f5b9:
	movq -952(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007f5bb:
	mov -1080(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007f5c2:
	mov -760(%RBP),%RSP
	add $-1080, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f5c3
uuid_000000000007f5c5:
uuid_000000000007f62f:
	mov -328(%RBP),%RSP
	add $-656, %RSP
	subq $72, %rsp
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f636
	jmp uuid_000000000007f638
uuid_000000000007f636:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f633
	jmp uuid_000000000007f635
uuid_000000000007f633:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f630
	jmp uuid_000000000007f632
uuid_000000000007f630:
	movb $1, -600(%rbp)
uuid_000000000007f632:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007f635:
	mov -616(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007f638:
	mov -608(%RBP),%RSP
	add $-768, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8e4
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -928(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f687
	jmp uuid_000000000007f689
uuid_000000000007f687:
	push %RBP
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq $0
	push %RBP
	mov -1024(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f651
	jmp uuid_000000000007f653
uuid_000000000007f651:
	push %RBP
	jmp uuid_000000000007f64e
	jmp uuid_000000000007f650
uuid_000000000007f64e:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f648
	jmp uuid_000000000007f64a
uuid_000000000007f648:
	push %RBP
	jmp uuid_000000000007f645
	jmp uuid_000000000007f647
uuid_000000000007f645:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1232(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f63f
	jmp uuid_000000000007f641
uuid_000000000007f63f:
	push %RBP
	jmp uuid_000000000007f63c
	jmp uuid_000000000007f63e
uuid_000000000007f63c:
	push %RBP
	mov -1168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f639
	jmp uuid_000000000007f63b
uuid_000000000007f639:
	movb $1, -1240(%rbp)
uuid_000000000007f63b:
	mov -1264(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007f63e:
	mov -1256(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007f641:
	mov -1248(%RBP),%RSP
	add $-1272, %RSP
	mov -1240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f642
	jmp uuid_000000000007f644
uuid_000000000007f642:
	movb $1, -1136(%rbp)
uuid_000000000007f644:
	mov -1160(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007f647:
	mov -1152(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007f64a:
	mov -1144(%RBP),%RSP
	add $-1272, %RSP
	mov -1136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f64b
	jmp uuid_000000000007f64d
uuid_000000000007f64b:
	movb $1, -1032(%rbp)
uuid_000000000007f64d:
	mov -1056(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007f650:
	mov -1048(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007f653:
	mov -1040(%RBP),%RSP
	add $-1272, %RSP
	mov -1032(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f684
	jmp uuid_000000000007f686
uuid_000000000007f684:
	push %RBP
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f67e
	jmp uuid_000000000007f680
uuid_000000000007f67e:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f65a
	jmp uuid_000000000007f65c
uuid_000000000007f65a:
	push %RBP
	jmp uuid_000000000007f657
	jmp uuid_000000000007f659
uuid_000000000007f657:
	push %RBP
	jmp uuid_000000000007f654
	jmp uuid_000000000007f656
uuid_000000000007f654:
	movb $1, -1456(%rbp)
uuid_000000000007f656:
	mov -1480(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007f659:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007f65c:
	mov -1464(%RBP),%RSP
	add $-1480, %RSP
	mov -1456(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f67b
	jmp uuid_000000000007f67d
uuid_000000000007f67b:
	push %RBP
	mov -1336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f675
	jmp uuid_000000000007f677
uuid_000000000007f675:
	push %RBP
	mov -1552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f663
	jmp uuid_000000000007f665
uuid_000000000007f663:
	push %RBP
	jmp uuid_000000000007f660
	jmp uuid_000000000007f662
uuid_000000000007f660:
	push %RBP
	jmp uuid_000000000007f65d
	jmp uuid_000000000007f65f
uuid_000000000007f65d:
	movb $1, -1664(%rbp)
uuid_000000000007f65f:
	mov -1688(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007f662:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007f665:
	mov -1672(%RBP),%RSP
	add $-1688, %RSP
	mov -1664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f672
	jmp uuid_000000000007f674
uuid_000000000007f672:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f66c
	jmp uuid_000000000007f66e
uuid_000000000007f66c:
	push %RBP
	jmp uuid_000000000007f669
	jmp uuid_000000000007f66b
uuid_000000000007f669:
	push %RBP
	jmp uuid_000000000007f666
	jmp uuid_000000000007f668
uuid_000000000007f666:
	movb $1, -1776(%rbp)
uuid_000000000007f668:
	mov -1800(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007f66b:
	mov -1792(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007f66e:
	mov -1784(%RBP),%RSP
	add $-1800, %RSP
	mov -1776(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f66f
	jmp uuid_000000000007f671
uuid_000000000007f66f:
	movb $1, -1568(%rbp)
uuid_000000000007f671:
	mov -1696(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007f674:
	mov -1584(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007f677:
	mov -1576(%RBP),%RSP
	add $-1800, %RSP
	mov -1568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f678
	jmp uuid_000000000007f67a
uuid_000000000007f678:
	movb $1, -1360(%rbp)
uuid_000000000007f67a:
	mov -1488(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007f67d:
	mov -1376(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007f680:
	mov -1368(%RBP),%RSP
	add $-1800, %RSP
	mov -1360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f681
	jmp uuid_000000000007f683
uuid_000000000007f681:
	movb $1, -936(%rbp)
uuid_000000000007f683:
	mov -1280(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007f686:
	mov -952(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007f689:
	mov -944(%RBP),%RSP
	add $-1800, %RSP
	mov -936(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8e1
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -1960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6d6
	jmp uuid_000000000007f6d8
uuid_000000000007f6d6:
	push %RBP
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq $0
	push %RBP
	mov -2056(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6b1
	jmp uuid_000000000007f6b3
uuid_000000000007f6b1:
	push %RBP
	mov -2048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f69f
	jmp uuid_000000000007f6a1
uuid_000000000007f69f:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2248(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f68d
	jmp uuid_000000000007f68f
uuid_000000000007f68d:
	push %RBP
	jmp uuid_000000000007f68a
	jmp uuid_000000000007f68c
uuid_000000000007f68a:
	movb $1, -2256(%rbp)
uuid_000000000007f68c:
	mov -2272(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007f68f:
	mov -2264(%RBP),%RSP
	add $-2272, %RSP
	mov -2256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f69c
	jmp uuid_000000000007f69e
uuid_000000000007f69c:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2352(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f696
	jmp uuid_000000000007f698
uuid_000000000007f696:
	push %RBP
	jmp uuid_000000000007f693
	jmp uuid_000000000007f695
uuid_000000000007f693:
	push %RBP
	jmp uuid_000000000007f690
	jmp uuid_000000000007f692
uuid_000000000007f690:
	movb $1, -2360(%rbp)
uuid_000000000007f692:
	mov -2384(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007f695:
	mov -2376(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007f698:
	mov -2368(%RBP),%RSP
	add $-2384, %RSP
	mov -2360(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f699
	jmp uuid_000000000007f69b
uuid_000000000007f699:
	movb $1, -2160(%rbp)
uuid_000000000007f69b:
	mov -2280(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007f69e:
	mov -2176(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007f6a1:
	mov -2168(%RBP),%RSP
	add $-2384, %RSP
	mov -2160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f6ae
	jmp uuid_000000000007f6b0
uuid_000000000007f6ae:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2464(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6a8
	jmp uuid_000000000007f6aa
uuid_000000000007f6a8:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	jmp uuid_000000000007f6a5
	jmp uuid_000000000007f6a7
uuid_000000000007f6a5:
	push %RBP
	mov -2400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2560(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f6a2
	jmp uuid_000000000007f6a4
uuid_000000000007f6a2:
	movb $1, -2472(%rbp)
uuid_000000000007f6a4:
	mov -2552(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007f6a7:
	mov -2488(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007f6aa:
	mov -2480(%RBP),%RSP
	add $-2560, %RSP
	mov -2472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f6ab
	jmp uuid_000000000007f6ad
uuid_000000000007f6ab:
	movb $1, -2064(%rbp)
uuid_000000000007f6ad:
	mov -2392(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007f6b0:
	mov -2080(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007f6b3:
	mov -2072(%RBP),%RSP
	add $-2560, %RSP
	mov -2064(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f6d3
	jmp uuid_000000000007f6d5
uuid_000000000007f6d3:
	push %RBP
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq $0
	push %RBP
	mov -2640(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6cd
	jmp uuid_000000000007f6cf
uuid_000000000007f6cd:
	push %RBP
	mov -2632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6ba
	jmp uuid_000000000007f6bc
uuid_000000000007f6ba:
	push %RBP
	jmp uuid_000000000007f6b7
	jmp uuid_000000000007f6b9
uuid_000000000007f6b7:
	push %RBP
	mov -2672(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f6b4
	jmp uuid_000000000007f6b6
uuid_000000000007f6b4:
	movb $1, -2744(%rbp)
uuid_000000000007f6b6:
	mov -2768(%RBP),%RSP
	add $-2776, %RSP
uuid_000000000007f6b9:
	mov -2760(%RBP),%RSP
	add $-2776, %RSP
uuid_000000000007f6bc:
	mov -2752(%RBP),%RSP
	add $-2776, %RSP
	mov -2744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f6ca
	jmp uuid_000000000007f6cc
uuid_000000000007f6ca:
	push %RBP
	mov -2624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6c4
	jmp uuid_000000000007f6c6
uuid_000000000007f6c4:
	push %RBP
	jmp uuid_000000000007f6c1
	jmp uuid_000000000007f6c3
uuid_000000000007f6c1:
	push %RBP
	mov -2792(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2896(%rbp)
	pushq $uuid_000000000007f6bd
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f6be
	jmp uuid_000000000007f6c0
uuid_000000000007f6be:
	movb $1, -2864(%rbp)
uuid_000000000007f6c0:
	mov -2888(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007f6c3:
	mov -2880(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007f6c6:
	mov -2872(%RBP),%RSP
	add $-2896, %RSP
	mov -2864(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f6c7
	jmp uuid_000000000007f6c9
uuid_000000000007f6c7:
	movb $1, -2648(%rbp)
uuid_000000000007f6c9:
	mov -2784(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007f6cc:
	mov -2664(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007f6cf:
	mov -2656(%RBP),%RSP
	add $-2896, %RSP
	mov -2648(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f6d0
	jmp uuid_000000000007f6d2
uuid_000000000007f6d0:
	movb $1, -1968(%rbp)
uuid_000000000007f6d2:
	mov -2568(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007f6d5:
	mov -1984(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007f6d8:
	mov -1976(%RBP),%RSP
	add $-2896, %RSP
	mov -1968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8de
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -3056(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f70c
	jmp uuid_000000000007f70e
uuid_000000000007f70c:
	push %RBP
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq $0
	push %RBP
	mov -3152(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6e8
	jmp uuid_000000000007f6ea
uuid_000000000007f6e8:
	push %RBP
	jmp uuid_000000000007f6e5
	jmp uuid_000000000007f6e7
uuid_000000000007f6e5:
	push %RBP
	mov -3136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6df
	jmp uuid_000000000007f6e1
uuid_000000000007f6df:
	push %RBP
	jmp uuid_000000000007f6dc
	jmp uuid_000000000007f6de
uuid_000000000007f6dc:
	push %RBP
	mov -3192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f6d9
	jmp uuid_000000000007f6db
uuid_000000000007f6d9:
	movb $1, -3264(%rbp)
uuid_000000000007f6db:
	mov -3288(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007f6de:
	mov -3280(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007f6e1:
	mov -3272(%RBP),%RSP
	add $-3296, %RSP
	mov -3264(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f6e2
	jmp uuid_000000000007f6e4
uuid_000000000007f6e2:
	movb $1, -3160(%rbp)
uuid_000000000007f6e4:
	mov -3184(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007f6e7:
	mov -3176(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007f6ea:
	mov -3168(%RBP),%RSP
	add $-3296, %RSP
	mov -3160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f709
	jmp uuid_000000000007f70b
uuid_000000000007f709:
	push %RBP
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq $0
	push %RBP
	mov -3376(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f703
	jmp uuid_000000000007f705
uuid_000000000007f703:
	push %RBP
	mov -3368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3472(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6f1
	jmp uuid_000000000007f6f3
uuid_000000000007f6f1:
	push %RBP
	jmp uuid_000000000007f6ee
	jmp uuid_000000000007f6f0
uuid_000000000007f6ee:
	push %RBP
	jmp uuid_000000000007f6eb
	jmp uuid_000000000007f6ed
uuid_000000000007f6eb:
	movb $1, -3480(%rbp)
uuid_000000000007f6ed:
	mov -3504(%RBP),%RSP
	add $-3504, %RSP
uuid_000000000007f6f0:
	mov -3496(%RBP),%RSP
	add $-3504, %RSP
uuid_000000000007f6f3:
	mov -3488(%RBP),%RSP
	add $-3504, %RSP
	mov -3480(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f700
	jmp uuid_000000000007f702
uuid_000000000007f700:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3584(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f6fa
	jmp uuid_000000000007f6fc
uuid_000000000007f6fa:
	push %RBP
	jmp uuid_000000000007f6f7
	jmp uuid_000000000007f6f9
uuid_000000000007f6f7:
	push %RBP
	jmp uuid_000000000007f6f4
	jmp uuid_000000000007f6f6
uuid_000000000007f6f4:
	movb $1, -3592(%rbp)
uuid_000000000007f6f6:
	mov -3616(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007f6f9:
	mov -3608(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007f6fc:
	mov -3600(%RBP),%RSP
	add $-3616, %RSP
	mov -3592(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f6fd
	jmp uuid_000000000007f6ff
uuid_000000000007f6fd:
	movb $1, -3384(%rbp)
uuid_000000000007f6ff:
	mov -3512(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007f702:
	mov -3400(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007f705:
	mov -3392(%RBP),%RSP
	add $-3616, %RSP
	mov -3384(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f706
	jmp uuid_000000000007f708
uuid_000000000007f706:
	movb $1, -3064(%rbp)
uuid_000000000007f708:
	mov -3304(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007f70b:
	mov -3080(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007f70e:
	mov -3072(%RBP),%RSP
	add $-3616, %RSP
	mov -3064(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8db
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -3776(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f74f
	jmp uuid_000000000007f751
uuid_000000000007f74f:
	push %RBP
	pushq -3704(%RBP)
	pushq -3712(%RBP)
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	pushq -3744(%RBP)
	pushq -3752(%RBP)
	pushq -3760(%RBP)
	pushq -3768(%RBP)
	pushq $0
	push %RBP
	mov -3872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f73d
	jmp uuid_000000000007f73f
uuid_000000000007f73d:
	push %RBP
	mov -3864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f73a
	jmp uuid_000000000007f73c
uuid_000000000007f73a:
	push %RBP
	mov -3856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f737
	jmp uuid_000000000007f739
uuid_000000000007f737:
	movb $1, -3880(%rbp)
uuid_000000000007f739:
	mov -3976(%RBP),%RSP
	add $-4048, %RSP
uuid_000000000007f73c:
	mov -3896(%RBP),%RSP
	add $-4048, %RSP
uuid_000000000007f73f:
	mov -3888(%RBP),%RSP
	add $-4048, %RSP
	mov -3880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f74c
	jmp uuid_000000000007f74e
uuid_000000000007f74c:
	push %RBP
	pushq -3632(%RBP)
	pushq -3640(%RBP)
	pushq -3648(%RBP)
	pushq -3656(%RBP)
	pushq -3664(%RBP)
	pushq -3672(%RBP)
	pushq -3680(%RBP)
	pushq -3688(%RBP)
	pushq -3696(%RBP)
	pushq $0
	push %RBP
	mov -4128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f746
	jmp uuid_000000000007f748
uuid_000000000007f746:
	push %RBP
	mov -4120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f743
	jmp uuid_000000000007f745
uuid_000000000007f743:
	push %RBP
	mov -4112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f740
	jmp uuid_000000000007f742
uuid_000000000007f740:
	movb $1, -4136(%rbp)
uuid_000000000007f742:
	mov -4232(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007f745:
	mov -4152(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007f748:
	mov -4144(%RBP),%RSP
	add $-4304, %RSP
	mov -4136(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f749
	jmp uuid_000000000007f74b
uuid_000000000007f749:
	movb $1, -3784(%rbp)
uuid_000000000007f74b:
	mov -4056(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007f74e:
	mov -3800(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007f751:
	mov -3792(%RBP),%RSP
	add $-4304, %RSP
	mov -3784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8d8
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -4464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f776
	jmp uuid_000000000007f778
uuid_000000000007f776:
	push %RBP
	pushq -4392(%RBP)
	pushq -4400(%RBP)
	pushq -4408(%RBP)
	pushq -4416(%RBP)
	pushq -4424(%RBP)
	pushq -4432(%RBP)
	pushq -4440(%RBP)
	pushq -4448(%RBP)
	pushq -4456(%RBP)
	pushq $0
	push %RBP
	mov -4560(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f761
	jmp uuid_000000000007f763
uuid_000000000007f761:
	push %RBP
	pushq -4536(%RBP)
	pushq -4544(%RBP)
	pushq -4552(%RBP)
	jmp uuid_000000000007f75e
	jmp uuid_000000000007f760
uuid_000000000007f75e:
	push %RBP
	mov -4528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f75b
	jmp uuid_000000000007f75d
uuid_000000000007f75b:
	push %RBP
	mov -4520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f758
	jmp uuid_000000000007f75a
uuid_000000000007f758:
	movb $1, -4568(%rbp)
uuid_000000000007f75a:
	mov -4696(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007f75d:
	mov -4616(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007f760:
	mov -4584(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007f763:
	mov -4576(%RBP),%RSP
	add $-4768, %RSP
	mov -4568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f773
	jmp uuid_000000000007f775
uuid_000000000007f773:
	push %RBP
	pushq -4320(%RBP)
	pushq -4328(%RBP)
	pushq -4336(%RBP)
	pushq -4344(%RBP)
	pushq -4352(%RBP)
	pushq -4360(%RBP)
	pushq -4368(%RBP)
	pushq -4376(%RBP)
	pushq -4384(%RBP)
	pushq $0
	push %RBP
	mov -4848(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f76d
	jmp uuid_000000000007f76f
uuid_000000000007f76d:
	push %RBP
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq -4840(%RBP)
	jmp uuid_000000000007f76a
	jmp uuid_000000000007f76c
uuid_000000000007f76a:
	push %RBP
	mov -4816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f767
	jmp uuid_000000000007f769
uuid_000000000007f767:
	push %RBP
	mov -4808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f764
	jmp uuid_000000000007f766
uuid_000000000007f764:
	movb $1, -4856(%rbp)
uuid_000000000007f766:
	mov -4984(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007f769:
	mov -4904(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007f76c:
	mov -4872(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007f76f:
	mov -4864(%RBP),%RSP
	add $-5056, %RSP
	mov -4856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f770
	jmp uuid_000000000007f772
uuid_000000000007f770:
	movb $1, -4472(%rbp)
uuid_000000000007f772:
	mov -4776(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007f775:
	mov -4488(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007f778:
	mov -4480(%RBP),%RSP
	add $-5056, %RSP
	mov -4472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8d5
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -5216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f798
	jmp uuid_000000000007f79a
uuid_000000000007f798:
	push %RBP
	pushq -5144(%RBP)
	pushq -5152(%RBP)
	pushq -5160(%RBP)
	pushq -5168(%RBP)
	pushq -5176(%RBP)
	pushq -5184(%RBP)
	pushq -5192(%RBP)
	pushq -5200(%RBP)
	pushq -5208(%RBP)
	pushq $0
	push %RBP
	mov -5312(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f785
	jmp uuid_000000000007f787
uuid_000000000007f785:
	push %RBP
	jmp uuid_000000000007f782
	jmp uuid_000000000007f784
uuid_000000000007f782:
	push %RBP
	mov -5248(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5352(%rbp)
	pushq $uuid_000000000007f2a8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f77f
	jmp uuid_000000000007f781
uuid_000000000007f77f:
	movb $1, -5320(%rbp)
uuid_000000000007f781:
	mov -5344(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007f784:
	mov -5336(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007f787:
	mov -5328(%RBP),%RSP
	add $-5352, %RSP
	mov -5320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f795
	jmp uuid_000000000007f797
uuid_000000000007f795:
	push %RBP
	pushq -5072(%RBP)
	pushq -5080(%RBP)
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	pushq -5104(%RBP)
	pushq -5112(%RBP)
	pushq -5120(%RBP)
	pushq -5128(%RBP)
	pushq -5136(%RBP)
	pushq $0
	push %RBP
	mov -5432(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f78f
	jmp uuid_000000000007f791
uuid_000000000007f78f:
	push %RBP
	jmp uuid_000000000007f78c
	jmp uuid_000000000007f78e
uuid_000000000007f78c:
	push %RBP
	mov -5368(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq $uuid_000000000007f788
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f789
	jmp uuid_000000000007f78b
uuid_000000000007f789:
	movb $1, -5440(%rbp)
uuid_000000000007f78b:
	mov -5464(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007f78e:
	mov -5456(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007f791:
	mov -5448(%RBP),%RSP
	add $-5472, %RSP
	mov -5440(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f792
	jmp uuid_000000000007f794
uuid_000000000007f792:
	movb $1, -5224(%rbp)
uuid_000000000007f794:
	mov -5360(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007f797:
	mov -5240(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007f79a:
	mov -5232(%RBP),%RSP
	add $-5472, %RSP
	mov -5224(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8d2
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -5632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7b3
	jmp uuid_000000000007f7b5
uuid_000000000007f7b3:
	push %RBP
	pushq -5560(%RBP)
	pushq -5568(%RBP)
	pushq -5576(%RBP)
	pushq -5584(%RBP)
	pushq -5592(%RBP)
	pushq -5600(%RBP)
	pushq -5608(%RBP)
	pushq -5616(%RBP)
	pushq -5624(%RBP)
	pushq $0
	push %RBP
	mov -5728(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7a1
	jmp uuid_000000000007f7a3
uuid_000000000007f7a1:
	push %RBP
	jmp uuid_000000000007f79e
	jmp uuid_000000000007f7a0
uuid_000000000007f79e:
	push %RBP
	mov -5664(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f79b
	jmp uuid_000000000007f79d
uuid_000000000007f79b:
	movb $1, -5736(%rbp)
uuid_000000000007f79d:
	mov -5760(%RBP),%RSP
	add $-5768, %RSP
uuid_000000000007f7a0:
	mov -5752(%RBP),%RSP
	add $-5768, %RSP
uuid_000000000007f7a3:
	mov -5744(%RBP),%RSP
	add $-5768, %RSP
	mov -5736(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f7b0
	jmp uuid_000000000007f7b2
uuid_000000000007f7b0:
	push %RBP
	pushq -5488(%RBP)
	pushq -5496(%RBP)
	pushq -5504(%RBP)
	pushq -5512(%RBP)
	pushq -5520(%RBP)
	pushq -5528(%RBP)
	pushq -5536(%RBP)
	pushq -5544(%RBP)
	pushq -5552(%RBP)
	pushq $0
	push %RBP
	mov -5848(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7aa
	jmp uuid_000000000007f7ac
uuid_000000000007f7aa:
	push %RBP
	jmp uuid_000000000007f7a7
	jmp uuid_000000000007f7a9
uuid_000000000007f7a7:
	push %RBP
	mov -5784(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f7a4
	jmp uuid_000000000007f7a6
uuid_000000000007f7a4:
	movb $1, -5856(%rbp)
uuid_000000000007f7a6:
	mov -5880(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007f7a9:
	mov -5872(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007f7ac:
	mov -5864(%RBP),%RSP
	add $-5888, %RSP
	mov -5856(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f7ad
	jmp uuid_000000000007f7af
uuid_000000000007f7ad:
	movb $1, -5640(%rbp)
uuid_000000000007f7af:
	mov -5776(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007f7b2:
	mov -5656(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007f7b5:
	mov -5648(%RBP),%RSP
	add $-5888, %RSP
	mov -5640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8cf
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -6048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7d1
	jmp uuid_000000000007f7d3
uuid_000000000007f7d1:
	push %RBP
	pushq -5976(%RBP)
	pushq -5984(%RBP)
	pushq -5992(%RBP)
	pushq -6000(%RBP)
	pushq -6008(%RBP)
	pushq -6016(%RBP)
	pushq -6024(%RBP)
	pushq -6032(%RBP)
	pushq -6040(%RBP)
	pushq $0
	push %RBP
	mov -6144(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7bf
	jmp uuid_000000000007f7c1
uuid_000000000007f7bf:
	push %RBP
	jmp uuid_000000000007f7bc
	jmp uuid_000000000007f7be
uuid_000000000007f7bc:
	push %RBP
	mov -6080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f7b9
	jmp uuid_000000000007f7bb
uuid_000000000007f7b9:
	movb $1, -6152(%rbp)
uuid_000000000007f7bb:
	mov -6176(%RBP),%RSP
	add $-6184, %RSP
uuid_000000000007f7be:
	mov -6168(%RBP),%RSP
	add $-6184, %RSP
uuid_000000000007f7c1:
	mov -6160(%RBP),%RSP
	add $-6184, %RSP
	mov -6152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f7ce
	jmp uuid_000000000007f7d0
uuid_000000000007f7ce:
	push %RBP
	pushq -5904(%RBP)
	pushq -5912(%RBP)
	pushq -5920(%RBP)
	pushq -5928(%RBP)
	pushq -5936(%RBP)
	pushq -5944(%RBP)
	pushq -5952(%RBP)
	pushq -5960(%RBP)
	pushq -5968(%RBP)
	pushq $0
	push %RBP
	mov -6264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7c8
	jmp uuid_000000000007f7ca
uuid_000000000007f7c8:
	push %RBP
	jmp uuid_000000000007f7c5
	jmp uuid_000000000007f7c7
uuid_000000000007f7c5:
	push %RBP
	mov -6200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f7c2
	jmp uuid_000000000007f7c4
uuid_000000000007f7c2:
	movb $1, -6272(%rbp)
uuid_000000000007f7c4:
	mov -6296(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007f7c7:
	mov -6288(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007f7ca:
	mov -6280(%RBP),%RSP
	add $-6304, %RSP
	mov -6272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f7cb
	jmp uuid_000000000007f7cd
uuid_000000000007f7cb:
	movb $1, -6056(%rbp)
uuid_000000000007f7cd:
	mov -6192(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007f7d0:
	mov -6072(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007f7d3:
	mov -6064(%RBP),%RSP
	add $-6304, %RSP
	mov -6056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8cc
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -6464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f801
	jmp uuid_000000000007f803
uuid_000000000007f801:
	push %RBP
	pushq -6392(%RBP)
	pushq -6400(%RBP)
	pushq -6408(%RBP)
	pushq -6416(%RBP)
	pushq -6424(%RBP)
	pushq -6432(%RBP)
	pushq -6440(%RBP)
	pushq -6448(%RBP)
	pushq -6456(%RBP)
	pushq $0
	push %RBP
	mov -6560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7dd
	jmp uuid_000000000007f7df
uuid_000000000007f7dd:
	push %RBP
	pushq -6504(%RBP)
	pushq -6512(%RBP)
	pushq -6520(%RBP)
	pushq -6528(%RBP)
	pushq -6536(%RBP)
	pushq -6544(%RBP)
	pushq -6552(%RBP)
	jmp uuid_000000000007f7da
	jmp uuid_000000000007f7dc
uuid_000000000007f7da:
	push %RBP
	mov -6496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f7d7
	jmp uuid_000000000007f7d9
uuid_000000000007f7d7:
	movb $1, -6568(%rbp)
uuid_000000000007f7d9:
	mov -6648(%RBP),%RSP
	add $-6656, %RSP
uuid_000000000007f7dc:
	mov -6584(%RBP),%RSP
	add $-6656, %RSP
uuid_000000000007f7df:
	mov -6576(%RBP),%RSP
	add $-6656, %RSP
	mov -6568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f7fe
	jmp uuid_000000000007f800
uuid_000000000007f7fe:
	push %RBP
	pushq -6320(%RBP)
	pushq -6328(%RBP)
	pushq -6336(%RBP)
	pushq -6344(%RBP)
	pushq -6352(%RBP)
	pushq -6360(%RBP)
	pushq -6368(%RBP)
	pushq -6376(%RBP)
	pushq -6384(%RBP)
	pushq $0
	push %RBP
	mov -6736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7f8
	jmp uuid_000000000007f7fa
uuid_000000000007f7f8:
	push %RBP
	mov -6728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6832(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7e6
	jmp uuid_000000000007f7e8
uuid_000000000007f7e6:
	push %RBP
	jmp uuid_000000000007f7e3
	jmp uuid_000000000007f7e5
uuid_000000000007f7e3:
	push %RBP
	mov -6768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f7e0
	jmp uuid_000000000007f7e2
uuid_000000000007f7e0:
	movb $1, -6840(%rbp)
uuid_000000000007f7e2:
	mov -6864(%RBP),%RSP
	add $-6872, %RSP
uuid_000000000007f7e5:
	mov -6856(%RBP),%RSP
	add $-6872, %RSP
uuid_000000000007f7e8:
	mov -6848(%RBP),%RSP
	add $-6872, %RSP
	mov -6840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f7f5
	jmp uuid_000000000007f7f7
uuid_000000000007f7f5:
	push %RBP
	mov -6720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f7ef
	jmp uuid_000000000007f7f1
uuid_000000000007f7ef:
	push %RBP
	jmp uuid_000000000007f7ec
	jmp uuid_000000000007f7ee
uuid_000000000007f7ec:
	push %RBP
	mov -6888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6992(%rbp)
	pushq $uuid_000000000007f6bd
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f7e9
	jmp uuid_000000000007f7eb
uuid_000000000007f7e9:
	movb $1, -6960(%rbp)
uuid_000000000007f7eb:
	mov -6984(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007f7ee:
	mov -6976(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007f7f1:
	mov -6968(%RBP),%RSP
	add $-6992, %RSP
	mov -6960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f7f2
	jmp uuid_000000000007f7f4
uuid_000000000007f7f2:
	movb $1, -6744(%rbp)
uuid_000000000007f7f4:
	mov -6880(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007f7f7:
	mov -6760(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007f7fa:
	mov -6752(%RBP),%RSP
	add $-6992, %RSP
	mov -6744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f7fb
	jmp uuid_000000000007f7fd
uuid_000000000007f7fb:
	movb $1, -6472(%rbp)
uuid_000000000007f7fd:
	mov -6664(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007f800:
	mov -6488(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007f803:
	mov -6480(%RBP),%RSP
	add $-6992, %RSP
	mov -6472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8c9
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -7152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f832
	jmp uuid_000000000007f834
uuid_000000000007f832:
	push %RBP
	pushq -7080(%RBP)
	pushq -7088(%RBP)
	pushq -7096(%RBP)
	pushq -7104(%RBP)
	pushq -7112(%RBP)
	pushq -7120(%RBP)
	pushq -7128(%RBP)
	pushq -7136(%RBP)
	pushq -7144(%RBP)
	pushq $0
	push %RBP
	mov -7248(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f80d
	jmp uuid_000000000007f80f
uuid_000000000007f80d:
	push %RBP
	jmp uuid_000000000007f80a
	jmp uuid_000000000007f80c
uuid_000000000007f80a:
	push %RBP
	mov -7184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7288(%rbp)
	pushq $uuid_000000000007f2a8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f807
	jmp uuid_000000000007f809
uuid_000000000007f807:
	movb $1, -7256(%rbp)
uuid_000000000007f809:
	mov -7280(%RBP),%RSP
	add $-7288, %RSP
uuid_000000000007f80c:
	mov -7272(%RBP),%RSP
	add $-7288, %RSP
uuid_000000000007f80f:
	mov -7264(%RBP),%RSP
	add $-7288, %RSP
	mov -7256(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f82f
	jmp uuid_000000000007f831
uuid_000000000007f82f:
	push %RBP
	pushq -7008(%RBP)
	pushq -7016(%RBP)
	pushq -7024(%RBP)
	pushq -7032(%RBP)
	pushq -7040(%RBP)
	pushq -7048(%RBP)
	pushq -7056(%RBP)
	pushq -7064(%RBP)
	pushq -7072(%RBP)
	pushq $0
	push %RBP
	mov -7368(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f829
	jmp uuid_000000000007f82b
uuid_000000000007f829:
	push %RBP
	mov -7360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7464(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f816
	jmp uuid_000000000007f818
uuid_000000000007f816:
	push %RBP
	jmp uuid_000000000007f813
	jmp uuid_000000000007f815
uuid_000000000007f813:
	push %RBP
	jmp uuid_000000000007f810
	jmp uuid_000000000007f812
uuid_000000000007f810:
	movb $1, -7472(%rbp)
uuid_000000000007f812:
	mov -7496(%RBP),%RSP
	add $-7496, %RSP
uuid_000000000007f815:
	mov -7488(%RBP),%RSP
	add $-7496, %RSP
uuid_000000000007f818:
	mov -7480(%RBP),%RSP
	add $-7496, %RSP
	mov -7472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f826
	jmp uuid_000000000007f828
uuid_000000000007f826:
	push %RBP
	mov -7352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7576(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f820
	jmp uuid_000000000007f822
uuid_000000000007f820:
	push %RBP
	jmp uuid_000000000007f81d
	jmp uuid_000000000007f81f
uuid_000000000007f81d:
	push %RBP
	mov -7512(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7616(%rbp)
	pushq $uuid_000000000007f819
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f81a
	jmp uuid_000000000007f81c
uuid_000000000007f81a:
	movb $1, -7584(%rbp)
uuid_000000000007f81c:
	mov -7608(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007f81f:
	mov -7600(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007f822:
	mov -7592(%RBP),%RSP
	add $-7616, %RSP
	mov -7584(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f823
	jmp uuid_000000000007f825
uuid_000000000007f823:
	movb $1, -7376(%rbp)
uuid_000000000007f825:
	mov -7504(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007f828:
	mov -7392(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007f82b:
	mov -7384(%RBP),%RSP
	add $-7616, %RSP
	mov -7376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f82c
	jmp uuid_000000000007f82e
uuid_000000000007f82c:
	movb $1, -7160(%rbp)
uuid_000000000007f82e:
	mov -7296(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007f831:
	mov -7176(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007f834:
	mov -7168(%RBP),%RSP
	add $-7616, %RSP
	mov -7160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8c6
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -7776(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f85f
	jmp uuid_000000000007f861
uuid_000000000007f85f:
	push %RBP
	pushq -7704(%RBP)
	pushq -7712(%RBP)
	pushq -7720(%RBP)
	pushq -7728(%RBP)
	pushq -7736(%RBP)
	pushq -7744(%RBP)
	pushq -7752(%RBP)
	pushq -7760(%RBP)
	pushq -7768(%RBP)
	pushq $0
	push %RBP
	mov -7872(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f83b
	jmp uuid_000000000007f83d
uuid_000000000007f83b:
	push %RBP
	pushq -7816(%RBP)
	pushq -7824(%RBP)
	pushq -7832(%RBP)
	pushq -7840(%RBP)
	pushq -7848(%RBP)
	pushq -7856(%RBP)
	pushq -7864(%RBP)
	jmp uuid_000000000007f838
	jmp uuid_000000000007f83a
uuid_000000000007f838:
	push %RBP
	mov -7808(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f835
	jmp uuid_000000000007f837
uuid_000000000007f835:
	movb $1, -7880(%rbp)
uuid_000000000007f837:
	mov -7960(%RBP),%RSP
	add $-7968, %RSP
uuid_000000000007f83a:
	mov -7896(%RBP),%RSP
	add $-7968, %RSP
uuid_000000000007f83d:
	mov -7888(%RBP),%RSP
	add $-7968, %RSP
	mov -7880(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f85c
	jmp uuid_000000000007f85e
uuid_000000000007f85c:
	push %RBP
	pushq -7632(%RBP)
	pushq -7640(%RBP)
	pushq -7648(%RBP)
	pushq -7656(%RBP)
	pushq -7664(%RBP)
	pushq -7672(%RBP)
	pushq -7680(%RBP)
	pushq -7688(%RBP)
	pushq -7696(%RBP)
	pushq $0
	push %RBP
	mov -8048(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f856
	jmp uuid_000000000007f858
uuid_000000000007f856:
	push %RBP
	mov -8040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8144(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f844
	jmp uuid_000000000007f846
uuid_000000000007f844:
	push %RBP
	jmp uuid_000000000007f841
	jmp uuid_000000000007f843
uuid_000000000007f841:
	push %RBP
	mov -8080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f83e
	jmp uuid_000000000007f840
uuid_000000000007f83e:
	movb $1, -8152(%rbp)
uuid_000000000007f840:
	mov -8176(%RBP),%RSP
	add $-8184, %RSP
uuid_000000000007f843:
	mov -8168(%RBP),%RSP
	add $-8184, %RSP
uuid_000000000007f846:
	mov -8160(%RBP),%RSP
	add $-8184, %RSP
	mov -8152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f853
	jmp uuid_000000000007f855
uuid_000000000007f853:
	push %RBP
	mov -8032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f84d
	jmp uuid_000000000007f84f
uuid_000000000007f84d:
	push %RBP
	jmp uuid_000000000007f84a
	jmp uuid_000000000007f84c
uuid_000000000007f84a:
	push %RBP
	mov -8200(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8304(%rbp)
	pushq $uuid_000000000007f819
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f847
	jmp uuid_000000000007f849
uuid_000000000007f847:
	movb $1, -8272(%rbp)
uuid_000000000007f849:
	mov -8296(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007f84c:
	mov -8288(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007f84f:
	mov -8280(%RBP),%RSP
	add $-8304, %RSP
	mov -8272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f850
	jmp uuid_000000000007f852
uuid_000000000007f850:
	movb $1, -8056(%rbp)
uuid_000000000007f852:
	mov -8192(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007f855:
	mov -8072(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007f858:
	mov -8064(%RBP),%RSP
	add $-8304, %RSP
	mov -8056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f859
	jmp uuid_000000000007f85b
uuid_000000000007f859:
	movb $1, -7784(%rbp)
uuid_000000000007f85b:
	mov -7976(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007f85e:
	mov -7800(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007f861:
	mov -7792(%RBP),%RSP
	add $-8304, %RSP
	mov -7784(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8c3
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -8464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f89f
	jmp uuid_000000000007f8a1
uuid_000000000007f89f:
	push %RBP
	pushq -8392(%RBP)
	pushq -8400(%RBP)
	pushq -8408(%RBP)
	pushq -8416(%RBP)
	pushq -8424(%RBP)
	pushq -8432(%RBP)
	pushq -8440(%RBP)
	pushq -8448(%RBP)
	pushq -8456(%RBP)
	pushq $0
	push %RBP
	mov -8560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f868
	jmp uuid_000000000007f86a
uuid_000000000007f868:
	push %RBP
	pushq -8504(%RBP)
	pushq -8512(%RBP)
	pushq -8520(%RBP)
	pushq -8528(%RBP)
	pushq -8536(%RBP)
	pushq -8544(%RBP)
	pushq -8552(%RBP)
	jmp uuid_000000000007f865
	jmp uuid_000000000007f867
uuid_000000000007f865:
	push %RBP
	mov -8496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f862
	jmp uuid_000000000007f864
uuid_000000000007f862:
	movb $1, -8568(%rbp)
uuid_000000000007f864:
	mov -8648(%RBP),%RSP
	add $-8656, %RSP
uuid_000000000007f867:
	mov -8584(%RBP),%RSP
	add $-8656, %RSP
uuid_000000000007f86a:
	mov -8576(%RBP),%RSP
	add $-8656, %RSP
	mov -8568(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f89c
	jmp uuid_000000000007f89e
uuid_000000000007f89c:
	push %RBP
	pushq -8320(%RBP)
	pushq -8328(%RBP)
	pushq -8336(%RBP)
	pushq -8344(%RBP)
	pushq -8352(%RBP)
	pushq -8360(%RBP)
	pushq -8368(%RBP)
	pushq -8376(%RBP)
	pushq -8384(%RBP)
	pushq $0
	push %RBP
	mov -8736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f896
	jmp uuid_000000000007f898
uuid_000000000007f896:
	push %RBP
	mov -8728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8832(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f871
	jmp uuid_000000000007f873
uuid_000000000007f871:
	push %RBP
	jmp uuid_000000000007f86e
	jmp uuid_000000000007f870
uuid_000000000007f86e:
	push %RBP
	mov -8768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f86b
	jmp uuid_000000000007f86d
uuid_000000000007f86b:
	movb $1, -8840(%rbp)
uuid_000000000007f86d:
	mov -8864(%RBP),%RSP
	add $-8872, %RSP
uuid_000000000007f870:
	mov -8856(%RBP),%RSP
	add $-8872, %RSP
uuid_000000000007f873:
	mov -8848(%RBP),%RSP
	add $-8872, %RSP
	mov -8840(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f893
	jmp uuid_000000000007f895
uuid_000000000007f893:
	push %RBP
	mov -8720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8952(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f88d
	jmp uuid_000000000007f88f
uuid_000000000007f88d:
	push %RBP
	mov -8944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9048(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f87a
	jmp uuid_000000000007f87c
uuid_000000000007f87a:
	push %RBP
	jmp uuid_000000000007f877
	jmp uuid_000000000007f879
uuid_000000000007f877:
	push %RBP
	mov -8984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f874
	jmp uuid_000000000007f876
uuid_000000000007f874:
	movb $1, -9056(%rbp)
uuid_000000000007f876:
	mov -9080(%RBP),%RSP
	add $-9088, %RSP
uuid_000000000007f879:
	mov -9072(%RBP),%RSP
	add $-9088, %RSP
uuid_000000000007f87c:
	mov -9064(%RBP),%RSP
	add $-9088, %RSP
	mov -9056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f88a
	jmp uuid_000000000007f88c
uuid_000000000007f88a:
	push %RBP
	mov -8936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f884
	jmp uuid_000000000007f886
uuid_000000000007f884:
	push %RBP
	jmp uuid_000000000007f881
	jmp uuid_000000000007f883
uuid_000000000007f881:
	push %RBP
	mov -9104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9208(%rbp)
	pushq $uuid_000000000007f87d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f87e
	jmp uuid_000000000007f880
uuid_000000000007f87e:
	movb $1, -9176(%rbp)
uuid_000000000007f880:
	mov -9200(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007f883:
	mov -9192(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007f886:
	mov -9184(%RBP),%RSP
	add $-9208, %RSP
	mov -9176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f887
	jmp uuid_000000000007f889
uuid_000000000007f887:
	movb $1, -8960(%rbp)
uuid_000000000007f889:
	mov -9096(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007f88c:
	mov -8976(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007f88f:
	mov -8968(%RBP),%RSP
	add $-9208, %RSP
	mov -8960(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f890
	jmp uuid_000000000007f892
uuid_000000000007f890:
	movb $1, -8744(%rbp)
uuid_000000000007f892:
	mov -8880(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007f895:
	mov -8760(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007f898:
	mov -8752(%RBP),%RSP
	add $-9208, %RSP
	mov -8744(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f899
	jmp uuid_000000000007f89b
uuid_000000000007f899:
	movb $1, -8472(%rbp)
uuid_000000000007f89b:
	mov -8664(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007f89e:
	mov -8488(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007f8a1:
	mov -8480(%RBP),%RSP
	add $-9208, %RSP
	mov -8472(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8c0
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -9368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f8b6
	jmp uuid_000000000007f8b8
uuid_000000000007f8b6:
	push %RBP
	pushq -9296(%RBP)
	pushq -9304(%RBP)
	pushq -9312(%RBP)
	pushq -9320(%RBP)
	pushq -9328(%RBP)
	pushq -9336(%RBP)
	pushq -9344(%RBP)
	pushq -9352(%RBP)
	pushq -9360(%RBP)
	jmp uuid_000000000007f8b3
	jmp uuid_000000000007f8b5
uuid_000000000007f8b3:
	push %RBP
	pushq -9224(%RBP)
	pushq -9232(%RBP)
	pushq -9240(%RBP)
	pushq -9248(%RBP)
	pushq -9256(%RBP)
	pushq -9264(%RBP)
	pushq -9272(%RBP)
	pushq -9280(%RBP)
	pushq -9288(%RBP)
	pushq $0
	push %RBP
	mov -9544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f8ad
	jmp uuid_000000000007f8af
uuid_000000000007f8ad:
	push %RBP
	jmp uuid_000000000007f8aa
	jmp uuid_000000000007f8ac
uuid_000000000007f8aa:
	push %RBP
	mov -9480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f8a7
	jmp uuid_000000000007f8a9
uuid_000000000007f8a7:
	movb $1, -9552(%rbp)
uuid_000000000007f8a9:
	mov -9576(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007f8ac:
	mov -9568(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007f8af:
	mov -9560(%RBP),%RSP
	add $-9584, %RSP
	mov -9552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8b0
	jmp uuid_000000000007f8b2
uuid_000000000007f8b0:
	movb $1, -9376(%rbp)
uuid_000000000007f8b2:
	mov -9472(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007f8b5:
	mov -9392(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007f8b8:
	mov -9384(%RBP),%RSP
	add $-9584, %RSP
	mov -9376(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8bd
	push %RBP
	jmp uuid_000000000007f8ba
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f8b9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f8bc
uuid_000000000007f8ba:
uuid_000000000007f8bc:
	mov -9592(%RBP),%RSP
	add $-9592, %RSP
	jmp uuid_000000000007f8bf
uuid_000000000007f8bd:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -9584(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9400(%rbp)
	pushq -9408(%rbp)
	pushq -9416(%rbp)
	pushq -9424(%rbp)
	pushq -9432(%rbp)
	pushq -9440(%rbp)
	pushq -9448(%rbp)
	pushq -9456(%rbp)
	pushq -9464(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f8bf:
	mov -9216(%RBP),%RSP
	add $-9584, %RSP
	jmp uuid_000000000007f8c2
uuid_000000000007f8c0:
	push %RBP
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $unknown_SB_index_SB_of_SB_tag_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f8a4
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -9088(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ba4e
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq $uuid_000000000007ba4e
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9224(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -9224(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f8a2
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007f8a3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -8656(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b981
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8872(%rbp)
	pushq -9232(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -9232(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	jmp uuid_000000000007f8a6
uuid_000000000007f8a4:
uuid_000000000007f8a6:
	mov -9216(%RBP),%RSP
	add $-9216, %RSP
uuid_000000000007f8c2:
	mov -8312(%RBP),%RSP
	add $-9216, %RSP
	jmp uuid_000000000007f8c5
uuid_000000000007f8c3:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8184(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -7920(%RBP)
	pushq -7928(%RBP)
	pushq -7936(%RBP)
	pushq -7944(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f8c5:
	mov -7624(%RBP),%RSP
	add $-8304, %RSP
	jmp uuid_000000000007f8c8
uuid_000000000007f8c6:
uuid_000000000007f8c8:
	mov -7000(%RBP),%RSP
	add $-7616, %RSP
	jmp uuid_000000000007f8cb
uuid_000000000007f8c9:
	push %RBP
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $unknown_SB_index_SB_of_SB_tag_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f804
	jmp uuid_000000000007f806
uuid_000000000007f804:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -6872(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -6608(%RBP)
	pushq -6616(%RBP)
	pushq -6624(%RBP)
	pushq -6632(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f806:
	mov -7000(%RBP),%RSP
	add $-7000, %RSP
uuid_000000000007f8cb:
	mov -6312(%RBP),%RSP
	add $-7000, %RSP
	jmp uuid_000000000007f8ce
uuid_000000000007f8cc:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6304(%rbp)
	pushq -6184(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f7d4
	jmp uuid_000000000007f7d6
uuid_000000000007f7d4:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f7d6:
	mov -6312(%RBP),%RSP
	add $-6312, %RSP
uuid_000000000007f8ce:
	mov -5896(%RBP),%RSP
	add $-6312, %RSP
	jmp uuid_000000000007f8d1
uuid_000000000007f8cf:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5888(%rbp)
	pushq -5768(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f7b6
	jmp uuid_000000000007f7b8
uuid_000000000007f7b6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f7b8:
	mov -5896(%RBP),%RSP
	add $-5896, %RSP
uuid_000000000007f8d1:
	mov -5480(%RBP),%RSP
	add $-5896, %RSP
	jmp uuid_000000000007f8d4
uuid_000000000007f8d2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f8d4:
	mov -5064(%RBP),%RSP
	add $-5472, %RSP
	jmp uuid_000000000007f8d7
uuid_000000000007f8d5:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f77c
	jmp uuid_000000000007f77e
uuid_000000000007f77c:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f779
	jmp uuid_000000000007f77b
uuid_000000000007f779:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f77b:
	mov -5264(%RBP),%RSP
	add $-5264, %RSP
uuid_000000000007f77e:
	mov -5160(%RBP),%RSP
	add $-5264, %RSP
uuid_000000000007f8d7:
	mov -4312(%RBP),%RSP
	add $-5264, %RSP
	jmp uuid_000000000007f8da
uuid_000000000007f8d8:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -3984(%rbp)
	pushq -3992(%rbp)
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f755
	jmp uuid_000000000007f757
uuid_000000000007f755:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	pushq -4216(%rbp)
	pushq -4224(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	pushq -3928(%rbp)
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -3952(%rbp)
	pushq -3960(%rbp)
	pushq -3968(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f752
	jmp uuid_000000000007f754
uuid_000000000007f752:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f754:
	mov -4512(%RBP),%RSP
	add $-4512, %RSP
uuid_000000000007f757:
	mov -4408(%RBP),%RSP
	add $-4512, %RSP
uuid_000000000007f8da:
	mov -3624(%RBP),%RSP
	add $-4512, %RSP
	jmp uuid_000000000007f8dd
uuid_000000000007f8db:
	push %RBP
#call function preprocess-is-suffixed : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_is_SB_suffixed_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-lone-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call is_SB_lone_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f734
	jmp uuid_000000000007f736
uuid_000000000007f734:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	pushq -3632(%rbp)
	pushq -3640(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	pushq -3664(%rbp)
	pushq -3672(%rbp)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	pushq -3752(%rbp)
	pushq -3760(%rbp)
	pushq -3768(%rbp)
	pushq -3776(%rbp)
	pushq $0
	push %RBP
	mov -3936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f727
	jmp uuid_000000000007f729
uuid_000000000007f727:
	push %RBP
	pushq -3864(%RBP)
	pushq -3872(%RBP)
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	pushq -3904(%RBP)
	pushq -3912(%RBP)
	pushq -3920(%RBP)
	pushq -3928(%RBP)
	pushq $0
	push %RBP
	mov -4032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f715
	jmp uuid_000000000007f717
uuid_000000000007f715:
	push %RBP
	mov -4024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f712
	jmp uuid_000000000007f714
uuid_000000000007f712:
	push %RBP
	mov -4016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f70f
	jmp uuid_000000000007f711
uuid_000000000007f70f:
	movb $1, -4040(%rbp)
uuid_000000000007f711:
	mov -4136(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007f714:
	mov -4056(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007f717:
	mov -4048(%RBP),%RSP
	add $-4208, %RSP
	mov -4040(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f724
	jmp uuid_000000000007f726
uuid_000000000007f724:
	push %RBP
	pushq -3792(%RBP)
	pushq -3800(%RBP)
	pushq -3808(%RBP)
	pushq -3816(%RBP)
	pushq -3824(%RBP)
	pushq -3832(%RBP)
	pushq -3840(%RBP)
	pushq -3848(%RBP)
	pushq -3856(%RBP)
	pushq $0
	push %RBP
	mov -4288(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f71e
	jmp uuid_000000000007f720
uuid_000000000007f71e:
	push %RBP
	mov -4280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f71b
	jmp uuid_000000000007f71d
uuid_000000000007f71b:
	push %RBP
	mov -4272(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f718
	jmp uuid_000000000007f71a
uuid_000000000007f718:
	movb $1, -4296(%rbp)
uuid_000000000007f71a:
	mov -4392(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007f71d:
	mov -4312(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007f720:
	mov -4304(%RBP),%RSP
	add $-4464, %RSP
	mov -4296(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f721
	jmp uuid_000000000007f723
uuid_000000000007f721:
	movb $1, -3944(%rbp)
uuid_000000000007f723:
	mov -4216(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007f726:
	mov -3960(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007f729:
	mov -3952(%RBP),%RSP
	add $-4464, %RSP
	mov -3944(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f731
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f730
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f733
uuid_000000000007f731:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f72d
	jmp uuid_000000000007f72f
uuid_000000000007f72d:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f72a
	jmp uuid_000000000007f72c
uuid_000000000007f72a:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f72c:
	mov -4672(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007f72f:
	mov -4568(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007f733:
	mov -3784(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007f736:
	mov -3624(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007f8dd:
	mov -2904(%RBP),%RSP
	add $-4672, %RSP
	jmp uuid_000000000007f8e0
uuid_000000000007f8de:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2776(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f8e0:
	mov -1808(%RBP),%RSP
	add $-2896, %RSP
	jmp uuid_000000000007f8e3
uuid_000000000007f8e1:
uuid_000000000007f8e3:
	mov -776(%RBP),%RSP
	add $-1800, %RSP
	jmp uuid_000000000007f8e6
uuid_000000000007f8e4:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007f8e6:
	mov -440(%RBP),%RSP
	add $-768, %RSP
	subq $96, %rsp
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
destructure_SB_lhs_CL_ArrowFContextConsFragmentListConsSConsTypeFContext:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f8f9
	jmp uuid_000000000007f8fb
uuid_000000000007f8f9:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f8ea
	jmp uuid_000000000007f8ec
uuid_000000000007f8ea:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f8e7
	jmp uuid_000000000007f8e9
uuid_000000000007f8e7:
	movb $1, -536(%rbp)
uuid_000000000007f8e9:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007f8ec:
	mov -544(%RBP),%RSP
	add $-560, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8f6
	jmp uuid_000000000007f8f8
uuid_000000000007f8f6:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f8f0
	jmp uuid_000000000007f8f2
uuid_000000000007f8f0:
	push %RBP
	mov -584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_000000000007c124
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f8ed
	jmp uuid_000000000007f8ef
uuid_000000000007f8ed:
	movb $1, -600(%rbp)
uuid_000000000007f8ef:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007f8f2:
	mov -608(%RBP),%RSP
	add $-624, %RSP
	mov -600(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f8f3
	jmp uuid_000000000007f8f5
uuid_000000000007f8f3:
	movb $1, -488(%rbp)
uuid_000000000007f8f5:
	mov -568(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007f8f8:
	mov -504(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007f8fb:
	mov -496(%RBP),%RSP
	add $-624, %RSP
	mov -488(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f955
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $0
	push %RBP
	mov -656(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f937
	jmp uuid_000000000007f939
uuid_000000000007f937:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f928
	jmp uuid_000000000007f92a
uuid_000000000007f928:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f91f
	jmp uuid_000000000007f921
uuid_000000000007f91f:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f910
	jmp uuid_000000000007f912
uuid_000000000007f910:
	push %RBP
	mov -792(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f90d
	jmp uuid_000000000007f90f
uuid_000000000007f90d:
	movb $1, -808(%rbp)
uuid_000000000007f90f:
	mov -824(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007f912:
	mov -816(%RBP),%RSP
	add $-832, %RSP
	mov -808(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f91c
	jmp uuid_000000000007f91e
uuid_000000000007f91c:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f916
	jmp uuid_000000000007f918
uuid_000000000007f916:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $uuid_000000000007c124
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f913
	jmp uuid_000000000007f915
uuid_000000000007f913:
	movb $1, -872(%rbp)
uuid_000000000007f915:
	mov -888(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007f918:
	mov -880(%RBP),%RSP
	add $-896, %RSP
	mov -872(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f919
	jmp uuid_000000000007f91b
uuid_000000000007f919:
	movb $1, -760(%rbp)
uuid_000000000007f91b:
	mov -840(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007f91e:
	mov -776(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007f921:
	mov -768(%RBP),%RSP
	add $-896, %RSP
	mov -760(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f925
	jmp uuid_000000000007f927
uuid_000000000007f925:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f922
	jmp uuid_000000000007f924
uuid_000000000007f922:
	movb $1, -712(%rbp)
uuid_000000000007f924:
	mov -904(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007f927:
	mov -728(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007f92a:
	mov -720(%RBP),%RSP
	add $-928, %RSP
	mov -712(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f934
	jmp uuid_000000000007f936
uuid_000000000007f934:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f92e
	jmp uuid_000000000007f930
uuid_000000000007f92e:
	push %RBP
	mov -952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq $uuid_000000000007c17a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f92b
	jmp uuid_000000000007f92d
uuid_000000000007f92b:
	movb $1, -968(%rbp)
uuid_000000000007f92d:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007f930:
	mov -976(%RBP),%RSP
	add $-992, %RSP
	mov -968(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f931
	jmp uuid_000000000007f933
uuid_000000000007f931:
	movb $1, -664(%rbp)
uuid_000000000007f933:
	mov -936(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007f936:
	mov -680(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007f939:
	mov -672(%RBP),%RSP
	add $-992, %RSP
	mov -664(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f952
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov -1024(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f94f
	push %RBP
	jmp uuid_000000000007f94c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f94b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f94e
uuid_000000000007f94c:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f94a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5fd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007f94e:
	mov -1032(%RBP),%RSP
	add $-1032, %RSP
	jmp uuid_000000000007f951
uuid_000000000007f94f:
uuid_000000000007f951:
	mov -1000(%RBP),%RSP
	add $-1024, %RSP
	jmp uuid_000000000007f954
uuid_000000000007f952:
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	push %RBP
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f940
	jmp uuid_000000000007f942
uuid_000000000007f940:
	push %RBP
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	jmp uuid_000000000007f93d
	jmp uuid_000000000007f93f
uuid_000000000007f93d:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f93a
	jmp uuid_000000000007f93c
uuid_000000000007f93a:
	movb $1, -1368(%rbp)
uuid_000000000007f93c:
	mov -1544(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007f93f:
	mov -1384(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007f942:
	mov -1376(%RBP),%RSP
	add $-1712, %RSP
	mov -1368(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f947
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f946
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f949
uuid_000000000007f947:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f943
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f905
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f945
uuid_000000000007f943:
uuid_000000000007f945:
	mov -1744(%RBP),%RSP
	add $-1744, %RSP
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -832(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	movq -1712(%rbp), %r15
	movq %r15, -416(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -408(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -400(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -392(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -384(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -376(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -368(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1608(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -256(%rbp)
uuid_000000000007f949:
	mov -1192(%RBP),%RSP
	add $-1864, %RSP
#call function destructure-lhs : Arrow<Cons<Cons<Cons<FContext,Type>,S>,FragmentList>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov %RBX, %RBP
	call destructure_SB_lhs_CL_ArrowFContextConsFragmentListConsSConsTypeFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007f954:
	mov -632(%RBP),%RSP
	add $-1864, %RSP
	jmp uuid_000000000007f957
uuid_000000000007f955:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	push %RBP
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f902
	jmp uuid_000000000007f904
uuid_000000000007f902:
	push %RBP
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007f8ff
	jmp uuid_000000000007f901
uuid_000000000007f8ff:
	push %RBP
	jmp uuid_000000000007f8fc
	jmp uuid_000000000007f8fe
uuid_000000000007f8fc:
	movb $1, -1000(%rbp)
uuid_000000000007f8fe:
	mov -1176(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007f901:
	mov -1016(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007f904:
	mov -1008(%RBP),%RSP
	add $-1176, %RSP
	mov -1000(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f90a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f909
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f90c
uuid_000000000007f90a:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f906
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007f905
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f908
uuid_000000000007f906:
uuid_000000000007f908:
	mov -1208(%RBP),%RSP
	add $-1208, %RSP
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -560(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007f90c:
	mov -824(%RBP),%RSP
	add $-1328, %RSP
uuid_000000000007f957:
	mov -456(%RBP),%RSP
	add $-1328, %RSP
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $424, %rsp
	ret
fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment:
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -272(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -240(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007da57
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007da57
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007eb13
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007eb13
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007eb13
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007bc32
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007bc32
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007bc32
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007e9fc
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007e9fc
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007e9fc
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007c217
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007c217
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007c217
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragmentList:
uuid_000000000007f965:
#call function non-zero : Arrow<FragmentList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f966
	jmp uuid_000000000007f967
uuid_000000000007f966:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f95e
	jmp uuid_000000000007f960
uuid_000000000007f95e:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007f95b
	jmp uuid_000000000007f95d
uuid_000000000007f95b:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f958
	jmp uuid_000000000007f95a
uuid_000000000007f958:
	movb $1, -680(%rbp)
uuid_000000000007f95a:
	mov -856(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007f95d:
	mov -696(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007f960:
	mov -688(%RBP),%RSP
	add $-1024, %RSP
	mov -680(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f962
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f961
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f964
uuid_000000000007f962:
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	movq -1024(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007f964:
	mov -504(%RBP),%RSP
	add $-1024, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f965
uuid_000000000007f967:
	subq $152, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
fragment_CL__CL_expression_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007da57
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fragment_CL__CL_expression_CL_ArrowFragmentS:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $uuid_000000000007da57
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	subq $152, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
fragment_CL__CL_get_CL_ArrowSConsStringFragment:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f97a
	jmp uuid_000000000007f97c
uuid_000000000007f97a:
	push %RBP
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	jmp uuid_000000000007f977
	jmp uuid_000000000007f979
uuid_000000000007f977:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f974
	jmp uuid_000000000007f976
uuid_000000000007f974:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007f971
	jmp uuid_000000000007f973
uuid_000000000007f971:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f96e
	jmp uuid_000000000007f970
uuid_000000000007f96e:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f96b
	jmp uuid_000000000007f96d
uuid_000000000007f96b:
	push %RBP
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007f968
	jmp uuid_000000000007f96a
uuid_000000000007f968:
	movb $1, -512(%rbp)
uuid_000000000007f96a:
	mov -872(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007f96d:
	mov -816(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007f970:
	mov -800(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007f973:
	mov -768(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007f976:
	mov -560(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007f979:
	mov -528(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007f97c:
	mov -520(%RBP),%RSP
	add $-944, %RSP
	mov -512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f994
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f993
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f996
uuid_000000000007f994:
uuid_000000000007f990:
#call function non-zero : Arrow<FragmentKV,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f991
	jmp uuid_000000000007f992
uuid_000000000007f991:
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	push %RBP
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f986
	jmp uuid_000000000007f988
uuid_000000000007f986:
	push %RBP
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	jmp uuid_000000000007f983
	jmp uuid_000000000007f985
uuid_000000000007f983:
	push %RBP
	mov -1016(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f980
	jmp uuid_000000000007f982
uuid_000000000007f980:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f97d
	jmp uuid_000000000007f97f
uuid_000000000007f97d:
	movb $1, -1056(%rbp)
uuid_000000000007f97f:
	mov -1120(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007f982:
	mov -1104(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007f985:
	mov -1072(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007f988:
	mov -1064(%RBP),%RSP
	add $-1168, %RSP
	mov -1056(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f98d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f98c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f98f
uuid_000000000007f98d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007f989
	movq -1168(%rbp), %r15
	movq %r15, -864(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -856(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -848(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -840(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -832(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -824(%rbp)
	jmp uuid_000000000007f98b
uuid_000000000007f989:
	movq -1096(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
uuid_000000000007f98b:
	mov -1176(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007f98f:
	mov -1000(%RBP),%RSP
	add $-1176, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007f990
uuid_000000000007f992:
uuid_000000000007f996:
	mov -352(%RBP),%RSP
	add $-944, %RSP
	subq $24, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
fragment_CL__CL_label_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007da57
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007d9f0
	pushq $0
	pushq $uuid_000000000007bacd
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bacd
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $uuid_000000000007da57
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $uuid_000000000007d9f0
	pushq $0
	pushq $uuid_000000000007c0bc
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	subq $152, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
fragment_CL__CL_new_CL_ArrowFragmentNil:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
#call function close : Arrow<FragmentKV+CaseNumber<1>,Array<FragmentKV+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVCaseNumber1FragmentKVCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment-context::new : Arrow<Nil,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_new_CL_ArrowFContextNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	subq $152, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f9a9
	jmp uuid_000000000007f9ab
uuid_000000000007f9a9:
	push %RBP
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	jmp uuid_000000000007f9a6
	jmp uuid_000000000007f9a8
uuid_000000000007f9a6:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f9a3
	jmp uuid_000000000007f9a5
uuid_000000000007f9a3:
	push %RBP
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	jmp uuid_000000000007f9a0
	jmp uuid_000000000007f9a2
uuid_000000000007f9a0:
	push %RBP
	mov -760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f99d
	jmp uuid_000000000007f99f
uuid_000000000007f99d:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f99a
	jmp uuid_000000000007f99c
uuid_000000000007f99a:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007f997
	jmp uuid_000000000007f999
uuid_000000000007f997:
	movb $1, -832(%rbp)
uuid_000000000007f999:
	mov -1192(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007f99c:
	mov -1136(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007f99f:
	mov -1120(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007f9a2:
	mov -1088(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007f9a5:
	mov -880(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007f9a8:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007f9ab:
	mov -840(%RBP),%RSP
	add $-1264, %RSP
	mov -832(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f9ad
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f9ac
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f9af
uuid_000000000007f9ad:
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1128(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $0
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
uuid_000000000007f9af:
	mov -672(%RBP),%RSP
	add $-1264, %RSP
	subq $152, %rsp
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $360, %rsp
	ret
fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f9c2
	jmp uuid_000000000007f9c4
uuid_000000000007f9c2:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007f9bf
	jmp uuid_000000000007f9c1
uuid_000000000007f9bf:
	push %RBP
	mov -600(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f9bc
	jmp uuid_000000000007f9be
uuid_000000000007f9bc:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	jmp uuid_000000000007f9b9
	jmp uuid_000000000007f9bb
uuid_000000000007f9b9:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f9b6
	jmp uuid_000000000007f9b8
uuid_000000000007f9b6:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f9b3
	jmp uuid_000000000007f9b5
uuid_000000000007f9b3:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007f9b0
	jmp uuid_000000000007f9b2
uuid_000000000007f9b0:
	movb $1, -640(%rbp)
uuid_000000000007f9b2:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f9b5:
	mov -944(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f9b8:
	mov -928(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f9bb:
	mov -896(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f9be:
	mov -688(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f9c1:
	mov -656(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007f9c4:
	mov -648(%RBP),%RSP
	add $-1072, %RSP
	mov -640(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f9c6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f9c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f9c8
uuid_000000000007f9c6:
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq $0
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
uuid_000000000007f9c8:
	mov -480(%RBP),%RSP
	add $-1072, %RSP
	subq $152, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f9db
	jmp uuid_000000000007f9dd
uuid_000000000007f9db:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007f9d8
	jmp uuid_000000000007f9da
uuid_000000000007f9d8:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f9d5
	jmp uuid_000000000007f9d7
uuid_000000000007f9d5:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007f9d2
	jmp uuid_000000000007f9d4
uuid_000000000007f9d2:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f9cf
	jmp uuid_000000000007f9d1
uuid_000000000007f9cf:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f9cc
	jmp uuid_000000000007f9ce
uuid_000000000007f9cc:
	push %RBP
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007f9c9
	jmp uuid_000000000007f9cb
uuid_000000000007f9c9:
	movb $1, -552(%rbp)
uuid_000000000007f9cb:
	mov -912(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007f9ce:
	mov -856(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007f9d1:
	mov -840(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007f9d4:
	mov -808(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007f9d7:
	mov -600(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007f9da:
	mov -568(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007f9dd:
	mov -560(%RBP),%RSP
	add $-984, %RSP
	mov -552(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f9df
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f9de
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f9e1
uuid_000000000007f9df:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -848(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007f9e1:
	mov -392(%RBP),%RSP
	add $-984, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $232, %rsp
	ret
fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007f9f4
	jmp uuid_000000000007f9f6
uuid_000000000007f9f4:
	push %RBP
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007f9f1
	jmp uuid_000000000007f9f3
uuid_000000000007f9f1:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f9ee
	jmp uuid_000000000007f9f0
uuid_000000000007f9ee:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007f9eb
	jmp uuid_000000000007f9ed
uuid_000000000007f9eb:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007f9e8
	jmp uuid_000000000007f9ea
uuid_000000000007f9e8:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f9e5
	jmp uuid_000000000007f9e7
uuid_000000000007f9e5:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	jmp uuid_000000000007f9e2
	jmp uuid_000000000007f9e4
uuid_000000000007f9e2:
	movb $1, -504(%rbp)
uuid_000000000007f9e4:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007f9e7:
	mov -808(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007f9ea:
	mov -792(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007f9ed:
	mov -760(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007f9f0:
	mov -552(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007f9f3:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007f9f6:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007f9f8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007f9f7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007f9fa
uuid_000000000007f9f8:
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -800(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007f9fa:
	mov -344(%RBP),%RSP
	add $-936, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
fragment_CL__CL_set_SB_vararg_CL_ArrowFragmentConsListArray_QM_FragmentFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa0d
	jmp uuid_000000000007fa0f
uuid_000000000007fa0d:
	push %RBP
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007fa0a
	jmp uuid_000000000007fa0c
uuid_000000000007fa0a:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fa07
	jmp uuid_000000000007fa09
uuid_000000000007fa07:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007fa04
	jmp uuid_000000000007fa06
uuid_000000000007fa04:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fa01
	jmp uuid_000000000007fa03
uuid_000000000007fa01:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007f9fe
	jmp uuid_000000000007fa00
uuid_000000000007f9fe:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	jmp uuid_000000000007f9fb
	jmp uuid_000000000007f9fd
uuid_000000000007f9fb:
	movb $1, -504(%rbp)
uuid_000000000007f9fd:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007fa00:
	mov -808(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007fa03:
	mov -792(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007fa06:
	mov -760(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007fa09:
	mov -552(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007fa0c:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007fa0f:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fa11
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fa10
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fa13
uuid_000000000007fa11:
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -800(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007fa13:
	mov -344(%RBP),%RSP
	add $-936, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa26
	jmp uuid_000000000007fa28
uuid_000000000007fa26:
	push %RBP
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	jmp uuid_000000000007fa23
	jmp uuid_000000000007fa25
uuid_000000000007fa23:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fa20
	jmp uuid_000000000007fa22
uuid_000000000007fa20:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007fa1d
	jmp uuid_000000000007fa1f
uuid_000000000007fa1d:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fa1a
	jmp uuid_000000000007fa1c
uuid_000000000007fa1a:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fa17
	jmp uuid_000000000007fa19
uuid_000000000007fa17:
	push %RBP
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007fa14
	jmp uuid_000000000007fa16
uuid_000000000007fa14:
	movb $1, -512(%rbp)
uuid_000000000007fa16:
	mov -872(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007fa19:
	mov -816(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007fa1c:
	mov -800(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007fa1f:
	mov -768(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007fa22:
	mov -560(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007fa25:
	mov -528(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007fa28:
	mov -520(%RBP),%RSP
	add $-944, %RSP
	mov -512(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fa2a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fa29
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fa2c
uuid_000000000007fa2a:
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -808(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007fa2c:
	mov -352(%RBP),%RSP
	add $-944, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $192, %rsp
	ret
main:
	pushq $1
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007fa65:
	movq -32(%RBP), %RAX
	movq -8(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa66
	jmp uuid_000000000007fa67
uuid_000000000007fa66:
	mov -16(%RBP), %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007fa2d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa62
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007fa2e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa5f
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007fa2f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa5c
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007fa30
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa59
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007fa31
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa56
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007fa32
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa53
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007fa33
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa50
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007fa34
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa4d
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007fa35
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa4a
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007fa36
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa47
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007fa37
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa44
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007fa38
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa41
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007fa39
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fa3e
	push %RBP
	pushq -64(%rbp)
	jmp uuid_000000000007fa3b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fa3a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fa3d
uuid_000000000007fa3b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -288(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007fa3d:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007fa40
uuid_000000000007fa3e:
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -16(%RBP), %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	movq %R15, %r15
	movq $config_SB_target_CL_String, %r14
	movq %r15, 0(%r14)
uuid_000000000007fa40:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007fa43
uuid_000000000007fa41:
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007fa43:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007fa46
uuid_000000000007fa44:
	mov $config_SB_preprocess_CL_U8, %r15
	movb $0, 0(%r15)
uuid_000000000007fa46:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007fa49
uuid_000000000007fa47:
	mov $config_SB_preprocess_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007fa49:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007fa4c
uuid_000000000007fa4a:
	mov $config_SB_strict_CL_U8, %r15
	movb $0, 0(%r15)
uuid_000000000007fa4c:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007fa4f
uuid_000000000007fa4d:
	mov $config_SB_strict_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007fa4f:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007fa52
uuid_000000000007fa50:
	pushq $0
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007fa52:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007fa55
uuid_000000000007fa53:
	pushq $1
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007fa55:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007fa58
uuid_000000000007fa56:
	pushq $2
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007fa58:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007fa5b
uuid_000000000007fa59:
	pushq $3
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007fa5b:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007fa5e
uuid_000000000007fa5c:
	pushq $4
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007fa5e:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007fa61
uuid_000000000007fa5f:
	pushq $1
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
uuid_000000000007fa61:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007fa64
uuid_000000000007fa62:
	pushq $0
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
uuid_000000000007fa64:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007fa65
uuid_000000000007fa67:
	pushq $1
uuid_000000000007fa93:
	mov -64(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fa94
	jmp uuid_000000000007fa95
uuid_000000000007fa94:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa90
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa6e
	jmp uuid_000000000007fa70
uuid_000000000007fa6e:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa6b
	jmp uuid_000000000007fa6d
uuid_000000000007fa6b:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fa68
	jmp uuid_000000000007fa6a
uuid_000000000007fa68:
	movb $1, -160(%rbp)
uuid_000000000007fa6a:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007fa6d:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007fa70:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fa8d
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa7d
	jmp uuid_000000000007fa7f
uuid_000000000007fa7d:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa74
	jmp uuid_000000000007fa76
uuid_000000000007fa74:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fa71
	jmp uuid_000000000007fa73
uuid_000000000007fa71:
	movb $1, -320(%rbp)
uuid_000000000007fa73:
	mov -336(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007fa76:
	mov -328(%RBP),%RSP
	add $-344, %RSP
	mov -320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fa7a
	jmp uuid_000000000007fa7c
uuid_000000000007fa7a:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fa77
	jmp uuid_000000000007fa79
uuid_000000000007fa77:
	movb $1, -272(%rbp)
uuid_000000000007fa79:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007fa7c:
	mov -288(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007fa7f:
	mov -280(%RBP),%RSP
	add $-376, %RSP
	mov -272(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fa8a
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa83
	jmp uuid_000000000007fa85
uuid_000000000007fa83:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fa80
	jmp uuid_000000000007fa82
uuid_000000000007fa80:
	movb $1, -416(%rbp)
uuid_000000000007fa82:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007fa85:
	mov -424(%RBP),%RSP
	add $-440, %RSP
	mov -416(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fa87
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fa86
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fa89
uuid_000000000007fa87:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movb $0, -64(%rbp)
uuid_000000000007fa89:
	mov -384(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007fa8c
uuid_000000000007fa8a:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -376(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007fa8c:
	mov -240(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007fa8f
uuid_000000000007fa8d:
	movq -232(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007fa8f:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007fa92
uuid_000000000007fa90:
	movb $0, -64(%rbp)
uuid_000000000007fa92:
	mov -96(%RBP),%RSP
	add $-120, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007fa93
uuid_000000000007fa95:
	mov $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %r15
	pushq 0(%r15)
	push %RBP
	pushq -72(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007faa7
	push %RBP
	pushq -72(%rbp)
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007faa4
	push %RBP
	pushq -72(%rbp)
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007faa1
	push %RBP
	pushq -72(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa9e
	push %RBP
	pushq -72(%rbp)
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fa9b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fa9a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fa9d
uuid_000000000007fa9b:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typecheck : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call typecheck_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007fa9d:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007faa0
uuid_000000000007fa9e:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typecheck : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call typecheck_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007faa0:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007faa3
uuid_000000000007faa1:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007faa3:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007faa6
uuid_000000000007faa4:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007faa6:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007faa9
uuid_000000000007faa7:
#call function print : Arrow<List<Token>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call print_CL_ArrowNilListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007faa9:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $24, %rsp
	ret
print_CL_ArrowNilListToken:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5e1
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
uuid_000000000007fabc:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fabd
	jmp uuid_000000000007fabe
uuid_000000000007fabd:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fab2
	jmp uuid_000000000007fab4
uuid_000000000007fab2:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007faaf
	jmp uuid_000000000007fab1
uuid_000000000007faaf:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007faac
	jmp uuid_000000000007faae
uuid_000000000007faac:
	movb $1, -248(%rbp)
uuid_000000000007faae:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007fab1:
	mov -264(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007fab4:
	mov -256(%RBP),%RSP
	add $-400, %RSP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fab9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fab8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fabb
uuid_000000000007fab9:
	push %RBP
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fab5
	jmp uuid_000000000007fab7
uuid_000000000007fab5:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b940
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007fab7:
	mov -408(%RBP),%RSP
	add $-408, %RSP
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movb $1, -88(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -296(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007fabb:
	mov -168(%RBP),%RSP
	add $-408, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fabc
uuid_000000000007fabe:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b5e2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64ListToken:
	mov $1, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_SS:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FContextFContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $200
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -200(%rbp), %r15
	movq %r15, 0(%r14)
	movq -192(%rbp), %r15
	movq %r15, 8(%r14)
	movq -184(%rbp), %r15
	movq %r15, 16(%r14)
	movq -176(%rbp), %r15
	movq %r15, 24(%r14)
	movq -168(%rbp), %r15
	movq %r15, 32(%r14)
	movq -160(%rbp), %r15
	movq %r15, 40(%r14)
	movq -152(%rbp), %r15
	movq %r15, 48(%r14)
	movq -144(%rbp), %r15
	movq %r15, 56(%r14)
	movq -136(%rbp), %r15
	movq %r15, 64(%r14)
	movq -128(%rbp), %r15
	movq %r15, 72(%r14)
	movq -120(%rbp), %r15
	movq %r15, 80(%r14)
	movq -112(%rbp), %r15
	movq %r15, 88(%r14)
	movq -104(%rbp), %r15
	movq %r15, 96(%r14)
	movq -96(%rbp), %r15
	movq %r15, 104(%r14)
	movq -88(%rbp), %r15
	movq %r15, 112(%r14)
	movq -80(%rbp), %r15
	movq %r15, 120(%r14)
	movq -72(%rbp), %r15
	movq %r15, 128(%r14)
	movq -64(%rbp), %r15
	movq %r15, 136(%r14)
	movq -56(%rbp), %r15
	movq %r15, 144(%r14)
	movq -48(%rbp), %r15
	movq %r15, 152(%r14)
	movq -40(%rbp), %r15
	movq %r15, 160(%r14)
	movq -32(%rbp), %r15
	movq %r15, 168(%r14)
	movq -24(%rbp), %r15
	movq %r15, 176(%r14)
	movq -16(%rbp), %r15
	movq %r15, 184(%r14)
	movq -8(%rbp), %r15
	movq %r15, 192(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
close_CL_ArrowArray_QM_FragmentKVFragmentKV:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_FragmentKVCaseNumber1FragmentKVCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
close_CL_ArrowArray_QM_ContextContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
close_CL_ArrowArray_QM_ASTAST:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64ListArray_QM_Fragment:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64ListFragment:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
is_CL_ArrowU64ConsSized8Sized8:
	pushq $0
	pushq $1
uuid_000000000007fac6:
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $8
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fac7
	jmp uuid_000000000007fac8
uuid_000000000007fac7:
	mov %RBP, %R15
	add $-8, %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	mov %RBP, %R15
	add $-16, %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	movq -48(%RBP), %RAX
	movq -56(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fac3
	movq $0, -40(%rbp)
	jmp uuid_000000000007fac5
uuid_000000000007fac3:
uuid_000000000007fac5:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007fac6
uuid_000000000007fac8:
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FragmentListCaseNumber1FragmentListCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_FragmentListFragmentList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_TypeType:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_StringStringListStringStringList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $32
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -32(%rbp), %r15
	movq %r15, 0(%r14)
	movq -24(%rbp), %r15
	movq %r15, 8(%r14)
	movq -16(%rbp), %r15
	movq %r15, 16(%r14)
	movq -8(%rbp), %r15
	movq %r15, 24(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
reverse_CL_ArrowListTokenListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007fada:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fadb
	jmp uuid_000000000007fadc
uuid_000000000007fadb:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fad3
	jmp uuid_000000000007fad5
uuid_000000000007fad3:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fad0
	jmp uuid_000000000007fad2
uuid_000000000007fad0:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007facd
	jmp uuid_000000000007facf
uuid_000000000007facd:
	movb $1, -312(%rbp)
uuid_000000000007facf:
	mov -408(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007fad2:
	mov -328(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007fad5:
	mov -320(%RBP),%RSP
	add $-464, %RSP
	mov -312(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fad7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fad6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fad9
uuid_000000000007fad7:
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -400(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007fad9:
	mov -232(%RBP),%RSP
	add $-464, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fada
uuid_000000000007fadc:
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_ListTokenListTokenListTokenListToken:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListTokenConsListTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	subq $72, %rsp
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
head_CL_ArrowTokenListToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007faec
	push %RBP
	jmp uuid_000000000007fae9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fae8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007faeb
uuid_000000000007fae9:
uuid_000000000007faeb:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007faee
uuid_000000000007faec:
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007fae7
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007faee:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	pushq -8(%RBP)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	subq $56, %rsp
	pushq 56(%rsp)
	pushq 72(%rsp)
	pushq 88(%rsp)
	pushq 104(%rsp)
	pushq 120(%rsp)
	pushq 136(%rsp)
	pushq 152(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_ListTypeListType:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	movq -32(%rbp), %r15
	movq %r15, 8(%r14)
	movq -24(%rbp), %r15
	movq %r15, 16(%r14)
	movq -16(%rbp), %r15
	movq %r15, 24(%r14)
	movq -8(%rbp), %r15
	movq %r15, 32(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
cons_CL_ArrowListTypeConsListTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	subq $40, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	movq -32(%rbp), %r15
	movq %r15, 8(%r14)
	movq -24(%rbp), %r15
	movq %r15, 16(%r14)
	movq -16(%rbp), %r15
	movq %r15, 24(%r14)
	movq -8(%rbp), %r15
	movq %r15, 32(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
close_CL_ArrowArray_QM_SfxListSfxList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_MacroListMacroList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_ASTCaseNumber9ASTCaseNumber9:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
max_CL_ArrowI64ConsI64I64:
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fafa
	jmp uuid_000000000007fafc
uuid_000000000007fafa:
	movq -16(%rbp), %r15
	movq %r15, -8(%rbp)
	mov -16(%rbp), %r15
	mov %r15, -8(%rbp)
uuid_000000000007fafc:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
close_CL_ArrowArray_QM_ListTokenListToken:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListStringConsListStringString:
	pushq -8(%rbp)
#call function close : Arrow<List<String>,Array<List<String>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListStringListString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
close_CL_ArrowArray_QM_ListStringListString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64ListString:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_CL_ArrowListArray_QM_FragmentConsListArray_QM_FragmentArray_QM_Fragment:
	pushq -8(%rbp)
#call function close : Arrow<List<Array<Fragment,?>>,Array<List<Array<Fragment,?>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListArray_QM_FragmentListArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
close_CL_ArrowArray_QM_ListArray_QM_FragmentListArray_QM_Fragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FragmentFragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $152
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -152(%rbp), %r15
	movq %r15, 0(%r14)
	movq -144(%rbp), %r15
	movq %r15, 8(%r14)
	movq -136(%rbp), %r15
	movq %r15, 16(%r14)
	movq -128(%rbp), %r15
	movq %r15, 24(%r14)
	movq -120(%rbp), %r15
	movq %r15, 32(%r14)
	movq -112(%rbp), %r15
	movq %r15, 40(%r14)
	movq -104(%rbp), %r15
	movq %r15, 48(%r14)
	movq -96(%rbp), %r15
	movq %r15, 56(%r14)
	movq -88(%rbp), %r15
	movq %r15, 64(%r14)
	movq -80(%rbp), %r15
	movq %r15, 72(%r14)
	movq -72(%rbp), %r15
	movq %r15, 80(%r14)
	movq -64(%rbp), %r15
	movq %r15, 88(%r14)
	movq -56(%rbp), %r15
	movq %r15, 96(%r14)
	movq -48(%rbp), %r15
	movq %r15, 104(%r14)
	movq -40(%rbp), %r15
	movq %r15, 112(%r14)
	movq -32(%rbp), %r15
	movq %r15, 120(%r14)
	movq -24(%rbp), %r15
	movq %r15, 128(%r14)
	movq -16(%rbp), %r15
	movq %r15, 136(%r14)
	movq -8(%rbp), %r15
	movq %r15, 144(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $160, %rsp
	ret
_DT_length_CL_ArrowU64ListFragment:
	pushq $0
uuid_000000000007fb16:
#call function non-zero : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fb17
	jmp uuid_000000000007fb18
uuid_000000000007fb17:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb0f
	jmp uuid_000000000007fb11
uuid_000000000007fb0f:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fb0c
	jmp uuid_000000000007fb0e
uuid_000000000007fb0c:
	push %RBP
	jmp uuid_000000000007fb09
	jmp uuid_000000000007fb0b
uuid_000000000007fb09:
	movb $1, -536(%rbp)
uuid_000000000007fb0b:
	mov -728(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007fb0e:
	mov -552(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007fb11:
	mov -544(%RBP),%RSP
	add $-728, %RSP
	mov -536(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fb13
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fb12
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fb15
uuid_000000000007fb13:
	movq -720(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -680(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -672(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -664(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -640(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007fb15:
	mov -360(%RBP),%RSP
	add $-728, %RSP
	movq -184(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -184(%rbp)
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fb16
uuid_000000000007fb18:
	mov -184(%rbp), %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
cons_CL_ArrowListFragmentConsListFragmentFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
#call function close : Arrow<List<Fragment>,Array<List<Fragment>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListFragmentListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	subq $168, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
close_CL_ArrowArray_QM_ListFragmentListFragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_TContextTContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $120
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -120(%rbp), %r15
	movq %r15, 0(%r14)
	movq -112(%rbp), %r15
	movq %r15, 8(%r14)
	movq -104(%rbp), %r15
	movq %r15, 16(%r14)
	movq -96(%rbp), %r15
	movq %r15, 24(%r14)
	movq -88(%rbp), %r15
	movq %r15, 32(%r14)
	movq -80(%rbp), %r15
	movq %r15, 40(%r14)
	movq -72(%rbp), %r15
	movq %r15, 48(%r14)
	movq -64(%rbp), %r15
	movq %r15, 56(%r14)
	movq -56(%rbp), %r15
	movq %r15, 64(%r14)
	movq -48(%rbp), %r15
	movq %r15, 72(%r14)
	movq -40(%rbp), %r15
	movq %r15, 80(%r14)
	movq -32(%rbp), %r15
	movq %r15, 88(%r14)
	movq -24(%rbp), %r15
	movq %r15, 96(%r14)
	movq -16(%rbp), %r15
	movq %r15, 104(%r14)
	movq -8(%rbp), %r15
	movq %r15, 112(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
_DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,Type>,Array<BTreeEq<String,Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqTypeStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007fb29:
	mov -64(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fb2a
	jmp uuid_000000000007fb2b
uuid_000000000007fb2a:
	mov -8(%rbp), %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq -56(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb26
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb23
	mov -120(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fb25
uuid_000000000007fb23:
	mov -72(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -64(%rbp)
uuid_000000000007fb25:
	mov -152(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007fb28
uuid_000000000007fb26:
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb20
	mov -128(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fb22
uuid_000000000007fb20:
	mov -72(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -64(%rbp)
uuid_000000000007fb22:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007fb28:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	add $64, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fb29
uuid_000000000007fb2b:
	mov %rbp, %rsp
	sub $48, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqTypeStringBTreeEqTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $64
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -64(%rbp), %r15
	movq %r15, 0(%r14)
	movq -56(%rbp), %r15
	movq %r15, 8(%r14)
	movq -48(%rbp), %r15
	movq %r15, 16(%r14)
	movq -40(%rbp), %r15
	movq %r15, 24(%r14)
	movq -32(%rbp), %r15
	movq %r15, 32(%r14)
	movq -24(%rbp), %r15
	movq %r15, 40(%r14)
	movq -16(%rbp), %r15
	movq %r15, 48(%r14)
	movq -8(%rbp), %r15
	movq %r15, 56(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
non_SB_zero_CL_ArrowU64ListStackToSpecialize:
	mov $1, %RAX
	pushq %RAX
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
max_CL_ArrowU64ConsU64U64:
	push %RBP
	movq -8(%RBP), %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb34
	jmp uuid_000000000007fb36
uuid_000000000007fb34:
	movq -16(%rbp), %r15
	movq %r15, -8(%rbp)
	mov -16(%rbp), %r15
	mov %r15, -8(%rbp)
uuid_000000000007fb36:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
cons_CL_ArrowListStackToSpecializeConsListStackToSpecializeStackToSpecialize:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
#call function close : Arrow<List<StackToSpecialize>,Array<List<StackToSpecialize>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListStackToSpecializeListStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	subq $200, %rsp
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
close_CL_ArrowArray_QM_ListStackToSpecializeListStackToSpecialize:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $200
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -200(%rbp), %r15
	movq %r15, 0(%r14)
	movq -192(%rbp), %r15
	movq %r15, 8(%r14)
	movq -184(%rbp), %r15
	movq %r15, 16(%r14)
	movq -176(%rbp), %r15
	movq %r15, 24(%r14)
	movq -168(%rbp), %r15
	movq %r15, 32(%r14)
	movq -160(%rbp), %r15
	movq %r15, 40(%r14)
	movq -152(%rbp), %r15
	movq %r15, 48(%r14)
	movq -144(%rbp), %r15
	movq %r15, 56(%r14)
	movq -136(%rbp), %r15
	movq %r15, 64(%r14)
	movq -128(%rbp), %r15
	movq %r15, 72(%r14)
	movq -120(%rbp), %r15
	movq %r15, 80(%r14)
	movq -112(%rbp), %r15
	movq %r15, 88(%r14)
	movq -104(%rbp), %r15
	movq %r15, 96(%r14)
	movq -96(%rbp), %r15
	movq %r15, 104(%r14)
	movq -88(%rbp), %r15
	movq %r15, 112(%r14)
	movq -80(%rbp), %r15
	movq %r15, 120(%r14)
	movq -72(%rbp), %r15
	movq %r15, 128(%r14)
	movq -64(%rbp), %r15
	movq %r15, 136(%r14)
	movq -56(%rbp), %r15
	movq %r15, 144(%r14)
	movq -48(%rbp), %r15
	movq %r15, 152(%r14)
	movq -40(%rbp), %r15
	movq %r15, 160(%r14)
	movq -32(%rbp), %r15
	movq %r15, 168(%r14)
	movq -24(%rbp), %r15
	movq %r15, 176(%r14)
	movq -16(%rbp), %r15
	movq %r15, 184(%r14)
	movq -8(%rbp), %r15
	movq %r15, 192(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
non_SB_zero_CL_ArrowU64ListType:
	mov $1, %RAX
	pushq %RAX
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_AD__CL_ArrowListTypeConsListTypeListType:
#call function reverse : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007fb50:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fb51
	jmp uuid_000000000007fb52
uuid_000000000007fb51:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb49
	jmp uuid_000000000007fb4b
uuid_000000000007fb49:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fb46
	jmp uuid_000000000007fb48
uuid_000000000007fb46:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007fb43
	jmp uuid_000000000007fb45
uuid_000000000007fb43:
	movb $1, -184(%rbp)
uuid_000000000007fb45:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007fb48:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007fb4b:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fb4d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fb4c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fb4f
uuid_000000000007fb4d:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	movq -240(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007fb4f:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fb50
uuid_000000000007fb52:
	subq $40, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $88, %rsp
	ret
reverse_CL_ArrowListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007fb63:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fb64
	jmp uuid_000000000007fb65
uuid_000000000007fb64:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb5d
	jmp uuid_000000000007fb5f
uuid_000000000007fb5d:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fb5a
	jmp uuid_000000000007fb5c
uuid_000000000007fb5a:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007fb57
	jmp uuid_000000000007fb59
uuid_000000000007fb57:
	movb $1, -184(%rbp)
uuid_000000000007fb59:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007fb5c:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007fb5f:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fb60
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fad6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fb62
uuid_000000000007fb60:
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	movq -240(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007fb62:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fb63
uuid_000000000007fb65:
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_length_CL_ArrowU64ListType:
	pushq $0
uuid_000000000007fb74:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fb75
	jmp uuid_000000000007fb76
uuid_000000000007fb75:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb6e
	jmp uuid_000000000007fb70
uuid_000000000007fb6e:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fb6b
	jmp uuid_000000000007fb6d
uuid_000000000007fb6b:
	push %RBP
	jmp uuid_000000000007fb68
	jmp uuid_000000000007fb6a
uuid_000000000007fb68:
	movb $1, -152(%rbp)
uuid_000000000007fb6a:
	mov -216(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007fb6d:
	mov -168(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007fb70:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fb71
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fb12
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fb73
uuid_000000000007fb71:
	movq -208(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007fb73:
	mov -104(%RBP),%RSP
	add $-216, %RSP
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fb74
uuid_000000000007fb76:
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007fb91:
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fb92
	jmp uuid_000000000007fb93
uuid_000000000007fb92:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -112(%RBP), %RAX
	movq -128(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb82
	jmp uuid_000000000007fb84
uuid_000000000007fb82:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fb7f
	jmp uuid_000000000007fb81
uuid_000000000007fb7f:
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	movb $0, -120(%rbp)
uuid_000000000007fb81:
	mov -144(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007fb84:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	push %RBP
	mov -120(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fb8e
	jmp uuid_000000000007fb90
uuid_000000000007fb8e:
	push %RBP
	movq -128(%RBP), %RAX
	movq -112(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb8b
	push %RBP
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb88
	mov -48(%RBP), %RAX
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fb8a
uuid_000000000007fb88:
	movb $0, -120(%rbp)
uuid_000000000007fb8a:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007fb8d
uuid_000000000007fb8b:
	push %RBP
	mov -56(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb85
	mov -56(%RBP), %RAX
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fb87
uuid_000000000007fb85:
	movb $0, -120(%rbp)
uuid_000000000007fb87:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007fb8d:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007fb90:
	mov -152(%RBP),%RSP
	add $-168, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fb91
uuid_000000000007fb93:
	subq $24, %rsp
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $104, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007fbae:
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fbaf
	jmp uuid_000000000007fbb0
uuid_000000000007fbaf:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -80(%RBP), %RAX
	movq -96(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fb9f
	jmp uuid_000000000007fba1
uuid_000000000007fb9f:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fb9c
	jmp uuid_000000000007fb9e
uuid_000000000007fb9c:
	mov -24(%RBP), %RAX
	movq %RAX, -64(%rbp)
	movb $0, -88(%rbp)
uuid_000000000007fb9e:
	mov -112(%RBP),%RSP
	add $-112, %RSP
uuid_000000000007fba1:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fbab
	jmp uuid_000000000007fbad
uuid_000000000007fbab:
	push %RBP
	movq -96(%RBP), %RAX
	movq -80(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fba8
	push %RBP
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fba5
	mov -32(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fba7
uuid_000000000007fba5:
	movb $0, -88(%rbp)
uuid_000000000007fba7:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007fbaa
uuid_000000000007fba8:
	push %RBP
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fba2
	mov -40(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fba4
uuid_000000000007fba2:
	movb $0, -88(%rbp)
uuid_000000000007fba4:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007fbaa:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007fbad:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fbae
uuid_000000000007fbb0:
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
_DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007fbd5:
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fbd6
	jmp uuid_000000000007fbd7
uuid_000000000007fbd6:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -176(%RBP), %RAX
	movq -192(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fbc6
	jmp uuid_000000000007fbc8
uuid_000000000007fbc6:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fbc3
	jmp uuid_000000000007fbc5
uuid_000000000007fbc3:
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	pushq -64(%RBP)
	pushq -72(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	movb $0, -184(%rbp)
uuid_000000000007fbc5:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007fbc8:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	push %RBP
	mov -184(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fbd2
	jmp uuid_000000000007fbd4
uuid_000000000007fbd2:
	push %RBP
	movq -192(%RBP), %RAX
	movq -176(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fbcf
	push %RBP
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fbcc
	mov -80(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fbce
uuid_000000000007fbcc:
	movb $0, -184(%rbp)
uuid_000000000007fbce:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007fbd1
uuid_000000000007fbcf:
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fbc9
	mov -88(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fbcb
uuid_000000000007fbc9:
	movb $0, -184(%rbp)
uuid_000000000007fbcb:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007fbd1:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007fbd4:
	mov -216(%RBP),%RSP
	add $-232, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fbd5
uuid_000000000007fbd7:
	subq $56, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $120
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -120(%rbp), %r15
	movq %r15, 0(%r14)
	movq -112(%rbp), %r15
	movq %r15, 8(%r14)
	movq -104(%rbp), %r15
	movq %r15, 16(%r14)
	movq -96(%rbp), %r15
	movq %r15, 24(%r14)
	movq -88(%rbp), %r15
	movq %r15, 32(%r14)
	movq -80(%rbp), %r15
	movq %r15, 40(%r14)
	movq -72(%rbp), %r15
	movq %r15, 48(%r14)
	movq -64(%rbp), %r15
	movq %r15, 56(%r14)
	movq -56(%rbp), %r15
	movq %r15, 64(%r14)
	movq -48(%rbp), %r15
	movq %r15, 72(%r14)
	movq -40(%rbp), %r15
	movq %r15, 80(%r14)
	movq -32(%rbp), %r15
	movq %r15, 88(%r14)
	movq -24(%rbp), %r15
	movq %r15, 96(%r14)
	movq -16(%rbp), %r15
	movq %r15, 104(%r14)
	movq -8(%rbp), %r15
	movq %r15, 112(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
_DT_nth_CL_ArrowTypeConsTypeConsU64ListType:
uuid_000000000007fbec:
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fbed
	jmp uuid_000000000007fbee
uuid_000000000007fbed:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fbe2
	jmp uuid_000000000007fbe4
uuid_000000000007fbe2:
	push %RBP
	mov -160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fbdf
	jmp uuid_000000000007fbe1
uuid_000000000007fbdf:
	push %RBP
	jmp uuid_000000000007fbdc
	jmp uuid_000000000007fbde
uuid_000000000007fbdc:
	movb $1, -176(%rbp)
uuid_000000000007fbde:
	mov -240(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007fbe1:
	mov -192(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007fbe4:
	mov -184(%RBP),%RSP
	add $-240, %RSP
	mov -176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fbe9
	push %RBP
	jmp uuid_000000000007fbe6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fbe5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fbe8
uuid_000000000007fbe6:
uuid_000000000007fbe8:
	mov -248(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007fbeb
uuid_000000000007fbe9:
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007fbeb:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fbec
uuid_000000000007fbee:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fbf5
	jmp uuid_000000000007fbf7
uuid_000000000007fbf5:
	push %RBP
	jmp uuid_000000000007fbf2
	jmp uuid_000000000007fbf4
uuid_000000000007fbf2:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	jmp uuid_000000000007fbef
	jmp uuid_000000000007fbf1
uuid_000000000007fbef:
	movb $1, -176(%rbp)
uuid_000000000007fbf1:
	mov -200(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007fbf4:
	mov -192(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007fbf7:
	mov -184(%RBP),%RSP
	add $-224, %RSP
	mov -176(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fbfc
	push %RBP
	jmp uuid_000000000007fbf9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fbf8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fbfb
uuid_000000000007fbf9:
uuid_000000000007fbfb:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007fbfe
uuid_000000000007fbfc:
	movq -224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007fbfe:
	mov -128(%RBP),%RSP
	add $-224, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,Tuple<Type,Type>>,Array<BTreeEq<String,Tuple<Type,Type>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007fc11:
	mov -96(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fc12
	jmp uuid_000000000007fc13
uuid_000000000007fc12:
	mov -8(%rbp), %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq -88(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc0e
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc0b
	mov -184(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fc0d
uuid_000000000007fc0b:
	mov -104(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -96(%rbp)
uuid_000000000007fc0d:
	mov -216(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007fc10
uuid_000000000007fc0e:
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc08
	mov -192(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fc0a
uuid_000000000007fc08:
	mov -104(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -96(%rbp)
uuid_000000000007fc0a:
	mov -216(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007fc10:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fc11
uuid_000000000007fc13:
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,U64>,Array<BTreeEq<String,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64StringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007fc2a:
	mov -48(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fc2b
	jmp uuid_000000000007fc2c
uuid_000000000007fc2b:
	mov -8(%rbp), %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc27
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc24
	mov -88(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fc26
uuid_000000000007fc24:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -48(%rbp)
uuid_000000000007fc26:
	mov -120(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007fc29
uuid_000000000007fc27:
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc21
	mov -96(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fc23
uuid_000000000007fc21:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -48(%rbp)
uuid_000000000007fc23:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007fc29:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fc2a
uuid_000000000007fc2c:
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64StringBTreeEqU64String:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_DT_lookup_CL_ArrowStringConsStringConsStringBTreeEqStringString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007fc4d:
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fc4e
	jmp uuid_000000000007fc4f
uuid_000000000007fc4e:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -80(%RBP), %RAX
	movq -96(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc3e
	jmp uuid_000000000007fc40
uuid_000000000007fc3e:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fc3b
	jmp uuid_000000000007fc3d
uuid_000000000007fc3b:
	mov -24(%RBP), %RAX
	movq %RAX, -64(%rbp)
	movb $0, -88(%rbp)
uuid_000000000007fc3d:
	mov -112(%RBP),%RSP
	add $-112, %RSP
uuid_000000000007fc40:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	mov -88(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fc4a
	jmp uuid_000000000007fc4c
uuid_000000000007fc4a:
	push %RBP
	movq -96(%RBP), %RAX
	movq -80(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc47
	push %RBP
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc44
	mov -32(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fc46
uuid_000000000007fc44:
	movb $0, -88(%rbp)
uuid_000000000007fc46:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007fc49
uuid_000000000007fc47:
	push %RBP
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc41
	mov -40(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fc43
uuid_000000000007fc41:
	movb $0, -88(%rbp)
uuid_000000000007fc43:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007fc49:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007fc4c:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fc4d
uuid_000000000007fc4f:
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
_DT_bind_CL_ArrowNilConsStringConsStringArray_QM_BTreeEqStringString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,String>,Array<BTreeEq<String,String>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqStringStringBTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007fc5b:
	mov -48(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fc5c
	jmp uuid_000000000007fc5d
uuid_000000000007fc5c:
	mov -8(%rbp), %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc58
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc55
	mov -88(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fc57
uuid_000000000007fc55:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -48(%rbp)
uuid_000000000007fc57:
	mov -120(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007fc5a
uuid_000000000007fc58:
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc52
	mov -96(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fc54
uuid_000000000007fc52:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -48(%rbp)
uuid_000000000007fc54:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007fc5a:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fc5b
uuid_000000000007fc5d:
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqStringStringBTreeEqStringString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString:
#call function deep-hash : Arrow<Tuple<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007fc8a:
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fc8b
	jmp uuid_000000000007fc8c
uuid_000000000007fc8b:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -144(%RBP), %RAX
	movq -160(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc7b
	jmp uuid_000000000007fc7d
uuid_000000000007fc7b:
	push %RBP
#call function == : Arrow<Cons<Tuple<String,Type>,Tuple<String,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleTypeStringTupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fc78
	jmp uuid_000000000007fc7a
uuid_000000000007fc78:
	mov -56(%RBP), %RAX
	movq %RAX, -128(%rbp)
	movb $0, -152(%rbp)
uuid_000000000007fc7a:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007fc7d:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	push %RBP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fc87
	jmp uuid_000000000007fc89
uuid_000000000007fc87:
	push %RBP
	movq -160(%RBP), %RAX
	movq -144(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc84
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc81
	mov -64(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fc83
uuid_000000000007fc81:
	movb $0, -152(%rbp)
uuid_000000000007fc83:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007fc86
uuid_000000000007fc84:
	push %RBP
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc7e
	mov -72(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fc80
uuid_000000000007fc7e:
	movb $0, -152(%rbp)
uuid_000000000007fc80:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007fc86:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007fc89:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fc8a
uuid_000000000007fc8c:
	mov -128(%rbp), %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleTypeStringTupleTypeString:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fcaf
	jmp uuid_000000000007fcb1
uuid_000000000007fcaf:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fc9d
	jmp uuid_000000000007fc9f
uuid_000000000007fc9d:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	jmp uuid_000000000007fc9a
	jmp uuid_000000000007fc9c
uuid_000000000007fc9a:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fc97
	jmp uuid_000000000007fc99
uuid_000000000007fc97:
	movb $1, -352(%rbp)
uuid_000000000007fc99:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007fc9c:
	mov -368(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007fc9f:
	mov -360(%RBP),%RSP
	add $-408, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fcac
	jmp uuid_000000000007fcae
uuid_000000000007fcac:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fca6
	jmp uuid_000000000007fca8
uuid_000000000007fca6:
	push %RBP
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	jmp uuid_000000000007fca3
	jmp uuid_000000000007fca5
uuid_000000000007fca3:
	push %RBP
	mov -424(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fca0
	jmp uuid_000000000007fca2
uuid_000000000007fca0:
	movb $1, -464(%rbp)
uuid_000000000007fca2:
	mov -512(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007fca5:
	mov -480(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007fca8:
	mov -472(%RBP),%RSP
	add $-520, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fca9
	jmp uuid_000000000007fcab
uuid_000000000007fca9:
	movb $1, -288(%rbp)
uuid_000000000007fcab:
	mov -416(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007fcae:
	mov -304(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007fcb1:
	mov -296(%RBP),%RSP
	add $-520, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fcb9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fcb8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fcbb
uuid_000000000007fcb9:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fcb5
	jmp uuid_000000000007fcb7
uuid_000000000007fcb5:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fcb2
	jmp uuid_000000000007fcb4
uuid_000000000007fcb2:
	movq $1, -96(%rbp)
uuid_000000000007fcb4:
	mov -536(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007fcb7:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007fcbb:
	mov -192(%RBP),%RSP
	add $-536, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleTypeString:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fcc6
	jmp uuid_000000000007fcc8
uuid_000000000007fcc6:
	push %RBP
	pushq -120(%RBP)
	pushq -128(%RBP)
	pushq -136(%RBP)
	jmp uuid_000000000007fcc3
	jmp uuid_000000000007fcc5
uuid_000000000007fcc3:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fcc0
	jmp uuid_000000000007fcc2
uuid_000000000007fcc0:
	movb $1, -152(%rbp)
uuid_000000000007fcc2:
	mov -200(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007fcc5:
	mov -168(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007fcc8:
	mov -160(%RBP),%RSP
	add $-208, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fcca
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fcc9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fccc
uuid_000000000007fcca:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007fccc:
	mov -104(%RBP),%RSP
	add $-208, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString:
#call function deep-hash : Arrow<Tuple<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<Tuple<String,Type>,U64>,Array<BTreeEq<Tuple<String,Type>,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007fce1:
	mov -80(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fce2
	jmp uuid_000000000007fce3
uuid_000000000007fce2:
	mov -8(%rbp), %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq -72(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fcde
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fcdb
	mov -152(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fcdd
uuid_000000000007fcdb:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -80(%rbp)
uuid_000000000007fcdd:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007fce0
uuid_000000000007fcde:
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fcd8
	mov -160(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fcda
uuid_000000000007fcd8:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -80(%rbp)
uuid_000000000007fcda:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007fce0:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	add $80, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fce1
uuid_000000000007fce3:
	mov %rbp, %rsp
	sub $64, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $80
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -80(%rbp), %r15
	movq %r15, 0(%r14)
	movq -72(%rbp), %r15
	movq %r15, 8(%r14)
	movq -64(%rbp), %r15
	movq %r15, 16(%r14)
	movq -56(%rbp), %r15
	movq %r15, 24(%r14)
	movq -48(%rbp), %r15
	movq %r15, 32(%r14)
	movq -40(%rbp), %r15
	movq %r15, 40(%r14)
	movq -32(%rbp), %r15
	movq %r15, 48(%r14)
	movq -24(%rbp), %r15
	movq %r15, 56(%r14)
	movq -16(%rbp), %r15
	movq %r15, 64(%r14)
	movq -8(%rbp), %r15
	movq %r15, 72(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsTupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String:
#call function deep-hash : Arrow<Tuple<Tuple<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007fd21:
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd22
	jmp uuid_000000000007fd23
uuid_000000000007fd22:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -144(%RBP), %RAX
	movq -160(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd12
	jmp uuid_000000000007fd14
uuid_000000000007fd12:
	push %RBP
#call function == : Arrow<Cons<Tuple<Tuple<String,U64>,U64>,Tuple<Tuple<String,U64>,U64>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleU64TupleU64StringTupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fd0f
	jmp uuid_000000000007fd11
uuid_000000000007fd0f:
	mov -56(%RBP), %RAX
	movq %RAX, -128(%rbp)
	movb $0, -152(%rbp)
uuid_000000000007fd11:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007fd14:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	push %RBP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd1e
	jmp uuid_000000000007fd20
uuid_000000000007fd1e:
	push %RBP
	movq -160(%RBP), %RAX
	movq -144(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd1b
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd18
	mov -64(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fd1a
uuid_000000000007fd18:
	movb $0, -152(%rbp)
uuid_000000000007fd1a:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007fd1d
uuid_000000000007fd1b:
	push %RBP
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd15
	mov -72(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fd17
uuid_000000000007fd15:
	movb $0, -152(%rbp)
uuid_000000000007fd17:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007fd1d:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007fd20:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fd21
uuid_000000000007fd23:
	mov -128(%rbp), %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleU64TupleU64StringTupleU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd4f
	jmp uuid_000000000007fd51
uuid_000000000007fd4f:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd3d
	jmp uuid_000000000007fd3f
uuid_000000000007fd3d:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fd3a
	jmp uuid_000000000007fd3c
uuid_000000000007fd3a:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	jmp uuid_000000000007fd37
	jmp uuid_000000000007fd39
uuid_000000000007fd37:
	movb $1, -352(%rbp)
uuid_000000000007fd39:
	mov -384(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007fd3c:
	mov -368(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007fd3f:
	mov -360(%RBP),%RSP
	add $-408, %RSP
	mov -352(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd4c
	jmp uuid_000000000007fd4e
uuid_000000000007fd4c:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd46
	jmp uuid_000000000007fd48
uuid_000000000007fd46:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fd43
	jmp uuid_000000000007fd45
uuid_000000000007fd43:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007fd40
	jmp uuid_000000000007fd42
uuid_000000000007fd40:
	movb $1, -464(%rbp)
uuid_000000000007fd42:
	mov -496(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007fd45:
	mov -480(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007fd48:
	mov -472(%RBP),%RSP
	add $-520, %RSP
	mov -464(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd49
	jmp uuid_000000000007fd4b
uuid_000000000007fd49:
	movb $1, -288(%rbp)
uuid_000000000007fd4b:
	mov -416(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007fd4e:
	mov -304(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007fd51:
	mov -296(%RBP),%RSP
	add $-520, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd58
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fcb8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fd5a
uuid_000000000007fd58:
	push %RBP
#call function == : Arrow<Cons<Tuple<String,U64>,Tuple<String,U64>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleU64StringTupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fd55
	jmp uuid_000000000007fd57
uuid_000000000007fd55:
	push %RBP
	movq -488(%RBP), %RAX
	movq -376(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd52
	jmp uuid_000000000007fd54
uuid_000000000007fd52:
	movq $1, -96(%rbp)
uuid_000000000007fd54:
	mov -536(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007fd57:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007fd5a:
	mov -192(%RBP),%RSP
	add $-536, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleU64StringTupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd7d
	jmp uuid_000000000007fd7f
uuid_000000000007fd7d:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd6b
	jmp uuid_000000000007fd6d
uuid_000000000007fd6b:
	push %RBP
	mov -224(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fd68
	jmp uuid_000000000007fd6a
uuid_000000000007fd68:
	push %RBP
	mov -216(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fd65
	jmp uuid_000000000007fd67
uuid_000000000007fd65:
	movb $1, -240(%rbp)
uuid_000000000007fd67:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007fd6a:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007fd6d:
	mov -248(%RBP),%RSP
	add $-280, %RSP
	mov -240(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd7a
	jmp uuid_000000000007fd7c
uuid_000000000007fd7a:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd74
	jmp uuid_000000000007fd76
uuid_000000000007fd74:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fd71
	jmp uuid_000000000007fd73
uuid_000000000007fd71:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fd6e
	jmp uuid_000000000007fd70
uuid_000000000007fd6e:
	movb $1, -320(%rbp)
uuid_000000000007fd70:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007fd73:
	mov -336(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007fd76:
	mov -328(%RBP),%RSP
	add $-360, %RSP
	mov -320(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd77
	jmp uuid_000000000007fd79
uuid_000000000007fd77:
	movb $1, -192(%rbp)
uuid_000000000007fd79:
	mov -288(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007fd7c:
	mov -208(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007fd7f:
	mov -200(%RBP),%RSP
	add $-360, %RSP
	mov -192(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd86
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fcb8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fd88
uuid_000000000007fd86:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fd83
	jmp uuid_000000000007fd85
uuid_000000000007fd83:
	push %RBP
	movq -344(%RBP), %RAX
	movq -264(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd80
	jmp uuid_000000000007fd82
uuid_000000000007fd80:
	movq $1, -64(%rbp)
uuid_000000000007fd82:
	mov -376(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007fd85:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007fd88:
	mov -128(%RBP),%RSP
	add $-376, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fd97
	jmp uuid_000000000007fd99
uuid_000000000007fd97:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fd94
	jmp uuid_000000000007fd96
uuid_000000000007fd94:
	push %RBP
	pushq -112(%RBP)
	pushq -120(%RBP)
	pushq -128(%RBP)
	jmp uuid_000000000007fd91
	jmp uuid_000000000007fd93
uuid_000000000007fd91:
	movb $1, -152(%rbp)
uuid_000000000007fd93:
	mov -184(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007fd96:
	mov -168(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007fd99:
	mov -160(%RBP),%RSP
	add $-208, %RSP
	mov -152(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fd9a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fcc9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fd9c
uuid_000000000007fd9a:
#call function deep-hash : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<Tuple<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007fd9c:
	mov -104(%RBP),%RSP
	add $-208, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fda7
	jmp uuid_000000000007fda9
uuid_000000000007fda7:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fda4
	jmp uuid_000000000007fda6
uuid_000000000007fda4:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007fda1
	jmp uuid_000000000007fda3
uuid_000000000007fda1:
	movb $1, -104(%rbp)
uuid_000000000007fda3:
	mov -136(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007fda6:
	mov -120(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007fda9:
	mov -112(%RBP),%RSP
	add $-144, %RSP
	mov -104(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fdaa
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fcc9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fdac
uuid_000000000007fdaa:
#call function deep-hash : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007fdac:
	mov -72(%RBP),%RSP
	add $-144, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsTupleU64TupleU64StringArray_QM_BTreeEqU64TupleU64TupleU64String:
#call function deep-hash : Arrow<Tuple<Tuple<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,Array<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007fdca:
	mov -80(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fdcb
	jmp uuid_000000000007fdcc
uuid_000000000007fdcb:
	mov -8(%rbp), %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq -72(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fdc7
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fdc4
	mov -152(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fdc6
uuid_000000000007fdc4:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -80(%rbp)
uuid_000000000007fdc6:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007fdc9
uuid_000000000007fdc7:
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fdc1
	mov -160(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fdc3
uuid_000000000007fdc1:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -80(%rbp)
uuid_000000000007fdc3:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007fdc9:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	add $80, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fdca
uuid_000000000007fdcc:
	mov %rbp, %rsp
	sub $64, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $80
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -80(%rbp), %r15
	movq %r15, 0(%r14)
	movq -72(%rbp), %r15
	movq %r15, 8(%r14)
	movq -64(%rbp), %r15
	movq %r15, 16(%r14)
	movq -56(%rbp), %r15
	movq %r15, 24(%r14)
	movq -48(%rbp), %r15
	movq %r15, 32(%r14)
	movq -40(%rbp), %r15
	movq %r15, 40(%r14)
	movq -32(%rbp), %r15
	movq %r15, 48(%r14)
	movq -24(%rbp), %r15
	movq %r15, 56(%r14)
	movq -16(%rbp), %r15
	movq %r15, 64(%r14)
	movq -8(%rbp), %r15
	movq %r15, 72(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString:
	mov $1, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListTupleTypeTupleStringStringConsListTupleTypeTupleStringStringTupleTypeTupleStringString:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function close : Arrow<List<Tuple<Tuple<String,String>,Type>>,Array<List<Tuple<Tuple<String,String>,Type>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTupleTypeTupleStringStringListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	subq $72, %rsp
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
close_CL_ArrowArray_QM_ListTupleTypeTupleStringStringListTupleTypeTupleStringString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_bind_CL_ArrowNilConsTypeConsASTArray_QM_BTreeIsTypeAST:
#call function hash : Arrow<Sized<72>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call hash_CL_ArrowU64Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeIs<AST,Type>,Array<BTreeIs<AST,Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeIsTypeASTBTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007fe18:
	mov -128(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fe19
	jmp uuid_000000000007fe1a
uuid_000000000007fe19:
	mov -8(%rbp), %r15
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq -120(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe15
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe12
	mov -248(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fe14
uuid_000000000007fe12:
	mov -136(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -128(%rbp)
uuid_000000000007fe14:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007fe17
uuid_000000000007fe15:
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe0f
	mov -256(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007fe11
uuid_000000000007fe0f:
	mov -136(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -128(%rbp)
uuid_000000000007fe11:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007fe17:
	mov -272(%RBP),%RSP
	add $-280, %RSP
	add $128, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fe18
uuid_000000000007fe1a:
	mov %rbp, %rsp
	sub $112, %rsp
	ret
close_CL_ArrowArray_QM_BTreeIsTypeASTBTreeIsTypeAST:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $128
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -128(%rbp), %r15
	movq %r15, 0(%r14)
	movq -120(%rbp), %r15
	movq %r15, 8(%r14)
	movq -112(%rbp), %r15
	movq %r15, 16(%r14)
	movq -104(%rbp), %r15
	movq %r15, 24(%r14)
	movq -96(%rbp), %r15
	movq %r15, 32(%r14)
	movq -88(%rbp), %r15
	movq %r15, 40(%r14)
	movq -80(%rbp), %r15
	movq %r15, 48(%r14)
	movq -72(%rbp), %r15
	movq %r15, 56(%r14)
	movq -64(%rbp), %r15
	movq %r15, 64(%r14)
	movq -56(%rbp), %r15
	movq %r15, 72(%r14)
	movq -48(%rbp), %r15
	movq %r15, 80(%r14)
	movq -40(%rbp), %r15
	movq %r15, 88(%r14)
	movq -32(%rbp), %r15
	movq %r15, 96(%r14)
	movq -24(%rbp), %r15
	movq %r15, 104(%r14)
	movq -16(%rbp), %r15
	movq %r15, 112(%r14)
	movq -8(%rbp), %r15
	movq %r15, 120(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
hash_CL_ArrowU64Sized72:
	pushq $0
	pushq $0
uuid_000000000007fe21:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -88(%RBP), %RAX
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fe22
	jmp uuid_000000000007fe23
uuid_000000000007fe22:
	mov %RBP, %R15
	add $-72, %R15
	mov -88(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	movq %R15, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -88(%rbp)
	mov -96(%RBP),%RAX
	shl $10,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shr $6,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -96(%rbp)
	jmp uuid_000000000007fe21
uuid_000000000007fe23:
	mov -96(%RBP),%RAX
	shl $3,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shr $11,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shl $15,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_lookup_CL_ArrowTypeConsTypeConsASTBTreeIsTypeAST:
#call function hash : Arrow<Sized<72>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call hash_CL_ArrowU64Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007fe3e:
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fe3f
	jmp uuid_000000000007fe40
uuid_000000000007fe3f:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -240(%RBP), %RAX
	movq -256(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe2f
	jmp uuid_000000000007fe31
uuid_000000000007fe2f:
	push %RBP
#call function is : Arrow<Cons<Sized<72>,Sized<72>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	pushq -64(%RBP)
	pushq -72(%RBP)
	pushq -80(%RBP)
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized72Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fe2c
	jmp uuid_000000000007fe2e
uuid_000000000007fe2c:
	pushq -88(%RBP)
	pushq -96(%RBP)
	pushq -104(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	movb $0, -248(%rbp)
uuid_000000000007fe2e:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007fe31:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	push %RBP
	mov -248(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fe3b
	jmp uuid_000000000007fe3d
uuid_000000000007fe3b:
	push %RBP
	movq -256(%RBP), %RAX
	movq -240(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe38
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe35
	mov -112(%RBP), %RAX
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fe37
uuid_000000000007fe35:
	movb $0, -248(%rbp)
uuid_000000000007fe37:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007fe3a
uuid_000000000007fe38:
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe32
	mov -120(%RBP), %RAX
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007fe34
uuid_000000000007fe32:
	movb $0, -248(%rbp)
uuid_000000000007fe34:
	mov -296(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007fe3a:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007fe3d:
	mov -280(%RBP),%RSP
	add $-296, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007fe3e
uuid_000000000007fe40:
	subq $24, %rsp
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $232, %rsp
	ret
is_CL_ArrowU64ConsSized72Sized72:
	pushq $0
	pushq $1
uuid_000000000007fe44:
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -160(%RBP), %RAX
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe45
	jmp uuid_000000000007fe46
uuid_000000000007fe45:
	mov %RBP, %R15
	add $-72, %R15
	mov -160(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	mov %RBP, %R15
	add $-144, %R15
	mov -160(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	movq -176(%RBP), %RAX
	movq -184(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe41
	movq $0, -168(%rbp)
	jmp uuid_000000000007fe43
uuid_000000000007fe41:
uuid_000000000007fe43:
	mov -192(%RBP),%RSP
	add $-192, %RSP
	movq -160(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -160(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007fe44
uuid_000000000007fe46:
	mov -168(%rbp), %RAX
	mov %rbp, %rsp
	sub $152, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsListTypeListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe52
	jmp uuid_000000000007fe54
uuid_000000000007fe52:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe4f
	jmp uuid_000000000007fe51
uuid_000000000007fe4f:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe4c
	jmp uuid_000000000007fe4e
uuid_000000000007fe4c:
	movb $1, -288(%rbp)
uuid_000000000007fe4e:
	mov -352(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007fe51:
	mov -304(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007fe54:
	mov -296(%RBP),%RSP
	add $-392, %RSP
	mov -288(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fe7d
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe6d
	jmp uuid_000000000007fe6f
uuid_000000000007fe6d:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe5b
	jmp uuid_000000000007fe5d
uuid_000000000007fe5b:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fe58
	jmp uuid_000000000007fe5a
uuid_000000000007fe58:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007fe55
	jmp uuid_000000000007fe57
uuid_000000000007fe55:
	movb $1, -560(%rbp)
uuid_000000000007fe57:
	mov -624(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007fe5a:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007fe5d:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fe6a
	jmp uuid_000000000007fe6c
uuid_000000000007fe6a:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007fe64
	jmp uuid_000000000007fe66
uuid_000000000007fe64:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007fe61
	jmp uuid_000000000007fe63
uuid_000000000007fe61:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007fe5e
	jmp uuid_000000000007fe60
uuid_000000000007fe5e:
	movb $1, -704(%rbp)
uuid_000000000007fe60:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007fe63:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007fe66:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fe67
	jmp uuid_000000000007fe69
uuid_000000000007fe67:
	movb $1, -496(%rbp)
uuid_000000000007fe69:
	mov -656(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007fe6c:
	mov -512(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007fe6f:
	mov -504(%RBP),%RSP
	add $-792, %RSP
	mov -496(%RBP), %R13B
	mov $1, %R14B
	cmpb %R14B, %R13B
	sete %R13B
	andq $1, %R13
	cmp $0, %R13
	jne uuid_000000000007fe7a
	push %RBP
	jmp uuid_000000000007fe77
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b556
	pushq $uuid_000000000007fe76
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007fe79
uuid_000000000007fe77:
uuid_000000000007fe79:
	mov -800(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007fe7c
uuid_000000000007fe7a:
	push %RBP
#call function == : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fe73
	jmp uuid_000000000007fe75
uuid_000000000007fe73:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007fe70
	jmp uuid_000000000007fe72
uuid_000000000007fe70:
	movq $1, -96(%rbp)
uuid_000000000007fe72:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007fe75:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007fe7c:
	mov -400(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007fe7f
uuid_000000000007fe7d:
	movq $1, -96(%rbp)
uuid_000000000007fe7f:
	mov -192(%RBP),%RSP
	add $-392, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
.data
uuid_000000000007b556:
	.ascii "Pattern Match Failure"
	.zero 1
uuid_000000000007b557:
	.ascii "File: LIB/default-stdlib.lm Line: 74 Column: 5"
	.zero 1
uuid_000000000007b5b8:
	.ascii "File: LIB/default-stdlib.lm Line: 90 Column: 5"
	.zero 1
uuid_000000000007b5c8:
	.ascii "()"
	.zero 1
uuid_000000000007b5d8:
	.ascii "("
	.zero 1
uuid_000000000007b5d9:
	.ascii " "
	.zero 1
uuid_000000000007b5da:
	.ascii ")"
	.zero 1
uuid_000000000007b5e1:
	.ascii "["
	.zero 1
uuid_000000000007b5e2:
	.ascii "]"
	.zero 1
uuid_000000000007b5e3:
	.ascii "File: LIB/default-stdlib.lm Line: 112 Column: 5"
	.zero 1
uuid_000000000007b5f0:
	.ascii " at "
	.zero 1
uuid_000000000007b5fc:
	.ascii "Unable to open file: "
	.zero 1
uuid_000000000007b5fd:
	.ascii "\n"
	.zero 1
uuid_000000000007b601:
	.ascii "File Read Error ["
	.zero 1
uuid_000000000007b602:
	.ascii "]: "
	.zero 1
uuid_000000000007b61b:
	.ascii "File: LIB/default-stdlib.lm Line: 347 Column: 5"
	.zero 1
uuid_000000000007b62b:
	.ascii "0"
	.zero 1
uuid_000000000007b62f:
	.ascii "-"
	.zero 1
uuid_000000000007b63f:
	.ascii "File: LIB/default-stdlib.lm Line: 456 Column: 8"
	.zero 1
uuid_000000000007b664:
	.ascii "1"
	.zero 1
uuid_000000000007b665:
	.ascii "2"
	.zero 1
uuid_000000000007b666:
	.ascii "3"
	.zero 1
uuid_000000000007b667:
	.ascii "4"
	.zero 1
uuid_000000000007b668:
	.ascii "5"
	.zero 1
uuid_000000000007b669:
	.ascii "6"
	.zero 1
uuid_000000000007b66a:
	.ascii "7"
	.zero 1
uuid_000000000007b66b:
	.ascii "8"
	.zero 1
uuid_000000000007b66c:
	.ascii "9"
	.zero 1
uuid_000000000007b66d:
	.ascii "a"
	.zero 1
uuid_000000000007b66e:
	.ascii "b"
	.zero 1
uuid_000000000007b66f:
	.ascii "c"
	.zero 1
uuid_000000000007b670:
	.ascii "d"
	.zero 1
uuid_000000000007b671:
	.ascii "e"
	.zero 1
uuid_000000000007b672:
	.ascii "f"
	.zero 1
uuid_000000000007b673:
	.ascii "File: LIB/default-stdlib.lm Line: 489 Column: 8"
	.zero 1
uuid_000000000007b6a7:
	.ascii ""
	.zero 1
malloc_SB_block_SB_head_CL_U64:
.zero 8
malloc_SB_block_SB_tail_CL_U64:
.zero 8
malloc_SB_first_SB_free_CL_U64:
.zero 8
malloc_SB_page_SB_tail_CL_U64:
.zero 8
malloc_SB_large_SB_size_CL_U64:
.zero 8
point_SB_of_SB_interest_CL_U64:
.zero 8
rc_SB_magic_SB_number_CL_U64:
.zero 8
assemble_SB_text_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_init_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_data_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_profile_SB_onexit_CL_SSCaseNumber3:
.zero 24
assemble_SB_final_CL_String:
.zero 8
assemble_SB_argv_SB_referenced_CL_U8:
.zero 8
main_SB_with_SB_argv_CL_U8:
.zero 8
main_SB_with_CL_U8:
.zero 8
config_SB_profile_SB_invocations_CL_U8:
.zero 8
config_SB_strict_CL_U8:
.zero 8
config_SB_preprocess_CL_U8:
.zero 8
config_SB_target_CL_String:
.zero 8
uuid_000000000007b71d:
	.ascii "tmp.s"
	.zero 1
config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1:
.zero 8
config_SB_mode_CL_CompileModeCompileModeCaseNumber0:
.zero 8
preprocess_SB_macros_CL_MacroListMacroListCaseNumber1:
.zero 168
ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1:
.zero 72
ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10:
.zero 72
global_SB_type_SB_context_CL_TContextTContextCaseNumber2:
.zero 120
global_SB_ctx_CL_FContextFContextCaseNumber1:
.zero 200
parse_SB_suffixes_CL_SfxListSfxListCaseNumber1:
.zero 48
stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1:
.zero 200
uuid_000000000007b722:
	.ascii "_EX_"
	.zero 1
uuid_000000000007b723:
	.ascii "_DL_"
	.zero 1
uuid_000000000007b724:
	.ascii "_MD_"
	.zero 1
uuid_000000000007b725:
	.ascii "_AM_"
	.zero 1
uuid_000000000007b726:
	.ascii "_ML_"
	.zero 1
uuid_000000000007b727:
	.ascii "_AD_"
	.zero 1
uuid_000000000007b728:
	.ascii "_SB_"
	.zero 1
uuid_000000000007b729:
	.ascii "_DT_"
	.zero 1
uuid_000000000007b72a:
	.ascii "_DV_"
	.zero 1
uuid_000000000007b72b:
	.ascii "_CL_"
	.zero 1
uuid_000000000007b72c:
	.ascii "_SC_"
	.zero 1
uuid_000000000007b72d:
	.ascii "_LT_"
	.zero 1
uuid_000000000007b72e:
	.ascii "_EQ_"
	.zero 1
uuid_000000000007b72f:
	.ascii "_GT_"
	.zero 1
uuid_000000000007b730:
	.ascii "_QM_"
	.zero 1
uuid_000000000007b731:
	.ascii "_AT_"
	.zero 1
uuid_000000000007b732:
	.ascii "_LB_"
	.zero 1
uuid_000000000007b733:
	.ascii "_RB_"
	.zero 1
uuid_000000000007b734:
	.ascii "_HT_"
	.zero 1
uuid_000000000007b735:
	.ascii "_US_"
	.zero 1
uuid_000000000007b736:
	.ascii "_TK_"
	.zero 1
uuid_000000000007b737:
	.ascii "_BR_"
	.zero 1
uuid_000000000007b738:
	.ascii "_TL_"
	.zero 1
uuid_000000000007b739:
	.ascii "File: SRC/mangle-identifier.lm Line: 10 Column: 8"
	.zero 1
uuid_000000000007b785:
	.ascii "?"
	.zero 1
uuid_000000000007b79e:
	.ascii "File: SRC/mangle-identifier.lm Line: 55 Column: 32"
	.zero 1
uuid_000000000007b7ae:
	.ascii "File: SRC/mangle-identifier.lm Line: 49 Column: 5"
	.zero 1
uuid_000000000007b7bb:
	.ascii "\\"
	.zero 1
uuid_000000000007b7bc:
	.ascii "Illegal Character: "
	.zero 1
uuid_000000000007b7bd:
	.ascii "Illegal Escape Sequence In String "
	.zero 1
uuid_000000000007b7be:
	.ascii "File: SRC/escape-string.lm Line: 12 Column: 11"
	.zero 1
uuid_000000000007b7e3:
	.ascii "\\\\\""
	.zero 1
uuid_000000000007b7e4:
	.ascii ";"
	.zero 1
uuid_000000000007b7e5:
	.ascii "\\\\\\\\"
	.zero 1
uuid_000000000007b7e6:
	.ascii "'"
	.zero 1
uuid_000000000007b7e7:
	.ascii "λ"
	.zero 1
uuid_000000000007b7e8:
	.ascii "\\\\n"
	.zero 1
uuid_000000000007b7e9:
	.ascii "#"
	.zero 1
uuid_000000000007b7ea:
	.ascii "	"
	.zero 1
uuid_000000000007b7eb:
	.ascii "File: SRC/escape-string.lm Line: 50 Column: 14"
	.zero 1
uuid_000000000007b80d:
	.ascii "\\\\"
	.zero 1
uuid_000000000007b811:
	.ascii "\\n"
	.zero 1
uuid_000000000007b812:
	.ascii "File: SRC/escape-string.lm Line: 45 Column: 8"
	.zero 1
uuid_000000000007b831:
	.ascii "File: SRC/escape-string.lm Line: 85 Column: 5"
	.zero 1
uuid_000000000007b84a:
	.ascii "as"
	.zero 1
uuid_000000000007b85d:
	.ascii "In Coercion\n"
	.zero 1
uuid_000000000007b85e:
	.ascii ":\n"
	.zero 1
uuid_000000000007b85f:
	.ascii "As: "
	.zero 1
uuid_000000000007b869:
	.ascii "In Function Application\n"
	.zero 1
uuid_000000000007b86a:
	.ascii "Return:\n"
	.zero 1
uuid_000000000007b86b:
	.ascii "File: SRC/error-formatting.lm Line: 12 Column: 5"
	.zero 1
uuid_000000000007b875:
	.ascii "."
	.zero 1
uuid_000000000007b87f:
	.ascii "File: SRC/is-variable.lm Line: 9 Column: 5"
	.zero 1
uuid_000000000007b913:
	.ascii "@"
	.zero 1
uuid_000000000007b917:
	.ascii "Used"
	.zero 1
uuid_000000000007b918:
	.ascii "Unused"
	.zero 1
uuid_000000000007b919:
	.ascii "Return"
	.zero 1
uuid_000000000007b91a:
	.ascii "Tail"
	.zero 1
uuid_000000000007b91b:
	.ascii "Call"
	.zero 1
uuid_000000000007b91c:
	.ascii "File: SRC/to-string.lm Line: 9 Column: 5"
	.zero 1
uuid_000000000007b940:
	.ascii ","
	.zero 1
uuid_000000000007b941:
	.ascii "File: SRC/to-string.lm Line: 27 Column: 5"
	.zero 1
uuid_000000000007b95a:
	.ascii "+"
	.zero 1
uuid_000000000007b96d:
	.ascii "..."
	.zero 1
uuid_000000000007b980:
	.ascii "<"
	.zero 1
uuid_000000000007b981:
	.ascii ">"
	.zero 1
uuid_000000000007b982:
	.ascii "File: SRC/to-string.lm Line: 46 Column: 5"
	.zero 1
uuid_000000000007b9f5:
	.ascii "File: SRC/is-equal.lm Line: 4 Column: 5"
	.zero 1
type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0:
.zero 128
uuid_000000000007ba11:
	.ascii "Nil"
	.zero 1
uuid_000000000007ba2d:
	.ascii "GlobalVariable"
	.zero 1
uuid_000000000007ba2e:
	.ascii "mov"
	.zero 1
uuid_000000000007ba2f:
	.ascii "Cons"
	.zero 1
uuid_000000000007ba4e:
	.ascii ":"
	.zero 1
uuid_000000000007ba79:
	.ascii "File: SRC/infer-expr.lm Line: 28 Column: 11"
	.zero 1
uuid_000000000007baaa:
	.ascii "File: SRC/infer-expr.lm Line: 57 Column: 14"
	.zero 1
uuid_000000000007baba:
	.ascii "gensym-label"
	.zero 1
uuid_000000000007bacd:
	.ascii "Label"
	.zero 1
uuid_000000000007bad7:
	.ascii "label"
	.zero 1
uuid_000000000007baea:
	.ascii "if"
	.zero 1
uuid_000000000007bb3c:
	.ascii "Reg8"
	.zero 1
uuid_000000000007bb40:
	.ascii "Reg16"
	.zero 1
uuid_000000000007bb44:
	.ascii "Reg32"
	.zero 1
uuid_000000000007bb48:
	.ascii "Reg64"
	.zero 1
uuid_000000000007bb4c:
	.ascii "File: SRC/infer-expr.lm Line: 89 Column: 11"
	.zero 1
uuid_000000000007bb56:
	.ascii "AsOnly"
	.zero 1
uuid_000000000007bb66:
	.ascii "sizeof"
	.zero 1
uuid_000000000007bb79:
	.ascii "U64"
	.zero 1
uuid_000000000007bb83:
	.ascii "File: SRC/infer-expr.lm Line: 117 Column: 11"
	.zero 1
uuid_000000000007bb87:
	.ascii "scope"
	.zero 1
uuid_000000000007bb9a:
	.ascii "open"
	.zero 1
uuid_000000000007bbad:
	.ascii "Array"
	.zero 1
uuid_000000000007bbe4:
	.ascii "push-deref"
	.zero 1
uuid_000000000007bbe5:
	.ascii "StackVariable"
	.zero 1
uuid_000000000007bbe6:
	.ascii "File: SRC/infer-expr.lm Line: 129 Column: 11"
	.zero 1
uuid_000000000007bc0e:
	.ascii "Variable Name Is Already Bound In Outer Scope"
	.zero 1
uuid_000000000007bc15:
	.ascii "Unable to infer type of expression"
	.zero 1
uuid_000000000007bc2e:
	.ascii "File: SRC/infer-expr.lm Line: 153 Column: 11"
	.zero 1
uuid_000000000007bc32:
	.ascii "del"
	.zero 1
uuid_000000000007bc48:
	.ascii "Rc"
	.zero 1
uuid_000000000007bc49:
	.ascii "inc"
	.zero 1
uuid_000000000007bc4a:
	.ascii "Tuple"
	.zero 1
uuid_000000000007bc57:
	.ascii "Constructor"
	.zero 1
uuid_000000000007bc58:
	.ascii "CaseNumber"
	.zero 1
uuid_000000000007bc59:
	.ascii "Sized"
	.zero 1
uuid_000000000007bc5a:
	.ascii "FieldsSized"
	.zero 1
uuid_000000000007bc5b:
	.ascii "push"
	.zero 1
uuid_000000000007bc5c:
	.ascii "File: SRC/infer-expr.lm Line: 193 Column: 14"
	.zero 1
uuid_000000000007bc93:
	.ascii "File: SRC/infer-expr.lm Line: 211 Column: 14"
	.zero 1
uuid_000000000007bc9a:
	.ascii "Arrow"
	.zero 1
uuid_000000000007bc9b:
	.ascii "cdecl::return"
	.zero 1
uuid_000000000007bcc3:
	.ascii "Unknown Term In Type Inference\n"
	.zero 1
uuid_000000000007bcc4:
	.ascii "File: SRC/infer-expr.lm Line: 8 Column: 5"
	.zero 1
alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1:
.zero 72
uuid_000000000007bd5e:
	.ascii "File: SRC/alias.lm Line: 11 Column: 8"
	.zero 1
uuid_000000000007bd62:
	.ascii "File: SRC/alias.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007bd96:
	.ascii "File: SRC/alias.lm Line: 29 Column: 8"
	.zero 1
uuid_000000000007bd9a:
	.ascii "File: SRC/alias.lm Line: 28 Column: 5"
	.zero 1
class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0:
.zero 80
is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0:
.zero 80
lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0:
.zero 80
uuid_000000000007bded:
	.ascii "Hook"
	.zero 1
uuid_000000000007bdee:
	.ascii "Duplicate Global Symbol "
	.zero 1
uuid_000000000007bdef:
	.ascii " : "
	.zero 1
class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0:
.zero 48
tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
unknown_SB_index_SB_of_SB_tag_CL_U64:
.zero 8
class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0:
.zero 64
uuid_000000000007be30:
	.ascii "Unexpected Class In index-class-of-tag: "
	.zero 1
uuid_000000000007be31:
	.ascii "File: SRC/class-of-tag.lm Line: 6 Column: 5"
	.zero 1
class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0:
.zero 96
uuid_000000000007be70:
	.ascii "Tag"
	.zero 1
uuid_000000000007be8c:
	.ascii "File: SRC/fields-of-tag.lm Line: 17 Column: 64"
	.zero 1
uuid_000000000007be93:
	.ascii "Invalid Tag In fields-of-tag "
	.zero 1
uuid_000000000007be94:
	.ascii "File: SRC/fields-of-tag.lm Line: 15 Column: 5"
	.zero 1
uuid_000000000007be9b:
	.ascii "Fields"
	.zero 1
type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0:
.zero 64
type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0:
.zero 96
uuid_000000000007beb3:
	.ascii "ERROR: set-type-fields\n"
	.zero 1
uuid_000000000007beb4:
	.ascii "File: SRC/type-complex-fields.lm Line: 6 Column: 5"
	.zero 1
uuid_000000000007bedc:
	.ascii "File: SRC/get-vararg-inner.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bf0a:
	.ascii "File: SRC/is-constructor.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bf2c:
	.ascii "File: SRC/is-constructor.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007bf48:
	.ascii "File: SRC/is-constructor.lm Line: 28 Column: 5"
	.zero 1
uuid_000000000007bfaf:
	.ascii "Field"
	.zero 1
uuid_000000000007bfce:
	.ascii "File: SRC/is-open.lm Line: 16 Column: 11"
	.zero 1
uuid_000000000007bfd5:
	.ascii "File: SRC/is-open.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c00c:
	.ascii "File: SRC/is-parameterized.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c03a:
	.ascii "File: SRC/is-sized.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c056:
	.ascii "Constant"
	.zero 1
uuid_000000000007c08d:
	.ascii "File: SRC/has-representation.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c0a6:
	.ascii "File: SRC/guess-representation.lm Line: 5 Column: 8"
	.zero 1
uuid_000000000007c0bc:
	.ascii "LocalVariable"
	.zero 1
uuid_000000000007c0db:
	.ascii "File: SRC/deep-hash.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c0f3:
	.ascii "File: SRC/deep-hash.lm Line: 26 Column: 5"
	.zero 1
uuid_000000000007c0fa:
	.ascii " != "
	.zero 1
uuid_000000000007c0fb:
	.ascii "Type Ascription Inequality"
	.zero 1
uuid_000000000007c114:
	.ascii "File: SRC/typeof.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c124:
	.ascii "Var"
	.zero 1
uuid_000000000007c12e:
	.ascii "Lit"
	.zero 1
uuid_000000000007c17a:
	.ascii "App"
	.zero 1
uuid_000000000007c187:
	.ascii "Abs"
	.zero 1
uuid_000000000007c188:
	.ascii "File: SRC/to-s.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c1b3:
	.ascii "File: SRC/p.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c1cc:
	.ascii "File: SRC/and.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c1e5:
	.ascii "File: SRC/union.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c1fe:
	.ascii "File: SRC/union.lm Line: 21 Column: 8"
	.zero 1
uuid_000000000007c217:
	.ascii "program"
	.zero 1
uuid_000000000007c218:
	.ascii "File: SRC/union.lm Line: 36 Column: 28"
	.zero 1
uuid_000000000007c22b:
	.ascii "File: SRC/tag-of.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c261:
	.ascii "File: SRC/can-unify.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c27d:
	.ascii "Meta"
	.zero 1
uuid_000000000007c3ef:
	.ascii "GT"
	.zero 1
uuid_000000000007c426:
	.ascii "File: SRC/can-unify.lm Line: 21 Column: 5"
	.zero 1
uuid_000000000007c4c9:
	.ascii "File: SRC/unify.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007c509:
	.ascii "File: SRC/unify.lm Line: 47 Column: 11"
	.zero 1
uuid_000000000007c669:
	.ascii "File: SRC/unify.lm Line: 12 Column: 5"
	.zero 1
uuid_000000000007c6c0:
	.ascii "File: SRC/unify.lm Line: 130 Column: 5"
	.zero 1
uuid_000000000007c6ed:
	.ascii "File: SRC/fields-of-type.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c7a2:
	.ascii "File: SRC/sizeof-type.lm Line: 25 Column: 11"
	.zero 1
uuid_000000000007c7b5:
	.ascii "Unexpected Type sizeof-type "
	.zero 1
uuid_000000000007c7b6:
	.ascii "File: SRC/sizeof-type.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c7ea:
	.ascii "File: SRC/has-infinite.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007c842:
	.ascii "File: SRC/has-infinite.lm Line: 26 Column: 5"
	.zero 1
uuid_000000000007c863:
	.ascii "File: SRC/has-forward.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c8b4:
	.ascii "File: SRC/has-forward.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007c8c7:
	.ascii "AL"
	.zero 1
uuid_000000000007c8c8:
	.ascii "BL"
	.zero 1
uuid_000000000007c8c9:
	.ascii "CL"
	.zero 1
uuid_000000000007c8ca:
	.ascii "DL"
	.zero 1
uuid_000000000007c8cb:
	.ascii "SIL"
	.zero 1
uuid_000000000007c8cc:
	.ascii "DIL"
	.zero 1
uuid_000000000007c8cd:
	.ascii "BPL"
	.zero 1
uuid_000000000007c8ce:
	.ascii "SPL"
	.zero 1
uuid_000000000007c8cf:
	.ascii "R8B"
	.zero 1
uuid_000000000007c8d0:
	.ascii "R9B"
	.zero 1
uuid_000000000007c8d1:
	.ascii "R10B"
	.zero 1
uuid_000000000007c8d2:
	.ascii "R11B"
	.zero 1
uuid_000000000007c8d3:
	.ascii "R12B"
	.zero 1
uuid_000000000007c8d4:
	.ascii "R13B"
	.zero 1
uuid_000000000007c8d5:
	.ascii "R14B"
	.zero 1
uuid_000000000007c8d6:
	.ascii "R15B"
	.zero 1
uuid_000000000007c8d7:
	.ascii "File: SRC/is-reg8.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c91d:
	.ascii "File: SRC/is-reg8.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007c927:
	.ascii "AX"
	.zero 1
uuid_000000000007c928:
	.ascii "BX"
	.zero 1
uuid_000000000007c929:
	.ascii "CX"
	.zero 1
uuid_000000000007c92a:
	.ascii "DX"
	.zero 1
uuid_000000000007c92b:
	.ascii "SI"
	.zero 1
uuid_000000000007c92c:
	.ascii "DI"
	.zero 1
uuid_000000000007c92d:
	.ascii "BP"
	.zero 1
uuid_000000000007c92e:
	.ascii "SP"
	.zero 1
uuid_000000000007c92f:
	.ascii "R8W"
	.zero 1
uuid_000000000007c930:
	.ascii "R9W"
	.zero 1
uuid_000000000007c931:
	.ascii "R10W"
	.zero 1
uuid_000000000007c932:
	.ascii "R11W"
	.zero 1
uuid_000000000007c933:
	.ascii "R12W"
	.zero 1
uuid_000000000007c934:
	.ascii "R13W"
	.zero 1
uuid_000000000007c935:
	.ascii "R14W"
	.zero 1
uuid_000000000007c936:
	.ascii "R15W"
	.zero 1
uuid_000000000007c937:
	.ascii "File: SRC/is-reg16.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c97d:
	.ascii "File: SRC/is-reg16.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007c987:
	.ascii "EAX"
	.zero 1
uuid_000000000007c988:
	.ascii "EBX"
	.zero 1
uuid_000000000007c989:
	.ascii "ECX"
	.zero 1
uuid_000000000007c98a:
	.ascii "EDX"
	.zero 1
uuid_000000000007c98b:
	.ascii "ESI"
	.zero 1
uuid_000000000007c98c:
	.ascii "EDI"
	.zero 1
uuid_000000000007c98d:
	.ascii "EBP"
	.zero 1
uuid_000000000007c98e:
	.ascii "ESP"
	.zero 1
uuid_000000000007c98f:
	.ascii "R8D"
	.zero 1
uuid_000000000007c990:
	.ascii "R9D"
	.zero 1
uuid_000000000007c991:
	.ascii "R10D"
	.zero 1
uuid_000000000007c992:
	.ascii "R11D"
	.zero 1
uuid_000000000007c993:
	.ascii "R12D"
	.zero 1
uuid_000000000007c994:
	.ascii "R13D"
	.zero 1
uuid_000000000007c995:
	.ascii "R14D"
	.zero 1
uuid_000000000007c996:
	.ascii "R15D"
	.zero 1
uuid_000000000007c997:
	.ascii "File: SRC/is-reg32.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c9dd:
	.ascii "File: SRC/is-reg32.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007c9e7:
	.ascii "RAX"
	.zero 1
uuid_000000000007c9e8:
	.ascii "RBX"
	.zero 1
uuid_000000000007c9e9:
	.ascii "RCX"
	.zero 1
uuid_000000000007c9ea:
	.ascii "RDX"
	.zero 1
uuid_000000000007c9eb:
	.ascii "RSI"
	.zero 1
uuid_000000000007c9ec:
	.ascii "RDI"
	.zero 1
uuid_000000000007c9ed:
	.ascii "RBP"
	.zero 1
uuid_000000000007c9ee:
	.ascii "RSP"
	.zero 1
uuid_000000000007c9ef:
	.ascii "R8"
	.zero 1
uuid_000000000007c9f0:
	.ascii "R9"
	.zero 1
uuid_000000000007c9f1:
	.ascii "R10"
	.zero 1
uuid_000000000007c9f2:
	.ascii "R11"
	.zero 1
uuid_000000000007c9f3:
	.ascii "R12"
	.zero 1
uuid_000000000007c9f4:
	.ascii "R13"
	.zero 1
uuid_000000000007c9f5:
	.ascii "R14"
	.zero 1
uuid_000000000007c9f6:
	.ascii "R15"
	.zero 1
uuid_000000000007c9f7:
	.ascii "File: SRC/is-reg64.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ca3d:
	.ascii "File: SRC/is-reg64.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007ca53:
	.ascii "File: SRC/with-tag.lm Line: 5 Column: 8"
	.zero 1
uuid_000000000007ca7b:
	.ascii "File: SRC/with-size.lm Line: 8 Column: 5"
	.zero 1
uuid_000000000007ca8d:
	.ascii "File: SRC/with-size.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007cad3:
	.ascii "File: SRC/with-size.lm Line: 30 Column: 5"
	.zero 1
uuid_000000000007caf8:
	.ascii "File: SRC/with-fields.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007cb23:
	.ascii "File: SRC/without-tag.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007cb51:
	.ascii "File: SRC/without-tag.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007cb6f:
	.ascii "File: SRC/without-tag.lm Line: 27 Column: 5"
	.zero 1
uuid_000000000007cb97:
	.ascii "File: SRC/without-constructor.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007cbaf:
	.ascii "File: SRC/without-representation.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007cbd1:
	.ascii "Literal"
	.zero 1
uuid_000000000007cc29:
	.ascii "File: SRC/without-representation.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007cc5c:
	.ascii "File: SRC/without-size-unless-class.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007cc84:
	.ascii "File: SRC/without-size-unless-class.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007ccc4:
	.ascii "File: SRC/without-size-unless-class.lm Line: 46 Column: 5"
	.zero 1
uuid_000000000007cce2:
	.ascii "File: SRC/without-size.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007cd1c:
	.ascii "File: SRC/without-size.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007cd47:
	.ascii "File: SRC/with-only-tag.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cd6f:
	.ascii "File: SRC/with-only-class.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cd84:
	.ascii "File: SRC/with-only-representation.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cdfd:
	.ascii "File: SRC/with-only-representation.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007ce34:
	.ascii "File: SRC/normalize.lm Line: 12 Column: 5"
	.zero 1
uuid_000000000007ce6e:
	.ascii "Malformed Type Definition"
	.zero 1
uuid_000000000007ce6f:
	.ascii "File: SRC/type-of-s.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ce97:
	.ascii "Mark Field "
	.zero 1
uuid_000000000007ce98:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007ceba:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 25 Column: 11"
	.zero 1
uuid_000000000007cedc:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cf34:
	.ascii "Unknown LHS"
	.zero 1
uuid_000000000007cf35:
	.ascii "File: SRC/typeof-lhs.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cf65:
	.ascii "File: SRC/cons-head.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cf87:
	.ascii "File: SRC/cons-tail.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cf97:
	.ascii "File: SRC/parameter-number.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007cfb4:
	.ascii "File: SRC/parameter-number.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007cfbe:
	.ascii "Function Application Yielded No Matches\n"
	.zero 1
uuid_000000000007cfbf:
	.ascii "\nWith Argument : "
	.zero 1
uuid_000000000007cfc0:
	.ascii "Options: "
	.zero 1
uuid_000000000007cfc4:
	.ascii "Function Application Yielded An Irreducible Plurality Of Matches\n"
	.zero 1
uuid_000000000007cfc5:
	.ascii "With Argument "
	.zero 1
uuid_000000000007cfc6:
	.ascii "Matched "
	.zero 1
uuid_000000000007cfd0:
	.ascii "File: SRC/apply.lm Line: 31 Column: 11"
	.zero 1
uuid_000000000007cffe:
	.ascii "Application Did Not Close Before Specialization:\n"
	.zero 1
uuid_000000000007cfff:
	.ascii "Function "
	.zero 1
uuid_000000000007d000:
	.ascii "Argument "
	.zero 1
uuid_000000000007d007:
	.ascii "Function Not Simple Arrow: "
	.zero 1
uuid_000000000007d008:
	.ascii "File: SRC/apply.lm Line: 43 Column: 8"
	.zero 1
uuid_000000000007d00f:
	.ascii "File: SRC/apply.lm Line: 42 Column: 5"
	.zero 1
uuid_000000000007d03d:
	.ascii "File: SRC/apply.lm Line: 81 Column: 33"
	.zero 1
uuid_000000000007d077:
	.ascii "File: SRC/apply.lm Line: 72 Column: 5"
	.zero 1
uuid_000000000007d0bf:
	.ascii "File: SRC/apply-plural.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d0d9:
	.ascii "File: SRC/reduce-plural.lm Line: 5 Column: 41"
	.zero 1
uuid_000000000007d0fb:
	.ascii "File: SRC/reduce-plural.lm Line: 19 Column: 11"
	.zero 1
uuid_000000000007d105:
	.ascii "File: SRC/reduce-plural.lm Line: 15 Column: 27"
	.zero 1
uuid_000000000007d124:
	.ascii "File: SRC/reduce-plural.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007d12e:
	.ascii "File: SRC/reduce-plural.lm Line: 33 Column: 27"
	.zero 1
uuid_000000000007d14a:
	.ascii "Blob"
	.zero 1
uuid_000000000007d167:
	.ascii "File: SRC/try-specialize.lm Line: 17 Column: 20"
	.zero 1
uuid_000000000007d177:
	.ascii "File: SRC/try-specialize.lm Line: 5 Column: 35"
	.zero 1
uuid_000000000007d1b1:
	.ascii "File: SRC/unify-hint.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d1c6:
	.ascii "File: SRC/unify-hint.lm Line: 24 Column: 5"
	.zero 1
uuid_000000000007d1d0:
	.ascii "|"
	.zero 1
uuid_000000000007d207:
	.ascii "File: SRC/infer-type-definition.lm Line: 18 Column: 14"
	.zero 1
uuid_000000000007d21a:
	.ascii "File: SRC/infer-type-definition.lm Line: 25 Column: 17"
	.zero 1
uuid_000000000007d224:
	.ascii "File: SRC/infer-type-definition.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007d236:
	.ascii "File: SRC/arity.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d246:
	.ascii "File: SRC/arity.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007d268:
	.ascii "File: SRC/cons-arity.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d290:
	.ascii "File: SRC/implicit-tail.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d297:
	.ascii "Unknown Referenced Variable"
	.zero 1
uuid_000000000007d2b6:
	.ascii "File: SRC/typeof-var-raw.lm Line: 4 Column: 28"
	.zero 1
types_SB_have_SB_changed_CL_U8:
.zero 8
uuid_000000000007d2c9:
	.ascii "File: SRC/typecheck.lm Line: 7 Column: 25"
	.zero 1
uuid_000000000007d2d9:
	.ascii "File: SRC/typecheck.lm Line: 14 Column: 42"
	.zero 1
uuid_000000000007d300:
	.ascii "File: SRC/typecheck.lm Line: 22 Column: 43"
	.zero 1
uuid_000000000007d343:
	.ascii "File: SRC/substitute.lm Line: 4 Column: 27"
	.zero 1
uuid_000000000007d35e:
	.ascii "File: SRC/substitute.lm Line: 27 Column: 5"
	.zero 1
uuid_000000000007d37d:
	.ascii "File: SRC/substitute.lm Line: 44 Column: 34"
	.zero 1
uuid_000000000007d399:
	.ascii "File: SRC/substitute.lm Line: 41 Column: 5"
	.zero 1
uuid_000000000007d3b1:
	.ascii "File: SRC/substitute.lm Line: 73 Column: 5"
	.zero 1
uuid_000000000007d3fa:
	.ascii "File: SRC/substitute.lm Line: 90 Column: 34"
	.zero 1
uuid_000000000007d41c:
	.ascii "File: SRC/substitute.lm Line: 87 Column: 5"
	.zero 1
uuid_000000000007d4a1:
	.ascii "Unexpected Substitute LHS"
	.zero 1
uuid_000000000007d4a2:
	.ascii "File: SRC/substitute.lm Line: 128 Column: 5"
	.zero 1
uuid_000000000007d4f1:
	.ascii "File: SRC/substitute.lm Line: 168 Column: 34"
	.zero 1
uuid_000000000007d537:
	.ascii "File: SRC/substitute.lm Line: 187 Column: 34"
	.zero 1
uuid_000000000007d589:
	.ascii "Unexpected Substitution Term:"
	.zero 1
uuid_000000000007d58a:
	.ascii "File: SRC/substitute.lm Line: 159 Column: 5"
	.zero 1
uuid_000000000007d5c7:
	.ascii "File: SRC/substitute.lm Line: 247 Column: 34"
	.zero 1
uuid_000000000007d5d7:
	.ascii "File: SRC/substitute.lm Line: 243 Column: 5"
	.zero 1
uuid_000000000007d605:
	.ascii "File: SRC/specialize.lm Line: 14 Column: 20"
	.zero 1
uuid_000000000007d612:
	.ascii "File: SRC/specialize.lm Line: 7 Column: 38"
	.zero 1
uuid_000000000007d631:
	.ascii "File: SRC/mark-constructor-flat-parameters.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d662:
	.ascii "File: SRC/mark-constructor-flat-parameters.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007d68a:
	.ascii "Size Of Type Cannot Be Determined Due To Forward Reference: "
	.zero 1
uuid_000000000007d68e:
	.ascii "Size Of Type Is Infinite: "
	.zero 1
uuid_000000000007d692:
	.ascii "File: SRC/infer-type-constructor.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d6b7:
	.ascii "File: SRC/infer-global-context.lm Line: 9 Column: 11"
	.zero 1
uuid_000000000007d703:
	.ascii "Hooks Must Not Return Values."
	.zero 1
uuid_000000000007d746:
	.ascii "Global Bindings Must Be Ascripted"
	.zero 1
uuid_000000000007d747:
	.ascii "File: SRC/infer-global-context.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d760:
	.ascii "File: SRC/assert-well-typed.lm Line: 3 Column: 26"
	.zero 1
uuid_000000000007d82d:
	.ascii "set"
	.zero 1
uuid_000000000007d8a9:
	.ascii "Unknown Term In Assert Well Typed "
	.zero 1
uuid_000000000007d8aa:
	.ascii "File: SRC/assert-well-typed.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007d94a:
	.ascii "Invalid LHS"
	.zero 1
uuid_000000000007d94b:
	.ascii "File: SRC/infer-ctx.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d963:
	.ascii "File: SRC/infer-tctx.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d982:
	.ascii "File: SRC/infer-tctx.lm Line: 15 Column: 5"
	.zero 1
uuid_000000000007d98f:
	.ascii "	mov $60, %rax\n"
	.zero 1
uuid_000000000007d990:
	.ascii "	mov $0, %rdi\n"
	.zero 1
uuid_000000000007d991:
	.ascii "	syscall\n"
	.zero 1
uuid_000000000007d992:
	.ascii ".data\n"
	.zero 1
uuid_000000000007d993:
	.ascii ".global _start\n"
	.zero 1
uuid_000000000007d994:
	.ascii ".text\n"
	.zero 1
uuid_000000000007d995:
	.ascii "_start:\n"
	.zero 1
uuid_000000000007d996:
	.ascii "	mov %rsp,%rbp\n"
	.zero 1
uuid_000000000007d997:
	.ascii "	mov %rbp,%rsp\n"
	.zero 1
uuid_000000000007d99b:
	.ascii "	popq %r8\n"
	.zero 1
uuid_000000000007d99c:
	.ascii "	movq %rsp, %r9\n"
	.zero 1
uuid_000000000007d9a0:
	.ascii "	push %rbp\n"
	.zero 1
uuid_000000000007d9a1:
	.ascii "	mov %rsp, %rbp\n"
	.zero 1
uuid_000000000007d9a2:
	.ascii "	pushq %r8\n"
	.zero 1
uuid_000000000007d9a3:
	.ascii "	pushq %r9\n"
	.zero 1
uuid_000000000007d9a7:
	.ascii "	call main\n"
	.zero 1
uuid_000000000007d9a8:
	.ascii "	mov %rbp, %rsp\n"
	.zero 1
uuid_000000000007d9a9:
	.ascii "	pop %rbp\n"
	.zero 1
uuid_000000000007d9ad:
	.ascii "File: SRC/compile.lm Line: 2 Column: 20"
	.zero 1
uuid_000000000007d9f0:
	.ascii "fragment-type"
	.zero 1
uuid_000000000007d9f1:
	.ascii "Function"
	.zero 1
uuid_000000000007d9f2:
	.ascii "File: SRC/compile-blob.lm Line: 10 Column: 11"
	.zero 1
uuid_000000000007da02:
	.ascii "File: SRC/compile-blob.lm Line: 4 Column: 39"
	.zero 1
uuid_000000000007da57:
	.ascii "expression"
	.zero 1
uuid_000000000007da58:
	.ascii "File: SRC/compile-blob.lm Line: 31 Column: 39"
	.zero 1
uuid_000000000007da86:
	.ascii "main"
	.zero 1
uuid_000000000007da8a:
	.ascii "Global"
	.zero 1
uuid_000000000007da8b:
	.ascii "->"
	.zero 1
uuid_000000000007da95:
	.ascii "File: SRC/compile-gnu.lm Line: 19 Column: 17"
	.zero 1
uuid_000000000007dabd:
	.ascii "File: SRC/compile-gnu.lm Line: 4 Column: 39"
	.zero 1
uuid_000000000007dad9:
	.ascii "File: SRC/compile-program-ordered.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007db0a:
	.ascii "File: SRC/compile-program-ordered.lm Line: 11 Column: 5"
	.zero 1
uuid_000000000007db47:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 15 Column: 14"
	.zero 1
uuid_000000000007db51:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 11 Column: 27"
	.zero 1
uuid_000000000007db58:
	.ascii "Context::lookup "
	.zero 1
uuid_000000000007db59:
	.ascii "\nCandidates:\n"
	.zero 1
uuid_000000000007db6c:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 45 Column: 30"
	.zero 1
uuid_000000000007db73:
	.ascii "Context::lookup Could Not Find Symbol"
	.zero 1
uuid_000000000007dbc1:
	.ascii "File: SRC/fragment-context::lookups.lm Line: 14 Column: 14"
	.zero 1
uuid_000000000007dbcb:
	.ascii "File: SRC/fragment-context::lookups.lm Line: 10 Column: 27"
	.zero 1
uuid_000000000007dbd2:
	.ascii "Context::lookups "
	.zero 1
uuid_000000000007dbe8:
	.ascii "File: SRC/fragment-context::lookup-vararg.lm Line: 4 Column: 27"
	.zero 1
uuid_000000000007dc40:
	.ascii "File: SRC/with-location.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007dc6b:
	.ascii "File: SRC/with-location.lm Line: 57 Column: 5"
	.zero 1
uuid_000000000007dcb7:
	.ascii "File: SRC/without-location.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007dce2:
	.ascii "File: SRC/without-location.lm Line: 52 Column: 5"
	.zero 1
uuid_000000000007dcf2:
	.ascii "File: SRC/with-key.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007dcf6:
	.ascii "Unknown"
	.zero 1
uuid_000000000007dd48:
	.ascii "File: SRC/location-of.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007dd6d:
	.ascii "File: SRC/unique.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007dd7d:
	.ascii "File: SRC/print-verbose.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007dd90:
	.ascii "File: SRC/non-zero.lm Line: 4 Column: 5"
	.zero 1
already_SB_tokenized_CL_ListStringListStringCaseNumber1:
.zero 24
uuid_000000000007dda6:
	.ascii "File: SRC/tokenize.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007ddb4:
	.ascii "File: SRC/tokenize.lm Line: 25 Column: 8"
	.zero 1
uuid_000000000007de19:
	.ascii "File: SRC/tokenize.lm Line: 35 Column: 8"
	.zero 1
uuid_000000000007de43:
	.ascii "Hanging Parentheses In File: "
	.zero 1
uuid_000000000007de44:
	.ascii " Count: "
	.zero 1
uuid_000000000007de5a:
	.ascii "File: SRC/is-nil.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007de6d:
	.ascii "File: SRC/is-seq.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007de86:
	.ascii "File: SRC/is-arrow.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007dea2:
	.ascii "File: SRC/is-hook.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007debe:
	.ascii "File: SRC/is-blob.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007deda:
	.ascii "File: SRC/is-cons.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007deed:
	.ascii "ImpureCtx"
	.zero 1
uuid_000000000007def7:
	.ascii "File: SRC/is-impure-ctx.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007df0a:
	.ascii "String"
	.zero 1
uuid_000000000007df14:
	.ascii "File: SRC/is-string.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007df27:
	.ascii "OntoStack"
	.zero 1
uuid_000000000007df43:
	.ascii "File: SRC/is-onto-stack.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007df56:
	.ascii "ImpureOffset"
	.zero 1
uuid_000000000007df72:
	.ascii "File: SRC/is-impure-offset.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007df85:
	.ascii "BranchConditional"
	.zero 1
uuid_000000000007df8f:
	.ascii "File: SRC/is-branchconditional.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007dfa2:
	.ascii "File: SRC/plus.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007dfb8:
	.ascii "File: SRC/print.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007dfc8:
	.ascii " = "
	.zero 1
uuid_000000000007dfc9:
	.ascii ";\n"
	.zero 1
uuid_000000000007dfca:
	.ascii "File: SRC/print.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007dfe3:
	.ascii "File: SRC/print.lm Line: 25 Column: 5"
	.zero 1
uuid_000000000007dfed:
	.ascii "EOF"
	.zero 1
uuid_000000000007e015:
	.ascii "type "
	.zero 1
uuid_000000000007e01f:
	.ascii " := "
	.zero 1
uuid_000000000007e03e:
	.ascii "File: SRC/print.lm Line: 40 Column: 5"
	.zero 1
uuid_000000000007e060:
	.ascii "Fragment Context:\n"
	.zero 1
uuid_000000000007e070:
	.ascii "File: SRC/print.lm Line: 84 Column: 27"
	.zero 1
uuid_000000000007e08c:
	.ascii "Fragment\n"
	.zero 1
uuid_000000000007e08d:
	.ascii "	Offset = "
	.zero 1
uuid_000000000007e09a:
	.ascii "File: SRC/print.lm Line: 99 Column: 33"
	.zero 1
uuid_000000000007e0a1:
	.ascii "File: SRC/print.lm Line: 94 Column: 5"
	.zero 1
uuid_000000000007e0ae:
	.ascii "File: SRC/print.lm Line: 111 Column: 5"
	.zero 1
uuid_000000000007e0c1:
	.ascii "In File "
	.zero 1
uuid_000000000007e0c2:
	.ascii " Line "
	.zero 1
uuid_000000000007e0c3:
	.ascii " Column "
	.zero 1
uuid_000000000007e0c4:
	.ascii "File: SRC/print.lm Line: 122 Column: 5"
	.zero 1
uuid_000000000007e0e0:
	.ascii " +\n"
	.zero 1
uuid_000000000007e0e1:
	.ascii " + "
	.zero 1
uuid_000000000007e0ee:
	.ascii "File: SRC/print.lm Line: 135 Column: 29"
	.zero 1
uuid_000000000007e112:
	.ascii "File: SRC/print.lm Line: 159 Column: 35"
	.zero 1
uuid_000000000007e125:
	.ascii "File: SRC/reverse.lm Line: 4 Column: 26"
	.zero 1
uuid_000000000007e13b:
	.ascii "(Variable "
	.zero 1
uuid_000000000007e145:
	.ascii "(Literal "
	.zero 1
uuid_000000000007e155:
	.ascii "(Type ("
	.zero 1
uuid_000000000007e156:
	.ascii "))"
	.zero 1
uuid_000000000007e160:
	.ascii "(Global ("
	.zero 1
uuid_000000000007e16a:
	.ascii "(App ("
	.zero 1
uuid_000000000007e177:
	.ascii "(Lambda ("
	.zero 1
uuid_000000000007e18a:
	.ascii "File: SRC/serialize-ast.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007e1c3:
	.ascii "File: SRC/serialize-ast.lm Line: 59 Column: 43"
	.zero 1
uuid_000000000007e1cd:
	.ascii "(Variable ?)"
	.zero 1
uuid_000000000007e1dd:
	.ascii "(Literal And) "
	.zero 1
uuid_000000000007e1f0:
	.ascii ") "
	.zero 1
uuid_000000000007e1f1:
	.ascii "File: SRC/serialize-ast.lm Line: 72 Column: 37"
	.zero 1
uuid_000000000007e219:
	.ascii "File: SRC/slot.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007e238:
	.ascii "File: SRC/slot.lm Line: 30 Column: 14"
	.zero 1
uuid_000000000007e24e:
	.ascii "File: SRC/slot.lm Line: 26 Column: 5"
	.zero 1
uuid_SB_counter_CL_U64:
.zero 8
uuid_000000000007e258:
	.ascii "uuid_"
	.zero 1
uuid_000000000007e26b:
	.ascii "File: SRC/var-name-if-var.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e2a3:
	.ascii "File: SRC/parse-lambda.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007e2c7:
	.ascii "File: SRC/parse-lambda.lm Line: 16 Column: 38"
	.zero 1
uuid_000000000007e2d4:
	.ascii "File: SRC/parse-lambda.lm Line: 14 Column: 5"
	.zero 1
uuid_000000000007e2f6:
	.ascii "File: SRC/parse-lambda.lm Line: 33 Column: 14"
	.zero 1
uuid_000000000007e303:
	.ascii "Expected Dot For Lambda Body\n"
	.zero 1
uuid_000000000007e30d:
	.ascii "File: SRC/parse-lambda.lm Line: 30 Column: 8"
	.zero 1
uuid_000000000007e357:
	.ascii "File: SRC/parse-many-expressions.lm Line: 18 Column: 14"
	.zero 1
uuid_000000000007e35b:
	.ascii "File: SRC/parse-many-expressions.lm Line: 6 Column: 8"
	.zero 1
uuid_000000000007e38a:
	.ascii "File: SRC/parse-one-expression.lm Line: 12 Column: 11"
	.zero 1
uuid_000000000007e3a3:
	.ascii "Unexpected Closing Parentheses"
	.zero 1
uuid_000000000007e3c2:
	.ascii "File: SRC/parse-one-expression.lm Line: 24 Column: 11"
	.zero 1
uuid_000000000007e3f0:
	.ascii "File: SRC/parse-one-expression.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007e41a:
	.ascii "macro"
	.zero 1
uuid_000000000007e44b:
	.ascii "File: SRC/parse-toplevel.lm Line: 18 Column: 26"
	.zero 1
uuid_000000000007e452:
	.ascii "File: SRC/parse-toplevel.lm Line: 14 Column: 20"
	.zero 1
uuid_000000000007e456:
	.ascii "File: SRC/parse-toplevel.lm Line: 11 Column: 14"
	.zero 1
uuid_000000000007e45a:
	.ascii "meta"
	.zero 1
uuid_000000000007e479:
	.ascii "File: SRC/parse-toplevel.lm Line: 36 Column: 14"
	.zero 1
uuid_000000000007e47d:
	.ascii "type"
	.zero 1
uuid_000000000007e493:
	.ascii "fragment"
	.zero 1
uuid_000000000007e4bb:
	.ascii "File: SRC/parse-toplevel.lm Line: 50 Column: 34"
	.zero 1
uuid_000000000007e4bf:
	.ascii "File: SRC/parse-toplevel.lm Line: 48 Column: 14"
	.zero 1
uuid_000000000007e4ea:
	.ascii "File: SRC/parse-toplevel.lm Line: 70 Column: 34"
	.zero 1
uuid_000000000007e4ee:
	.ascii "File: SRC/parse-toplevel.lm Line: 68 Column: 14"
	.zero 1
uuid_000000000007e51c:
	.ascii "suffix"
	.zero 1
uuid_000000000007e532:
	.ascii "atom"
	.zero 1
uuid_000000000007e57a:
	.ascii "size"
	.zero 1
uuid_000000000007e5a5:
	.ascii "import"
	.zero 1
uuid_000000000007e5d9:
	.ascii "zero"
	.zero 1
uuid_000000000007e5ef:
	.ascii "non-zero"
	.zero 1
uuid_000000000007e5f0:
	.ascii "t"
	.zero 1
uuid_000000000007e5f1:
	.ascii "!="
	.zero 1
uuid_000000000007e5f2:
	.ascii ".0"
	.zero 1
uuid_000000000007e5f3:
	.ascii ":="
	.zero 1
uuid_000000000007e61b:
	.ascii "File: SRC/parse-toplevel.lm Line: 150 Column: 14"
	.zero 1
uuid_000000000007e628:
	.ascii "File: SRC/parse-toplevel.lm Line: 162 Column: 14"
	.zero 1
uuid_000000000007e62c:
	.ascii "File: SRC/parse-toplevel.lm Line: 5 Column: 8"
	.zero 1
uuid_000000000007e653:
	.ascii "File: SRC/parse-type-comma-sep.lm Line: 7 Column: 8"
	.zero 1
uuid_000000000007e686:
	.ascii "File: SRC/parse-type-single.lm Line: 9 Column: 11"
	.zero 1
uuid_000000000007e690:
	.ascii "File: SRC/parse-type-single.lm Line: 59 Column: 11"
	.zero 1
uuid_000000000007e6b2:
	.ascii "Unexpected Parameterized Type: "
	.zero 1
uuid_000000000007e6b3:
	.ascii "File: SRC/parse-type-single.lm Line: 86 Column: 25"
	.zero 1
uuid_000000000007e6bd:
	.ascii "File: SRC/parse-type-single.lm Line: 68 Column: 14"
	.zero 1
uuid_000000000007e6dd:
	.ascii "File: SRC/parse-type.lm Line: 12 Column: 8"
	.zero 1
uuid_000000000007e6f6:
	.ascii "File: SRC/parse-type.lm Line: 22 Column: 14"
	.zero 1
uuid_000000000007e70f:
	.ascii "File: SRC/parse-type.lm Line: 51 Column: 8"
	.zero 1
uuid_000000000007e75d:
	.ascii "File: SRC/remove-parens.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007e767:
	.ascii "File: SRC/remove-parens.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007e7aa:
	.ascii "File: SRC/take-one-expr.lm Line: 19 Column: 11"
	.zero 1
uuid_000000000007e7b4:
	.ascii "File: SRC/take-one-expr.lm Line: 6 Column: 30"
	.zero 1
uuid_000000000007e7be:
	.ascii "src"
	.zero 1
cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1:
.zero 32
uuid_000000000007e7ce:
	.ascii "File: SRC/compile-declare-cstring.lm Line: 10 Column: 32"
	.zero 1
uuid_000000000007e7d5:
	.ascii ":\n	.ascii \""
	.zero 1
uuid_000000000007e7d6:
	.ascii "\"\n	.zero 1\n"
	.zero 1
uuid_000000000007e83d:
	.ascii "File: SRC/compile-destructure-args.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007e865:
	.ascii "True"
	.zero 1
uuid_000000000007e866:
	.ascii "False"
	.zero 1
uuid_000000000007e867:
	.ascii "\\t"
	.zero 1
uuid_000000000007e868:
	.ascii "10"
	.zero 1
uuid_000000000007e869:
	.ascii "\\s"
	.zero 1
uuid_000000000007e86a:
	.ascii "32"
	.zero 1
uuid_000000000007e86b:
	.ascii "\\o"
	.zero 1
uuid_000000000007e86c:
	.ascii "35"
	.zero 1
uuid_000000000007e86d:
	.ascii "\\`"
	.zero 1
uuid_000000000007e86e:
	.ascii "39"
	.zero 1
uuid_000000000007e86f:
	.ascii "\\["
	.zero 1
uuid_000000000007e870:
	.ascii "40"
	.zero 1
uuid_000000000007e871:
	.ascii "\\]"
	.zero 1
uuid_000000000007e872:
	.ascii "41"
	.zero 1
uuid_000000000007e873:
	.ascii "\\:"
	.zero 1
uuid_000000000007e874:
	.ascii "59"
	.zero 1
uuid_000000000007e875:
	.ascii "File: SRC/compile-expr-direct.lm Line: 36 Column: 20"
	.zero 1
uuid_000000000007e951:
	.ascii "File: SRC/compile-expr-direct.lm Line: 81 Column: 11"
	.zero 1
uuid_000000000007e9b8:
	.ascii "into-branch-conditional"
	.zero 1
uuid_000000000007e9b9:
	.ascii "rsp-offset"
	.zero 1
uuid_000000000007e9ba:
	.ascii "end-offset"
	.zero 1
uuid_000000000007e9bb:
	.ascii "return-size"
	.zero 1
uuid_000000000007e9bc:
	.ascii "ImplicitContext"
	.zero 1
uuid_000000000007e9bd:
	.ascii "ictx"
	.zero 1
uuid_000000000007e9be:
	.ascii "primitive::if"
	.zero 1
uuid_000000000007e9f8:
	.ascii "File: SRC/compile-expr-direct.lm Line: 166 Column: 11"
	.zero 1
uuid_000000000007e9fc:
	.ascii "unframe"
	.zero 1
uuid_000000000007e9fd:
	.ascii "	add $"
	.zero 1
uuid_000000000007e9fe:
	.ascii ", %rsp\n"
	.zero 1
uuid_000000000007ea6e:
	.ascii "File: SRC/compile-expr-direct.lm Line: 196 Column: 14"
	.zero 1
uuid_000000000007ea81:
	.ascii "File: SRC/compile-expr-direct.lm Line: 6 Column: 5"
	.zero 1
uuid_000000000007eaac:
	.ascii "File: SRC/compile-expr.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007eae0:
	.ascii "File: SRC/compile-fragment-args.lm Line: 7 Column: 11"
	.zero 1
uuid_000000000007eae7:
	.ascii "File: SRC/compile-fragment-args.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007eafa:
	.ascii "cdecl::args-size"
	.zero 1
uuid_000000000007eafb:
	.ascii "File: SRC/compile-global.lm Line: 22 Column: 14"
	.zero 1
uuid_000000000007eb05:
	.ascii "_COUNTER"
	.zero 1
uuid_000000000007eb06:
	.ascii ":\n.zero 8\n"
	.zero 1
uuid_000000000007eb07:
	.ascii "_LABEL:\n	.ascii	\"\\\\t"
	.zero 1
uuid_000000000007eb08:
	.ascii "\\\\n\"\n	.zero 1\n"
	.zero 1
uuid_000000000007eb09:
	.ascii "	mov $"
	.zero 1
uuid_000000000007eb0a:
	.ascii ", %RBX\n	mov 0(%RBX), %RAX\n"
	.zero 1
uuid_000000000007eb0b:
	.ascii "	inc %RAX\n	mov %RAX, 0(%RBX)\n"
	.zero 1
uuid_000000000007eb0c:
	.ascii "	push %RBP\n	mov %RSP, %RBP\n	push %RAX\n	call print_CL_ArrowNilU64\n	mov %RBP, %RSP\n	pop %RBP\n"
	.zero 1
uuid_000000000007eb0d:
	.ascii "	push %RBP\n	mov %RSP, %RBP\n	push $"
	.zero 1
uuid_000000000007eb0e:
	.ascii "_LABEL\n"
	.zero 1
uuid_000000000007eb0f:
	.ascii "	call print_CL_ArrowNilString\n	mov %RBP, %RSP\n	pop %RBP\n"
	.zero 1
uuid_000000000007eb13:
	.ascii "frame"
	.zero 1
uuid_000000000007eb14:
	.ascii "	sub $"
	.zero 1
uuid_000000000007eb15:
	.ascii "	ret\n"
	.zero 1
uuid_000000000007eb3a:
	.ascii ":\n.zero "
	.zero 1
uuid_000000000007eb3b:
	.ascii "File: SRC/compile-global.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007eb4e:
	.ascii "File: SRC/compile-maybe-push-stack.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007eb7f:
	.ascii "File: SRC/compile-push-rvalue.lm Line: 11 Column: 11"
	.zero 1
uuid_000000000007eb8c:
	.ascii "File: SRC/compile-push-rvalue.lm Line: 8 Column: 5"
	.zero 1
uuid_000000000007eb99:
	.ascii "FunctionArguments"
	.zero 1
uuid_000000000007eb9a:
	.ascii "function-id"
	.zero 1
uuid_000000000007eb9b:
	.ascii "function-name"
	.zero 1
uuid_000000000007eb9c:
	.ascii "function-type"
	.zero 1
uuid_000000000007eb9d:
	.ascii "args-size"
	.zero 1
uuid_000000000007eb9e:
	.ascii "used"
	.zero 1
uuid_000000000007eb9f:
	.ascii "args"
	.zero 1
uuid_000000000007eba0:
	.ascii "primitive::call"
	.zero 1
uuid_000000000007ebb3:
	.ascii "File: SRC/compile-stack-calls.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007ebd5:
	.ascii "File: SRC/translate-local-variables.lm Line: 11 Column: 17"
	.zero 1
uuid_000000000007ebd9:
	.ascii "File: SRC/translate-local-variables.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007ebe0:
	.ascii "File: SRC/translate-local-variables.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007ebf3:
	.ascii "L"
	.zero 1
uuid_000000000007ebf7:
	.ascii "File: SRC/cc-blob.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007ec07:
	.ascii "File: SRC/cc-blob.lm Line: 30 Column: 5"
	.zero 1
uuid_000000000007ec5c:
	.ascii "File: SRC/cc-args.lm Line: 9 Column: 14"
	.zero 1
uuid_000000000007ecae:
	.ascii "Codegen Unexpected RHS"
	.zero 1
uuid_000000000007ecb2:
	.ascii "File: SRC/cc-args.lm Line: 75 Column: 14"
	.zero 1
uuid_000000000007ecc5:
	.ascii "File: SRC/cc-args.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007ed3e:
	.ascii "for-arg-i"
	.zero 1
uuid_000000000007ed7e:
	.ascii "for-arg"
	.zero 1
uuid_000000000007edb5:
	.ascii "File: SRC/blob-render.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007ede9:
	.ascii "for-atom"
	.zero 1
uuid_000000000007ee20:
	.ascii "File: SRC/blob-render.lm Line: 53 Column: 34"
	.zero 1
uuid_000000000007ee33:
	.ascii "range"
	.zero 1
uuid_000000000007ee49:
	.ascii "uuid"
	.zero 1
uuid_000000000007ee5c:
	.ascii "align"
	.zero 1
uuid_000000000007ee78:
	.ascii "=="
	.zero 1
uuid_000000000007eeb5:
	.ascii "/"
	.zero 1
uuid_000000000007eed1:
	.ascii "*"
	.zero 1
uuid_000000000007eeed:
	.ascii "%"
	.zero 1
uuid_000000000007ef60:
	.ascii "File: SRC/blob-render.lm Line: 151 Column: 11"
	.zero 1
uuid_000000000007ef9a:
	.ascii "File: SRC/blob-render.lm Line: 175 Column: 14"
	.zero 1
uuid_000000000007efa1:
	.ascii "Unknown Render Term "
	.zero 1
uuid_000000000007efa2:
	.ascii "File: SRC/blob-render.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007f03c:
	.ascii "File: SRC/blob-render.lm Line: 205 Column: 5"
	.zero 1
uuid_000000000007f0ac:
	.ascii "File: SRC/extract-uuids.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007f0e9:
	.ascii "File: SRC/index-typedefs.lm Line: 3 Column: 31"
	.zero 1
uuid_000000000007f162:
	.ascii "Invalid Typedef"
	.zero 1
uuid_000000000007f163:
	.ascii "File: SRC/index-typedefs.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007f1df:
	.ascii "Unrecognized Macro Pattern\n"
	.zero 1
uuid_000000000007f1e0:
	.ascii "File: SRC/is-macro-head.lm Line: 5 Column: 30"
	.zero 1
uuid_000000000007f232:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 11 Column: 11"
	.zero 1
uuid_000000000007f23c:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 25 Column: 14"
	.zero 1
uuid_000000000007f246:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 6 Column: 30"
	.zero 1
uuid_000000000007f250:
	.ascii "Invalid Macro Application\n"
	.zero 1
uuid_000000000007f2a5:
	.ascii "_t"
	.zero 1
uuid_000000000007f2a6:
	.ascii "Token"
	.zero 1
uuid_000000000007f2a7:
	.ascii "Literal+Constant+String"
	.zero 1
uuid_000000000007f2a8:
	.ascii "_"
	.zero 1
uuid_000000000007f2e8:
	.ascii "File: SRC/preprocess-apply-literals.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007f307:
	.ascii ":Location:"
	.zero 1
uuid_000000000007f311:
	.ascii "p"
	.zero 1
uuid_000000000007f324:
	.ascii "Location Unknown"
	.zero 1
uuid_000000000007f331:
	.ascii "File: "
	.zero 1
uuid_000000000007f332:
	.ascii " Line: "
	.zero 1
uuid_000000000007f333:
	.ascii " Column: "
	.zero 1
uuid_000000000007f334:
	.ascii "File: SRC/preprocess-apply-locations.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007f37a:
	.ascii "File: SRC/preprocess-apply-locations.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007f4c8:
	.ascii "File: SRC/preprocess-apply.lm Line: 38 Column: 38"
	.zero 1
uuid_000000000007f4e7:
	.ascii "File: SRC/preprocess-apply.lm Line: 56 Column: 38"
	.zero 1
uuid_000000000007f548:
	.ascii "File: SRC/preprocess-apply.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007f58b:
	.ascii "File: SRC/preprocess-is-suffixed.lm Line: 5 Column: 32"
	.zero 1
uuid_000000000007f5bc:
	.ascii "File: SRC/substitute-uuids.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007f60e:
	.ascii "File: SRC/substitute-uuids.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007f6bd:
	.ascii ":Literal:"
	.zero 1
uuid_000000000007f730:
	.ascii "File: SRC/try-destructure-macro.lm Line: 13 Column: 14"
	.zero 1
uuid_000000000007f788:
	.ascii ":Any:"
	.zero 1
uuid_000000000007f819:
	.ascii ":Variable:"
	.zero 1
uuid_000000000007f87d:
	.ascii ":Tag:"
	.zero 1
uuid_000000000007f8a2:
	.ascii "Constant+Literal+U64"
	.zero 1
uuid_000000000007f8a3:
	.ascii "Tag<"
	.zero 1
uuid_000000000007f8b9:
	.ascii "File: SRC/try-destructure-macro.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007f905:
	.ascii "Fragment Has No Type:\n"
	.zero 1
uuid_000000000007f909:
	.ascii "File: SRC/destructure-lhs.lm Line: 7 Column: 11"
	.zero 1
uuid_000000000007f946:
	.ascii "File: SRC/destructure-lhs.lm Line: 24 Column: 11"
	.zero 1
uuid_000000000007f94a:
	.ascii "Unexpected Destructure LHS: "
	.zero 1
uuid_000000000007f94b:
	.ascii "File: SRC/destructure-lhs.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007f961:
	.ascii "File: SRC/fragment::chain.lm Line: 27 Column: 36"
	.zero 1
uuid_000000000007f98c:
	.ascii "File: SRC/fragment::get.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007f993:
	.ascii "File: SRC/fragment::get.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007f9ac:
	.ascii "File: SRC/fragment::set-context.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007f9c5:
	.ascii "File: SRC/fragment::set-offset.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007f9de:
	.ascii "File: SRC/fragment::set-term.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007f9f7:
	.ascii "File: SRC/fragment::set-type.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007fa10:
	.ascii "File: SRC/fragment::set-vararg.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007fa29:
	.ascii "File: SRC/fragment::set.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007fa2d:
	.ascii "--blob"
	.zero 1
uuid_000000000007fa2e:
	.ascii "--gnu"
	.zero 1
uuid_000000000007fa2f:
	.ascii "--tokenize"
	.zero 1
uuid_000000000007fa30:
	.ascii "--parse"
	.zero 1
uuid_000000000007fa31:
	.ascii "--preprocess"
	.zero 1
uuid_000000000007fa32:
	.ascii "--typecheck"
	.zero 1
uuid_000000000007fa33:
	.ascii "--compile"
	.zero 1
uuid_000000000007fa34:
	.ascii "--strict"
	.zero 1
uuid_000000000007fa35:
	.ascii "--gradual"
	.zero 1
uuid_000000000007fa36:
	.ascii "--macro"
	.zero 1
uuid_000000000007fa37:
	.ascii "--nomacro"
	.zero 1
uuid_000000000007fa38:
	.ascii "--profile-invocations"
	.zero 1
uuid_000000000007fa39:
	.ascii "-o"
	.zero 1
uuid_000000000007fa3a:
	.ascii "File: SRC/main.lm Line: 6 Column: 8"
	.zero 1
uuid_000000000007fa86:
	.ascii "File: SRC/main.lm Line: 35 Column: 37"
	.zero 1
uuid_000000000007fa9a:
	.ascii "File: SRC/main.lm Line: 43 Column: 5"
	.zero 1
uuid_000000000007fab8:
	.ascii "File: LIB/default-list.lm Line: 57 Column: 25"
	.zero 1
uuid_000000000007fad6:
	.ascii "File: LIB/default-list.lm Line: 44 Column: 25"
	.zero 1
uuid_000000000007fae7:
	.ascii "List::head is fallible\n"
	.zero 1
uuid_000000000007fae8:
	.ascii "File: LIB/default-list.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007fb12:
	.ascii "File: LIB/default-list.lm Line: 33 Column: 8"
	.zero 1
uuid_000000000007fb4c:
	.ascii "File: LIB/default-list.lm Line: 20 Column: 26"
	.zero 1
uuid_000000000007fbe5:
	.ascii "File: LIB/default-list.lm Line: 71 Column: 8"
	.zero 1
uuid_000000000007fbf8:
	.ascii "File: LIB/default-list.lm Line: 78 Column: 5"
	.zero 1
uuid_000000000007fcb8:
	.ascii "File: LIB/default-stdlib.lm Line: 20 Column: 5"
	.zero 1
uuid_000000000007fcc9:
	.ascii "File: LIB/default-stdlib.lm Line: 52 Column: 5"
	.zero 1
uuid_000000000007fe76:
	.ascii "File: LIB/default-stdlib.lm Line: 35 Column: 5"
	.zero 1
