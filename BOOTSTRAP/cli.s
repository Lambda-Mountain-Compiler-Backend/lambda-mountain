.global _start
.text
_start:
	mov %rsp,%rbp
	mov $malloc_SB_block_SB_head_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_first_SB_free_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_page_SB_tail_CL_U64, %r15
	movq $0, 0(%r15)
	mov $malloc_SB_large_SB_size_CL_U64, %r15
	movq $1024, 0(%r15)
	mov $point_SB_of_SB_interest_CL_U64, %r15
	movq $0, 0(%r15)
	mov $rc_SB_magic_SB_number_CL_U64, %r15
	movq $423809104, 0(%r15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_text_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_init_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_data_SB_section_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	pushq $0
	pushq $0
	pushq $3
	movq $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	mov $assemble_SB_final_CL_String, %r15
	movq $uuid_0000000000079496, 0(%r15)
	mov $assemble_SB_argv_SB_referenced_CL_U8, %r15
	movb $0, 0(%r15)
	mov $main_SB_with_SB_argv_CL_U8, %r15
	movb $0, 0(%r15)
	mov $main_SB_with_CL_U8, %r15
	movb $0, 0(%r15)
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	movb $0, 0(%r15)
	mov $config_SB_strict_CL_U8, %r15
	movb $1, 0(%r15)
	mov $config_SB_preprocess_CL_U8, %r15
	movb $1, 0(%r15)
	mov $config_SB_target_CL_String, %r15
	movq $uuid_000000000007950c, 0(%r15)
	pushq $1
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
	pushq $0
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	movq $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	movq $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $global_SB_ctx_CL_FContextFContextCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	popq 168(%R15)
	popq 176(%R15)
	popq 184(%R15)
	popq 192(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	popq 128(%R15)
	popq 136(%R15)
	popq 144(%R15)
	popq 152(%R15)
	popq 160(%R15)
	popq 168(%R15)
	popq 176(%R15)
	popq 184(%R15)
	popq 192(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	popq 96(%R15)
	popq 104(%R15)
	popq 112(%R15)
	popq 120(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	mov $unknown_SB_index_SB_of_SB_tag_CL_U64, %r15
	movq $99999, 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	movq $type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
	popq 72(%R15)
	popq 80(%R15)
	popq 88(%R15)
	mov $types_SB_have_SB_changed_CL_U8, %r15
	movb $1, 0(%r15)
	pushq $0
	pushq $0
	pushq $1
	movq $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	mov $uuid_SB_counter_CL_U64, %r15
	movq $0, 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	mov %rbp,%rsp
	popq %r8
	movq %rsp, %r9
	push %rbp
	mov %rsp, %rbp
	pushq %r8
	pushq %r9
	call main
	mov %rbp, %rsp
	pop %rbp
	mov $60, %rax
	mov $0, %rdi
	syscall
_AD__CL_ArrowSConsSS:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079335
	jmp uuid_0000000000079337
uuid_0000000000079335:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079332
	movq -48(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_0000000000079334
uuid_0000000000079332:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079334:
	mov -72(%RBP),%RSP
	add $-72, %RSP
uuid_0000000000079337:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
deep_SB_hash_CL_ArrowU64U64:
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
non_SB_zero_CL_ArrowU64S:
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007933d
	push %RBP
	jmp uuid_000000000007933a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079339
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007933c
uuid_000000000007933a:
uuid_000000000007933c:
	mov -104(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007933f
uuid_000000000007933d:
	movq $0, -40(%rbp)
uuid_000000000007933f:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64String:
	pushq $0
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000079340
	jmp uuid_0000000000079342
uuid_0000000000079340:
	movq $1, -24(%rbp)
uuid_0000000000079342:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsSS:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079349
	jmp uuid_000000000007934b
uuid_0000000000079349:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079346
	jmp uuid_0000000000079348
uuid_0000000000079346:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079343
	jmp uuid_0000000000079345
uuid_0000000000079343:
	movb $1, -192(%rbp)
uuid_0000000000079345:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000079348:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007934b:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793a7
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007935e
	jmp uuid_0000000000079360
uuid_000000000007935e:
	push %RBP
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007934f
	jmp uuid_0000000000079351
uuid_000000000007934f:
	push %RBP
	mov -368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007934c
	jmp uuid_000000000007934e
uuid_000000000007934c:
	movb $1, -384(%rbp)
uuid_000000000007934e:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_0000000000079351:
	mov -392(%RBP),%RSP
	add $-408, %RSP
	mov -384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007935b
	jmp uuid_000000000007935d
uuid_000000000007935b:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079355
	jmp uuid_0000000000079357
uuid_0000000000079355:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079352
	jmp uuid_0000000000079354
uuid_0000000000079352:
	movb $1, -448(%rbp)
uuid_0000000000079354:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000079357:
	mov -456(%RBP),%RSP
	add $-472, %RSP
	mov -448(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079358
	jmp uuid_000000000007935a
uuid_0000000000079358:
	movb $1, -336(%rbp)
uuid_000000000007935a:
	mov -416(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007935d:
	mov -352(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000079360:
	mov -344(%RBP),%RSP
	add $-472, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793a4
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079379
	jmp uuid_000000000007937b
uuid_0000000000079379:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079367
	jmp uuid_0000000000079369
uuid_0000000000079367:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079364
	jmp uuid_0000000000079366
uuid_0000000000079364:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079361
	jmp uuid_0000000000079363
uuid_0000000000079361:
	movb $1, -592(%rbp)
uuid_0000000000079363:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000079366:
	mov -608(%RBP),%RSP
	add $-664, %RSP
uuid_0000000000079369:
	mov -600(%RBP),%RSP
	add $-664, %RSP
	mov -592(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079376
	jmp uuid_0000000000079378
uuid_0000000000079376:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079370
	jmp uuid_0000000000079372
uuid_0000000000079370:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007936d
	jmp uuid_000000000007936f
uuid_000000000007936d:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007936a
	jmp uuid_000000000007936c
uuid_000000000007936a:
	movb $1, -704(%rbp)
uuid_000000000007936c:
	mov -752(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007936f:
	mov -720(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000079372:
	mov -712(%RBP),%RSP
	add $-776, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079373
	jmp uuid_0000000000079375
uuid_0000000000079373:
	movb $1, -544(%rbp)
uuid_0000000000079375:
	mov -672(%RBP),%RSP
	add $-776, %RSP
uuid_0000000000079378:
	mov -560(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007937b:
	mov -552(%RBP),%RSP
	add $-776, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793a1
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079394
	jmp uuid_0000000000079396
uuid_0000000000079394:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079385
	jmp uuid_0000000000079387
uuid_0000000000079385:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079382
	jmp uuid_0000000000079384
uuid_0000000000079382:
	movb $1, -896(%rbp)
uuid_0000000000079384:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_0000000000079387:
	mov -904(%RBP),%RSP
	add $-920, %RSP
	mov -896(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079391
	jmp uuid_0000000000079393
uuid_0000000000079391:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007938b
	jmp uuid_000000000007938d
uuid_000000000007938b:
	push %RBP
	mov -944(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079388
	jmp uuid_000000000007938a
uuid_0000000000079388:
	movb $1, -960(%rbp)
uuid_000000000007938a:
	mov -976(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007938d:
	mov -968(%RBP),%RSP
	add $-984, %RSP
	mov -960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007938e
	jmp uuid_0000000000079390
uuid_000000000007938e:
	movb $1, -848(%rbp)
uuid_0000000000079390:
	mov -928(%RBP),%RSP
	add $-984, %RSP
uuid_0000000000079393:
	mov -864(%RBP),%RSP
	add $-984, %RSP
uuid_0000000000079396:
	mov -856(%RBP),%RSP
	add $-984, %RSP
	mov -848(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007939e
	push %RBP
	jmp uuid_000000000007939b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007939a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007939d
uuid_000000000007939b:
uuid_000000000007939d:
	mov -992(%RBP),%RSP
	add $-992, %RSP
	jmp uuid_00000000000793a0
uuid_000000000007939e:
	push %RBP
	movq -984(%RBP), %RAX
	movq -920(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079397
	jmp uuid_0000000000079399
uuid_0000000000079397:
	movq $1, -64(%rbp)
uuid_0000000000079399:
	mov -992(%RBP),%RSP
	add $-992, %RSP
uuid_00000000000793a0:
	mov -784(%RBP),%RSP
	add $-992, %RSP
	jmp uuid_00000000000793a3
uuid_00000000000793a1:
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007937f
	jmp uuid_0000000000079381
uuid_000000000007937f:
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007937c
	jmp uuid_000000000007937e
uuid_000000000007937c:
	movq $1, -64(%rbp)
uuid_000000000007937e:
	mov -792(%RBP),%RSP
	add $-792, %RSP
uuid_0000000000079381:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_00000000000793a3:
	mov -480(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_00000000000793a6
uuid_00000000000793a4:
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_00000000000793a6:
	mov -272(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_00000000000793a9
uuid_00000000000793a7:
	movq $1, -64(%rbp)
uuid_00000000000793a9:
	mov -128(%RBP),%RSP
	add $-264, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsSS:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
print_CL_ArrowNilS:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793cf
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793ae
	jmp uuid_00000000000793b0
uuid_00000000000793ae:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000793ab
	jmp uuid_00000000000793ad
uuid_00000000000793ab:
	movb $1, -128(%rbp)
uuid_00000000000793ad:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_00000000000793b0:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793cc
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793b7
	jmp uuid_00000000000793b9
uuid_00000000000793b7:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000793b4
	jmp uuid_00000000000793b6
uuid_00000000000793b4:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000793b1
	jmp uuid_00000000000793b3
uuid_00000000000793b1:
	movb $1, -192(%rbp)
uuid_00000000000793b3:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_00000000000793b6:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_00000000000793b9:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793c9
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793c0
	jmp uuid_00000000000793c2
uuid_00000000000793c0:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000793bd
	jmp uuid_00000000000793bf
uuid_00000000000793bd:
	movb $1, -304(%rbp)
uuid_00000000000793bf:
	mov -320(%RBP),%RSP
	add $-328, %RSP
uuid_00000000000793c2:
	mov -312(%RBP),%RSP
	add $-328, %RSP
	mov -304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793c6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_00000000000793c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000793c8
uuid_00000000000793c6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793c3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793c4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000793c8:
	mov -272(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_00000000000793cb
uuid_00000000000793c9:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793ba
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000793cb:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_00000000000793ce
uuid_00000000000793cc:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000793ce:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_00000000000793d1
uuid_00000000000793cf:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793aa
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000793d1:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
fail_CL_ArrowNilString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fail_CL_ArrowNilConsStringString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793d2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
exit_CL_ArrowNilU64:
	mov $60, %RAX
	mov -8(%rbp), %RDI
	syscall
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilString:
	mov -8(%rbp), %R15
	mov $0, %RDX
uuid_00000000000793d3:
	mov 0(%R15), %R14B
	cmp $0,%R14B
	je uuid_00000000000793d4
	inc %RDX
	inc %R15
	jmp uuid_00000000000793d3
uuid_00000000000793d4:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	pushq -8(%rbp)
	push %RDX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
eprint_CL_ArrowNilString:
	mov -8(%rbp), %R15
	mov $0, %RDX
uuid_00000000000793d5:
	mov 0(%R15), %R14B
	cmp $0,%R14B
	je uuid_00000000000793d6
	inc %RDX
	inc %R15
	jmp uuid_00000000000793d5
uuid_00000000000793d6:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $2
	pushq -8(%rbp)
	push %RDX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU64:
	pushq $0
	mov -8(%rbp), %R15
	mov $0, %R14
uuid_00000000000793d7:
	mov	%R15, %RAX
	mov $0, %RDX
	mov $10, %RCX
	div %RCX
	push %RDX
	inc %R14
	mov	%RAX, %R15
	cmp $0,%R15
	jne uuid_00000000000793d7
uuid_00000000000793d8:
	pop %RDX
	movb %DL, -24(%rbp)
	addb $48, -24(%rbp)
	dec %R14
	mov $1, %RAX
	mov $1, %RDI
	mov	%rbp, %r12
	addq $-24, %r12
	mov	%R12, %RSI
	mov $1, %RDX
	syscall
	cmp $0,%R14
	jne uuid_00000000000793d8
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilASCII:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	mov	%rbp, %r12
	addq $0, %r12
	push %R12
	pushq $1
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
print_CL_ArrowNilI64:
	pushq $0
	mov -8(%rbp), %R15
	mov $0, %R14
	cmp $0,%R15
	jge uuid_00000000000793d9
	neg %R15
	movb $45, -24(%rbp)
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq $1
	mov	%rbp, %r12
	addq $-24, %r12
	push %R12
	pushq $1
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000793d9:
	mov	%R15, %RAX
	mov $0, %RDX
	mov $10, %RCX
	div %RCX
	push %RDX
	inc %R14
	mov	%RAX, %R15
	cmp $0,%R15
	jne uuid_00000000000793d9
uuid_00000000000793da:
	pop %RDX
	movb %DL, -24(%rbp)
	addb $48, -24(%rbp)
	dec %R14
	mov $1, %RAX
	mov $1, %RDI
	mov	%rbp, %r12
	addq $-24, %r12
	mov	%R12, %RSI
	mov $1, %RDX
	syscall
	cmp $0,%R14
	jne uuid_00000000000793da
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU32:
	mov $0, %R15
	mov -8(%rbp), %R15D
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU16:
	mov $0, %R15
	mov -8(%rbp), %R15W
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilU8:
	mov $0, %R15
	mov -8(%rbp), %R15B
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI32:
	mov $0, %R15
	mov -8(%rbp), %R15D
	movsx %R15D,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI16:
	mov $0, %R15
	mov -8(%rbp), %R15W
	movsx %R15W,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
print_CL_ArrowNilI8:
	mov $0, %R15
	mov -8(%rbp), %R15B
	movsx %R15B,%R15
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	push %R15
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsStringString:
	pushq $0
	pushq $0
	pushq $0
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp $0,%R8
	je uuid_00000000000793e0
	cmp $0,%R9
	je uuid_00000000000793e0
uuid_00000000000793de:
	mov %R8, %r14
	movb 0(%r14), %r15b
	movb %r15b, -32(%rbp)
	mov %R9, %r14
	movb 0(%r14), %r15b
	movb %r15b, -40(%rbp)
	mov -32(%RBP), %AL
	mov -40(%RBP), %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	movq %RAX, -48(%rbp)
	mov -48(%rbp), %R10
	cmp $0,%R10
	je uuid_00000000000793e0
	mov -32(%RBP), %AL
	mov $0, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	movq %RAX, -48(%rbp)
	mov -48(%rbp), %R10
	cmp $0,%R10
	jne uuid_00000000000793df
	inc %R8
	inc %R9
	jmp uuid_00000000000793de
uuid_00000000000793df:
	mov $1, %RAX
	jmp uuid_00000000000793e1
uuid_00000000000793e0:
	mov $0, %RAX
	jmp uuid_00000000000793e1
uuid_00000000000793e1:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsStringString:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64:
	mov -8(%rbp), %RAX
	mov -16(%rbp), %RDI
	mov -24(%rbp), %RSI
	mov -32(%rbp), %RDX
	syscall
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
read_SB_file_CL_ArrowStringString:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	pushq -8(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793e4
	jmp uuid_00000000000793e6
uuid_00000000000793e4:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e2
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000793e6:
	mov -32(%RBP),%RSP
	add $-32, %RSP
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1025
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $1024
uuid_00000000000793ec:
	movq -56(%RBP), %RAX
	movq $1024, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793ed
	jmp uuid_00000000000793ee
uuid_00000000000793ed:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -24(%rbp)
	movq -40(%RBP), %RAX
	movq -48(%RBP), %R14
	addq %R14, %RAX
	push %RAX
	pushq $1024
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -56(%rbp)
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000793e9
	jmp uuid_00000000000793eb
uuid_00000000000793e9:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e7
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e8
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000793eb:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	movq -48(%RBP), %RAX
	movq -56(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	movq -48(%RBP), %RAX
	movq $1025, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	add $8, %RSP
	jmp uuid_00000000000793ec
uuid_00000000000793ee:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $3
	pushq -24(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov -48(%RBP), %R13
	mov -40(%RBP), %R15
	add %R13, %R15
	movb $0, 0(%R15)
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
head_SB_string_CL_ArrowU8String:
	push %RBP
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793ef
	mov -8(%rbp), %r15
	mov 0(%r15), %AL
	jmp uuid_00000000000793f1
uuid_00000000000793ef:
	mov $0, %AL
uuid_00000000000793f1:
	mov -24(%RBP),%RSP
	add $-24, %RSP
	mov	%AL,%AL
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
tail_SB_string_CL_ArrowStringString:
	push %RBP
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793f5
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000793f2
	mov $0, %RAX
	jmp uuid_00000000000793f4
uuid_00000000000793f2:
	mov -8(%rbp), %RAX
	inc %RAX
uuid_00000000000793f4:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	jmp uuid_00000000000793f7
uuid_00000000000793f5:
	mov $0, %RAX
uuid_00000000000793f7:
	mov -24(%RBP),%RSP
	add $-24, %RSP
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
clone_SB_rope_CL_ArrowStringS:
#call function malloc : Arrow<Cons<U64,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $1024
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	mov -48(%RBP), %R13
	mov -40(%RBP), %R15
	add %R13, %R15
	movb $0, 0(%R15)
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079411
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000793fe
	jmp uuid_0000000000079400
uuid_00000000000793fe:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000793fb
	jmp uuid_00000000000793fd
uuid_00000000000793fb:
	push %RBP
	mov -120(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000793f8
	jmp uuid_00000000000793fa
uuid_00000000000793f8:
	movb $1, -144(%rbp)
uuid_00000000000793fa:
	mov -192(%RBP),%RSP
	add $-216, %RSP
uuid_00000000000793fd:
	mov -160(%RBP),%RSP
	add $-216, %RSP
uuid_0000000000079400:
	mov -152(%RBP),%RSP
	add $-216, %RSP
	mov -144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007940e
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079404
	jmp uuid_0000000000079406
uuid_0000000000079404:
	push %RBP
	mov -240(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079401
	jmp uuid_0000000000079403
uuid_0000000000079401:
	movb $1, -256(%rbp)
uuid_0000000000079403:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000079406:
	mov -264(%RBP),%RSP
	add $-280, %RSP
	mov -256(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007940b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007940a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007940d
uuid_000000000007940b:
	pushq $0
	mov -280(%RBP), %R15
	mov -288(%RBP), %R14
	add %R14, %R15
	mov 0(%R15), %R15B
	mov %R15B, %AL
	push %RAX
uuid_0000000000079407:
	mov -296(%RBP), %AL
	mov $0, %R14B
	cmpb %R14B, %AL
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079408
	jmp uuid_0000000000079409
uuid_0000000000079408:
#call function realloc : Arrow<Cons<Array<?,?>,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -296(%RBP), %R14B
	mov -40(%RBP), %R13
	mov -8(%RBP), %R15
	add %R13, %R15
	movb %R14B, 0(%R15)
	movq -288(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -288(%rbp)
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
	mov -280(%RBP), %R15
	mov -288(%RBP), %R14
	add %R14, %R15
	mov 0(%R15), %R15B
	movb %R15B, -296(%rbp)
	jmp uuid_0000000000079407
uuid_0000000000079409:
uuid_000000000007940d:
	mov -224(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_0000000000079410
uuid_000000000007940e:
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
#call function clone-rope-impl : Arrow<Cons<Cons<Array<?,?>,S>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_SB_impl_CL_ArrowU64ConsU64ConsSArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000079410:
	mov -112(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_0000000000079413
uuid_0000000000079411:
uuid_0000000000079413:
	mov -80(%RBP),%RSP
	add $-104, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
clone_SB_rope_CL_ArrowStringU8:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %r14
	mov -8(%rbp),%r15b
	mov %r15b, 0(%r14)
	mov -24(%rbp), %r15
	movb $0, 1(%r15)
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
length_CL_ArrowU64String:
	pushq $0
uuid_0000000000079414:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000079415
	jmp uuid_0000000000079416
uuid_0000000000079415:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	jmp uuid_0000000000079414
uuid_0000000000079416:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
write_SB_file_CL_ArrowNilConsStringString:
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $2
	pushq -8(%rbp)
	pushq $577
	pushq $420
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	pushq -32(%rbp)
	pushq -16(%rbp)
#call function length : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call length_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function system-call : Arrow<Cons<Cons<Cons<U64,U64>,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $3
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call system_SB_call_CL_ArrowU64ConsU64ConsU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
to_SB_string_CL_ArrowStringU64:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
uuid_0000000000079417:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079418
	jmp uuid_0000000000079419
uuid_0000000000079418:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $48, %R14
	addq %R14, %RAX
	push %RAX
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -56(%rbp), %R8
	movb %R8B, -48(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	add $8, %rsp
	jmp uuid_0000000000079417
uuid_0000000000079419:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007941b
	pushq $0
	pushq $uuid_000000000007941a
	pushq $2
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007941d
uuid_000000000007941b:
uuid_000000000007941d:
	mov -56(%RBP),%RSP
	add $-56, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringI64:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007941f
	jmp uuid_0000000000079421
uuid_000000000007941f:
	pushq $0
	pushq $uuid_000000000007941e
	pushq $2
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_0000000000079421:
	mov -72(%RBP),%RSP
	add $-72, %RSP
	pushq $0
uuid_0000000000079422:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079423
	jmp uuid_0000000000079424
uuid_0000000000079423:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function % : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _MD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $48
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function / : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _DV__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -88(%rbp), %R8
	movb %R8B, -80(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	add $8, %rsp
	jmp uuid_0000000000079422
uuid_0000000000079424:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079425
	pushq $0
	pushq $uuid_000000000007941a
	pushq $2
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_0000000000079427
uuid_0000000000079425:
uuid_0000000000079427:
	mov -88(%RBP),%RSP
	add $-88, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_i64_CL_ArrowI64String:
	pushq $0
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	mov $45, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079428
	jmp uuid_000000000007942a
uuid_0000000000079428:
	movb $1, -24(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_000000000007942a:
	mov -32(%RBP),%RSP
	add $-32, %RSP
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	mov -24(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007942b
	jmp uuid_000000000007942d
uuid_000000000007942b:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007942d:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_u64_CL_ArrowU64String:
	pushq $0
uuid_0000000000079450:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000079451
	jmp uuid_0000000000079452
uuid_0000000000079451:
#call function * : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq $10
	mov %RBX, %RBP
	call _ML__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %AL
	mov $48, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007944d
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %AL
	mov $49, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007944a
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %AL
	mov $50, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079447
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %AL
	mov $51, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079444
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %AL
	mov $52, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079441
	push %RBP
	pushq -32(%rbp)
	mov -128(%RBP), %AL
	mov $53, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007943e
	push %RBP
	pushq -32(%rbp)
	mov -144(%RBP), %AL
	mov $54, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007943b
	push %RBP
	pushq -32(%rbp)
	mov -160(%RBP), %AL
	mov $55, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079438
	push %RBP
	pushq -32(%rbp)
	mov -176(%RBP), %AL
	mov $56, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079435
	push %RBP
	pushq -32(%rbp)
	mov -192(%RBP), %AL
	mov $57, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079432
	push %RBP
	jmp uuid_000000000007942f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007942e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079431
uuid_000000000007942f:
uuid_0000000000079431:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_0000000000079434
uuid_0000000000079432:
	movq -24(%RBP), %RAX
	movq $9, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000079434:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_0000000000079437
uuid_0000000000079435:
	movq -24(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000079437:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007943a
uuid_0000000000079438:
	movq -24(%RBP), %RAX
	movq $7, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007943a:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007943d
uuid_000000000007943b:
	movq -24(%RBP), %RAX
	movq $6, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007943d:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000079440
uuid_000000000007943e:
	movq -24(%RBP), %RAX
	movq $5, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000079440:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000079443
uuid_0000000000079441:
	movq -24(%RBP), %RAX
	movq $4, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000079443:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_0000000000079446
uuid_0000000000079444:
	movq -24(%RBP), %RAX
	movq $3, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000079446:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_0000000000079449
uuid_0000000000079447:
	movq -24(%RBP), %RAX
	movq $2, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_0000000000079449:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007944c
uuid_000000000007944a:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007944c:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007944f
uuid_000000000007944d:
uuid_000000000007944f:
	mov -40(%RBP),%RSP
	add $-48, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_0000000000079450
uuid_0000000000079452:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_hex_CL_ArrowStringU64:
	pushq $0
	pushq $0
	pushq $3
	pushq $16
uuid_0000000000079493:
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079494
	jmp uuid_0000000000079495
uuid_0000000000079494:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $16
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	pushq -56(%rbp)
	movq -72(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079490
	push %RBP
	pushq -56(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007948d
	push %RBP
	pushq -56(%rbp)
	movq -104(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007948a
	push %RBP
	pushq -56(%rbp)
	movq -120(%RBP), %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079487
	push %RBP
	pushq -56(%rbp)
	movq -136(%RBP), %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079484
	push %RBP
	pushq -56(%rbp)
	movq -152(%RBP), %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079481
	push %RBP
	pushq -56(%rbp)
	movq -168(%RBP), %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007947e
	push %RBP
	pushq -56(%rbp)
	movq -184(%RBP), %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007947b
	push %RBP
	pushq -56(%rbp)
	movq -200(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079478
	push %RBP
	pushq -56(%rbp)
	movq -216(%RBP), %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079475
	push %RBP
	pushq -56(%rbp)
	movq -232(%RBP), %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079472
	push %RBP
	pushq -56(%rbp)
	movq -248(%RBP), %RAX
	movq $11, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007946f
	push %RBP
	pushq -56(%rbp)
	movq -264(%RBP), %RAX
	movq $12, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007946c
	push %RBP
	pushq -56(%rbp)
	movq -280(%RBP), %RAX
	movq $13, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079469
	push %RBP
	pushq -56(%rbp)
	movq -296(%RBP), %RAX
	movq $14, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079466
	push %RBP
	pushq -56(%rbp)
	movq -312(%RBP), %RAX
	movq $15, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079463
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079462
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079465
uuid_0000000000079463:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079461
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079465:
	mov -304(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000079468
uuid_0000000000079466:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079460
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079468:
	mov -288(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007946b
uuid_0000000000079469:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007945f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007946b:
	mov -272(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007946e
uuid_000000000007946c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007945e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007946e:
	mov -256(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_0000000000079471
uuid_000000000007946f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007945d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079471:
	mov -240(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000079474
uuid_0000000000079472:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007945c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079474:
	mov -224(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_0000000000079477
uuid_0000000000079475:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007945b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079477:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007947a
uuid_0000000000079478:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007945a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007947a:
	mov -192(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007947d
uuid_000000000007947b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079459
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007947d:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_0000000000079480
uuid_000000000007947e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079458
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079480:
	mov -160(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_0000000000079483
uuid_0000000000079481:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079457
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079483:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000079486
uuid_0000000000079484:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079456
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079486:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_0000000000079489
uuid_0000000000079487:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079455
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079489:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007948c
uuid_000000000007948a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079454
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007948c:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007948f
uuid_000000000007948d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079453
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007948f:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_0000000000079492
uuid_0000000000079490:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007941a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079492:
	mov -64(%RBP),%RSP
	add $-72, %RSP
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $16
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_0000000000079493
uuid_0000000000079495:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
has_SB_prefix_CL_ArrowU64ConsStringString:
	pushq $1
uuid_000000000007949d:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007949e
	jmp uuid_000000000007949f
uuid_000000000007949e:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007949a
	movq $0, -32(%rbp)
	movq $uuid_0000000000079496, -16(%rbp)
	jmp uuid_000000000007949c
uuid_000000000007949a:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	mov -48(%RBP), %AL
	mov -56(%RBP), %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079497
	movq $0, -32(%rbp)
	movq $uuid_0000000000079496, -16(%rbp)
	jmp uuid_0000000000079499
uuid_0000000000079497:
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -16(%rbp)
uuid_0000000000079499:
	mov -64(%RBP),%RSP
	add $-64, %RSP
uuid_000000000007949c:
	mov -40(%RBP),%RSP
	add $-64, %RSP
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007949d
uuid_000000000007949f:
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
remove_SB_prefix_CL_ArrowStringConsStringString:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794a3
	jmp uuid_00000000000794a5
uuid_00000000000794a3:
uuid_00000000000794a0:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000794a1
	jmp uuid_00000000000794a2
uuid_00000000000794a1:
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -16(%rbp)
	jmp uuid_00000000000794a0
uuid_00000000000794a2:
uuid_00000000000794a5:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
replace_CL_ArrowStringConsStringConsStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_00000000000794a9:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000794aa
	jmp uuid_00000000000794ab
uuid_00000000000794aa:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794a6
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	jmp uuid_00000000000794a8
uuid_00000000000794a6:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -24(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function remove-prefix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call remove_SB_prefix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_00000000000794a8:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	add $8, %RSP
	jmp uuid_00000000000794a9
uuid_00000000000794ab:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_suffix_CL_ArrowU64ConsStringString:
	pushq $0
uuid_00000000000794af:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000794b0
	jmp uuid_00000000000794b1
uuid_00000000000794b0:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794ac
	jmp uuid_00000000000794ae
uuid_00000000000794ac:
	movq $1, -32(%rbp)
uuid_00000000000794ae:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %RSP
	jmp uuid_00000000000794af
uuid_00000000000794b1:
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
remove_SB_suffix_CL_ArrowStringConsStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_00000000000794b5:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000794b6
	jmp uuid_00000000000794b7
uuid_00000000000794b6:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794b2
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	jmp uuid_00000000000794b4
uuid_00000000000794b2:
	movq $uuid_000000000007941a, -8(%rbp)
uuid_00000000000794b4:
	mov -56(%RBP),%RSP
	add $-56, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %RSP
	jmp uuid_00000000000794b5
uuid_00000000000794b7:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
deep_SB_hash_CL_ArrowU64String:
	pushq $0
	pushq $0
uuid_00000000000794b8:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000794b9
	jmp uuid_00000000000794ba
uuid_00000000000794b9:
	mov $0, %R14
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov -40(%rbp), %R14B
	movq %R14, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	mov -32(%RBP),%RAX
	shl $10,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shr $6,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	jmp uuid_00000000000794b8
uuid_00000000000794ba:
	mov -32(%RBP),%RAX
	shl $3,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shr $11,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%RBP),%RAX
	shl $15,%RAX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -32(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_ML__CL_ArrowStringConsU64String:
	pushq $0
	pushq $0
	pushq $3
uuid_00000000000794bb:
	movq -16(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794bc
	jmp uuid_00000000000794bd
uuid_00000000000794bc:
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	movq -16(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -16(%rbp)
	jmp uuid_00000000000794bb
uuid_00000000000794bd:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jb uuid_00000000000794be
	mov $0, %RAX
uuid_00000000000794be:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jl uuid_00000000000794bf
	mov $0, %RAX
uuid_00000000000794bf:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jbe uuid_00000000000794c0
	mov $0, %RAX
uuid_00000000000794c0:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_LT__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jle uuid_00000000000794c1
	mov $0, %RAX
uuid_00000000000794c1:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	ja uuid_00000000000794c2
	mov $0, %RAX
uuid_00000000000794c2:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jg uuid_00000000000794c3
	mov $0, %RAX
uuid_00000000000794c3:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jae uuid_00000000000794c4
	mov $0, %RAX
uuid_00000000000794c4:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_GT__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jge uuid_00000000000794c5
	mov $0, %RAX
uuid_00000000000794c5:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	je uuid_00000000000794c6
	mov $0, %RAX
uuid_00000000000794c6:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	je uuid_00000000000794c7
	mov $0, %RAX
uuid_00000000000794c7:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsU64U64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jne uuid_00000000000794c8
	mov $0, %RAX
uuid_00000000000794c8:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AM__AM__CL_ArrowU64ConsU64U64:
	mov $0, %RAX
	mov -8(%rbp), %R8
	cmp $0,%R8
	je uuid_00000000000794c9
	mov -16(%rbp), %R8
	cmp $0,%R8
	je uuid_00000000000794c9
	mov $1, %RAX
uuid_00000000000794c9:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_BR__BR__CL_ArrowU64ConsU64U64:
	mov $0, %RAX
	mov -8(%rbp), %R8
	cmp $0,%R8
	jne uuid_00000000000794cb
	mov -16(%rbp), %R8
	cmp $0,%R8
	jne uuid_00000000000794cb
	jmp uuid_00000000000794ca
uuid_00000000000794cb:
	mov $1, %RAX
uuid_00000000000794ca:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsI64I64:
	mov $1, %RAX
	mov -8(%rbp), %R8
	mov -16(%rbp), %R9
	cmp %R9,%R8
	jne uuid_00000000000794cc
	mov $0, %RAX
uuid_00000000000794cc:
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowU64ConsU64U64:
	mov -8(%rbp), %R8
	mov -16(%rbp), %RAX
	addq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_AD__CL_ArrowI64ConsI64I64:
	mov -8(%rbp), %R8
	mov -16(%rbp), %RAX
	addq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_SB__CL_ArrowI64ConsI64I64:
	mov -16(%rbp), %R8
	mov -8(%rbp), %RAX
	subq %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_HT__CL_ArrowU64ConsU64U64:
	mov -16(%rbp), %R8
	mov -8(%rbp), %RAX
	xor %R8, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_MD__CL_ArrowU64ConsU64U64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	div %R8
	mov	%RDX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_MD__CL_ArrowI64ConsI64I64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	idiv %R8
	mov	%RDX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DV__CL_ArrowU64ConsU64U64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	div %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DV__CL_ArrowI64ConsI64I64:
	mov $0, %RDX
	mov -8(%rbp), %RAX
	mov -16(%rbp), %R8
	idiv %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_ML__CL_ArrowU64ConsU64U64:
	mov -16(%rbp), %RAX
	mov -8(%rbp), %R8
	mul %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_ML__CL_ArrowI64ConsI64I64:
	mov -16(%rbp), %RAX
	mov -8(%rbp), %R8
	imul %R8
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EX__EQ__CL_ArrowU64ConsU8U8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_00000000000794ce
	jmp uuid_00000000000794cd
uuid_00000000000794cd:
	mov $1, %RAX
	jmp uuid_00000000000794cf
uuid_00000000000794ce:
	mov $0, %RAX
	jmp uuid_00000000000794cf
uuid_00000000000794cf:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU8U8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_00000000000794d0
	jmp uuid_00000000000794d1
uuid_00000000000794d0:
	mov $1, %RAX
	jmp uuid_00000000000794d2
uuid_00000000000794d1:
	mov $0, %RAX
	jmp uuid_00000000000794d2
uuid_00000000000794d2:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU16U16:
	push %R14
	push %R15
	mov -8(%rbp), %R14W
	mov -16(%rbp), %R15W
	cmp %R14W,%R15W
	je uuid_00000000000794d3
	jmp uuid_00000000000794d4
uuid_00000000000794d3:
	mov $1, %RAX
	jmp uuid_00000000000794d5
uuid_00000000000794d4:
	mov $0, %RAX
	jmp uuid_00000000000794d5
uuid_00000000000794d5:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsU32U32:
	push %R14
	push %R15
	mov -8(%rbp), %R14D
	mov -16(%rbp), %R15D
	cmp %R14D,%R15D
	je uuid_00000000000794d6
	jmp uuid_00000000000794d7
uuid_00000000000794d6:
	mov $1, %RAX
	jmp uuid_00000000000794d8
uuid_00000000000794d7:
	mov $0, %RAX
	jmp uuid_00000000000794d8
uuid_00000000000794d8:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
not_CL_ArrowU64U64:
	pushq $0
	push %RBP
	movq -8(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794d9
	jmp uuid_00000000000794db
uuid_00000000000794d9:
	movq $1, -24(%rbp)
uuid_00000000000794db:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
not_CL_ArrowU64U8:
	pushq $0
	push %RBP
	mov -8(%RBP), %AL
	mov $0, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794dc
	jmp uuid_00000000000794de
uuid_00000000000794dc:
	movq $1, -24(%rbp)
uuid_00000000000794de:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI8I8:
	push %R14
	push %R15
	mov -8(%rbp), %R14B
	mov -16(%rbp), %R15B
	cmp %R14B,%R15B
	je uuid_00000000000794df
	jmp uuid_00000000000794e0
uuid_00000000000794df:
	mov $1, %RAX
	jmp uuid_00000000000794e1
uuid_00000000000794e0:
	mov $0, %RAX
	jmp uuid_00000000000794e1
uuid_00000000000794e1:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI16I16:
	push %R14
	push %R15
	mov -8(%rbp), %R14W
	mov -16(%rbp), %R15W
	cmp %R14W,%R15W
	je uuid_00000000000794e2
	jmp uuid_00000000000794e3
uuid_00000000000794e2:
	mov $1, %RAX
	jmp uuid_00000000000794e4
uuid_00000000000794e3:
	mov $0, %RAX
	jmp uuid_00000000000794e4
uuid_00000000000794e4:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsI32I32:
	push %R14
	push %R15
	mov -8(%rbp), %R14D
	mov -16(%rbp), %R15D
	cmp %R14D,%R15D
	je uuid_00000000000794e5
	jmp uuid_00000000000794e6
uuid_00000000000794e5:
	mov $1, %RAX
	jmp uuid_00000000000794e7
uuid_00000000000794e6:
	mov $0, %RAX
	jmp uuid_00000000000794e7
uuid_00000000000794e7:
	pop %R15
	pop %R14
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $0, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_prev_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $8, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -8(%RBP), %R15
	add $16, %R15
	mov 0(%R15), %R15
	push %R15
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
_DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock:
	movq -8(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 0(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 8(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock:
	mov -16(%RBP), %R14
	mov -8(%RBP), %R15
	mov %R14, 16(%R15)
	mov %rbp, %rsp
	sub $24, %rsp
	ret
malloc_SB_new_SB_page_CL_ArrowNilNil:
	mov $12, %RAX
	mov $0, %RDI
	syscall
	mov	%RAX, %R8
	movq %R8, %r15
	movq $malloc_SB_block_SB_head_CL_U64, %r14
	movq %r15, 0(%r14)
	movq %R8, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	addq $1073741824, %R8
	mov $12, %RAX
	mov	%R8, %RDI
	syscall
	movq %R8, %r15
	movq $malloc_SB_page_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
realloc_CL_ArrowArray_QM__QM_ConsU64Array_QM__QM_:
	movq -8(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function <= : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
#call function .free-space : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _LT__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setge %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794ee
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	movq -56(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
	pushq $0
uuid_00000000000794eb:
	movq -72(%RBP), %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794ec
	jmp uuid_00000000000794ed
uuid_00000000000794ec:
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %R15B, %R14B
	mov -72(%RBP), %R13
	mov -80(%RBP), %R15
	add %R13, %R15
	mov %R14B, 0(%R15)
	movq -72(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -72(%rbp)
	add $8, %rsp
	add $8, %rsp
	jmp uuid_00000000000794eb
uuid_00000000000794ed:
#call function free : Arrow<Array<?,?>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call free_CL_ArrowNilArray_QM__QM_
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -64(%rbp), %r15
	movq %r15, -32(%rbp)
	mov -64(%rbp), %r15
	mov %r15, -32(%rbp)
	jmp uuid_00000000000794f0
uuid_00000000000794ee:
#call function set.block-size : Arrow<Cons<Array<MallocBlock,?>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000794e8
	jmp uuid_00000000000794ea
uuid_00000000000794e8:
	movq $malloc_SB_block_SB_tail_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq -40(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
uuid_00000000000794ea:
	mov -56(%RBP),%RSP
	add $-56, %RSP
uuid_00000000000794f0:
	mov -48(%RBP),%RSP
	add $-56, %RSP
#call function .block-data : Arrow<Array<MallocBlock,?>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_data_CL_ArrowArray_QM__QM_Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
_DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock:
	pushq $0
	push %RBP
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794f1
#call function .block-size : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_size_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq $24, %RAX
	addq %R14, %RAX
	movq %RAX, %R14
	movq -8(%RBP), %RAX
	addq %R14, %RAX
	pushq %RAX
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
	jmp uuid_00000000000794f3
uuid_00000000000794f1:
	movq $1073741824, -24(%rbp)
uuid_00000000000794f3:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
free_CL_ArrowNilArray_QM__QM_:
	movq -8(%RBP), %RAX
	movq $24, %R14
	subq %R14, %RAX
	push %RAX
#call function .block-prev : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_prev_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -32(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794f4
	jmp uuid_00000000000794f6
uuid_00000000000794f4:
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000794f6:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794f7
	jmp uuid_00000000000794f9
uuid_00000000000794f7:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000794f9:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov %rbp, %rsp
	sub $16, %rsp
	ret
malloc_CL_ArrowArray_QM__QM_U64:
#call function malloc : Arrow<Cons<U64,U64>,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
malloc_CL_ArrowArray_QM__QM_ConsU64U64:
	push %RBP
	movq $malloc_SB_block_SB_head_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794fa
	jmp uuid_00000000000794fc
uuid_00000000000794fa:
#call function malloc-new-page : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call malloc_SB_new_SB_page_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000794fc:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov $malloc_SB_first_SB_free_CL_U64, %r15
	pushq 0(%r15)
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000794fd
	jmp uuid_00000000000794ff
uuid_00000000000794fd:
	mov $malloc_SB_block_SB_head_CL_U64, %r14
	movq 0(%r14), %r15
	movq %r15, -40(%rbp)
	mov 0(%r14), %r15
	mov %r15, -40(%rbp)
uuid_00000000000794ff:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	pushq $0
uuid_0000000000079503:
#call function .free-space : Arrow<Array<MallocBlock,?>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_free_SB_space_CL_ArrowU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079504
	jmp uuid_0000000000079505
uuid_0000000000079504:
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	mov $malloc_SB_first_SB_free_CL_U64, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	mov -40(%rbp), %r15
	mov %r15, 0(%r14)
	push %RBP
	movq -16(%RBP), %RAX
	movq $malloc_SB_large_SB_size_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	setge %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079500
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
	jmp uuid_0000000000079502
uuid_0000000000079500:
uuid_0000000000079502:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	add $8, %RSP
	jmp uuid_0000000000079503
uuid_0000000000079505:
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	pushq 0(%r15)
	pushq $8
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function % : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq $8, %RAX
	movq -64(%RBP), %R14
	subq %R14, %RAX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call _MD__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	movq $malloc_SB_block_SB_tail_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq -72(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
	mov $malloc_SB_block_SB_tail_CL_U64, %r15
	pushq 0(%r15)
	movq -80(%RBP), %RAX
	movq $24, %R14
	addq %R14, %RAX
	push %RAX
	movq -88(%RBP), %RAX
	movq -8(%RBP), %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $malloc_SB_block_SB_tail_CL_U64, %r14
	movq %r15, 0(%r14)
#call function .block-next : Arrow<Array<MallocBlock,?>,Array<MallocBlock,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _DT_block_SB_next_CL_ArrowArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -96(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079506
	jmp uuid_0000000000079508
uuid_0000000000079506:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079508:
	mov -104(%RBP),%RSP
	add $-104, %RSP
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function set.block-size : Arrow<Cons<Array<MallocBlock,?>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_size_CL_ArrowNilConsU64Array_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function set.block-next : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $0
	mov %RBX, %RBP
	call set_DT_block_SB_next_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
	movq -80(%RBP), %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079509
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007950b
uuid_0000000000079509:
#call function set.block-prev : Arrow<Cons<Array<MallocBlock,?>,Array<MallocBlock,?>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $0
	mov %RBX, %RBP
	call set_DT_block_SB_prev_CL_ArrowNilConsArray_QM_MallocBlockArray_QM_MallocBlock
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007950b:
	mov -112(%RBP),%RSP
	add $-112, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
non_SB_zero_CL_ArrowU64Type:
	mov $3, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64AST:
	mov $10, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64FragmentKV:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64FragmentList:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
non_SB_zero_CL_ArrowU64Context:
	mov $2, %RAX
	pushq %RAX
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
non_SB_zero_CL_ArrowU64TContext:
	mov $2, %RAX
	pushq %RAX
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
non_SB_zero_CL_ArrowU64FContext:
	mov $1, %RAX
	pushq %RAX
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
non_SB_zero_CL_ArrowU64STypeList:
	mov $1, %RAX
	pushq %RAX
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
non_SB_zero_CL_ArrowU64StringTypeList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64StringList:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64StringU64List:
	mov $1, %RAX
	pushq %RAX
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
non_SB_zero_CL_ArrowU64StringStringList:
	mov $1, %RAX
	pushq %RAX
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
non_SB_zero_CL_ArrowU64StringSList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
non_SB_zero_CL_ArrowU64MacroList:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
non_SB_zero_CL_ArrowU64SfxList:
	mov $1, %RAX
	pushq %RAX
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
mangle_SB_identifier_CL_ArrowSString:
	pushq $0
	pushq $0
	pushq $3
uuid_0000000000079571:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_0000000000079572
	jmp uuid_0000000000079573
uuid_0000000000079572:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -48(%rbp)
	mov -64(%RBP), %AL
	mov $33, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007956e
	push %RBP
	pushq -48(%rbp)
	mov -80(%RBP), %AL
	mov $36, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007956b
	push %RBP
	pushq -48(%rbp)
	mov -96(%RBP), %AL
	mov $37, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079568
	push %RBP
	pushq -48(%rbp)
	mov -112(%RBP), %AL
	mov $38, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079565
	push %RBP
	pushq -48(%rbp)
	mov -128(%RBP), %AL
	mov $42, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079562
	push %RBP
	pushq -48(%rbp)
	mov -144(%RBP), %AL
	mov $43, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007955f
	push %RBP
	pushq -48(%rbp)
	mov -160(%RBP), %AL
	mov $45, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007955c
	push %RBP
	pushq -48(%rbp)
	mov -176(%RBP), %AL
	mov $46, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079559
	push %RBP
	pushq -48(%rbp)
	mov -192(%RBP), %AL
	mov $47, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079556
	push %RBP
	pushq -48(%rbp)
	mov -208(%RBP), %AL
	mov $58, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079553
	push %RBP
	pushq -48(%rbp)
	mov -224(%RBP), %AL
	mov $59, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079550
	push %RBP
	pushq -48(%rbp)
	mov -240(%RBP), %AL
	mov $60, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007954d
	push %RBP
	pushq -48(%rbp)
	mov -256(%RBP), %AL
	mov $61, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007954a
	push %RBP
	pushq -48(%rbp)
	mov -272(%RBP), %AL
	mov $62, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079547
	push %RBP
	pushq -48(%rbp)
	mov -288(%RBP), %AL
	mov $63, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079544
	push %RBP
	pushq -48(%rbp)
	mov -304(%RBP), %AL
	mov $64, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079541
	push %RBP
	pushq -48(%rbp)
	mov -320(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007953e
	push %RBP
	pushq -48(%rbp)
	mov -336(%RBP), %AL
	mov $93, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007953b
	push %RBP
	pushq -48(%rbp)
	mov -352(%RBP), %AL
	mov $94, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079538
	push %RBP
	pushq -48(%rbp)
	mov -368(%RBP), %AL
	mov $95, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079535
	push %RBP
	pushq -48(%rbp)
	mov -384(%RBP), %AL
	mov $96, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079532
	push %RBP
	pushq -48(%rbp)
	mov -400(%RBP), %AL
	mov $124, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007952f
	push %RBP
	pushq -48(%rbp)
	mov -416(%RBP), %AL
	mov $126, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007952c
	push %RBP
	pushq -48(%rbp)
	jmp uuid_0000000000079529
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079528
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007952b
uuid_0000000000079529:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007952b:
	mov -424(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007952e
uuid_000000000007952c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079527
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007952e:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_0000000000079531
uuid_000000000007952f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079526
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079531:
	mov -392(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_0000000000079534
uuid_0000000000079532:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079525
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079534:
	mov -376(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000079537
uuid_0000000000079535:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079524
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079537:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007953a
uuid_0000000000079538:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079523
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007953a:
	mov -344(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007953d
uuid_000000000007953b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079522
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007953d:
	mov -328(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_0000000000079540
uuid_000000000007953e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079521
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079540:
	mov -312(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_0000000000079543
uuid_0000000000079541:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079520
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079543:
	mov -296(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_0000000000079546
uuid_0000000000079544:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007951f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079546:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_0000000000079549
uuid_0000000000079547:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007951e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079549:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007954c
uuid_000000000007954a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007951d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007954c:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007954f
uuid_000000000007954d:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007951c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007954f:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000079552
uuid_0000000000079550:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007951b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079552:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_0000000000079555
uuid_0000000000079553:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007951a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079555:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_0000000000079558
uuid_0000000000079556:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079519
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079558:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007955b
uuid_0000000000079559:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079518
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007955b:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007955e
uuid_000000000007955c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079517
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007955e:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000079561
uuid_000000000007955f:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079516
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079561:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000079564
uuid_0000000000079562:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079515
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079564:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_0000000000079567
uuid_0000000000079565:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079514
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079567:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007956a
uuid_0000000000079568:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079513
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007956a:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007956d
uuid_000000000007956b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079512
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007956d:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_0000000000079570
uuid_000000000007956e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079511
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079570:
	mov -56(%RBP),%RSP
	add $-64, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_0000000000079571
uuid_0000000000079573:
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mangle_SB_identifier_CL_ArrowSType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795a7
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079578
	jmp uuid_000000000007957a
uuid_0000000000079578:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079575
	jmp uuid_0000000000079577
uuid_0000000000079575:
	movb $1, -152(%rbp)
uuid_0000000000079577:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007957a:
	mov -160(%RBP),%RSP
	add $-176, %RSP
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795a4
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079581
	jmp uuid_0000000000079583
uuid_0000000000079581:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007957e
	jmp uuid_0000000000079580
uuid_000000000007957e:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007957b
	jmp uuid_000000000007957d
uuid_000000000007957b:
	movb $1, -216(%rbp)
uuid_000000000007957d:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000079580:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000079583:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795a1
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007959a
	jmp uuid_000000000007959c
uuid_000000000007959a:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079597
	jmp uuid_0000000000079599
uuid_0000000000079597:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079594
	jmp uuid_0000000000079596
uuid_0000000000079594:
	movb $1, -328(%rbp)
uuid_0000000000079596:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_0000000000079599:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007959c:
	mov -336(%RBP),%RSP
	add $-400, %RSP
	mov -328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007959e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007959d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000795a0
uuid_000000000007959e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000795a0:
	mov -296(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_00000000000795a3
uuid_00000000000795a1:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000079591:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079592
	jmp uuid_0000000000079593
uuid_0000000000079592:
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007958a
	jmp uuid_000000000007958c
uuid_000000000007958a:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079587
	jmp uuid_0000000000079589
uuid_0000000000079587:
	push %RBP
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	jmp uuid_0000000000079584
	jmp uuid_0000000000079586
uuid_0000000000079584:
	movb $1, -384(%rbp)
uuid_0000000000079586:
	mov -448(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000079589:
	mov -400(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007958c:
	mov -392(%RBP),%RSP
	add $-472, %RSP
	mov -384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007958e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007958d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079590
uuid_000000000007958e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	movq -440(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -240(%rbp)
uuid_0000000000079590:
	mov -336(%RBP),%RSP
	add $-472, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079591
uuid_0000000000079593:
uuid_00000000000795a3:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_00000000000795a6
uuid_00000000000795a4:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000795a6:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_00000000000795a9
uuid_00000000000795a7:
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079574
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_00000000000795a9:
	mov -88(%RBP),%RSP
	add $-112, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mangle_SB_identifier_CL_ArrowStringConsTypeString:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<String,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007951a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function mangle-identifier : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
escape_SB_string_CL_ArrowStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_00000000000795cf:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000795d0
	jmp uuid_00000000000795d1
uuid_00000000000795d0:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	mov $92, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795cc
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	jmp uuid_00000000000795ce
uuid_00000000000795cc:
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -56(%rbp)
	mov -72(%RBP), %AL
	mov $58, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795c9
	push %RBP
	pushq -56(%rbp)
	mov -88(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795c6
	push %RBP
	pushq -56(%rbp)
	mov -104(%RBP), %AL
	mov $92, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795c3
	push %RBP
	pushq -56(%rbp)
	mov -120(%RBP), %AL
	mov $93, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795c0
	push %RBP
	pushq -56(%rbp)
	mov -136(%RBP), %AL
	mov $96, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795bd
	push %RBP
	pushq -56(%rbp)
	mov -152(%RBP), %AL
	mov $110, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795ba
	push %RBP
	pushq -56(%rbp)
	mov -168(%RBP), %AL
	mov $111, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795b7
	push %RBP
	pushq -56(%rbp)
	mov -184(%RBP), %AL
	mov $116, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795b4
	push %RBP
	pushq -56(%rbp)
	mov -200(%RBP), %AL
	mov $115, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795b1
	push %RBP
	pushq -56(%rbp)
	jmp uuid_00000000000795ae
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_00000000000795ad
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000795b0
uuid_00000000000795ae:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000795ab
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U8,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000795ac
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_00000000000795b0:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_00000000000795b3
uuid_00000000000795b1:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $32
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795b3:
	mov -192(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_00000000000795b6
uuid_00000000000795b4:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $9
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795b6:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_00000000000795b9
uuid_00000000000795b7:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $35
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795b9:
	mov -160(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_00000000000795bc
uuid_00000000000795ba:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $10
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795bc:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_00000000000795bf
uuid_00000000000795bd:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $39
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795bf:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_00000000000795c2
uuid_00000000000795c0:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $41
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795c2:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_00000000000795c5
uuid_00000000000795c3:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000795aa
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795c5:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_00000000000795c8
uuid_00000000000795c6:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795c8:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_00000000000795cb
uuid_00000000000795c9:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $59
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_00000000000795cb:
	mov -64(%RBP),%RSP
	add $-72, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_00000000000795ce:
	mov -48(%RBP),%RSP
	add $-72, %RSP
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_00000000000795cf
uuid_00000000000795d1:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
escape_SB_literal_CL_ArrowStringString:
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007960e:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007960f
	jmp uuid_0000000000079610
uuid_000000000007960f:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -48(%rbp)
	mov -64(%RBP), %AL
	mov $34, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007960b
	push %RBP
	pushq -48(%rbp)
	mov -80(%RBP), %AL
	mov $92, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079608
	push %RBP
	pushq -48(%rbp)
	mov -96(%RBP), %AL
	mov $10, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079605
	push %RBP
	pushq -48(%rbp)
	jmp uuid_0000000000079602
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079601
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079604
uuid_0000000000079602:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079604:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_0000000000079607
uuid_0000000000079605:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079600
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079607:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007960a
uuid_0000000000079608:
	pushq $uuid_0000000000079496
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %AL
	mov $58, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795f9
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795f6
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %AL
	mov $92, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795f3
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %AL
	mov $93, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795f0
	push %RBP
	pushq -96(%rbp)
	mov -176(%RBP), %AL
	mov $96, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795ed
	push %RBP
	pushq -96(%rbp)
	mov -192(%RBP), %AL
	mov $108, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795ea
	push %RBP
	pushq -96(%rbp)
	mov -208(%RBP), %AL
	mov $110, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795e7
	push %RBP
	pushq -96(%rbp)
	mov -224(%RBP), %AL
	mov $111, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795e4
	push %RBP
	pushq -96(%rbp)
	mov -240(%RBP), %AL
	mov $115, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795e1
	push %RBP
	pushq -96(%rbp)
	mov -256(%RBP), %AL
	mov $116, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000795de
	push %RBP
	jmp uuid_00000000000795db
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_00000000000795da
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000795dd
uuid_00000000000795db:
uuid_00000000000795dd:
	mov -264(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_00000000000795e0
uuid_00000000000795de:
	movq $uuid_00000000000795d9, -88(%rbp)
uuid_00000000000795e0:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000795e3
uuid_00000000000795e1:
	movq $uuid_00000000000793bb, -88(%rbp)
uuid_00000000000795e3:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_00000000000795e6
uuid_00000000000795e4:
	movq $uuid_00000000000795d8, -88(%rbp)
uuid_00000000000795e6:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_00000000000795e9
uuid_00000000000795e7:
	movq $uuid_00000000000795d7, -88(%rbp)
uuid_00000000000795e9:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_00000000000795ec
uuid_00000000000795ea:
	movq $uuid_00000000000795d6, -88(%rbp)
uuid_00000000000795ec:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_00000000000795ef
uuid_00000000000795ed:
	movq $uuid_00000000000795d5, -88(%rbp)
uuid_00000000000795ef:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_00000000000795f2
uuid_00000000000795f0:
	movq $uuid_00000000000793bc, -88(%rbp)
uuid_00000000000795f2:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_00000000000795f5
uuid_00000000000795f3:
	movq $uuid_00000000000795d4, -88(%rbp)
uuid_00000000000795f5:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_00000000000795f8
uuid_00000000000795f6:
	movq $uuid_00000000000793ba, -88(%rbp)
uuid_00000000000795f8:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_00000000000795fb
uuid_00000000000795f9:
	movq $uuid_00000000000795d3, -88(%rbp)
uuid_00000000000795fb:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_00000000000795fd
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000795fc
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_00000000000795ff
uuid_00000000000795fd:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -88(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
uuid_00000000000795ff:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007960a:
	mov -72(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007960d
uuid_000000000007960b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000795d2
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007960d:
	mov -56(%RBP),%RSP
	add $-64, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007960e
uuid_0000000000079610:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
escape_SB_string_CL_ArrowSS:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079614
	jmp uuid_0000000000079616
uuid_0000000000079614:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079611
	jmp uuid_0000000000079613
uuid_0000000000079611:
	movb $1, -96(%rbp)
uuid_0000000000079613:
	mov -112(%RBP),%RSP
	add $-120, %RSP
uuid_0000000000079616:
	mov -104(%RBP),%RSP
	add $-120, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079627
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007961d
	jmp uuid_000000000007961f
uuid_000000000007961d:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007961a
	jmp uuid_000000000007961c
uuid_000000000007961a:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079617
	jmp uuid_0000000000079619
uuid_0000000000079617:
	movb $1, -160(%rbp)
uuid_0000000000079619:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007961c:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007961f:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079624
	push %RBP
	jmp uuid_0000000000079621
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079620
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079623
uuid_0000000000079621:
uuid_0000000000079623:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000079626
uuid_0000000000079624:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079626:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_0000000000079629
uuid_0000000000079627:
	pushq $0
#call function escape-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079629:
	mov -64(%RBP),%RSP
	add $-120, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
exit_SB_error_CL_ArrowNilConsASTString:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079649
	jmp uuid_000000000007964b
uuid_0000000000079649:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079636
	jmp uuid_0000000000079638
uuid_0000000000079636:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007962d
	jmp uuid_000000000007962f
uuid_000000000007962d:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007962a
	jmp uuid_000000000007962c
uuid_000000000007962a:
	movb $1, -440(%rbp)
uuid_000000000007962c:
	mov -456(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007962f:
	mov -448(%RBP),%RSP
	add $-480, %RSP
	mov -440(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079633
	jmp uuid_0000000000079635
uuid_0000000000079633:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079630
	jmp uuid_0000000000079632
uuid_0000000000079630:
	movb $1, -344(%rbp)
uuid_0000000000079632:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000079635:
	mov -360(%RBP),%RSP
	add $-560, %RSP
uuid_0000000000079638:
	mov -352(%RBP),%RSP
	add $-560, %RSP
	mov -344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079646
	jmp uuid_0000000000079648
uuid_0000000000079646:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079640
	jmp uuid_0000000000079642
uuid_0000000000079640:
	push %RBP
	jmp uuid_000000000007963d
	jmp uuid_000000000007963f
uuid_000000000007963d:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007963a
	jmp uuid_000000000007963c
uuid_000000000007963a:
	movb $1, -648(%rbp)
uuid_000000000007963c:
	mov -672(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007963f:
	mov -664(%RBP),%RSP
	add $-680, %RSP
uuid_0000000000079642:
	mov -656(%RBP),%RSP
	add $-680, %RSP
	mov -648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079643
	jmp uuid_0000000000079645
uuid_0000000000079643:
	movb $1, -248(%rbp)
uuid_0000000000079645:
	mov -568(%RBP),%RSP
	add $-680, %RSP
uuid_0000000000079648:
	mov -264(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007964b:
	mov -256(%RBP),%RSP
	add $-680, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079661
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079655
	jmp uuid_0000000000079657
uuid_0000000000079655:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079652
	jmp uuid_0000000000079654
uuid_0000000000079652:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007964f
	jmp uuid_0000000000079651
uuid_000000000007964f:
	movb $1, -768(%rbp)
uuid_0000000000079651:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000079654:
	mov -784(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000079657:
	mov -776(%RBP),%RSP
	add $-936, %RSP
	mov -768(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007965e
	push %RBP
	jmp uuid_000000000007965b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007965a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007965d
uuid_000000000007965b:
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007965d:
	mov -944(%RBP),%RSP
	add $-944, %RSP
	jmp uuid_0000000000079660
uuid_000000000007965e:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079658
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007964d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007964d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079659
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079660:
	mov -688(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_0000000000079663
uuid_0000000000079661:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007964c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007964d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007964e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079663:
	mov -168(%RBP),%RSP
	add $-680, %RSP
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
is_SB_variable_CL_ArrowU64String:
	pushq $0
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %AL
	mov $33, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796ff
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %AL
	mov $36, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796fc
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %AL
	mov $37, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796f9
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %AL
	mov $38, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796f6
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %AL
	mov $42, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796f3
	push %RBP
	pushq -32(%rbp)
	mov -128(%RBP), %AL
	mov $43, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796f0
	push %RBP
	pushq -32(%rbp)
	mov -144(%RBP), %AL
	mov $45, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796ed
	push %RBP
	pushq -32(%rbp)
	mov -160(%RBP), %AL
	mov $46, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796ea
	push %RBP
	pushq -32(%rbp)
	mov -176(%RBP), %AL
	mov $47, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796e7
	push %RBP
	pushq -32(%rbp)
	mov -192(%RBP), %AL
	mov $58, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796e4
	push %RBP
	pushq -32(%rbp)
	mov -208(%RBP), %AL
	mov $59, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796e1
	push %RBP
	pushq -32(%rbp)
	mov -224(%RBP), %AL
	mov $60, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796de
	push %RBP
	pushq -32(%rbp)
	mov -240(%RBP), %AL
	mov $61, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796db
	push %RBP
	pushq -32(%rbp)
	mov -256(%RBP), %AL
	mov $62, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796d8
	push %RBP
	pushq -32(%rbp)
	mov -272(%RBP), %AL
	mov $63, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796d5
	push %RBP
	pushq -32(%rbp)
	mov -288(%RBP), %AL
	mov $64, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796d2
	push %RBP
	pushq -32(%rbp)
	mov -304(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796cf
	push %RBP
	pushq -32(%rbp)
	mov -320(%RBP), %AL
	mov $93, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796cc
	push %RBP
	pushq -32(%rbp)
	mov -336(%RBP), %AL
	mov $94, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796c9
	push %RBP
	pushq -32(%rbp)
	mov -352(%RBP), %AL
	mov $95, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796c6
	push %RBP
	pushq -32(%rbp)
	mov -368(%RBP), %AL
	mov $97, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796c3
	push %RBP
	pushq -32(%rbp)
	mov -384(%RBP), %AL
	mov $98, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796c0
	push %RBP
	pushq -32(%rbp)
	mov -400(%RBP), %AL
	mov $99, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796bd
	push %RBP
	pushq -32(%rbp)
	mov -416(%RBP), %AL
	mov $100, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796ba
	push %RBP
	pushq -32(%rbp)
	mov -432(%RBP), %AL
	mov $101, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796b7
	push %RBP
	pushq -32(%rbp)
	mov -448(%RBP), %AL
	mov $102, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796b4
	push %RBP
	pushq -32(%rbp)
	mov -464(%RBP), %AL
	mov $103, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796b1
	push %RBP
	pushq -32(%rbp)
	mov -480(%RBP), %AL
	mov $104, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796ae
	push %RBP
	pushq -32(%rbp)
	mov -496(%RBP), %AL
	mov $105, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796ab
	push %RBP
	pushq -32(%rbp)
	mov -512(%RBP), %AL
	mov $106, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796a8
	push %RBP
	pushq -32(%rbp)
	mov -528(%RBP), %AL
	mov $107, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796a5
	push %RBP
	pushq -32(%rbp)
	mov -544(%RBP), %AL
	mov $108, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000796a2
	push %RBP
	pushq -32(%rbp)
	mov -560(%RBP), %AL
	mov $109, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007969f
	push %RBP
	pushq -32(%rbp)
	mov -576(%RBP), %AL
	mov $110, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007969c
	push %RBP
	pushq -32(%rbp)
	mov -592(%RBP), %AL
	mov $111, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079699
	push %RBP
	pushq -32(%rbp)
	mov -608(%RBP), %AL
	mov $112, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079696
	push %RBP
	pushq -32(%rbp)
	mov -624(%RBP), %AL
	mov $113, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079693
	push %RBP
	pushq -32(%rbp)
	mov -640(%RBP), %AL
	mov $114, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079690
	push %RBP
	pushq -32(%rbp)
	mov -656(%RBP), %AL
	mov $115, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007968d
	push %RBP
	pushq -32(%rbp)
	mov -672(%RBP), %AL
	mov $116, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007968a
	push %RBP
	pushq -32(%rbp)
	mov -688(%RBP), %AL
	mov $117, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079687
	push %RBP
	pushq -32(%rbp)
	mov -704(%RBP), %AL
	mov $118, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079684
	push %RBP
	pushq -32(%rbp)
	mov -720(%RBP), %AL
	mov $119, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079681
	push %RBP
	pushq -32(%rbp)
	mov -736(%RBP), %AL
	mov $120, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007967e
	push %RBP
	pushq -32(%rbp)
	mov -752(%RBP), %AL
	mov $121, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007967b
	push %RBP
	pushq -32(%rbp)
	mov -768(%RBP), %AL
	mov $122, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079678
	push %RBP
	pushq -32(%rbp)
	mov -784(%RBP), %AL
	mov $124, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079675
	push %RBP
	pushq -32(%rbp)
	mov -800(%RBP), %AL
	mov $126, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079672
	push %RBP
	jmp uuid_000000000007966f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007966e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079671
uuid_000000000007966f:
uuid_0000000000079671:
	mov -808(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_0000000000079674
uuid_0000000000079672:
	movb $1, -24(%rbp)
uuid_0000000000079674:
	mov -792(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_0000000000079677
uuid_0000000000079675:
	movb $1, -24(%rbp)
uuid_0000000000079677:
	mov -776(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007967a
uuid_0000000000079678:
	movb $1, -24(%rbp)
uuid_000000000007967a:
	mov -760(%RBP),%RSP
	add $-768, %RSP
	jmp uuid_000000000007967d
uuid_000000000007967b:
	movb $1, -24(%rbp)
uuid_000000000007967d:
	mov -744(%RBP),%RSP
	add $-752, %RSP
	jmp uuid_0000000000079680
uuid_000000000007967e:
	movb $1, -24(%rbp)
uuid_0000000000079680:
	mov -728(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_0000000000079683
uuid_0000000000079681:
	movb $1, -24(%rbp)
uuid_0000000000079683:
	mov -712(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_0000000000079686
uuid_0000000000079684:
	movb $1, -24(%rbp)
uuid_0000000000079686:
	mov -696(%RBP),%RSP
	add $-704, %RSP
	jmp uuid_0000000000079689
uuid_0000000000079687:
	movb $1, -24(%rbp)
uuid_0000000000079689:
	mov -680(%RBP),%RSP
	add $-688, %RSP
	jmp uuid_000000000007968c
uuid_000000000007968a:
	movb $1, -24(%rbp)
uuid_000000000007968c:
	mov -664(%RBP),%RSP
	add $-672, %RSP
	jmp uuid_000000000007968f
uuid_000000000007968d:
	movb $1, -24(%rbp)
uuid_000000000007968f:
	mov -648(%RBP),%RSP
	add $-656, %RSP
	jmp uuid_0000000000079692
uuid_0000000000079690:
	movb $1, -24(%rbp)
uuid_0000000000079692:
	mov -632(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_0000000000079695
uuid_0000000000079693:
	movb $1, -24(%rbp)
uuid_0000000000079695:
	mov -616(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_0000000000079698
uuid_0000000000079696:
	movb $1, -24(%rbp)
uuid_0000000000079698:
	mov -600(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007969b
uuid_0000000000079699:
	movb $1, -24(%rbp)
uuid_000000000007969b:
	mov -584(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007969e
uuid_000000000007969c:
	movb $1, -24(%rbp)
uuid_000000000007969e:
	mov -568(%RBP),%RSP
	add $-576, %RSP
	jmp uuid_00000000000796a1
uuid_000000000007969f:
	movb $1, -24(%rbp)
uuid_00000000000796a1:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_00000000000796a4
uuid_00000000000796a2:
	movb $1, -24(%rbp)
uuid_00000000000796a4:
	mov -536(%RBP),%RSP
	add $-544, %RSP
	jmp uuid_00000000000796a7
uuid_00000000000796a5:
	movb $1, -24(%rbp)
uuid_00000000000796a7:
	mov -520(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_00000000000796aa
uuid_00000000000796a8:
	movb $1, -24(%rbp)
uuid_00000000000796aa:
	mov -504(%RBP),%RSP
	add $-512, %RSP
	jmp uuid_00000000000796ad
uuid_00000000000796ab:
	movb $1, -24(%rbp)
uuid_00000000000796ad:
	mov -488(%RBP),%RSP
	add $-496, %RSP
	jmp uuid_00000000000796b0
uuid_00000000000796ae:
	movb $1, -24(%rbp)
uuid_00000000000796b0:
	mov -472(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_00000000000796b3
uuid_00000000000796b1:
	movb $1, -24(%rbp)
uuid_00000000000796b3:
	mov -456(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_00000000000796b6
uuid_00000000000796b4:
	movb $1, -24(%rbp)
uuid_00000000000796b6:
	mov -440(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_00000000000796b9
uuid_00000000000796b7:
	movb $1, -24(%rbp)
uuid_00000000000796b9:
	mov -424(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_00000000000796bc
uuid_00000000000796ba:
	movb $1, -24(%rbp)
uuid_00000000000796bc:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_00000000000796bf
uuid_00000000000796bd:
	movb $1, -24(%rbp)
uuid_00000000000796bf:
	mov -392(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_00000000000796c2
uuid_00000000000796c0:
	movb $1, -24(%rbp)
uuid_00000000000796c2:
	mov -376(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_00000000000796c5
uuid_00000000000796c3:
	movb $1, -24(%rbp)
uuid_00000000000796c5:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_00000000000796c8
uuid_00000000000796c6:
	movb $1, -24(%rbp)
uuid_00000000000796c8:
	mov -344(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_00000000000796cb
uuid_00000000000796c9:
	movb $1, -24(%rbp)
uuid_00000000000796cb:
	mov -328(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_00000000000796ce
uuid_00000000000796cc:
	movb $1, -24(%rbp)
uuid_00000000000796ce:
	mov -312(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_00000000000796d1
uuid_00000000000796cf:
	movb $1, -24(%rbp)
uuid_00000000000796d1:
	mov -296(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_00000000000796d4
uuid_00000000000796d2:
	movb $1, -24(%rbp)
uuid_00000000000796d4:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_00000000000796d7
uuid_00000000000796d5:
	movb $1, -24(%rbp)
uuid_00000000000796d7:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_00000000000796da
uuid_00000000000796d8:
	movb $1, -24(%rbp)
uuid_00000000000796da:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_00000000000796dd
uuid_00000000000796db:
	movb $1, -24(%rbp)
uuid_00000000000796dd:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_00000000000796e0
uuid_00000000000796de:
	movb $1, -24(%rbp)
uuid_00000000000796e0:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_00000000000796e3
uuid_00000000000796e1:
	movb $1, -24(%rbp)
uuid_00000000000796e3:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_00000000000796e6
uuid_00000000000796e4:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	mov $58, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079668
	jmp uuid_000000000007966a
uuid_0000000000079668:
	movb $1, -24(%rbp)
uuid_000000000007966a:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007966b
	jmp uuid_000000000007966d
uuid_000000000007966b:
	movb $1, -24(%rbp)
uuid_000000000007966d:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_00000000000796e6:
	mov -184(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_00000000000796e9
uuid_00000000000796e7:
	movb $1, -24(%rbp)
uuid_00000000000796e9:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_00000000000796ec
uuid_00000000000796ea:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_0000000000079664
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079665
	movb $1, -24(%rbp)
	jmp uuid_0000000000079667
uuid_0000000000079665:
uuid_0000000000079667:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_00000000000796ec:
	mov -152(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_00000000000796ef
uuid_00000000000796ed:
	movb $1, -24(%rbp)
uuid_00000000000796ef:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_00000000000796f2
uuid_00000000000796f0:
	movb $1, -24(%rbp)
uuid_00000000000796f2:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_00000000000796f5
uuid_00000000000796f3:
	movb $1, -24(%rbp)
uuid_00000000000796f5:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_00000000000796f8
uuid_00000000000796f6:
	movb $1, -24(%rbp)
uuid_00000000000796f8:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_00000000000796fb
uuid_00000000000796f9:
	movb $1, -24(%rbp)
uuid_00000000000796fb:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_00000000000796fe
uuid_00000000000796fc:
	movb $1, -24(%rbp)
uuid_00000000000796fe:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_0000000000079701
uuid_00000000000796ff:
	movb $1, -24(%rbp)
uuid_0000000000079701:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_0000000000079702
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079703
	jmp uuid_0000000000079705
uuid_0000000000079703:
	movb $0, -24(%rbp)
uuid_0000000000079705:
	mov -56(%RBP),%RSP
	add $-56, %RSP
	mov -24(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringIsUsed:
	pushq $uuid_0000000000079496
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079718
	push %RBP
	pushq -32(%rbp)
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079715
	push %RBP
	pushq -32(%rbp)
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079712
	push %RBP
	pushq -32(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007970f
	push %RBP
	pushq -32(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007970c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007970b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007970e
uuid_000000000007970c:
	movq $uuid_000000000007970a, -24(%rbp)
uuid_000000000007970e:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_0000000000079711
uuid_000000000007970f:
	movq $uuid_0000000000079709, -24(%rbp)
uuid_0000000000079711:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_0000000000079714
uuid_0000000000079712:
	movq $uuid_0000000000079708, -24(%rbp)
uuid_0000000000079714:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_0000000000079717
uuid_0000000000079715:
	movq $uuid_0000000000079707, -24(%rbp)
uuid_0000000000079717:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007971a
uuid_0000000000079718:
	movq $uuid_0000000000079706, -24(%rbp)
uuid_000000000007971a:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
to_SB_string_CL_ArrowStringType:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
to_SB_string_CL_ArrowSListType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079737
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079723
	jmp uuid_0000000000079725
uuid_0000000000079723:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079720
	jmp uuid_0000000000079722
uuid_0000000000079720:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	jmp uuid_000000000007971d
	jmp uuid_000000000007971f
uuid_000000000007971d:
	movb $1, -216(%rbp)
uuid_000000000007971f:
	mov -280(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000079722:
	mov -232(%RBP),%RSP
	add $-304, %RSP
uuid_0000000000079725:
	mov -224(%RBP),%RSP
	add $-304, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079734
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007972c
	jmp uuid_000000000007972e
uuid_000000000007972c:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079729
	jmp uuid_000000000007972b
uuid_0000000000079729:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	jmp uuid_0000000000079726
	jmp uuid_0000000000079728
uuid_0000000000079726:
	movb $1, -360(%rbp)
uuid_0000000000079728:
	mov -424(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007972b:
	mov -376(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007972e:
	mov -368(%RBP),%RSP
	add $-448, %RSP
	mov -360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079731
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079730
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079733
uuid_0000000000079731:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<List<Type>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowSListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007972f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000079733:
	mov -312(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_0000000000079736
uuid_0000000000079734:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_0000000000079736:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_0000000000079739
uuid_0000000000079737:
uuid_0000000000079739:
	mov -120(%RBP),%RSP
	add $-160, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
to_SB_string_SB_impl_CL_ArrowSType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079781
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007973d
	jmp uuid_000000000007973f
uuid_000000000007973d:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007973a
	jmp uuid_000000000007973c
uuid_000000000007973a:
	movb $1, -152(%rbp)
uuid_000000000007973c:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007973f:
	mov -160(%RBP),%RSP
	add $-176, %RSP
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007977e
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079746
	jmp uuid_0000000000079748
uuid_0000000000079746:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079743
	jmp uuid_0000000000079745
uuid_0000000000079743:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079740
	jmp uuid_0000000000079742
uuid_0000000000079740:
	movb $1, -216(%rbp)
uuid_0000000000079742:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000079745:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000079748:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007977b
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079750
	jmp uuid_0000000000079752
uuid_0000000000079750:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007974d
	jmp uuid_000000000007974f
uuid_000000000007974d:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007974a
	jmp uuid_000000000007974c
uuid_000000000007974a:
	movb $1, -328(%rbp)
uuid_000000000007974c:
	mov -392(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007974f:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_0000000000079752:
	mov -336(%RBP),%RSP
	add $-400, %RSP
	mov -328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079778
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079763
	jmp uuid_0000000000079765
uuid_0000000000079763:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079759
	jmp uuid_000000000007975b
uuid_0000000000079759:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079756
	jmp uuid_0000000000079758
uuid_0000000000079756:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	jmp uuid_0000000000079753
	jmp uuid_0000000000079755
uuid_0000000000079753:
	movb $1, -504(%rbp)
uuid_0000000000079755:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_0000000000079758:
	mov -520(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007975b:
	mov -512(%RBP),%RSP
	add $-592, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079760
	jmp uuid_0000000000079762
uuid_0000000000079760:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007975d
	jmp uuid_000000000007975f
uuid_000000000007975d:
	movb $1, -440(%rbp)
uuid_000000000007975f:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000079762:
	mov -456(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000079765:
	mov -448(%RBP),%RSP
	add $-608, %RSP
	mov -440(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079775
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007976c
	jmp uuid_000000000007976e
uuid_000000000007976c:
	push %RBP
	mov -632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079769
	jmp uuid_000000000007976b
uuid_0000000000079769:
	push %RBP
	mov -624(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079766
	jmp uuid_0000000000079768
uuid_0000000000079766:
	movb $1, -648(%rbp)
uuid_0000000000079768:
	mov -712(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007976b:
	mov -664(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007976e:
	mov -656(%RBP),%RSP
	add $-720, %RSP
	mov -648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079772
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079771
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079774
uuid_0000000000079772:
	pushq $0
	pushq -720(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007976f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<List<Type>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowSListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079770
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000079774:
	mov -616(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_0000000000079777
uuid_0000000000079775:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007975c
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000079777:
	mov -408(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007977a
uuid_0000000000079778:
	pushq $0
	pushq -400(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007977a:
	mov -296(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007977d
uuid_000000000007977b:
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function to-string-impl : Arrow<Type,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call to_SB_string_SB_impl_CL_ArrowSType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079749
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007977d:
	mov -184(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_0000000000079780
uuid_000000000007977e:
	pushq $0
	pushq -176(%rbp)
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000079780:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000079783
uuid_0000000000079781:
	pushq $0
	pushq $uuid_0000000000079574
	pushq $2
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_0000000000079783:
	mov -88(%RBP),%RSP
	add $-112, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007978a
	jmp uuid_000000000007978c
uuid_000000000007978a:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079787
	jmp uuid_0000000000079789
uuid_0000000000079787:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079784
	jmp uuid_0000000000079786
uuid_0000000000079784:
	movb $1, -192(%rbp)
uuid_0000000000079786:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000079789:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007978c:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797f1
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007979f
	jmp uuid_00000000000797a1
uuid_000000000007979f:
	push %RBP
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079790
	jmp uuid_0000000000079792
uuid_0000000000079790:
	push %RBP
	mov -368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007978d
	jmp uuid_000000000007978f
uuid_000000000007978d:
	movb $1, -384(%rbp)
uuid_000000000007978f:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_0000000000079792:
	mov -392(%RBP),%RSP
	add $-408, %RSP
	mov -384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007979c
	jmp uuid_000000000007979e
uuid_000000000007979c:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079796
	jmp uuid_0000000000079798
uuid_0000000000079796:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079793
	jmp uuid_0000000000079795
uuid_0000000000079793:
	movb $1, -448(%rbp)
uuid_0000000000079795:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_0000000000079798:
	mov -456(%RBP),%RSP
	add $-472, %RSP
	mov -448(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079799
	jmp uuid_000000000007979b
uuid_0000000000079799:
	movb $1, -336(%rbp)
uuid_000000000007979b:
	mov -416(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007979e:
	mov -352(%RBP),%RSP
	add $-472, %RSP
uuid_00000000000797a1:
	mov -344(%RBP),%RSP
	add $-472, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797ee
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797ba
	jmp uuid_00000000000797bc
uuid_00000000000797ba:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797a8
	jmp uuid_00000000000797aa
uuid_00000000000797a8:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797a5
	jmp uuid_00000000000797a7
uuid_00000000000797a5:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797a2
	jmp uuid_00000000000797a4
uuid_00000000000797a2:
	movb $1, -592(%rbp)
uuid_00000000000797a4:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_00000000000797a7:
	mov -608(%RBP),%RSP
	add $-664, %RSP
uuid_00000000000797aa:
	mov -600(%RBP),%RSP
	add $-664, %RSP
	mov -592(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797b7
	jmp uuid_00000000000797b9
uuid_00000000000797b7:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797b1
	jmp uuid_00000000000797b3
uuid_00000000000797b1:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797ae
	jmp uuid_00000000000797b0
uuid_00000000000797ae:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797ab
	jmp uuid_00000000000797ad
uuid_00000000000797ab:
	movb $1, -704(%rbp)
uuid_00000000000797ad:
	mov -752(%RBP),%RSP
	add $-776, %RSP
uuid_00000000000797b0:
	mov -720(%RBP),%RSP
	add $-776, %RSP
uuid_00000000000797b3:
	mov -712(%RBP),%RSP
	add $-776, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797b4
	jmp uuid_00000000000797b6
uuid_00000000000797b4:
	movb $1, -544(%rbp)
uuid_00000000000797b6:
	mov -672(%RBP),%RSP
	add $-776, %RSP
uuid_00000000000797b9:
	mov -560(%RBP),%RSP
	add $-776, %RSP
uuid_00000000000797bc:
	mov -552(%RBP),%RSP
	add $-776, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797eb
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797db
	jmp uuid_00000000000797dd
uuid_00000000000797db:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797c9
	jmp uuid_00000000000797cb
uuid_00000000000797c9:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797c6
	jmp uuid_00000000000797c8
uuid_00000000000797c6:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000797c3
	jmp uuid_00000000000797c5
uuid_00000000000797c3:
	movb $1, -896(%rbp)
uuid_00000000000797c5:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_00000000000797c8:
	mov -912(%RBP),%RSP
	add $-968, %RSP
uuid_00000000000797cb:
	mov -904(%RBP),%RSP
	add $-968, %RSP
	mov -896(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797d8
	jmp uuid_00000000000797da
uuid_00000000000797d8:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797d2
	jmp uuid_00000000000797d4
uuid_00000000000797d2:
	push %RBP
	mov -992(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000797cf
	jmp uuid_00000000000797d1
uuid_00000000000797cf:
	push %RBP
	mov -984(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000797cc
	jmp uuid_00000000000797ce
uuid_00000000000797cc:
	movb $1, -1008(%rbp)
uuid_00000000000797ce:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
uuid_00000000000797d1:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_00000000000797d4:
	mov -1016(%RBP),%RSP
	add $-1080, %RSP
	mov -1008(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797d5
	jmp uuid_00000000000797d7
uuid_00000000000797d5:
	movb $1, -848(%rbp)
uuid_00000000000797d7:
	mov -976(%RBP),%RSP
	add $-1080, %RSP
uuid_00000000000797da:
	mov -864(%RBP),%RSP
	add $-1080, %RSP
uuid_00000000000797dd:
	mov -856(%RBP),%RSP
	add $-1080, %RSP
	mov -848(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000797e8
	push %RBP
	jmp uuid_00000000000797e5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_00000000000797e4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000797e7
uuid_00000000000797e5:
uuid_00000000000797e7:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_00000000000797ea
uuid_00000000000797e8:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797e1
	jmp uuid_00000000000797e3
uuid_00000000000797e1:
	push %RBP
#call function == : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797de
	jmp uuid_00000000000797e0
uuid_00000000000797de:
	movq $1, -64(%rbp)
uuid_00000000000797e0:
	mov -1096(%RBP),%RSP
	add $-1096, %RSP
uuid_00000000000797e3:
	mov -1088(%RBP),%RSP
	add $-1096, %RSP
uuid_00000000000797ea:
	mov -784(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_00000000000797ed
uuid_00000000000797eb:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797c0
	jmp uuid_00000000000797c2
uuid_00000000000797c0:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000797bd
	jmp uuid_00000000000797bf
uuid_00000000000797bd:
	movq $1, -64(%rbp)
uuid_00000000000797bf:
	mov -792(%RBP),%RSP
	add $-792, %RSP
uuid_00000000000797c2:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_00000000000797ed:
	mov -480(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_00000000000797f0
uuid_00000000000797ee:
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_00000000000797f0:
	mov -272(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_00000000000797f3
uuid_00000000000797f1:
	movq $1, -64(%rbp)
uuid_00000000000797f3:
	mov -128(%RBP),%RSP
	add $-264, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
typeof_CL_ArrowTypeAST:
#call function .lookup : Arrow<Cons<Cons<BTreeIs<AST,Type>,AST>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %r15
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsASTBTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
ascript_CL_ArrowNilConsTypeAST:
#call function .bind : Arrow<Cons<Cons<Array<BTreeIs<AST,Type>,?>,AST>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsASTArray_QM_BTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079af0
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079aed
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079807
	jmp uuid_0000000000079809
uuid_0000000000079807:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079804
	jmp uuid_0000000000079806
uuid_0000000000079804:
	push %RBP
	mov -536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079801
	jmp uuid_0000000000079803
uuid_0000000000079801:
	movb $1, -560(%rbp)
uuid_0000000000079803:
	mov -656(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000079806:
	mov -576(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000079809:
	mov -568(%RBP),%RSP
	add $-728, %RSP
	mov -560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079aea
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079810
	jmp uuid_0000000000079812
uuid_0000000000079810:
	push %RBP
	jmp uuid_000000000007980d
	jmp uuid_000000000007980f
uuid_000000000007980d:
	push %RBP
	jmp uuid_000000000007980a
	jmp uuid_000000000007980c
uuid_000000000007980a:
	movb $1, -816(%rbp)
uuid_000000000007980c:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007980f:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_0000000000079812:
	mov -824(%RBP),%RSP
	add $-840, %RSP
	mov -816(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ae7
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079819
	jmp uuid_000000000007981b
uuid_0000000000079819:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079816
	jmp uuid_0000000000079818
uuid_0000000000079816:
	push %RBP
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	jmp uuid_0000000000079813
	jmp uuid_0000000000079815
uuid_0000000000079813:
	movb $1, -928(%rbp)
uuid_0000000000079815:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000079818:
	mov -944(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007981b:
	mov -936(%RBP),%RSP
	add $-1080, %RSP
	mov -928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ae4
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007984d
	jmp uuid_000000000007984f
uuid_000000000007984d:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007983a
	jmp uuid_000000000007983c
uuid_000000000007983a:
	push %RBP
	mov -1248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079828
	jmp uuid_000000000007982a
uuid_0000000000079828:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	jmp uuid_0000000000079825
	jmp uuid_0000000000079827
uuid_0000000000079825:
	movb $1, -1360(%rbp)
uuid_0000000000079827:
	mov -1376(%RBP),%RSP
	add $-1400, %RSP
uuid_000000000007982a:
	mov -1368(%RBP),%RSP
	add $-1400, %RSP
	mov -1360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079837
	jmp uuid_0000000000079839
uuid_0000000000079837:
	push %RBP
	mov -1240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079831
	jmp uuid_0000000000079833
uuid_0000000000079831:
	push %RBP
	jmp uuid_000000000007982e
	jmp uuid_0000000000079830
uuid_000000000007982e:
	push %RBP
	jmp uuid_000000000007982b
	jmp uuid_000000000007982d
uuid_000000000007982b:
	movb $1, -1488(%rbp)
uuid_000000000007982d:
	mov -1512(%RBP),%RSP
	add $-1512, %RSP
uuid_0000000000079830:
	mov -1504(%RBP),%RSP
	add $-1512, %RSP
uuid_0000000000079833:
	mov -1496(%RBP),%RSP
	add $-1512, %RSP
	mov -1488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079834
	jmp uuid_0000000000079836
uuid_0000000000079834:
	movb $1, -1264(%rbp)
uuid_0000000000079836:
	mov -1408(%RBP),%RSP
	add $-1512, %RSP
uuid_0000000000079839:
	mov -1280(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007983c:
	mov -1272(%RBP),%RSP
	add $-1512, %RSP
	mov -1264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007984a
	jmp uuid_000000000007984c
uuid_000000000007984a:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079844
	jmp uuid_0000000000079846
uuid_0000000000079844:
	push %RBP
	jmp uuid_0000000000079841
	jmp uuid_0000000000079843
uuid_0000000000079841:
	push %RBP
	mov -1528(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007983e
	jmp uuid_0000000000079840
uuid_000000000007983e:
	movb $1, -1600(%rbp)
uuid_0000000000079840:
	mov -1624(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000079843:
	mov -1616(%RBP),%RSP
	add $-1632, %RSP
uuid_0000000000079846:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
	mov -1600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079847
	jmp uuid_0000000000079849
uuid_0000000000079847:
	movb $1, -1168(%rbp)
uuid_0000000000079849:
	mov -1520(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007984c:
	mov -1184(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007984f:
	mov -1176(%RBP),%RSP
	add $-1632, %RSP
	mov -1168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ae1
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1712(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007988a
	jmp uuid_000000000007988c
uuid_000000000007988a:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079878
	jmp uuid_000000000007987a
uuid_0000000000079878:
	push %RBP
	mov -1800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007986f
	jmp uuid_0000000000079871
uuid_000000000007986f:
	push %RBP
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	jmp uuid_000000000007986c
	jmp uuid_000000000007986e
uuid_000000000007986c:
	movb $1, -1912(%rbp)
uuid_000000000007986e:
	mov -1928(%RBP),%RSP
	add $-1952, %RSP
uuid_0000000000079871:
	mov -1920(%RBP),%RSP
	add $-1952, %RSP
	mov -1912(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079875
	jmp uuid_0000000000079877
uuid_0000000000079875:
	push %RBP
	mov -1792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079872
	jmp uuid_0000000000079874
uuid_0000000000079872:
	movb $1, -1816(%rbp)
uuid_0000000000079874:
	mov -1960(%RBP),%RSP
	add $-2032, %RSP
uuid_0000000000079877:
	mov -1832(%RBP),%RSP
	add $-2032, %RSP
uuid_000000000007987a:
	mov -1824(%RBP),%RSP
	add $-2032, %RSP
	mov -1816(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079887
	jmp uuid_0000000000079889
uuid_0000000000079887:
	push %RBP
	mov -1696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2112(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079881
	jmp uuid_0000000000079883
uuid_0000000000079881:
	push %RBP
	jmp uuid_000000000007987e
	jmp uuid_0000000000079880
uuid_000000000007987e:
	push %RBP
	mov -2048(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007987b
	jmp uuid_000000000007987d
uuid_000000000007987b:
	movb $1, -2120(%rbp)
uuid_000000000007987d:
	mov -2144(%RBP),%RSP
	add $-2152, %RSP
uuid_0000000000079880:
	mov -2136(%RBP),%RSP
	add $-2152, %RSP
uuid_0000000000079883:
	mov -2128(%RBP),%RSP
	add $-2152, %RSP
	mov -2120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079884
	jmp uuid_0000000000079886
uuid_0000000000079884:
	movb $1, -1720(%rbp)
uuid_0000000000079886:
	mov -2040(%RBP),%RSP
	add $-2152, %RSP
uuid_0000000000079889:
	mov -1736(%RBP),%RSP
	add $-2152, %RSP
uuid_000000000007988c:
	mov -1728(%RBP),%RSP
	add $-2152, %RSP
	mov -1720(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ade
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2232(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798b9
	jmp uuid_00000000000798bb
uuid_00000000000798b9:
	push %RBP
	mov -2224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2328(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798a6
	jmp uuid_00000000000798a8
uuid_00000000000798a6:
	push %RBP
	jmp uuid_00000000000798a3
	jmp uuid_00000000000798a5
uuid_00000000000798a3:
	push %RBP
	mov -2264(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000798a0
	jmp uuid_00000000000798a2
uuid_00000000000798a0:
	movb $1, -2336(%rbp)
uuid_00000000000798a2:
	mov -2360(%RBP),%RSP
	add $-2368, %RSP
uuid_00000000000798a5:
	mov -2352(%RBP),%RSP
	add $-2368, %RSP
uuid_00000000000798a8:
	mov -2344(%RBP),%RSP
	add $-2368, %RSP
	mov -2336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798b6
	jmp uuid_00000000000798b8
uuid_00000000000798b6:
	push %RBP
	mov -2216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2448(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798b0
	jmp uuid_00000000000798b2
uuid_00000000000798b0:
	push %RBP
	jmp uuid_00000000000798ad
	jmp uuid_00000000000798af
uuid_00000000000798ad:
	push %RBP
	mov -2384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2488(%rbp)
	pushq $uuid_00000000000798a9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798aa
	jmp uuid_00000000000798ac
uuid_00000000000798aa:
	movb $1, -2456(%rbp)
uuid_00000000000798ac:
	mov -2480(%RBP),%RSP
	add $-2488, %RSP
uuid_00000000000798af:
	mov -2472(%RBP),%RSP
	add $-2488, %RSP
uuid_00000000000798b2:
	mov -2464(%RBP),%RSP
	add $-2488, %RSP
	mov -2456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798b3
	jmp uuid_00000000000798b5
uuid_00000000000798b3:
	movb $1, -2240(%rbp)
uuid_00000000000798b5:
	mov -2376(%RBP),%RSP
	add $-2488, %RSP
uuid_00000000000798b8:
	mov -2256(%RBP),%RSP
	add $-2488, %RSP
uuid_00000000000798bb:
	mov -2248(%RBP),%RSP
	add $-2488, %RSP
	mov -2240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079adb
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2568(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798d6
	jmp uuid_00000000000798d8
uuid_00000000000798d6:
	push %RBP
	mov -2560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798c3
	jmp uuid_00000000000798c5
uuid_00000000000798c3:
	push %RBP
	jmp uuid_00000000000798c0
	jmp uuid_00000000000798c2
uuid_00000000000798c0:
	push %RBP
	mov -2600(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000798bd
	jmp uuid_00000000000798bf
uuid_00000000000798bd:
	movb $1, -2672(%rbp)
uuid_00000000000798bf:
	mov -2696(%RBP),%RSP
	add $-2704, %RSP
uuid_00000000000798c2:
	mov -2688(%RBP),%RSP
	add $-2704, %RSP
uuid_00000000000798c5:
	mov -2680(%RBP),%RSP
	add $-2704, %RSP
	mov -2672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798d3
	jmp uuid_00000000000798d5
uuid_00000000000798d3:
	push %RBP
	mov -2552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798cd
	jmp uuid_00000000000798cf
uuid_00000000000798cd:
	push %RBP
	jmp uuid_00000000000798ca
	jmp uuid_00000000000798cc
uuid_00000000000798ca:
	push %RBP
	mov -2720(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2824(%rbp)
	pushq $uuid_00000000000798c6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798c7
	jmp uuid_00000000000798c9
uuid_00000000000798c7:
	movb $1, -2792(%rbp)
uuid_00000000000798c9:
	mov -2816(%RBP),%RSP
	add $-2824, %RSP
uuid_00000000000798cc:
	mov -2808(%RBP),%RSP
	add $-2824, %RSP
uuid_00000000000798cf:
	mov -2800(%RBP),%RSP
	add $-2824, %RSP
	mov -2792(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798d0
	jmp uuid_00000000000798d2
uuid_00000000000798d0:
	movb $1, -2576(%rbp)
uuid_00000000000798d2:
	mov -2712(%RBP),%RSP
	add $-2824, %RSP
uuid_00000000000798d5:
	mov -2592(%RBP),%RSP
	add $-2824, %RSP
uuid_00000000000798d8:
	mov -2584(%RBP),%RSP
	add $-2824, %RSP
	mov -2576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ad8
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -2904(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798fb
	jmp uuid_00000000000798fd
uuid_00000000000798fb:
	push %RBP
	mov -2896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000798f8
	jmp uuid_00000000000798fa
uuid_00000000000798f8:
	push %RBP
	mov -2888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3080(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798f2
	jmp uuid_00000000000798f4
uuid_00000000000798f2:
	push %RBP
	mov -3072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000798ef
	jmp uuid_00000000000798f1
uuid_00000000000798ef:
	push %RBP
	mov -3064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798e9
	jmp uuid_00000000000798eb
uuid_00000000000798e9:
	push %RBP
	mov -3248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000798e6
	jmp uuid_00000000000798e8
uuid_00000000000798e6:
	push %RBP
	mov -3240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3432(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798e0
	jmp uuid_00000000000798e2
uuid_00000000000798e0:
	push %RBP
	jmp uuid_00000000000798dd
	jmp uuid_00000000000798df
uuid_00000000000798dd:
	push %RBP
	mov -3368(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3472(%rbp)
	pushq $uuid_00000000000798d9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798da
	jmp uuid_00000000000798dc
uuid_00000000000798da:
	movb $1, -3440(%rbp)
uuid_00000000000798dc:
	mov -3464(%RBP),%RSP
	add $-3472, %RSP
uuid_00000000000798df:
	mov -3456(%RBP),%RSP
	add $-3472, %RSP
uuid_00000000000798e2:
	mov -3448(%RBP),%RSP
	add $-3472, %RSP
	mov -3440(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798e3
	jmp uuid_00000000000798e5
uuid_00000000000798e3:
	movb $1, -3264(%rbp)
uuid_00000000000798e5:
	mov -3360(%RBP),%RSP
	add $-3472, %RSP
uuid_00000000000798e8:
	mov -3280(%RBP),%RSP
	add $-3472, %RSP
uuid_00000000000798eb:
	mov -3272(%RBP),%RSP
	add $-3472, %RSP
	mov -3264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798ec
	jmp uuid_00000000000798ee
uuid_00000000000798ec:
	movb $1, -3088(%rbp)
uuid_00000000000798ee:
	mov -3184(%RBP),%RSP
	add $-3472, %RSP
uuid_00000000000798f1:
	mov -3104(%RBP),%RSP
	add $-3472, %RSP
uuid_00000000000798f4:
	mov -3096(%RBP),%RSP
	add $-3472, %RSP
	mov -3088(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000798f5
	jmp uuid_00000000000798f7
uuid_00000000000798f5:
	movb $1, -2912(%rbp)
uuid_00000000000798f7:
	mov -3008(%RBP),%RSP
	add $-3472, %RSP
uuid_00000000000798fa:
	mov -2928(%RBP),%RSP
	add $-3472, %RSP
uuid_00000000000798fd:
	mov -2920(%RBP),%RSP
	add $-3472, %RSP
	mov -2912(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ad5
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -3552(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007991f
	jmp uuid_0000000000079921
uuid_000000000007991f:
	push %RBP
	mov -3544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3648(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007990d
	jmp uuid_000000000007990f
uuid_000000000007990d:
	push %RBP
	mov -3640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3744(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079904
	jmp uuid_0000000000079906
uuid_0000000000079904:
	push %RBP
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	jmp uuid_0000000000079901
	jmp uuid_0000000000079903
uuid_0000000000079901:
	movb $1, -3752(%rbp)
uuid_0000000000079903:
	mov -3768(%RBP),%RSP
	add $-3792, %RSP
uuid_0000000000079906:
	mov -3760(%RBP),%RSP
	add $-3792, %RSP
	mov -3752(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007990a
	jmp uuid_000000000007990c
uuid_000000000007990a:
	push %RBP
	mov -3632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079907
	jmp uuid_0000000000079909
uuid_0000000000079907:
	movb $1, -3656(%rbp)
uuid_0000000000079909:
	mov -3800(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007990c:
	mov -3672(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007990f:
	mov -3664(%RBP),%RSP
	add $-3872, %RSP
	mov -3656(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007991c
	jmp uuid_000000000007991e
uuid_000000000007991c:
	push %RBP
	mov -3536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3952(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079916
	jmp uuid_0000000000079918
uuid_0000000000079916:
	push %RBP
	jmp uuid_0000000000079913
	jmp uuid_0000000000079915
uuid_0000000000079913:
	push %RBP
	mov -3888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3992(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079910
	jmp uuid_0000000000079912
uuid_0000000000079910:
	movb $1, -3960(%rbp)
uuid_0000000000079912:
	mov -3984(%RBP),%RSP
	add $-3992, %RSP
uuid_0000000000079915:
	mov -3976(%RBP),%RSP
	add $-3992, %RSP
uuid_0000000000079918:
	mov -3968(%RBP),%RSP
	add $-3992, %RSP
	mov -3960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079919
	jmp uuid_000000000007991b
uuid_0000000000079919:
	movb $1, -3560(%rbp)
uuid_000000000007991b:
	mov -3880(%RBP),%RSP
	add $-3992, %RSP
uuid_000000000007991e:
	mov -3576(%RBP),%RSP
	add $-3992, %RSP
uuid_0000000000079921:
	mov -3568(%RBP),%RSP
	add $-3992, %RSP
	mov -3560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ad2
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079965
	jmp uuid_0000000000079967
uuid_0000000000079965:
	push %RBP
	mov -4064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4168(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079952
	jmp uuid_0000000000079954
uuid_0000000000079952:
	push %RBP
	jmp uuid_000000000007994f
	jmp uuid_0000000000079951
uuid_000000000007994f:
	movb $1, -4176(%rbp)
uuid_0000000000079951:
	mov -4192(%RBP),%RSP
	add $-4192, %RSP
uuid_0000000000079954:
	mov -4184(%RBP),%RSP
	add $-4192, %RSP
	mov -4176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079962
	jmp uuid_0000000000079964
uuid_0000000000079962:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4272(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007995c
	jmp uuid_000000000007995e
uuid_000000000007995c:
	push %RBP
	jmp uuid_0000000000079959
	jmp uuid_000000000007995b
uuid_0000000000079959:
	push %RBP
	mov -4208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq $uuid_0000000000079955
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079956
	jmp uuid_0000000000079958
uuid_0000000000079956:
	movb $1, -4280(%rbp)
uuid_0000000000079958:
	mov -4304(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007995b:
	mov -4296(%RBP),%RSP
	add $-4312, %RSP
uuid_000000000007995e:
	mov -4288(%RBP),%RSP
	add $-4312, %RSP
	mov -4280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007995f
	jmp uuid_0000000000079961
uuid_000000000007995f:
	movb $1, -4080(%rbp)
uuid_0000000000079961:
	mov -4200(%RBP),%RSP
	add $-4312, %RSP
uuid_0000000000079964:
	mov -4096(%RBP),%RSP
	add $-4312, %RSP
uuid_0000000000079967:
	mov -4088(%RBP),%RSP
	add $-4312, %RSP
	mov -4080(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079acf
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079986
	jmp uuid_0000000000079988
uuid_0000000000079986:
	push %RBP
	mov -4384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079983
	jmp uuid_0000000000079985
uuid_0000000000079983:
	push %RBP
	mov -4376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007997d
	jmp uuid_000000000007997f
uuid_000000000007997d:
	push %RBP
	jmp uuid_000000000007997a
	jmp uuid_000000000007997c
uuid_000000000007997a:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	pushq $uuid_0000000000079976
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079977
	jmp uuid_0000000000079979
uuid_0000000000079977:
	movb $1, -4576(%rbp)
uuid_0000000000079979:
	mov -4600(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007997c:
	mov -4592(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007997f:
	mov -4584(%RBP),%RSP
	add $-4608, %RSP
	mov -4576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079980
	jmp uuid_0000000000079982
uuid_0000000000079980:
	movb $1, -4400(%rbp)
uuid_0000000000079982:
	mov -4496(%RBP),%RSP
	add $-4608, %RSP
uuid_0000000000079985:
	mov -4416(%RBP),%RSP
	add $-4608, %RSP
uuid_0000000000079988:
	mov -4408(%RBP),%RSP
	add $-4608, %RSP
	mov -4400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079acc
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079999
	jmp uuid_000000000007999b
uuid_0000000000079999:
	push %RBP
	mov -4680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079996
	jmp uuid_0000000000079998
uuid_0000000000079996:
	push %RBP
	mov -4672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4864(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079990
	jmp uuid_0000000000079992
uuid_0000000000079990:
	push %RBP
	jmp uuid_000000000007998d
	jmp uuid_000000000007998f
uuid_000000000007998d:
	push %RBP
	mov -4800(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq $uuid_0000000000079989
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007998a
	jmp uuid_000000000007998c
uuid_000000000007998a:
	movb $1, -4872(%rbp)
uuid_000000000007998c:
	mov -4896(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007998f:
	mov -4888(%RBP),%RSP
	add $-4904, %RSP
uuid_0000000000079992:
	mov -4880(%RBP),%RSP
	add $-4904, %RSP
	mov -4872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079993
	jmp uuid_0000000000079995
uuid_0000000000079993:
	movb $1, -4696(%rbp)
uuid_0000000000079995:
	mov -4792(%RBP),%RSP
	add $-4904, %RSP
uuid_0000000000079998:
	mov -4712(%RBP),%RSP
	add $-4904, %RSP
uuid_000000000007999b:
	mov -4704(%RBP),%RSP
	add $-4904, %RSP
	mov -4696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ac9
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -4984(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799fa
	jmp uuid_00000000000799fc
uuid_00000000000799fa:
	push %RBP
	mov -4976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_00000000000799f7
	jmp uuid_00000000000799f9
uuid_00000000000799f7:
	push %RBP
	mov -4968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5160(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799f1
	jmp uuid_00000000000799f3
uuid_00000000000799f1:
	push %RBP
	pushq -5136(%RBP)
	pushq -5144(%RBP)
	pushq -5152(%RBP)
	jmp uuid_00000000000799ee
	jmp uuid_00000000000799f0
uuid_00000000000799ee:
	push %RBP
	mov -5128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5288(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799eb
	jmp uuid_00000000000799ed
uuid_00000000000799eb:
	push %RBP
	mov -5120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799e5
	jmp uuid_00000000000799e7
uuid_00000000000799e5:
	push %RBP
	jmp uuid_00000000000799e2
	jmp uuid_00000000000799e4
uuid_00000000000799e2:
	push %RBP
	mov -5304(%RBP), %RAX
	push %RAX
	jmp uuid_00000000000799df
	jmp uuid_00000000000799e1
uuid_00000000000799df:
	movb $1, -5376(%rbp)
uuid_00000000000799e1:
	mov -5400(%RBP),%RSP
	add $-5408, %RSP
uuid_00000000000799e4:
	mov -5392(%RBP),%RSP
	add $-5408, %RSP
uuid_00000000000799e7:
	mov -5384(%RBP),%RSP
	add $-5408, %RSP
	mov -5376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799e8
	jmp uuid_00000000000799ea
uuid_00000000000799e8:
	movb $1, -5168(%rbp)
uuid_00000000000799ea:
	mov -5296(%RBP),%RSP
	add $-5408, %RSP
uuid_00000000000799ed:
	mov -5216(%RBP),%RSP
	add $-5408, %RSP
uuid_00000000000799f0:
	mov -5184(%RBP),%RSP
	add $-5408, %RSP
uuid_00000000000799f3:
	mov -5176(%RBP),%RSP
	add $-5408, %RSP
	mov -5168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799f4
	jmp uuid_00000000000799f6
uuid_00000000000799f4:
	movb $1, -4992(%rbp)
uuid_00000000000799f6:
	mov -5088(%RBP),%RSP
	add $-5408, %RSP
uuid_00000000000799f9:
	mov -5008(%RBP),%RSP
	add $-5408, %RSP
uuid_00000000000799fc:
	mov -5000(%RBP),%RSP
	add $-5408, %RSP
	mov -4992(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ac6
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -5488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a28
	jmp uuid_0000000000079a2a
uuid_0000000000079a28:
	push %RBP
	mov -5480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a25
	jmp uuid_0000000000079a27
uuid_0000000000079a25:
	push %RBP
	mov -5472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a22
	jmp uuid_0000000000079a24
uuid_0000000000079a22:
	movb $1, -5496(%rbp)
uuid_0000000000079a24:
	mov -5592(%RBP),%RSP
	add $-5664, %RSP
uuid_0000000000079a27:
	mov -5512(%RBP),%RSP
	add $-5664, %RSP
uuid_0000000000079a2a:
	mov -5504(%RBP),%RSP
	add $-5664, %RSP
	mov -5496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ac3
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -5744(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a5e
	jmp uuid_0000000000079a60
uuid_0000000000079a5e:
	push %RBP
	pushq -5720(%RBP)
	pushq -5728(%RBP)
	pushq -5736(%RBP)
	jmp uuid_0000000000079a5b
	jmp uuid_0000000000079a5d
uuid_0000000000079a5b:
	push %RBP
	mov -5712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a58
	jmp uuid_0000000000079a5a
uuid_0000000000079a58:
	push %RBP
	mov -5704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a55
	jmp uuid_0000000000079a57
uuid_0000000000079a55:
	movb $1, -5752(%rbp)
uuid_0000000000079a57:
	mov -5880(%RBP),%RSP
	add $-5952, %RSP
uuid_0000000000079a5a:
	mov -5800(%RBP),%RSP
	add $-5952, %RSP
uuid_0000000000079a5d:
	mov -5768(%RBP),%RSP
	add $-5952, %RSP
uuid_0000000000079a60:
	mov -5760(%RBP),%RSP
	add $-5952, %RSP
	mov -5752(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ac0
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6032(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a94
	jmp uuid_0000000000079a96
uuid_0000000000079a94:
	push %RBP
	pushq -5976(%RBP)
	pushq -5984(%RBP)
	pushq -5992(%RBP)
	pushq -6000(%RBP)
	pushq -6008(%RBP)
	pushq -6016(%RBP)
	pushq -6024(%RBP)
	jmp uuid_0000000000079a91
	jmp uuid_0000000000079a93
uuid_0000000000079a91:
	push %RBP
	mov -5968(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079a8e
	jmp uuid_0000000000079a90
uuid_0000000000079a8e:
	movb $1, -6040(%rbp)
uuid_0000000000079a90:
	mov -6120(%RBP),%RSP
	add $-6128, %RSP
uuid_0000000000079a93:
	mov -6056(%RBP),%RSP
	add $-6128, %RSP
uuid_0000000000079a96:
	mov -6048(%RBP),%RSP
	add $-6128, %RSP
	mov -6040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079abd
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6208(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a9d
	jmp uuid_0000000000079a9f
uuid_0000000000079a9d:
	push %RBP
	jmp uuid_0000000000079a9a
	jmp uuid_0000000000079a9c
uuid_0000000000079a9a:
	push %RBP
	mov -6144(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079a97
	jmp uuid_0000000000079a99
uuid_0000000000079a97:
	movb $1, -6216(%rbp)
uuid_0000000000079a99:
	mov -6240(%RBP),%RSP
	add $-6248, %RSP
uuid_0000000000079a9c:
	mov -6232(%RBP),%RSP
	add $-6248, %RSP
uuid_0000000000079a9f:
	mov -6224(%RBP),%RSP
	add $-6248, %RSP
	mov -6216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079aba
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -6328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079aaf
	jmp uuid_0000000000079ab1
uuid_0000000000079aaf:
	push %RBP
	jmp uuid_0000000000079aac
	jmp uuid_0000000000079aae
uuid_0000000000079aac:
	movb $1, -6336(%rbp)
uuid_0000000000079aae:
	mov -6352(%RBP),%RSP
	add $-6352, %RSP
uuid_0000000000079ab1:
	mov -6344(%RBP),%RSP
	add $-6352, %RSP
	mov -6336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ab7
	push %RBP
	jmp uuid_0000000000079ab4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079ab3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079ab6
uuid_0000000000079ab4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079ab2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079ab6:
	mov -6360(%RBP),%RSP
	add $-6360, %RSP
	jmp uuid_0000000000079ab9
uuid_0000000000079ab7:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079ab9:
	mov -6256(%RBP),%RSP
	add $-6352, %RSP
	jmp uuid_0000000000079abc
uuid_0000000000079aba:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079aa9
#call function typeof-tag : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6248(%rbp)
	mov %RBX, %RBP
	call typeof_SB_tag_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079aa6
	jmp uuid_0000000000079aa8
uuid_0000000000079aa6:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079aa0
	jmp uuid_0000000000079aa2
uuid_0000000000079aa0:
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6280(%RBP)
	popq -6272(%RBP)
	popq -6264(%RBP)
uuid_0000000000079aa2:
	mov -6296(%RBP),%RSP
	add $-6296, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079aa3
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a4a
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000079a4a
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6312(%rbp)
	pushq -6320(%rbp)
	pushq -6328(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_0000000000079aa5
uuid_0000000000079aa3:
uuid_0000000000079aa5:
	mov -6304(%RBP),%RSP
	add $-6304, %RSP
uuid_0000000000079aa8:
	mov -6288(%RBP),%RSP
	add $-6304, %RSP
	jmp uuid_0000000000079aab
uuid_0000000000079aa9:
uuid_0000000000079aab:
	mov -6256(%RBP),%RSP
	add $-6256, %RSP
uuid_0000000000079abc:
	mov -6136(%RBP),%RSP
	add $-6256, %RSP
	jmp uuid_0000000000079abf
uuid_0000000000079abd:
#call function typeof-var : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6128(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function typeof-var : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6128(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079abf:
	mov -5960(%RBP),%RSP
	add $-6152, %RSP
	jmp uuid_0000000000079ac2
uuid_0000000000079ac0:
#call function infer-ctx : Arrow<Cons<TContext,AST>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5888(%rbp)
	pushq -5896(%rbp)
	pushq -5904(%rbp)
	pushq -5912(%rbp)
	pushq -5920(%rbp)
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	mov %RBX, %RBP
	call infer_SB_ctx_CL_ArrowTContextConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a86
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	jmp uuid_0000000000079a88
uuid_0000000000079a86:
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	push %RBP
	pushq -5968(%rbp)
	pushq -5976(%rbp)
	pushq -5984(%rbp)
	pushq -5992(%rbp)
	pushq -6000(%rbp)
	pushq -6008(%rbp)
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
	pushq $0
	push %RBP
	mov -6112(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a7f
	jmp uuid_0000000000079a81
uuid_0000000000079a7f:
	push %RBP
	mov -6104(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6208(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a6d
	jmp uuid_0000000000079a6f
uuid_0000000000079a6d:
	push %RBP
	mov -6200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6304(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a64
	jmp uuid_0000000000079a66
uuid_0000000000079a64:
	push %RBP
	pushq -6280(%RBP)
	pushq -6288(%RBP)
	pushq -6296(%RBP)
	jmp uuid_0000000000079a61
	jmp uuid_0000000000079a63
uuid_0000000000079a61:
	movb $1, -6312(%rbp)
uuid_0000000000079a63:
	mov -6328(%RBP),%RSP
	add $-6352, %RSP
uuid_0000000000079a66:
	mov -6320(%RBP),%RSP
	add $-6352, %RSP
	mov -6312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a6a
	jmp uuid_0000000000079a6c
uuid_0000000000079a6a:
	push %RBP
	mov -6192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a67
	jmp uuid_0000000000079a69
uuid_0000000000079a67:
	movb $1, -6216(%rbp)
uuid_0000000000079a69:
	mov -6360(%RBP),%RSP
	add $-6432, %RSP
uuid_0000000000079a6c:
	mov -6232(%RBP),%RSP
	add $-6432, %RSP
uuid_0000000000079a6f:
	mov -6224(%RBP),%RSP
	add $-6432, %RSP
	mov -6216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a7c
	jmp uuid_0000000000079a7e
uuid_0000000000079a7c:
	push %RBP
	mov -6096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a76
	jmp uuid_0000000000079a78
uuid_0000000000079a76:
	push %RBP
	jmp uuid_0000000000079a73
	jmp uuid_0000000000079a75
uuid_0000000000079a73:
	push %RBP
	mov -6448(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6552(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a70
	jmp uuid_0000000000079a72
uuid_0000000000079a70:
	movb $1, -6520(%rbp)
uuid_0000000000079a72:
	mov -6544(%RBP),%RSP
	add $-6552, %RSP
uuid_0000000000079a75:
	mov -6536(%RBP),%RSP
	add $-6552, %RSP
uuid_0000000000079a78:
	mov -6528(%RBP),%RSP
	add $-6552, %RSP
	mov -6520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a79
	jmp uuid_0000000000079a7b
uuid_0000000000079a79:
	movb $1, -6120(%rbp)
uuid_0000000000079a7b:
	mov -6440(%RBP),%RSP
	add $-6552, %RSP
uuid_0000000000079a7e:
	mov -6136(%RBP),%RSP
	add $-6552, %RSP
uuid_0000000000079a81:
	mov -6128(%RBP),%RSP
	add $-6552, %RSP
	mov -6120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a83
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079a82
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079a85
uuid_0000000000079a83:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -6368(%rbp)
	pushq -6376(%rbp)
	pushq -6384(%rbp)
	pushq -6392(%rbp)
	pushq -6400(%rbp)
	pushq -6408(%rbp)
	pushq -6416(%rbp)
	pushq -6424(%rbp)
	pushq -6432(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq -6336(%rbp)
	pushq -6344(%rbp)
	pushq -6352(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079a85:
	mov -6040(%RBP),%RSP
	add $-6552, %RSP
uuid_0000000000079a88:
	mov -5960(%RBP),%RSP
	add $-6552, %RSP
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5888(%rbp)
	pushq -5896(%rbp)
	pushq -5904(%rbp)
	pushq -5912(%rbp)
	pushq -5920(%rbp)
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function enrich : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a89
	pushq -6560(%rbp)
	pushq -6568(%rbp)
	pushq -6576(%rbp)
	pushq -6584(%rbp)
	pushq -6592(%rbp)
	pushq -6600(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call enrich_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a8b
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a8a
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000079a8a
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6584(%rbp)
	pushq -6592(%rbp)
	pushq -6600(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_0000000000079a8d
uuid_0000000000079a8b:
uuid_0000000000079a8d:
	mov -6608(%RBP),%RSP
	add $-6608, %RSP
uuid_0000000000079ac2:
	mov -5672(%RBP),%RSP
	add $-6608, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $24, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000079ac5
uuid_0000000000079ac3:
	pushq $3
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a2b
	jmp uuid_0000000000079a2d
uuid_0000000000079a2b:
	pushq $0
	popq -5672(%RBP)
uuid_0000000000079a2d:
	mov -5680(%RBP),%RSP
	add $-5680, %RSP
	pushq $4
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a2e
	jmp uuid_0000000000079a30
uuid_0000000000079a2e:
	pushq $3
	popq -5688(%RBP)
uuid_0000000000079a30:
	mov -5696(%RBP),%RSP
	add $-5696, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -5672(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a31
	jmp uuid_0000000000079a33
uuid_0000000000079a31:
	pushq $0
	popq -5688(%RBP)
uuid_0000000000079a33:
	mov -5704(%RBP),%RSP
	add $-5704, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -5688(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function apply-or-cons-and-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call apply_SB_or_SB_cons_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5672(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a34
	jmp uuid_0000000000079a36
uuid_0000000000079a34:
#call function implicit-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call implicit_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -5728(%RBP)
	popq -5720(%RBP)
	popq -5712(%RBP)
uuid_0000000000079a36:
	mov -5736(%RBP),%RSP
	add $-5736, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $uuid_0000000000079a37
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a3a
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000079a3c
uuid_0000000000079a3a:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a38
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000079a38
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a37
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_0000000000079a39
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_0000000000079a3c:
	mov -5744(%RBP),%RSP
	add $-5768, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a52
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000079a54
uuid_0000000000079a52:
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	push %RBP
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5856(%rbp)
	pushq -5864(%rbp)
	pushq -5872(%rbp)
	pushq $0
	push %RBP
	mov -5952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a43
	jmp uuid_0000000000079a45
uuid_0000000000079a43:
	push %RBP
	jmp uuid_0000000000079a40
	jmp uuid_0000000000079a42
uuid_0000000000079a40:
	push %RBP
	mov -5888(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079a3d
	jmp uuid_0000000000079a3f
uuid_0000000000079a3d:
	movb $1, -5960(%rbp)
uuid_0000000000079a3f:
	mov -5984(%RBP),%RSP
	add $-5992, %RSP
uuid_0000000000079a42:
	mov -5976(%RBP),%RSP
	add $-5992, %RSP
uuid_0000000000079a45:
	mov -5968(%RBP),%RSP
	add $-5992, %RSP
	mov -5960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a4f
	push %RBP
	jmp uuid_0000000000079a4c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079a4b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079a4e
uuid_0000000000079a4c:
uuid_0000000000079a4e:
	mov -6000(%RBP),%RSP
	add $-6000, %RSP
	mov %RSP, %R14
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000079a51
uuid_0000000000079a4f:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5712(%rbp)
	pushq -5720(%rbp)
	pushq -5728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a46
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function var-name-if-var : Arrow<AST,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call var_SB_name_SB_if_SB_var_CL_ArrowStringAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a47
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5992(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a48
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6008(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a49
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6000(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -6032(%RBP)
	popq -6024(%RBP)
	popq -6016(%RBP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a4a
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000079a4a
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -6016(%rbp)
	pushq -6024(%rbp)
	pushq -6032(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_0000000000079a51:
	mov -5880(%RBP),%RSP
	add $-6056, %RSP
uuid_0000000000079a54:
	mov -5800(%RBP),%RSP
	add $-6056, %RSP
uuid_0000000000079ac5:
	mov -5416(%RBP),%RSP
	add $-6056, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000079ac8
uuid_0000000000079ac6:
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5408(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a01
	jmp uuid_0000000000079a03
uuid_0000000000079a01:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799fe
	jmp uuid_0000000000079a00
uuid_00000000000799fe:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000799fd
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079a00:
	mov -5448(%RBP),%RSP
	add $-5448, %RSP
uuid_0000000000079a03:
	mov -5440(%RBP),%RSP
	add $-5448, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079a05
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a04
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079a07
uuid_0000000000079a05:
uuid_0000000000079a07:
	mov -5480(%RBP),%RSP
	add $-5480, %RSP
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -5472(%RBP)
	popq -5464(%RBP)
	popq -5456(%RBP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq $0
	push %RBP
	mov -5632(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a1a
	jmp uuid_0000000000079a1c
uuid_0000000000079a1a:
	push %RBP
	jmp uuid_0000000000079a17
	jmp uuid_0000000000079a19
uuid_0000000000079a17:
	push %RBP
	mov -5616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5736(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a11
	jmp uuid_0000000000079a13
uuid_0000000000079a11:
	push %RBP
	jmp uuid_0000000000079a0e
	jmp uuid_0000000000079a10
uuid_0000000000079a0e:
	push %RBP
	jmp uuid_0000000000079a0b
	jmp uuid_0000000000079a0d
uuid_0000000000079a0b:
	push %RBP
	mov -5696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079a08
	jmp uuid_0000000000079a0a
uuid_0000000000079a08:
	movb $1, -5744(%rbp)
uuid_0000000000079a0a:
	mov -5776(%RBP),%RSP
	add $-5848, %RSP
uuid_0000000000079a0d:
	mov -5768(%RBP),%RSP
	add $-5848, %RSP
uuid_0000000000079a10:
	mov -5760(%RBP),%RSP
	add $-5848, %RSP
uuid_0000000000079a13:
	mov -5752(%RBP),%RSP
	add $-5848, %RSP
	mov -5744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a14
	jmp uuid_0000000000079a16
uuid_0000000000079a14:
	movb $1, -5640(%rbp)
uuid_0000000000079a16:
	mov -5664(%RBP),%RSP
	add $-5848, %RSP
uuid_0000000000079a19:
	mov -5656(%RBP),%RSP
	add $-5848, %RSP
uuid_0000000000079a1c:
	mov -5648(%RBP),%RSP
	add $-5848, %RSP
	mov -5640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079a1e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079a1d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079a20
uuid_0000000000079a1e:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	pushq -5848(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079a20:
	mov -5560(%RBP),%RSP
	add $-5848, %RSP
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -5408(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a21
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000079a21
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_0000000000079ac8:
	mov -4912(%RBP),%RSP
	add $-5872, %RSP
	jmp uuid_0000000000079acb
uuid_0000000000079ac9:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq $0
	push %RBP
	mov -4984(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799b5
	jmp uuid_00000000000799b7
uuid_00000000000799b5:
	push %RBP
	mov -4976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799ac
	jmp uuid_00000000000799ae
uuid_00000000000799ac:
	push %RBP
	mov -5040(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799a3
	jmp uuid_00000000000799a5
uuid_00000000000799a3:
	push %RBP
	mov -5104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5176(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799a0
	jmp uuid_00000000000799a2
uuid_00000000000799a0:
	push %RBP
	pushq -5080(%RBP)
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	mov -5208(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007999d
	jmp uuid_000000000007999f
uuid_000000000007999d:
	movb $1, -5120(%rbp)
uuid_000000000007999f:
	mov -5184(%RBP),%RSP
	add $-5208, %RSP
uuid_00000000000799a2:
	mov -5136(%RBP),%RSP
	add $-5208, %RSP
uuid_00000000000799a5:
	mov -5128(%RBP),%RSP
	add $-5208, %RSP
	mov -5120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799a9
	jmp uuid_00000000000799ab
uuid_00000000000799a9:
	push %RBP
	jmp uuid_00000000000799a6
	jmp uuid_00000000000799a8
uuid_00000000000799a6:
	movb $1, -5056(%rbp)
uuid_00000000000799a8:
	mov -5216(%RBP),%RSP
	add $-5216, %RSP
uuid_00000000000799ab:
	mov -5072(%RBP),%RSP
	add $-5216, %RSP
uuid_00000000000799ae:
	mov -5064(%RBP),%RSP
	add $-5216, %RSP
	mov -5056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799b2
	jmp uuid_00000000000799b4
uuid_00000000000799b2:
	push %RBP
	mov -4968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5232(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799af
	jmp uuid_00000000000799b1
uuid_00000000000799af:
	movb $1, -4992(%rbp)
uuid_00000000000799b1:
	mov -5224(%RBP),%RSP
	add $-5232, %RSP
uuid_00000000000799b4:
	mov -5008(%RBP),%RSP
	add $-5232, %RSP
uuid_00000000000799b7:
	mov -5000(%RBP),%RSP
	add $-5232, %RSP
	mov -4992(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799dc
	push %RBP
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq $0
	push %RBP
	mov -5264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799d0
	jmp uuid_00000000000799d2
uuid_00000000000799d0:
	push %RBP
	mov -5256(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799c7
	jmp uuid_00000000000799c9
uuid_00000000000799c7:
	push %RBP
	mov -5320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799be
	jmp uuid_00000000000799c0
uuid_00000000000799be:
	push %RBP
	mov -5384(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -5456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799bb
	jmp uuid_00000000000799bd
uuid_00000000000799bb:
	push %RBP
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	jmp uuid_00000000000799b8
	jmp uuid_00000000000799ba
uuid_00000000000799b8:
	movb $1, -5400(%rbp)
uuid_00000000000799ba:
	mov -5464(%RBP),%RSP
	add $-5488, %RSP
uuid_00000000000799bd:
	mov -5416(%RBP),%RSP
	add $-5488, %RSP
uuid_00000000000799c0:
	mov -5408(%RBP),%RSP
	add $-5488, %RSP
	mov -5400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799c4
	jmp uuid_00000000000799c6
uuid_00000000000799c4:
	push %RBP
	pushq -5296(%RBP)
	pushq -5304(%RBP)
	pushq -5312(%RBP)
	mov -5520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799c1
	jmp uuid_00000000000799c3
uuid_00000000000799c1:
	movb $1, -5336(%rbp)
uuid_00000000000799c3:
	mov -5496(%RBP),%RSP
	add $-5520, %RSP
uuid_00000000000799c6:
	mov -5352(%RBP),%RSP
	add $-5520, %RSP
uuid_00000000000799c9:
	mov -5344(%RBP),%RSP
	add $-5520, %RSP
	mov -5336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799cd
	jmp uuid_00000000000799cf
uuid_00000000000799cd:
	push %RBP
	mov -5248(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5536(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000799ca
	jmp uuid_00000000000799cc
uuid_00000000000799ca:
	movb $1, -5272(%rbp)
uuid_00000000000799cc:
	mov -5528(%RBP),%RSP
	add $-5536, %RSP
uuid_00000000000799cf:
	mov -5288(%RBP),%RSP
	add $-5536, %RSP
uuid_00000000000799d2:
	mov -5280(%RBP),%RSP
	add $-5536, %RSP
	mov -5272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_00000000000799d9
	push %RBP
	jmp uuid_00000000000799d6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_00000000000799d5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_00000000000799d8
uuid_00000000000799d6:
uuid_00000000000799d8:
	mov -5544(%RBP),%RSP
	add $-5544, %RSP
	jmp uuid_00000000000799db
uuid_00000000000799d9:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000799d3
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_00000000000799d3
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -4928(%RBP)
	popq -4920(%RBP)
	popq -4912(%RBP)
uuid_00000000000799db:
	mov -5240(%RBP),%RSP
	add $-5536, %RSP
	jmp uuid_00000000000799de
uuid_00000000000799dc:
uuid_00000000000799de:
	mov -4960(%RBP),%RSP
	add $-5232, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079acb:
	mov -4616(%RBP),%RSP
	add $-5232, %RSP
	jmp uuid_0000000000079ace
uuid_0000000000079acc:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq $1
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079ace:
	mov -4320(%RBP),%RSP
	add $-4608, %RSP
	jmp uuid_0000000000079ad1
uuid_0000000000079acf:
#call function as-constant : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079968
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call as_SB_constant_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq $0
	push %RBP
	mov -4488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007996f
	jmp uuid_0000000000079971
uuid_000000000007996f:
	push %RBP
	jmp uuid_000000000007996c
	jmp uuid_000000000007996e
uuid_000000000007996c:
	push %RBP
	mov -4472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079969
	jmp uuid_000000000007996b
uuid_0000000000079969:
	movb $1, -4496(%rbp)
uuid_000000000007996b:
	mov -4520(%RBP),%RSP
	add $-4592, %RSP
uuid_000000000007996e:
	mov -4512(%RBP),%RSP
	add $-4592, %RSP
uuid_0000000000079971:
	mov -4504(%RBP),%RSP
	add $-4592, %RSP
	mov -4496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079973
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079972
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079975
uuid_0000000000079973:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079975:
	mov -4416(%RBP),%RSP
	add $-4592, %RSP
uuid_0000000000079ad1:
	mov -4000(%RBP),%RSP
	add $-4592, %RSP
	jmp uuid_0000000000079ad4
uuid_0000000000079ad2:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	push %RBP
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq $0
	push %RBP
	mov -4168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079928
	jmp uuid_000000000007992a
uuid_0000000000079928:
	push %RBP
	jmp uuid_0000000000079925
	jmp uuid_0000000000079927
uuid_0000000000079925:
	push %RBP
	mov -4104(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079922
	jmp uuid_0000000000079924
uuid_0000000000079922:
	movb $1, -4176(%rbp)
uuid_0000000000079924:
	mov -4200(%RBP),%RSP
	add $-4208, %RSP
uuid_0000000000079927:
	mov -4192(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007992a:
	mov -4184(%RBP),%RSP
	add $-4208, %RSP
	mov -4176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007993f
	push %RBP
	jmp uuid_000000000007993c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007993b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007993e
uuid_000000000007993c:
uuid_000000000007993e:
	mov -4216(%RBP),%RSP
	add $-4216, %RSP
	jmp uuid_0000000000079941
uuid_000000000007993f:
	push %RBP
#call function is-reg8 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007992c
	jmp uuid_000000000007992e
uuid_000000000007992c:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007992b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007992e:
	mov -4216(%RBP),%RSP
	add $-4216, %RSP
	push %RBP
#call function is-reg16 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079930
	jmp uuid_0000000000079932
uuid_0000000000079930:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007992f
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_0000000000079932:
	mov -4224(%RBP),%RSP
	add $-4224, %RSP
	push %RBP
#call function is-reg32 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079934
	jmp uuid_0000000000079936
uuid_0000000000079934:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079933
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_0000000000079936:
	mov -4232(%RBP),%RSP
	add $-4232, %RSP
	push %RBP
#call function is-reg64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079938
	jmp uuid_000000000007993a
uuid_0000000000079938:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079937
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -4016(%RBP)
	popq -4008(%RBP)
	popq -4000(%RBP)
uuid_000000000007993a:
	mov -4240(%RBP),%RSP
	add $-4240, %RSP
uuid_0000000000079941:
	mov -4096(%RBP),%RSP
	add $-4240, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007994c
	jmp uuid_000000000007994e
uuid_000000000007994c:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079942
	jmp uuid_0000000000079944
uuid_0000000000079942:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
uuid_0000000000079944:
	mov -4280(%RBP),%RSP
	add $-4280, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq $uuid_0000000000079945
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079949
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079946
	jmp uuid_0000000000079948
uuid_0000000000079946:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
uuid_0000000000079948:
	mov -4320(%RBP),%RSP
	add $-4320, %RSP
#call function with-fields : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	mov %RBX, %RBP
	call with_SB_fields_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -3792(%RBP)
	popq -3784(%RBP)
	popq -3776(%RBP)
	jmp uuid_000000000007994b
uuid_0000000000079949:
uuid_000000000007994b:
	mov -4288(%RBP),%RSP
	add $-4288, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007994e:
	mov -4248(%RBP),%RSP
	add $-4288, %RSP
uuid_0000000000079ad4:
	mov -3480(%RBP),%RSP
	add $-4288, %RSP
	jmp uuid_0000000000079ad7
uuid_0000000000079ad5:
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq $1
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_00000000000798fe
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	pushq -3328(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	mov %RSP, %R14
	movq 112(%R14), %R15
	movq %R15, 112(%RSP)
	movq 104(%R14), %R15
	movq %R15, 104(%RSP)
	movq 96(%R14), %R15
	movq %R15, 96(%RSP)
	movq 88(%R14), %R15
	movq %R15, 88(%RSP)
	movq 80(%R14), %R15
	movq %R15, 80(%RSP)
	movq 72(%R14), %R15
	movq %R15, 72(%RSP)
	movq 64(%R14), %R15
	movq %R15, 64(%RSP)
	movq 56(%R14), %R15
	movq %R15, 56(%RSP)
	movq 48(%R14), %R15
	movq %R15, 48(%RSP)
	movq 40(%R14), %R15
	movq %R15, 40(%RSP)
	movq 32(%R14), %R15
	movq %R15, 32(%RSP)
	movq 24(%R14), %R15
	movq %R15, 24(%RSP)
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000079900
uuid_00000000000798fe:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	pushq -3328(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3488(%rbp)
	pushq -3496(%rbp)
	pushq -3504(%rbp)
	pushq -3512(%rbp)
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3568(%rbp)
	pushq -3576(%rbp)
	pushq -3584(%rbp)
	pushq -3592(%rbp)
	pushq -3600(%rbp)
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
uuid_0000000000079900:
	mov -3480(%RBP),%RSP
	add $-3720, %RSP
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $2
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -3136(%rbp)
	pushq -3144(%rbp)
	pushq -3152(%rbp)
	pushq -3160(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079ad7:
	mov -2832(%RBP),%RSP
	add $-3720, %RSP
	jmp uuid_0000000000079ada
uuid_0000000000079ad8:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079ada:
	mov -2496(%RBP),%RSP
	add $-2824, %RSP
	jmp uuid_0000000000079add
uuid_0000000000079adb:
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2368(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000798bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079add:
	mov -2160(%RBP),%RSP
	add $-2488, %RSP
	jmp uuid_0000000000079ae0
uuid_0000000000079ade:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq $0
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007989d
	jmp uuid_000000000007989f
uuid_000000000007989d:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007988d
	jmp uuid_000000000007988f
uuid_000000000007988d:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	movq -2240(%rbp), %r15
	movq %r15, -1952(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -1944(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -1936(%rbp)
uuid_000000000007988f:
	mov -2216(%RBP),%RSP
	add $-2240, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq $0
	push %RBP
	mov -2392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079896
	jmp uuid_0000000000079898
uuid_0000000000079896:
	push %RBP
	mov -2384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079893
	jmp uuid_0000000000079895
uuid_0000000000079893:
	push %RBP
	mov -2376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079890
	jmp uuid_0000000000079892
uuid_0000000000079890:
	movb $1, -2400(%rbp)
uuid_0000000000079892:
	mov -2496(%RBP),%RSP
	add $-2568, %RSP
uuid_0000000000079895:
	mov -2416(%RBP),%RSP
	add $-2568, %RSP
uuid_0000000000079898:
	mov -2408(%RBP),%RSP
	add $-2568, %RSP
	mov -2400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007989a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079899
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007989c
uuid_000000000007989a:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007989c:
	mov -2320(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007989f:
	mov -2184(%RBP),%RSP
	add $-2568, %RSP
uuid_0000000000079ae0:
	mov -1640(%RBP),%RSP
	add $-2568, %RSP
	jmp uuid_0000000000079ae3
uuid_0000000000079ae1:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq $0
	push %RBP
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007985f
	jmp uuid_0000000000079861
uuid_000000000007985f:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1880(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079856
	jmp uuid_0000000000079858
uuid_0000000000079856:
	push %RBP
	jmp uuid_0000000000079853
	jmp uuid_0000000000079855
uuid_0000000000079853:
	push %RBP
	mov -1864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079850
	jmp uuid_0000000000079852
uuid_0000000000079850:
	movb $1, -1888(%rbp)
uuid_0000000000079852:
	mov -1912(%RBP),%RSP
	add $-1984, %RSP
uuid_0000000000079855:
	mov -1904(%RBP),%RSP
	add $-1984, %RSP
uuid_0000000000079858:
	mov -1896(%RBP),%RSP
	add $-1984, %RSP
	mov -1888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007985c
	jmp uuid_000000000007985e
uuid_000000000007985c:
	push %RBP
	jmp uuid_0000000000079859
	jmp uuid_000000000007985b
uuid_0000000000079859:
	movb $1, -1792(%rbp)
uuid_000000000007985b:
	mov -1992(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007985e:
	mov -1808(%RBP),%RSP
	add $-1992, %RSP
uuid_0000000000079861:
	mov -1800(%RBP),%RSP
	add $-1992, %RSP
	mov -1792(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079869
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079868
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007986b
uuid_0000000000079869:
	push %RBP
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079862
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	jmp uuid_0000000000079864
uuid_0000000000079862:
uuid_0000000000079864:
	mov -2000(%RBP),%RSP
	add $-2000, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079865
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079867
uuid_0000000000079865:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
uuid_0000000000079867:
	mov -2032(%RBP),%RSP
	add $-2032, %RSP
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007986b:
	mov -1712(%RBP),%RSP
	add $-2032, %RSP
uuid_0000000000079ae3:
	mov -1088(%RBP),%RSP
	add $-2032, %RSP
	jmp uuid_0000000000079ae6
uuid_0000000000079ae4:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079822
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007981f
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981d
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_000000000007981d
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	jmp uuid_0000000000079821
uuid_000000000007981f:
uuid_0000000000079821:
	mov -1120(%RBP),%RSP
	add $-1120, %RSP
	jmp uuid_0000000000079824
uuid_0000000000079822:
uuid_0000000000079824:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000079ae6:
	mov -848(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_0000000000079ae9
uuid_0000000000079ae7:
uuid_0000000000079ae9:
	mov -736(%RBP),%RSP
	add $-840, %RSP
	mov %RSP, %R14
	add $72, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	movq 112(%R14), %R15
	movq %R15, 112(%RSP)
	movq 104(%R14), %R15
	movq %R15, 104(%RSP)
	movq 96(%R14), %R15
	movq %R15, 96(%RSP)
	movq 88(%R14), %R15
	movq %R15, 88(%RSP)
	movq 80(%R14), %R15
	movq %R15, 80(%RSP)
	movq 72(%R14), %R15
	movq %R15, 72(%RSP)
	movq 64(%R14), %R15
	movq %R15, 64(%RSP)
	movq 56(%R14), %R15
	movq %R15, 56(%RSP)
	movq 48(%R14), %R15
	movq %R15, 48(%RSP)
	movq 40(%R14), %R15
	movq %R15, 40(%RSP)
	movq 32(%R14), %R15
	movq %R15, 32(%RSP)
	movq 24(%R14), %R15
	movq %R15, 24(%RSP)
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000079aec
uuid_0000000000079aea:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
	push -264(%RSP)
uuid_0000000000079aec:
	mov -480(%RBP),%RSP
	add $-848, %RSP
	jmp uuid_0000000000079aef
uuid_0000000000079aed:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079aef:
	mov -400(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_0000000000079af2
uuid_0000000000079af0:
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079af2:
	mov -320(%RBP),%RSP
	add $-392, %RSP
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079af3
	mov %RSP, %R14
	movq 16(%R14), %R15
	movq %R15, 16(%RSP)
	movq 8(%R14), %R15
	movq %R15, 8(%RSP)
	movq 0(%R14), %R15
	movq %R15, 0(%RSP)
	jmp uuid_0000000000079af5
uuid_0000000000079af3:
#call function maybe-specialize : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a4a
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $uuid_0000000000079a4a
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
uuid_0000000000079af5:
	mov -400(%RBP),%RSP
	add $-424, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $240, %rsp
	ret
add_SB_alias_CL_ArrowNilConsTypeConsStringString:
#call function cons : Arrow<Cons<Tuple<Tuple<String,String>,Type>,List<Tuple<Tuple<String,String>,Type>>>,List<Tuple<Tuple<String,String>,Type>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListTupleTypeTupleStringStringConsListTupleTypeTupleStringStringTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $48, %rsp
	ret
find_SB_alias_CL_ArrowStringConsTypeString:
	pushq -8(%rbp)
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000079b55:
#call function non-zero : Arrow<List<Tuple<Tuple<String,String>,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b56
	jmp uuid_0000000000079b57
uuid_0000000000079b56:
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b1a
	jmp uuid_0000000000079b1c
uuid_0000000000079b1a:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079b17
	jmp uuid_0000000000079b19
uuid_0000000000079b17:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	jmp uuid_0000000000079b14
	jmp uuid_0000000000079b16
uuid_0000000000079b14:
	movb $1, -280(%rbp)
uuid_0000000000079b16:
	mov -376(%RBP),%RSP
	add $-432, %RSP
uuid_0000000000079b19:
	mov -296(%RBP),%RSP
	add $-432, %RSP
uuid_0000000000079b1c:
	mov -288(%RBP),%RSP
	add $-432, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b52
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079b51
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079b54
uuid_0000000000079b52:
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	push %RBP
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b47
	jmp uuid_0000000000079b49
uuid_0000000000079b47:
	push %RBP
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b35
	jmp uuid_0000000000079b37
uuid_0000000000079b35:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b2c
	jmp uuid_0000000000079b2e
uuid_0000000000079b2c:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b23
	jmp uuid_0000000000079b25
uuid_0000000000079b23:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b20
	jmp uuid_0000000000079b22
uuid_0000000000079b20:
	push %RBP
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	jmp uuid_0000000000079b1d
	jmp uuid_0000000000079b1f
uuid_0000000000079b1d:
	movb $1, -736(%rbp)
uuid_0000000000079b1f:
	mov -800(%RBP),%RSP
	add $-824, %RSP
uuid_0000000000079b22:
	mov -752(%RBP),%RSP
	add $-824, %RSP
uuid_0000000000079b25:
	mov -744(%RBP),%RSP
	add $-824, %RSP
	mov -736(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b29
	jmp uuid_0000000000079b2b
uuid_0000000000079b29:
	push %RBP
	jmp uuid_0000000000079b26
	jmp uuid_0000000000079b28
uuid_0000000000079b26:
	movb $1, -672(%rbp)
uuid_0000000000079b28:
	mov -832(%RBP),%RSP
	add $-832, %RSP
uuid_0000000000079b2b:
	mov -688(%RBP),%RSP
	add $-832, %RSP
uuid_0000000000079b2e:
	mov -680(%RBP),%RSP
	add $-832, %RSP
	mov -672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b32
	jmp uuid_0000000000079b34
uuid_0000000000079b32:
	push %RBP
	mov -584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b2f
	jmp uuid_0000000000079b31
uuid_0000000000079b2f:
	movb $1, -608(%rbp)
uuid_0000000000079b31:
	mov -840(%RBP),%RSP
	add $-848, %RSP
uuid_0000000000079b34:
	mov -624(%RBP),%RSP
	add $-848, %RSP
uuid_0000000000079b37:
	mov -616(%RBP),%RSP
	add $-848, %RSP
	mov -608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b44
	jmp uuid_0000000000079b46
uuid_0000000000079b44:
	push %RBP
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b3e
	jmp uuid_0000000000079b40
uuid_0000000000079b3e:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079b3b
	jmp uuid_0000000000079b3d
uuid_0000000000079b3b:
	push %RBP
	mov -864(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079b38
	jmp uuid_0000000000079b3a
uuid_0000000000079b38:
	movb $1, -888(%rbp)
uuid_0000000000079b3a:
	mov -920(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000079b3d:
	mov -904(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000079b40:
	mov -896(%RBP),%RSP
	add $-928, %RSP
	mov -888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b41
	jmp uuid_0000000000079b43
uuid_0000000000079b41:
	movb $1, -560(%rbp)
uuid_0000000000079b43:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000079b46:
	mov -576(%RBP),%RSP
	add $-928, %RSP
uuid_0000000000079b49:
	mov -568(%RBP),%RSP
	add $-928, %RSP
	mov -560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b4e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079b4d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079b50
uuid_0000000000079b4e:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -928(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b4a
	jmp uuid_0000000000079b4c
uuid_0000000000079b4a:
	movq -912(%rbp), %r15
	movq %r15, -48(%rbp)
	mov -912(%rbp), %r15
	mov %r15, -48(%rbp)
uuid_0000000000079b4c:
	mov -936(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000079b50:
	mov -496(%RBP),%RSP
	add $-936, %RSP
	movq -368(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_0000000000079b54:
	mov -200(%RBP),%RSP
	add $-936, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $56, %rsp
	add $56, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079b55
uuid_0000000000079b57:
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
find_SB_alias_SB_type_CL_ArrowTypeString:
	pushq $0
	pushq $0
	pushq $3
	mov $alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_0000000000079b8d:
#call function non-zero : Arrow<List<Tuple<Tuple<String,String>,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b8e
	jmp uuid_0000000000079b8f
uuid_0000000000079b8e:
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b6a
	jmp uuid_0000000000079b6c
uuid_0000000000079b6a:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079b67
	jmp uuid_0000000000079b69
uuid_0000000000079b67:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	jmp uuid_0000000000079b64
	jmp uuid_0000000000079b66
uuid_0000000000079b64:
	movb $1, -272(%rbp)
uuid_0000000000079b66:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000079b69:
	mov -288(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000079b6c:
	mov -280(%RBP),%RSP
	add $-424, %RSP
	mov -272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b8a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079b89
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079b8c
uuid_0000000000079b8a:
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b7c
	jmp uuid_0000000000079b7e
uuid_0000000000079b7c:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_0000000000079b79
	jmp uuid_0000000000079b7b
uuid_0000000000079b79:
	push %RBP
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b73
	jmp uuid_0000000000079b75
uuid_0000000000079b73:
	push %RBP
	mov -616(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079b70
	jmp uuid_0000000000079b72
uuid_0000000000079b70:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079b6d
	jmp uuid_0000000000079b6f
uuid_0000000000079b6d:
	movb $1, -632(%rbp)
uuid_0000000000079b6f:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079b72:
	mov -648(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079b75:
	mov -640(%RBP),%RSP
	add $-672, %RSP
	mov -632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b76
	jmp uuid_0000000000079b78
uuid_0000000000079b76:
	movb $1, -552(%rbp)
uuid_0000000000079b78:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079b7b:
	mov -568(%RBP),%RSP
	add $-672, %RSP
uuid_0000000000079b7e:
	mov -560(%RBP),%RSP
	add $-672, %RSP
	mov -552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079b86
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079b85
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079b88
uuid_0000000000079b86:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -672(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b82
	jmp uuid_0000000000079b84
uuid_0000000000079b82:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079b7f
	movq -592(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -24(%rbp)
	jmp uuid_0000000000079b81
uuid_0000000000079b7f:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_0000000000079b81:
	mov -688(%RBP),%RSP
	add $-688, %RSP
uuid_0000000000079b84:
	mov -680(%RBP),%RSP
	add $-688, %RSP
uuid_0000000000079b88:
	mov -488(%RBP),%RSP
	add $-688, %RSP
	movq -360(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -296(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_0000000000079b8c:
	mov -192(%RBP),%RSP
	add $-688, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $56, %rsp
	add $56, %rsp
	add $8, %rsp
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079b8d
uuid_0000000000079b8f:
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mark_SB_class_SB_exists_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
mark_SB_parameter_SB_flat_CL_ArrowNilConsU64ConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,?>,Tuple<Tuple<String,U64>,U64>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleU64TupleU64StringArray_QM_BTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,Tuple<Tuple<String,U64>,U64>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq $0
	pushq -24(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mark_SB_as_SB_special_CL_ArrowNilConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<String,Type>,U64>,?>,Tuple<String,Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
is_SB_special_CL_ArrowU64ConsTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<String,Type>,U64>,Tuple<String,Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
index_SB_lone_SB_tag_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_lone_SB_tag_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_tag_SB_is_SB_fragment_CL_ArrowNilString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_fragment_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_fragment_CL_ArrowU64Type:
#call function is-fragment : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call is_SB_fragment_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $uuid_0000000000079bdc
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function global-is-seen : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call global_SB_is_SB_seen_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079bdf
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<Tuple<String,Type>,U64>,?>,Tuple<String,Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079be1
uuid_0000000000079bdf:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bdd
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079be1:
	mov -72(%RBP),%RSP
	add $-72, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
global_SB_is_SB_seen_CL_ArrowU64ConsTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<Tuple<String,Type>,U64>,Tuple<String,Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0, %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
has_SB_only_SB_child_CL_ArrowNilConsStringString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,String>,?>,String>,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsStringConsStringArray_QM_BTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
get_SB_only_SB_child_CL_ArrowStringString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,String>,String>,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $uuid_0000000000079496
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowStringConsStringConsStringBTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_of_SB_tag_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	mov $unknown_SB_index_SB_of_SB_tag_CL_U64, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
size_SB_of_SB_class_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c1c
	jmp uuid_0000000000079c1e
uuid_0000000000079c1c:
	push %RBP
	jmp uuid_0000000000079c19
	jmp uuid_0000000000079c1b
uuid_0000000000079c19:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079c16
	jmp uuid_0000000000079c18
uuid_0000000000079c16:
	movb $1, -104(%rbp)
uuid_0000000000079c18:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_0000000000079c1b:
	mov -120(%RBP),%RSP
	add $-136, %RSP
uuid_0000000000079c1e:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c24
	push %RBP
	jmp uuid_0000000000079c21
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079c20
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079c23
uuid_0000000000079c21:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079c1f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079c23:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000079c26
uuid_0000000000079c24:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,U64>,?>,String>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r12
	push %R12
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079c26:
	mov -72(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $40, %rsp
	ret
class_SB_of_SB_tag_CL_ArrowTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Type>,String>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -128(%RSP)
	push -128(%RSP)
	push -128(%RSP)
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_class_CL_ArrowU64String:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString:
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Tuple<Type,Type>>,?>,String>,Tuple<Type,Type>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r12
	push %R12
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $64, %rsp
	ret
fields_SB_of_SB_tag_CL_ArrowTupleTypeTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Tuple<Type,Type>>,String>,Tuple<Type,Type>>,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	subq $56, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fields_SB_of_SB_tag_CL_ArrowTypeConsTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c66
	jmp uuid_0000000000079c68
uuid_0000000000079c66:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c5c
	jmp uuid_0000000000079c5e
uuid_0000000000079c5c:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c59
	jmp uuid_0000000000079c5b
uuid_0000000000079c59:
	push %RBP
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c53
	jmp uuid_0000000000079c55
uuid_0000000000079c53:
	push %RBP
	jmp uuid_0000000000079c50
	jmp uuid_0000000000079c52
uuid_0000000000079c50:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079c4d
	jmp uuid_0000000000079c4f
uuid_0000000000079c4d:
	movb $1, -304(%rbp)
uuid_0000000000079c4f:
	mov -328(%RBP),%RSP
	add $-336, %RSP
uuid_0000000000079c52:
	mov -320(%RBP),%RSP
	add $-336, %RSP
uuid_0000000000079c55:
	mov -312(%RBP),%RSP
	add $-336, %RSP
	mov -304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c56
	jmp uuid_0000000000079c58
uuid_0000000000079c56:
	movb $1, -208(%rbp)
uuid_0000000000079c58:
	mov -272(%RBP),%RSP
	add $-336, %RSP
uuid_0000000000079c5b:
	mov -224(%RBP),%RSP
	add $-336, %RSP
uuid_0000000000079c5e:
	mov -216(%RBP),%RSP
	add $-336, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c63
	jmp uuid_0000000000079c65
uuid_0000000000079c63:
	push %RBP
	mov -120(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq $uuid_0000000000079c5f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079c60
	jmp uuid_0000000000079c62
uuid_0000000000079c60:
	movb $1, -144(%rbp)
uuid_0000000000079c62:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000079c65:
	mov -160(%RBP),%RSP
	add $-352, %RSP
uuid_0000000000079c68:
	mov -152(%RBP),%RSP
	add $-352, %RSP
	mov -144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c87
	push %RBP
	jmp uuid_0000000000079c84
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079c83
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079c86
uuid_0000000000079c84:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079c82
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079c86:
	mov -360(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_0000000000079c89
uuid_0000000000079c87:
#call function fields-of-tag : Arrow<String,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_tag_CL_ArrowTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c6f
	jmp uuid_0000000000079c71
uuid_0000000000079c6f:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c6c
	jmp uuid_0000000000079c6e
uuid_0000000000079c6c:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c69
	jmp uuid_0000000000079c6b
uuid_0000000000079c69:
	movb $1, -480(%rbp)
uuid_0000000000079c6b:
	mov -528(%RBP),%RSP
	add $-552, %RSP
uuid_0000000000079c6e:
	mov -496(%RBP),%RSP
	add $-552, %RSP
uuid_0000000000079c71:
	mov -488(%RBP),%RSP
	add $-552, %RSP
	mov -480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c7f
	push %RBP
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c78
	jmp uuid_0000000000079c7a
uuid_0000000000079c78:
	push %RBP
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_0000000000079c75
	jmp uuid_0000000000079c77
uuid_0000000000079c75:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_0000000000079c72
	jmp uuid_0000000000079c74
uuid_0000000000079c72:
	movb $1, -624(%rbp)
uuid_0000000000079c74:
	mov -672(%RBP),%RSP
	add $-696, %RSP
uuid_0000000000079c77:
	mov -640(%RBP),%RSP
	add $-696, %RSP
uuid_0000000000079c7a:
	mov -632(%RBP),%RSP
	add $-696, %RSP
	mov -624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c7c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079c7b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079c7e
uuid_0000000000079c7c:
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_0000000000079c7e:
	mov -560(%RBP),%RSP
	add $-696, %RSP
	jmp uuid_0000000000079c81
uuid_0000000000079c7f:
uuid_0000000000079c81:
	mov -416(%RBP),%RSP
	add $-552, %RSP
uuid_0000000000079c89:
	mov -112(%RBP),%RSP
	add $-552, %RSP
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $uuid_0000000000079c8a
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fields-of-type : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079968
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a48
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007945a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call fields_SB_of_SB_type_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
set_SB_type_SB_fields_CL_ArrowNilConsTypeType:
	pushq $uuid_0000000000079496
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079c9f
	jmp uuid_0000000000079ca1
uuid_0000000000079c9f:
	push %RBP
	jmp uuid_0000000000079c9c
	jmp uuid_0000000000079c9e
uuid_0000000000079c9c:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079c99
	jmp uuid_0000000000079c9b
uuid_0000000000079c99:
	movb $1, -128(%rbp)
uuid_0000000000079c9b:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_0000000000079c9e:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_0000000000079ca1:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ca7
	push %RBP
	jmp uuid_0000000000079ca4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079ca3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079ca6
uuid_0000000000079ca4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079ca2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_0000000000079ca6:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_0000000000079ca9
uuid_0000000000079ca7:
	movq -160(%rbp), %r15
	movq %r15, -64(%rbp)
	mov -160(%rbp), %r15
	mov %r15, -64(%rbp)
uuid_0000000000079ca9:
	mov -96(%RBP),%RSP
	add $-160, %RSP
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Tuple<Type,Type>>,?>,String>,Tuple<Type,Type>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r12
	push %R12
	pushq -64(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
get_SB_vararg_SB_inner_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cb0
	jmp uuid_0000000000079cb2
uuid_0000000000079cb0:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079cad
	jmp uuid_0000000000079caf
uuid_0000000000079cad:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079caa
	jmp uuid_0000000000079cac
uuid_0000000000079caa:
	movb $1, -120(%rbp)
uuid_0000000000079cac:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_0000000000079caf:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_0000000000079cb2:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cd2
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cc8
	jmp uuid_0000000000079cca
uuid_0000000000079cc8:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cbf
	jmp uuid_0000000000079cc1
uuid_0000000000079cbf:
	push %RBP
	jmp uuid_0000000000079cbc
	jmp uuid_0000000000079cbe
uuid_0000000000079cbc:
	push %RBP
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	jmp uuid_0000000000079cb9
	jmp uuid_0000000000079cbb
uuid_0000000000079cb9:
	movb $1, -296(%rbp)
uuid_0000000000079cbb:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_0000000000079cbe:
	mov -312(%RBP),%RSP
	add $-344, %RSP
uuid_0000000000079cc1:
	mov -304(%RBP),%RSP
	add $-344, %RSP
	mov -296(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cc5
	jmp uuid_0000000000079cc7
uuid_0000000000079cc5:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cc2
	jmp uuid_0000000000079cc4
uuid_0000000000079cc2:
	movb $1, -232(%rbp)
uuid_0000000000079cc4:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_0000000000079cc7:
	mov -248(%RBP),%RSP
	add $-360, %RSP
uuid_0000000000079cca:
	mov -240(%RBP),%RSP
	add $-360, %RSP
	mov -232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ccf
	push %RBP
	jmp uuid_0000000000079ccc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079ccb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079cce
uuid_0000000000079ccc:
uuid_0000000000079cce:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_0000000000079cd1
uuid_0000000000079ccf:
	movq -344(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000079cd1:
	mov -200(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_0000000000079cd4
uuid_0000000000079cd2:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cb3
	jmp uuid_0000000000079cb5
uuid_0000000000079cb3:
	movq -192(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000079cb5:
	mov -200(%RBP),%RSP
	add $-200, %RSP
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cb6
	jmp uuid_0000000000079cb8
uuid_0000000000079cb6:
	movq -160(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -152(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -144(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_0000000000079cb8:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_0000000000079cd4:
	mov -88(%RBP),%RSP
	add $-208, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
maybe_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
is_SB_constructor_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cdb
	jmp uuid_0000000000079cdd
uuid_0000000000079cdb:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079cd8
	jmp uuid_0000000000079cda
uuid_0000000000079cd8:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079cd5
	jmp uuid_0000000000079cd7
uuid_0000000000079cd5:
	movb $1, -104(%rbp)
uuid_0000000000079cd7:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000079cda:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000079cdd:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d06
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ce4
	jmp uuid_0000000000079ce6
uuid_0000000000079ce4:
	push %RBP
	jmp uuid_0000000000079ce1
	jmp uuid_0000000000079ce3
uuid_0000000000079ce1:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079a46
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cde
	jmp uuid_0000000000079ce0
uuid_0000000000079cde:
	movb $1, -216(%rbp)
uuid_0000000000079ce0:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000079ce3:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000079ce6:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d03
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ced
	jmp uuid_0000000000079cef
uuid_0000000000079ced:
	push %RBP
	jmp uuid_0000000000079cea
	jmp uuid_0000000000079cec
uuid_0000000000079cea:
	push %RBP
	mov -264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ce7
	jmp uuid_0000000000079ce9
uuid_0000000000079ce7:
	movb $1, -288(%rbp)
uuid_0000000000079ce9:
	mov -312(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000079cec:
	mov -304(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000079cef:
	mov -296(%RBP),%RSP
	add $-320, %RSP
	mov -288(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d00
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cf6
	jmp uuid_0000000000079cf8
uuid_0000000000079cf6:
	push %RBP
	jmp uuid_0000000000079cf3
	jmp uuid_0000000000079cf5
uuid_0000000000079cf3:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079cf0
	jmp uuid_0000000000079cf2
uuid_0000000000079cf0:
	movb $1, -360(%rbp)
uuid_0000000000079cf2:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000079cf5:
	mov -376(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000079cf8:
	mov -368(%RBP),%RSP
	add $-392, %RSP
	mov -360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079cfd
	push %RBP
	jmp uuid_0000000000079cfa
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079cf9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079cfc
uuid_0000000000079cfa:
uuid_0000000000079cfc:
	mov -400(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_0000000000079cff
uuid_0000000000079cfd:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000079cff:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_0000000000079d02
uuid_0000000000079d00:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000079d02:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_0000000000079d05
uuid_0000000000079d03:
	movq $1, -40(%rbp)
uuid_0000000000079d05:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000079d08
uuid_0000000000079d06:
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000079d08:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_simple_SB_constructor_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d0f
	jmp uuid_0000000000079d11
uuid_0000000000079d0f:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d0c
	jmp uuid_0000000000079d0e
uuid_0000000000079d0c:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d09
	jmp uuid_0000000000079d0b
uuid_0000000000079d09:
	movb $1, -104(%rbp)
uuid_0000000000079d0b:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000079d0e:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000079d11:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d22
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d18
	jmp uuid_0000000000079d1a
uuid_0000000000079d18:
	push %RBP
	jmp uuid_0000000000079d15
	jmp uuid_0000000000079d17
uuid_0000000000079d15:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079a46
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d12
	jmp uuid_0000000000079d14
uuid_0000000000079d12:
	movb $1, -216(%rbp)
uuid_0000000000079d14:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000079d17:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000079d1a:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d1f
	push %RBP
	jmp uuid_0000000000079d1c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079d1b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079d1e
uuid_0000000000079d1c:
uuid_0000000000079d1e:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000079d21
uuid_0000000000079d1f:
	movq $1, -40(%rbp)
uuid_0000000000079d21:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000079d24
uuid_0000000000079d22:
#call function is-simple-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_simple_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-simple-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_simple_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000079d24:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_tag_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d2b
	jmp uuid_0000000000079d2d
uuid_0000000000079d2b:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d28
	jmp uuid_0000000000079d2a
uuid_0000000000079d28:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d25
	jmp uuid_0000000000079d27
uuid_0000000000079d25:
	movb $1, -104(%rbp)
uuid_0000000000079d27:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000079d2a:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000079d2d:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d3e
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d34
	jmp uuid_0000000000079d36
uuid_0000000000079d34:
	push %RBP
	jmp uuid_0000000000079d31
	jmp uuid_0000000000079d33
uuid_0000000000079d31:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079c5f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d2e
	jmp uuid_0000000000079d30
uuid_0000000000079d2e:
	movb $1, -216(%rbp)
uuid_0000000000079d30:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000079d33:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000079d36:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d3b
	push %RBP
	jmp uuid_0000000000079d38
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079d37
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079d3a
uuid_0000000000079d38:
uuid_0000000000079d3a:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_0000000000079d3d
uuid_0000000000079d3b:
	movq $1, -40(%rbp)
uuid_0000000000079d3d:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000079d40
uuid_0000000000079d3e:
#call function is-tag : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_tag_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-tag : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_tag_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000079d40:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_open_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dd7
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d44
	jmp uuid_0000000000079d46
uuid_0000000000079d44:
	push %RBP
	jmp uuid_0000000000079d41
	jmp uuid_0000000000079d43
uuid_0000000000079d41:
	movb $1, -136(%rbp)
uuid_0000000000079d43:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000079d46:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	mov -136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dd4
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d4d
	jmp uuid_0000000000079d4f
uuid_0000000000079d4d:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d4a
	jmp uuid_0000000000079d4c
uuid_0000000000079d4a:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079d47
	jmp uuid_0000000000079d49
uuid_0000000000079d47:
	movb $1, -192(%rbp)
uuid_0000000000079d49:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000079d4c:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_0000000000079d4f:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dd1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d6e
	jmp uuid_0000000000079d70
uuid_0000000000079d6e:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d65
	jmp uuid_0000000000079d67
uuid_0000000000079d65:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d5c
	jmp uuid_0000000000079d5e
uuid_0000000000079d5c:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d59
	jmp uuid_0000000000079d5b
uuid_0000000000079d59:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d56
	jmp uuid_0000000000079d58
uuid_0000000000079d56:
	movb $1, -432(%rbp)
uuid_0000000000079d58:
	mov -496(%RBP),%RSP
	add $-520, %RSP
uuid_0000000000079d5b:
	mov -448(%RBP),%RSP
	add $-520, %RSP
uuid_0000000000079d5e:
	mov -440(%RBP),%RSP
	add $-520, %RSP
	mov -432(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d62
	jmp uuid_0000000000079d64
uuid_0000000000079d62:
	push %RBP
	jmp uuid_0000000000079d5f
	jmp uuid_0000000000079d61
uuid_0000000000079d5f:
	movb $1, -368(%rbp)
uuid_0000000000079d61:
	mov -528(%RBP),%RSP
	add $-528, %RSP
uuid_0000000000079d64:
	mov -384(%RBP),%RSP
	add $-528, %RSP
uuid_0000000000079d67:
	mov -376(%RBP),%RSP
	add $-528, %RSP
	mov -368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d6b
	jmp uuid_0000000000079d6d
uuid_0000000000079d6b:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d68
	jmp uuid_0000000000079d6a
uuid_0000000000079d68:
	movb $1, -304(%rbp)
uuid_0000000000079d6a:
	mov -536(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000079d6d:
	mov -320(%RBP),%RSP
	add $-544, %RSP
uuid_0000000000079d70:
	mov -312(%RBP),%RSP
	add $-544, %RSP
	mov -304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dce
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d89
	jmp uuid_0000000000079d8b
uuid_0000000000079d89:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d80
	jmp uuid_0000000000079d82
uuid_0000000000079d80:
	push %RBP
	mov -632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d77
	jmp uuid_0000000000079d79
uuid_0000000000079d77:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d74
	jmp uuid_0000000000079d76
uuid_0000000000079d74:
	push %RBP
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_0000000000079d71
	jmp uuid_0000000000079d73
uuid_0000000000079d71:
	movb $1, -712(%rbp)
uuid_0000000000079d73:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000079d76:
	mov -728(%RBP),%RSP
	add $-800, %RSP
uuid_0000000000079d79:
	mov -720(%RBP),%RSP
	add $-800, %RSP
	mov -712(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d7d
	jmp uuid_0000000000079d7f
uuid_0000000000079d7d:
	push %RBP
	jmp uuid_0000000000079d7a
	jmp uuid_0000000000079d7c
uuid_0000000000079d7a:
	movb $1, -648(%rbp)
uuid_0000000000079d7c:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000079d7f:
	mov -664(%RBP),%RSP
	add $-808, %RSP
uuid_0000000000079d82:
	mov -656(%RBP),%RSP
	add $-808, %RSP
	mov -648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d86
	jmp uuid_0000000000079d88
uuid_0000000000079d86:
	push %RBP
	mov -560(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d83
	jmp uuid_0000000000079d85
uuid_0000000000079d83:
	movb $1, -584(%rbp)
uuid_0000000000079d85:
	mov -816(%RBP),%RSP
	add $-824, %RSP
uuid_0000000000079d88:
	mov -600(%RBP),%RSP
	add $-824, %RSP
uuid_0000000000079d8b:
	mov -592(%RBP),%RSP
	add $-824, %RSP
	mov -584(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dcb
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079da5
	jmp uuid_0000000000079da7
uuid_0000000000079da5:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d9b
	jmp uuid_0000000000079d9d
uuid_0000000000079d9b:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d92
	jmp uuid_0000000000079d94
uuid_0000000000079d92:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d8f
	jmp uuid_0000000000079d91
uuid_0000000000079d8f:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_0000000000079d8c
	jmp uuid_0000000000079d8e
uuid_0000000000079d8c:
	movb $1, -992(%rbp)
uuid_0000000000079d8e:
	mov -1056(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000079d91:
	mov -1008(%RBP),%RSP
	add $-1080, %RSP
uuid_0000000000079d94:
	mov -1000(%RBP),%RSP
	add $-1080, %RSP
	mov -992(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079d98
	jmp uuid_0000000000079d9a
uuid_0000000000079d98:
	push %RBP
	jmp uuid_0000000000079d95
	jmp uuid_0000000000079d97
uuid_0000000000079d95:
	movb $1, -928(%rbp)
uuid_0000000000079d97:
	mov -1088(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000079d9a:
	mov -944(%RBP),%RSP
	add $-1088, %RSP
uuid_0000000000079d9d:
	mov -936(%RBP),%RSP
	add $-1088, %RSP
	mov -928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079da2
	jmp uuid_0000000000079da4
uuid_0000000000079da2:
	push %RBP
	mov -840(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $uuid_0000000000079d9e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d9f
	jmp uuid_0000000000079da1
uuid_0000000000079d9f:
	movb $1, -864(%rbp)
uuid_0000000000079da1:
	mov -1096(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000079da4:
	mov -880(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000079da7:
	mov -872(%RBP),%RSP
	add $-1104, %RSP
	mov -864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dc8
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dae
	jmp uuid_0000000000079db0
uuid_0000000000079dae:
	push %RBP
	mov -1128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079dab
	jmp uuid_0000000000079dad
uuid_0000000000079dab:
	push %RBP
	jmp uuid_0000000000079da8
	jmp uuid_0000000000079daa
uuid_0000000000079da8:
	movb $1, -1144(%rbp)
uuid_0000000000079daa:
	mov -1208(%RBP),%RSP
	add $-1208, %RSP
uuid_0000000000079dad:
	mov -1160(%RBP),%RSP
	add $-1208, %RSP
uuid_0000000000079db0:
	mov -1152(%RBP),%RSP
	add $-1208, %RSP
	mov -1144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dc5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079dc4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079dc7
uuid_0000000000079dc5:
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
uuid_0000000000079dc1:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079dc2
	jmp uuid_0000000000079dc3
uuid_0000000000079dc2:
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	push %RBP
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $0
	push %RBP
	mov -1336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079db7
	jmp uuid_0000000000079db9
uuid_0000000000079db7:
	push %RBP
	mov -1328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079db4
	jmp uuid_0000000000079db6
uuid_0000000000079db4:
	push %RBP
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_0000000000079db1
	jmp uuid_0000000000079db3
uuid_0000000000079db1:
	movb $1, -1344(%rbp)
uuid_0000000000079db3:
	mov -1408(%RBP),%RSP
	add $-1432, %RSP
uuid_0000000000079db6:
	mov -1360(%RBP),%RSP
	add $-1432, %RSP
uuid_0000000000079db9:
	mov -1352(%RBP),%RSP
	add $-1432, %RSP
	mov -1344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dbe
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079dbd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079dc0
uuid_0000000000079dbe:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079dba
	jmp uuid_0000000000079dbc
uuid_0000000000079dba:
	movq $1, -40(%rbp)
uuid_0000000000079dbc:
	mov -1440(%RBP),%RSP
	add $-1440, %RSP
	movq -1400(%rbp), %r15
	movq %r15, -1248(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -1240(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -1232(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -1224(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -1216(%rbp)
uuid_0000000000079dc0:
	mov -1296(%RBP),%RSP
	add $-1440, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_0000000000079dc1
uuid_0000000000079dc3:
uuid_0000000000079dc7:
	mov -1112(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_0000000000079dca
uuid_0000000000079dc8:
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000079dca:
	mov -832(%RBP),%RSP
	add $-1104, %RSP
	jmp uuid_0000000000079dcd
uuid_0000000000079dcb:
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000079dcd:
	mov -552(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_0000000000079dd0
uuid_0000000000079dce:
uuid_0000000000079dd0:
	mov -272(%RBP),%RSP
	add $-544, %RSP
	jmp uuid_0000000000079dd3
uuid_0000000000079dd1:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d50
	jmp uuid_0000000000079d52
uuid_0000000000079d50:
	movq $1, -40(%rbp)
uuid_0000000000079d52:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079d53
	jmp uuid_0000000000079d55
uuid_0000000000079d53:
	movq $1, -40(%rbp)
uuid_0000000000079d55:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_0000000000079dd3:
	mov -160(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_0000000000079dd6
uuid_0000000000079dd4:
	movq $1, -40(%rbp)
uuid_0000000000079dd6:
	mov -104(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_0000000000079dd9
uuid_0000000000079dd7:
	movq $1, -40(%rbp)
uuid_0000000000079dd9:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_vararg_CL_ArrowU64Type:
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_parameterized_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079de9
	jmp uuid_0000000000079deb
uuid_0000000000079de9:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079de0
	jmp uuid_0000000000079de2
uuid_0000000000079de0:
	push %RBP
	jmp uuid_0000000000079ddd
	jmp uuid_0000000000079ddf
uuid_0000000000079ddd:
	push %RBP
	jmp uuid_0000000000079dda
	jmp uuid_0000000000079ddc
uuid_0000000000079dda:
	movb $1, -168(%rbp)
uuid_0000000000079ddc:
	mov -192(%RBP),%RSP
	add $-192, %RSP
uuid_0000000000079ddf:
	mov -184(%RBP),%RSP
	add $-192, %RSP
uuid_0000000000079de2:
	mov -176(%RBP),%RSP
	add $-192, %RSP
	mov -168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079de6
	jmp uuid_0000000000079de8
uuid_0000000000079de6:
	push %RBP
	jmp uuid_0000000000079de3
	jmp uuid_0000000000079de5
uuid_0000000000079de3:
	movb $1, -104(%rbp)
uuid_0000000000079de5:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_0000000000079de8:
	mov -120(%RBP),%RSP
	add $-200, %RSP
uuid_0000000000079deb:
	mov -112(%RBP),%RSP
	add $-200, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e02
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079df2
	jmp uuid_0000000000079df4
uuid_0000000000079df2:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079def
	jmp uuid_0000000000079df1
uuid_0000000000079def:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079dec
	jmp uuid_0000000000079dee
uuid_0000000000079dec:
	movb $1, -240(%rbp)
uuid_0000000000079dee:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000079df1:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000079df4:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079dff
	push %RBP
	jmp uuid_0000000000079dfc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079dfb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079dfe
uuid_0000000000079dfc:
uuid_0000000000079dfe:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_0000000000079e01
uuid_0000000000079dff:
	push %RBP
#call function is-parameterized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_parameterized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079df5
	jmp uuid_0000000000079df7
uuid_0000000000079df5:
	movq $1, -40(%rbp)
uuid_0000000000079df7:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	push %RBP
#call function is-parameterized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call is_SB_parameterized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079df8
	jmp uuid_0000000000079dfa
uuid_0000000000079df8:
	movq $1, -40(%rbp)
uuid_0000000000079dfa:
	mov -328(%RBP),%RSP
	add $-328, %RSP
uuid_0000000000079e01:
	mov -208(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_0000000000079e04
uuid_0000000000079e02:
	movq $1, -40(%rbp)
uuid_0000000000079e04:
	mov -72(%RBP),%RSP
	add $-200, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_sized_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e39
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e0b
	jmp uuid_0000000000079e0d
uuid_0000000000079e0b:
	push %RBP
	jmp uuid_0000000000079e08
	jmp uuid_0000000000079e0a
uuid_0000000000079e08:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e05
	jmp uuid_0000000000079e07
uuid_0000000000079e05:
	movb $1, -136(%rbp)
uuid_0000000000079e07:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000079e0a:
	mov -152(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000079e0d:
	mov -144(%RBP),%RSP
	add $-168, %RSP
	mov -136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e36
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e14
	jmp uuid_0000000000079e16
uuid_0000000000079e14:
	push %RBP
	jmp uuid_0000000000079e11
	jmp uuid_0000000000079e13
uuid_0000000000079e11:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e0e
	jmp uuid_0000000000079e10
uuid_0000000000079e0e:
	movb $1, -208(%rbp)
uuid_0000000000079e10:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000079e13:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_0000000000079e16:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e33
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e1d
	jmp uuid_0000000000079e1f
uuid_0000000000079e1d:
	push %RBP
	jmp uuid_0000000000079e1a
	jmp uuid_0000000000079e1c
uuid_0000000000079e1a:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000079a48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e17
	jmp uuid_0000000000079e19
uuid_0000000000079e17:
	movb $1, -280(%rbp)
uuid_0000000000079e19:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000079e1c:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_0000000000079e1f:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e30
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e26
	jmp uuid_0000000000079e28
uuid_0000000000079e26:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e23
	jmp uuid_0000000000079e25
uuid_0000000000079e23:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e20
	jmp uuid_0000000000079e22
uuid_0000000000079e20:
	movb $1, -352(%rbp)
uuid_0000000000079e22:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000079e25:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_0000000000079e28:
	mov -360(%RBP),%RSP
	add $-424, %RSP
	mov -352(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e2d
	push %RBP
	jmp uuid_0000000000079e2a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079e29
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079e2c
uuid_0000000000079e2a:
uuid_0000000000079e2c:
	mov -432(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_0000000000079e2f
uuid_0000000000079e2d:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000079e2f:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_0000000000079e32
uuid_0000000000079e30:
	movq $1, -40(%rbp)
uuid_0000000000079e32:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_0000000000079e35
uuid_0000000000079e33:
	movq $1, -40(%rbp)
uuid_0000000000079e35:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_0000000000079e38
uuid_0000000000079e36:
	movq $1, -40(%rbp)
uuid_0000000000079e38:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_0000000000079e3b
uuid_0000000000079e39:
	movq $1, -40(%rbp)
uuid_0000000000079e3b:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_representation_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e42
	jmp uuid_0000000000079e44
uuid_0000000000079e42:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e3f
	jmp uuid_0000000000079e41
uuid_0000000000079e3f:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079e3c
	jmp uuid_0000000000079e3e
uuid_0000000000079e3c:
	movb $1, -104(%rbp)
uuid_0000000000079e3e:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000079e41:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_0000000000079e44:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e92
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e4c
	jmp uuid_0000000000079e4e
uuid_0000000000079e4c:
	push %RBP
	jmp uuid_0000000000079e49
	jmp uuid_0000000000079e4b
uuid_0000000000079e49:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079e45
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e46
	jmp uuid_0000000000079e48
uuid_0000000000079e46:
	movb $1, -216(%rbp)
uuid_0000000000079e48:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000079e4b:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_0000000000079e4e:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e8f
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e55
	jmp uuid_0000000000079e57
uuid_0000000000079e55:
	push %RBP
	jmp uuid_0000000000079e52
	jmp uuid_0000000000079e54
uuid_0000000000079e52:
	push %RBP
	mov -264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq $uuid_000000000007992b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e4f
	jmp uuid_0000000000079e51
uuid_0000000000079e4f:
	movb $1, -288(%rbp)
uuid_0000000000079e51:
	mov -312(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000079e54:
	mov -304(%RBP),%RSP
	add $-320, %RSP
uuid_0000000000079e57:
	mov -296(%RBP),%RSP
	add $-320, %RSP
	mov -288(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e8c
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e5e
	jmp uuid_0000000000079e60
uuid_0000000000079e5e:
	push %RBP
	jmp uuid_0000000000079e5b
	jmp uuid_0000000000079e5d
uuid_0000000000079e5b:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007992f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e58
	jmp uuid_0000000000079e5a
uuid_0000000000079e58:
	movb $1, -360(%rbp)
uuid_0000000000079e5a:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000079e5d:
	mov -376(%RBP),%RSP
	add $-392, %RSP
uuid_0000000000079e60:
	mov -368(%RBP),%RSP
	add $-392, %RSP
	mov -360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e89
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e67
	jmp uuid_0000000000079e69
uuid_0000000000079e67:
	push %RBP
	jmp uuid_0000000000079e64
	jmp uuid_0000000000079e66
uuid_0000000000079e64:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq $uuid_0000000000079933
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e61
	jmp uuid_0000000000079e63
uuid_0000000000079e61:
	movb $1, -432(%rbp)
uuid_0000000000079e63:
	mov -456(%RBP),%RSP
	add $-464, %RSP
uuid_0000000000079e66:
	mov -448(%RBP),%RSP
	add $-464, %RSP
uuid_0000000000079e69:
	mov -440(%RBP),%RSP
	add $-464, %RSP
	mov -432(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e86
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e70
	jmp uuid_0000000000079e72
uuid_0000000000079e70:
	push %RBP
	jmp uuid_0000000000079e6d
	jmp uuid_0000000000079e6f
uuid_0000000000079e6d:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $uuid_0000000000079937
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e6a
	jmp uuid_0000000000079e6c
uuid_0000000000079e6a:
	movb $1, -504(%rbp)
uuid_0000000000079e6c:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000079e6f:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_0000000000079e72:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e83
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e79
	jmp uuid_0000000000079e7b
uuid_0000000000079e79:
	push %RBP
	jmp uuid_0000000000079e76
	jmp uuid_0000000000079e78
uuid_0000000000079e76:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079e73
	jmp uuid_0000000000079e75
uuid_0000000000079e73:
	movb $1, -576(%rbp)
uuid_0000000000079e75:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000079e78:
	mov -592(%RBP),%RSP
	add $-608, %RSP
uuid_0000000000079e7b:
	mov -584(%RBP),%RSP
	add $-608, %RSP
	mov -576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e80
	push %RBP
	jmp uuid_0000000000079e7d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079e7c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079e7f
uuid_0000000000079e7d:
uuid_0000000000079e7f:
	mov -616(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_0000000000079e82
uuid_0000000000079e80:
	movq $1, -40(%rbp)
uuid_0000000000079e82:
	mov -544(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_0000000000079e85
uuid_0000000000079e83:
	movq $1, -40(%rbp)
uuid_0000000000079e85:
	mov -472(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_0000000000079e88
uuid_0000000000079e86:
	movq $1, -40(%rbp)
uuid_0000000000079e88:
	mov -400(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_0000000000079e8b
uuid_0000000000079e89:
	movq $1, -40(%rbp)
uuid_0000000000079e8b:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_0000000000079e8e
uuid_0000000000079e8c:
	movq $1, -40(%rbp)
uuid_0000000000079e8e:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_0000000000079e91
uuid_0000000000079e8f:
	movq $1, -40(%rbp)
uuid_0000000000079e91:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_0000000000079e94
uuid_0000000000079e92:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000079e94:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
guess_SB_representation_CL_ArrowTypeType:
	push %RBP
#call function has-representation : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call has_SB_representation_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ea8
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -48(%rbp)
	push %RBP
	pushq -56(%rbp)
	movq -72(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ea5
	push %RBP
	pushq -56(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ea2
	push %RBP
	pushq -56(%rbp)
	movq -104(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e9f
	push %RBP
	pushq -56(%rbp)
	movq -120(%RBP), %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e9c
	push %RBP
	pushq -56(%rbp)
	movq -136(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079e99
	push %RBP
	jmp uuid_0000000000079e96
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079e95
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079e98
uuid_0000000000079e96:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079e98:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_0000000000079e9b
uuid_0000000000079e99:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079937
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079e9b:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_0000000000079e9e
uuid_0000000000079e9c:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079933
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079e9e:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_0000000000079ea1
uuid_0000000000079e9f:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007992f
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079ea1:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_0000000000079ea4
uuid_0000000000079ea2:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007992b
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079ea4:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	jmp uuid_0000000000079ea7
uuid_0000000000079ea5:
uuid_0000000000079ea7:
	mov -64(%RBP),%RSP
	add $-72, %RSP
	jmp uuid_0000000000079eaa
uuid_0000000000079ea8:
uuid_0000000000079eaa:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
as_SB_local_SB_variable_CL_ArrowTypeType:
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079eac
	jmp uuid_0000000000079eae
uuid_0000000000079eac:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079eab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079eae:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
as_SB_constant_CL_ArrowTypeType:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079eaf
	jmp uuid_0000000000079eb1
uuid_0000000000079eaf:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079e45
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079eb1:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
deep_SB_hash_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ed4
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079eb5
	jmp uuid_0000000000079eb7
uuid_0000000000079eb5:
	push %RBP
	mov -120(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079eb2
	jmp uuid_0000000000079eb4
uuid_0000000000079eb2:
	movb $1, -136(%rbp)
uuid_0000000000079eb4:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_0000000000079eb7:
	mov -144(%RBP),%RSP
	add $-160, %RSP
	mov -136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ed1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ebe
	jmp uuid_0000000000079ec0
uuid_0000000000079ebe:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ebb
	jmp uuid_0000000000079ebd
uuid_0000000000079ebb:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079eb8
	jmp uuid_0000000000079eba
uuid_0000000000079eb8:
	movb $1, -200(%rbp)
uuid_0000000000079eba:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000079ebd:
	mov -216(%RBP),%RSP
	add $-272, %RSP
uuid_0000000000079ec0:
	mov -208(%RBP),%RSP
	add $-272, %RSP
	mov -200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ece
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ec7
	jmp uuid_0000000000079ec9
uuid_0000000000079ec7:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ec4
	jmp uuid_0000000000079ec6
uuid_0000000000079ec4:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079ec1
	jmp uuid_0000000000079ec3
uuid_0000000000079ec1:
	movb $1, -312(%rbp)
uuid_0000000000079ec3:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000079ec6:
	mov -328(%RBP),%RSP
	add $-384, %RSP
uuid_0000000000079ec9:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ecb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079eca
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079ecd
uuid_0000000000079ecb:
#call function deep-hash : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000079ecd:
	mov -280(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_0000000000079ed0
uuid_0000000000079ece:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_0000000000079ed0:
	mov -168(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_0000000000079ed3
uuid_0000000000079ed1:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_0000000000079ed3:
	mov -104(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_0000000000079ed6
uuid_0000000000079ed4:
uuid_0000000000079ed6:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
deep_SB_hash_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ee6
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079edf
	jmp uuid_0000000000079ee1
uuid_0000000000079edf:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079edc
	jmp uuid_0000000000079ede
uuid_0000000000079edc:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_0000000000079ed9
	jmp uuid_0000000000079edb
uuid_0000000000079ed9:
	movb $1, -200(%rbp)
uuid_0000000000079edb:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000079ede:
	mov -216(%RBP),%RSP
	add $-288, %RSP
uuid_0000000000079ee1:
	mov -208(%RBP),%RSP
	add $-288, %RSP
	mov -200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ee3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079ee2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079ee5
uuid_0000000000079ee3:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_0000000000079ee5:
	mov -152(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_0000000000079ee8
uuid_0000000000079ee6:
uuid_0000000000079ee8:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
ascript_SB_normal_CL_ArrowNilConsTypeAST:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ef4
	jmp uuid_0000000000079ef6
uuid_0000000000079ef4:
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ef1
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov $types_SB_have_SB_changed_CL_U8, %r15
	movb $1, 0(%r15)
	jmp uuid_0000000000079ef3
uuid_0000000000079ef1:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079eee
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079eeb
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079ee9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079eea
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079eed
uuid_0000000000079eeb:
uuid_0000000000079eed:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_0000000000079ef0
uuid_0000000000079eee:
uuid_0000000000079ef0:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000079ef3:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_0000000000079ef6:
	mov -112(%RBP),%RSP
	add $-152, %RSP
	mov %rbp, %rsp
	sub $104, %rsp
	ret
typeof_CL_ArrowTypeFragmentList:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079efd
	jmp uuid_0000000000079eff
uuid_0000000000079efd:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_0000000000079efa
	jmp uuid_0000000000079efc
uuid_0000000000079efa:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ef7
	jmp uuid_0000000000079ef9
uuid_0000000000079ef7:
	movb $1, -552(%rbp)
uuid_0000000000079ef9:
	mov -728(%RBP),%RSP
	add $-896, %RSP
uuid_0000000000079efc:
	mov -568(%RBP),%RSP
	add $-896, %RSP
uuid_0000000000079eff:
	mov -560(%RBP),%RSP
	add $-896, %RSP
	mov -552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f07
	push %RBP
	jmp uuid_0000000000079f04
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079f03
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079f06
uuid_0000000000079f04:
uuid_0000000000079f06:
	mov -904(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_0000000000079f09
uuid_0000000000079f07:
#call function typeof : Arrow<FragmentList,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f00
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	jmp uuid_0000000000079f02
uuid_0000000000079f00:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_0000000000079f02:
	mov -904(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000079f09:
	mov -376(%RBP),%RSP
	add $-904, %RSP
	subq $24, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
to_SB_s_CL_ArrowSAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f10
	jmp uuid_0000000000079f12
uuid_0000000000079f10:
	push %RBP
	jmp uuid_0000000000079f0d
	jmp uuid_0000000000079f0f
uuid_0000000000079f0d:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079f0a
	jmp uuid_0000000000079f0c
uuid_0000000000079f0a:
	movb $1, -264(%rbp)
uuid_0000000000079f0c:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000079f0f:
	mov -280(%RBP),%RSP
	add $-296, %RSP
uuid_0000000000079f12:
	mov -272(%RBP),%RSP
	add $-296, %RSP
	mov -264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f8a
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f1a
	jmp uuid_0000000000079f1c
uuid_0000000000079f1a:
	push %RBP
	jmp uuid_0000000000079f17
	jmp uuid_0000000000079f19
uuid_0000000000079f17:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079f14
	jmp uuid_0000000000079f16
uuid_0000000000079f14:
	movb $1, -384(%rbp)
uuid_0000000000079f16:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000079f19:
	mov -400(%RBP),%RSP
	add $-416, %RSP
uuid_0000000000079f1c:
	mov -392(%RBP),%RSP
	add $-416, %RSP
	mov -384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f87
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f3c
	jmp uuid_0000000000079f3e
uuid_0000000000079f3c:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f2a
	jmp uuid_0000000000079f2c
uuid_0000000000079f2a:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f21
	jmp uuid_0000000000079f23
uuid_0000000000079f21:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_0000000000079f1e
	jmp uuid_0000000000079f20
uuid_0000000000079f1e:
	movb $1, -696(%rbp)
uuid_0000000000079f20:
	mov -712(%RBP),%RSP
	add $-736, %RSP
uuid_0000000000079f23:
	mov -704(%RBP),%RSP
	add $-736, %RSP
	mov -696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f27
	jmp uuid_0000000000079f29
uuid_0000000000079f27:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f24
	jmp uuid_0000000000079f26
uuid_0000000000079f24:
	movb $1, -600(%rbp)
uuid_0000000000079f26:
	mov -744(%RBP),%RSP
	add $-816, %RSP
uuid_0000000000079f29:
	mov -616(%RBP),%RSP
	add $-816, %RSP
uuid_0000000000079f2c:
	mov -608(%RBP),%RSP
	add $-816, %RSP
	mov -600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f39
	jmp uuid_0000000000079f3b
uuid_0000000000079f39:
	push %RBP
	mov -480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f33
	jmp uuid_0000000000079f35
uuid_0000000000079f33:
	push %RBP
	jmp uuid_0000000000079f30
	jmp uuid_0000000000079f32
uuid_0000000000079f30:
	push %RBP
	mov -832(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -936(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f2d
	jmp uuid_0000000000079f2f
uuid_0000000000079f2d:
	movb $1, -904(%rbp)
uuid_0000000000079f2f:
	mov -928(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000079f32:
	mov -920(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000079f35:
	mov -912(%RBP),%RSP
	add $-936, %RSP
	mov -904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f36
	jmp uuid_0000000000079f38
uuid_0000000000079f36:
	movb $1, -504(%rbp)
uuid_0000000000079f38:
	mov -824(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000079f3b:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_0000000000079f3e:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f84
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f5d
	jmp uuid_0000000000079f5f
uuid_0000000000079f5d:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f4b
	jmp uuid_0000000000079f4d
uuid_0000000000079f4b:
	push %RBP
	mov -1104(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f42
	jmp uuid_0000000000079f44
uuid_0000000000079f42:
	push %RBP
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	jmp uuid_0000000000079f3f
	jmp uuid_0000000000079f41
uuid_0000000000079f3f:
	movb $1, -1216(%rbp)
uuid_0000000000079f41:
	mov -1232(%RBP),%RSP
	add $-1256, %RSP
uuid_0000000000079f44:
	mov -1224(%RBP),%RSP
	add $-1256, %RSP
	mov -1216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f48
	jmp uuid_0000000000079f4a
uuid_0000000000079f48:
	push %RBP
	mov -1096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f45
	jmp uuid_0000000000079f47
uuid_0000000000079f45:
	movb $1, -1120(%rbp)
uuid_0000000000079f47:
	mov -1264(%RBP),%RSP
	add $-1336, %RSP
uuid_0000000000079f4a:
	mov -1136(%RBP),%RSP
	add $-1336, %RSP
uuid_0000000000079f4d:
	mov -1128(%RBP),%RSP
	add $-1336, %RSP
	mov -1120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f5a
	jmp uuid_0000000000079f5c
uuid_0000000000079f5a:
	push %RBP
	mov -1000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f54
	jmp uuid_0000000000079f56
uuid_0000000000079f54:
	push %RBP
	jmp uuid_0000000000079f51
	jmp uuid_0000000000079f53
uuid_0000000000079f51:
	push %RBP
	mov -1352(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079f4e
	jmp uuid_0000000000079f50
uuid_0000000000079f4e:
	movb $1, -1424(%rbp)
uuid_0000000000079f50:
	mov -1448(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000079f53:
	mov -1440(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000079f56:
	mov -1432(%RBP),%RSP
	add $-1456, %RSP
	mov -1424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f57
	jmp uuid_0000000000079f59
uuid_0000000000079f57:
	movb $1, -1024(%rbp)
uuid_0000000000079f59:
	mov -1344(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000079f5c:
	mov -1040(%RBP),%RSP
	add $-1456, %RSP
uuid_0000000000079f5f:
	mov -1032(%RBP),%RSP
	add $-1456, %RSP
	mov -1024(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f81
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f66
	jmp uuid_0000000000079f68
uuid_0000000000079f66:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f63
	jmp uuid_0000000000079f65
uuid_0000000000079f63:
	push %RBP
	mov -1520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f60
	jmp uuid_0000000000079f62
uuid_0000000000079f60:
	movb $1, -1544(%rbp)
uuid_0000000000079f62:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_0000000000079f65:
	mov -1560(%RBP),%RSP
	add $-1712, %RSP
uuid_0000000000079f68:
	mov -1552(%RBP),%RSP
	add $-1712, %RSP
	mov -1544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f7e
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f73
	jmp uuid_0000000000079f75
uuid_0000000000079f73:
	push %RBP
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	jmp uuid_0000000000079f70
	jmp uuid_0000000000079f72
uuid_0000000000079f70:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f6d
	jmp uuid_0000000000079f6f
uuid_0000000000079f6d:
	push %RBP
	mov -1752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f6a
	jmp uuid_0000000000079f6c
uuid_0000000000079f6a:
	movb $1, -1800(%rbp)
uuid_0000000000079f6c:
	mov -1928(%RBP),%RSP
	add $-2000, %RSP
uuid_0000000000079f6f:
	mov -1848(%RBP),%RSP
	add $-2000, %RSP
uuid_0000000000079f72:
	mov -1816(%RBP),%RSP
	add $-2000, %RSP
uuid_0000000000079f75:
	mov -1808(%RBP),%RSP
	add $-2000, %RSP
	mov -1800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f7b
	push %RBP
	jmp uuid_0000000000079f78
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079f77
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079f7a
uuid_0000000000079f78:
uuid_0000000000079f7a:
	mov -2008(%RBP),%RSP
	add $-2008, %RSP
	jmp uuid_0000000000079f7d
uuid_0000000000079f7b:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079f76
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079f7d:
	mov -1720(%RBP),%RSP
	add $-2000, %RSP
	jmp uuid_0000000000079f80
uuid_0000000000079f7e:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079f69
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079f80:
	mov -1464(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_0000000000079f83
uuid_0000000000079f81:
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079f83:
	mov -944(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_0000000000079f86
uuid_0000000000079f84:
#call function to-s : Arrow<AST,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call to_SB_s_CL_ArrowSAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079f86:
	mov -424(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_0000000000079f89
uuid_0000000000079f87:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079f1d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -416(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079f89:
	mov -304(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_0000000000079f8c
uuid_0000000000079f8a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079f13
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -296(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_0000000000079f8c:
	mov -184(%RBP),%RSP
	add $-296, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
domain_CL_ArrowTypeType:
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
range_CL_ArrowTypeType:
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
t1_CL_ArrowTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
t2_CL_ArrowTypeConsTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
t3_CL_ArrowTypeConsTypeConsTypeString:
	pushq -8(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
p_CL_ArrowTypeConsU64Type:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079f9f
	jmp uuid_0000000000079fa1
uuid_0000000000079f9f:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079f9c
	jmp uuid_0000000000079f9e
uuid_0000000000079f9c:
	push %RBP
	jmp uuid_0000000000079f99
	jmp uuid_0000000000079f9b
uuid_0000000000079f99:
	movb $1, -104(%rbp)
uuid_0000000000079f9b:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000079f9e:
	mov -120(%RBP),%RSP
	add $-168, %RSP
uuid_0000000000079fa1:
	mov -112(%RBP),%RSP
	add $-168, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fa6
	push %RBP
	jmp uuid_0000000000079fa3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079fa2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079fa5
uuid_0000000000079fa3:
uuid_0000000000079fa5:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_0000000000079fa8
uuid_0000000000079fa6:
#call function .nth : Arrow<Cons<Cons<List<Type>,U64>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -32(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_nth_CL_ArrowTypeConsTypeConsU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079fa8:
	mov -72(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
p1_CL_ArrowTypeType:
#call function p : Arrow<Cons<Type,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	mov %RBX, %RBP
	call p_CL_ArrowTypeConsU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
p2_CL_ArrowTypeType:
#call function p : Arrow<Cons<Type,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $1
	mov %RBX, %RBP
	call p_CL_ArrowTypeConsU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
and_CL_ArrowTContextConsTContextTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq $0
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079faf
	jmp uuid_0000000000079fb1
uuid_0000000000079faf:
	push %RBP
	jmp uuid_0000000000079fac
	jmp uuid_0000000000079fae
uuid_0000000000079fac:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fa9
	jmp uuid_0000000000079fab
uuid_0000000000079fa9:
	movb $1, -760(%rbp)
uuid_0000000000079fab:
	mov -784(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000079fae:
	mov -776(%RBP),%RSP
	add $-904, %RSP
uuid_0000000000079fb1:
	mov -768(%RBP),%RSP
	add $-904, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fc2
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fb8
	jmp uuid_0000000000079fba
uuid_0000000000079fb8:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fb5
	jmp uuid_0000000000079fb7
uuid_0000000000079fb5:
	push %RBP
	jmp uuid_0000000000079fb2
	jmp uuid_0000000000079fb4
uuid_0000000000079fb2:
	movb $1, -1168(%rbp)
uuid_0000000000079fb4:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
uuid_0000000000079fb7:
	mov -1184(%RBP),%RSP
	add $-1312, %RSP
uuid_0000000000079fba:
	mov -1176(%RBP),%RSP
	add $-1312, %RSP
	mov -1168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fbf
	push %RBP
	jmp uuid_0000000000079fbc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079fbb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079fbe
uuid_0000000000079fbc:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079fbe:
	mov -1320(%RBP),%RSP
	add $-1320, %RSP
	jmp uuid_0000000000079fc1
uuid_0000000000079fbf:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079fc1:
	mov -912(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_0000000000079fc4
uuid_0000000000079fc2:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079fc4:
	mov -504(%RBP),%RSP
	add $-904, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $248, %rsp
	ret
and_CL_ArrowTypeConsTypeType:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	subq $24, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
union_CL_ArrowTContextConsTContextTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fdb
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fd8
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fd1
	jmp uuid_0000000000079fd3
uuid_0000000000079fd1:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_0000000000079fce
	jmp uuid_0000000000079fd0
uuid_0000000000079fce:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_0000000000079fcb
	jmp uuid_0000000000079fcd
uuid_0000000000079fcb:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079fc8
	jmp uuid_0000000000079fca
uuid_0000000000079fc8:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079fc5
	jmp uuid_0000000000079fc7
uuid_0000000000079fc5:
	movb $1, -760(%rbp)
uuid_0000000000079fc7:
	mov -904(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000079fca:
	mov -888(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000079fcd:
	mov -856(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000079fd0:
	mov -776(%RBP),%RSP
	add $-1024, %RSP
uuid_0000000000079fd3:
	mov -768(%RBP),%RSP
	add $-1024, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fd5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079fd4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079fd7
uuid_0000000000079fd5:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -896(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_0000000000079fd7:
	mov -632(%RBP),%RSP
	add $-1024, %RSP
	jmp uuid_0000000000079fda
uuid_0000000000079fd8:
uuid_0000000000079fda:
	mov -504(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_0000000000079fdd
uuid_0000000000079fdb:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_0000000000079fdd:
	mov -376(%RBP),%RSP
	add $-496, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $248, %rsp
	ret
union_CL_ArrowContextConsContextContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079fde
	jmp uuid_0000000000079fe0
uuid_0000000000079fde:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_0000000000079fe0:
	mov -304(%RBP),%RSP
	add $-304, %RSP
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_0000000000079ff4
	jmp uuid_0000000000079ff6
uuid_0000000000079ff4:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079fea
	jmp uuid_0000000000079fec
uuid_0000000000079fea:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_0000000000079fe7
	jmp uuid_0000000000079fe9
uuid_0000000000079fe7:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079fe4
	jmp uuid_0000000000079fe6
uuid_0000000000079fe4:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079fe1
	jmp uuid_0000000000079fe3
uuid_0000000000079fe1:
	movb $1, -520(%rbp)
uuid_0000000000079fe3:
	mov -632(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000079fe6:
	mov -616(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000079fe9:
	mov -536(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000079fec:
	mov -528(%RBP),%RSP
	add $-728, %RSP
	mov -520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_0000000000079ff1
	push %RBP
	jmp uuid_0000000000079fee
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_0000000000079fed
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_0000000000079ff0
uuid_0000000000079fee:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_0000000000079ff0:
	mov -736(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_0000000000079ff3
uuid_0000000000079ff1:
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -624(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq $0
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_0000000000079ff3:
	mov -416(%RBP),%RSP
	add $-728, %RSP
uuid_0000000000079ff6:
	mov -312(%RBP),%RSP
	add $-728, %RSP
	subq $96, %rsp
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
union_CL_ArrowFContextConsTContextFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
uuid_000000000007a00e:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a00f
	jmp uuid_000000000007a010
uuid_000000000007a00f:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	push %RBP
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a00b
	push %RBP
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $0
	push %RBP
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a003
	jmp uuid_000000000007a005
uuid_000000000007a003:
	push %RBP
	jmp uuid_000000000007a000
	jmp uuid_000000000007a002
uuid_000000000007a000:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_0000000000079ffd
	jmp uuid_0000000000079fff
uuid_0000000000079ffd:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_0000000000079ffa
	jmp uuid_0000000000079ffc
uuid_0000000000079ffa:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_0000000000079ff7
	jmp uuid_0000000000079ff9
uuid_0000000000079ff7:
	movb $1, -912(%rbp)
uuid_0000000000079ff9:
	mov -984(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000079ffc:
	mov -968(%RBP),%RSP
	add $-1104, %RSP
uuid_0000000000079fff:
	mov -936(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007a002:
	mov -928(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007a005:
	mov -920(%RBP),%RSP
	add $-1104, %RSP
	mov -912(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a008
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a007
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a00a
uuid_000000000007a008:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $uuid_000000000007a006
	pushq $0
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1256(%RBP)
	popq -1248(%RBP)
	popq -1240(%RBP)
	popq -1232(%RBP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -976(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $0
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	movq -1104(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -208(%rbp)
uuid_000000000007a00a:
	mov -784(%RBP),%RSP
	add $-1256, %RSP
	jmp uuid_000000000007a00d
uuid_000000000007a00b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
uuid_000000000007a00d:
	mov -656(%RBP),%RSP
	add $-776, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007a00e
uuid_000000000007a010:
	subq $200, %rsp
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
tag_SB_of_CL_ArrowStringType:
	pushq $uuid_0000000000079496
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a017
	jmp uuid_000000000007a019
uuid_000000000007a017:
	push %RBP
	jmp uuid_000000000007a014
	jmp uuid_000000000007a016
uuid_000000000007a014:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a011
	jmp uuid_000000000007a013
uuid_000000000007a011:
	movb $1, -104(%rbp)
uuid_000000000007a013:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007a016:
	mov -120(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007a019:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a01e
	push %RBP
	jmp uuid_000000000007a01b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a01a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a01d
uuid_000000000007a01b:
uuid_000000000007a01d:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a020
uuid_000000000007a01e:
	movq -136(%rbp), %r15
	movq %r15, -40(%rbp)
	mov -136(%rbp), %r15
	mov %r15, -40(%rbp)
uuid_000000000007a020:
	mov -72(%RBP),%RSP
	add $-136, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
can_SB_unify_CL_ArrowU64ConsListTypeListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a02c
	jmp uuid_000000000007a02e
uuid_000000000007a02c:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a029
	jmp uuid_000000000007a02b
uuid_000000000007a029:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a026
	jmp uuid_000000000007a028
uuid_000000000007a026:
	movb $1, -288(%rbp)
uuid_000000000007a028:
	mov -352(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007a02b:
	mov -304(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007a02e:
	mov -296(%RBP),%RSP
	add $-392, %RSP
	mov -288(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a057
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a047
	jmp uuid_000000000007a049
uuid_000000000007a047:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a035
	jmp uuid_000000000007a037
uuid_000000000007a035:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a032
	jmp uuid_000000000007a034
uuid_000000000007a032:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007a02f
	jmp uuid_000000000007a031
uuid_000000000007a02f:
	movb $1, -560(%rbp)
uuid_000000000007a031:
	mov -624(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007a034:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007a037:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a044
	jmp uuid_000000000007a046
uuid_000000000007a044:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a03e
	jmp uuid_000000000007a040
uuid_000000000007a03e:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a03b
	jmp uuid_000000000007a03d
uuid_000000000007a03b:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007a038
	jmp uuid_000000000007a03a
uuid_000000000007a038:
	movb $1, -704(%rbp)
uuid_000000000007a03a:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a03d:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a040:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a041
	jmp uuid_000000000007a043
uuid_000000000007a041:
	movb $1, -496(%rbp)
uuid_000000000007a043:
	mov -656(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a046:
	mov -512(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007a049:
	mov -504(%RBP),%RSP
	add $-792, %RSP
	mov -496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a054
	push %RBP
	jmp uuid_000000000007a051
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a050
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a053
uuid_000000000007a051:
uuid_000000000007a053:
	mov -800(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007a056
uuid_000000000007a054:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a04d
	jmp uuid_000000000007a04f
uuid_000000000007a04d:
	push %RBP
#call function can-unify : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a04a
	jmp uuid_000000000007a04c
uuid_000000000007a04a:
	movq $1, -96(%rbp)
uuid_000000000007a04c:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007a04f:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007a056:
	mov -400(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007a059
uuid_000000000007a057:
	movq $1, -96(%rbp)
uuid_000000000007a059:
	mov -192(%RBP),%RSP
	add $-392, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
can_SB_unify_CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a060
	jmp uuid_000000000007a062
uuid_000000000007a060:
	push %RBP
	jmp uuid_000000000007a05d
	jmp uuid_000000000007a05f
uuid_000000000007a05d:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a05a
	jmp uuid_000000000007a05c
uuid_000000000007a05a:
	movb $1, -192(%rbp)
uuid_000000000007a05c:
	mov -216(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a05f:
	mov -208(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a062:
	mov -200(%RBP),%RSP
	add $-240, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a23a
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a07c
	jmp uuid_000000000007a07e
uuid_000000000007a07c:
	push %RBP
	jmp uuid_000000000007a079
	jmp uuid_000000000007a07b
uuid_000000000007a079:
	push %RBP
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a073
	jmp uuid_000000000007a075
uuid_000000000007a073:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a069
	jmp uuid_000000000007a06b
uuid_000000000007a069:
	push %RBP
	jmp uuid_000000000007a066
	jmp uuid_000000000007a068
uuid_000000000007a066:
	push %RBP
	jmp uuid_000000000007a063
	jmp uuid_000000000007a065
uuid_000000000007a063:
	movb $1, -432(%rbp)
uuid_000000000007a065:
	mov -456(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007a068:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007a06b:
	mov -440(%RBP),%RSP
	add $-456, %RSP
	mov -432(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a070
	jmp uuid_000000000007a072
uuid_000000000007a070:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $uuid_000000000007a06c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a06d
	jmp uuid_000000000007a06f
uuid_000000000007a06d:
	movb $1, -368(%rbp)
uuid_000000000007a06f:
	mov -464(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a072:
	mov -384(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a075:
	mov -376(%RBP),%RSP
	add $-472, %RSP
	mov -368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a076
	jmp uuid_000000000007a078
uuid_000000000007a076:
	movb $1, -312(%rbp)
uuid_000000000007a078:
	mov -336(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a07b:
	mov -328(%RBP),%RSP
	add $-472, %RSP
uuid_000000000007a07e:
	mov -320(%RBP),%RSP
	add $-472, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a237
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a08b
	jmp uuid_000000000007a08d
uuid_000000000007a08b:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	jmp uuid_000000000007a088
	jmp uuid_000000000007a08a
uuid_000000000007a088:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a082
	jmp uuid_000000000007a084
uuid_000000000007a082:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a07f
	jmp uuid_000000000007a081
uuid_000000000007a07f:
	movb $1, -624(%rbp)
uuid_000000000007a081:
	mov -640(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007a084:
	mov -632(%RBP),%RSP
	add $-648, %RSP
	mov -624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a085
	jmp uuid_000000000007a087
uuid_000000000007a085:
	movb $1, -544(%rbp)
uuid_000000000007a087:
	mov -592(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007a08a:
	mov -560(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007a08d:
	mov -552(%RBP),%RSP
	add $-648, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a234
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a09d
	jmp uuid_000000000007a09f
uuid_000000000007a09d:
	push %RBP
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	jmp uuid_000000000007a09a
	jmp uuid_000000000007a09c
uuid_000000000007a09a:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a094
	jmp uuid_000000000007a096
uuid_000000000007a094:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a091
	jmp uuid_000000000007a093
uuid_000000000007a091:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a08e
	jmp uuid_000000000007a090
uuid_000000000007a08e:
	movb $1, -800(%rbp)
uuid_000000000007a090:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007a093:
	mov -816(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007a096:
	mov -808(%RBP),%RSP
	add $-872, %RSP
	mov -800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a097
	jmp uuid_000000000007a099
uuid_000000000007a097:
	movb $1, -720(%rbp)
uuid_000000000007a099:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007a09c:
	mov -736(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007a09f:
	mov -728(%RBP),%RSP
	add $-872, %RSP
	mov -720(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a231
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0b5
	jmp uuid_000000000007a0b7
uuid_000000000007a0b5:
	push %RBP
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0ac
	jmp uuid_000000000007a0ae
uuid_000000000007a0ac:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a0a9
	jmp uuid_000000000007a0ab
uuid_000000000007a0a9:
	push %RBP
	mov -968(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a0a6
	jmp uuid_000000000007a0a8
uuid_000000000007a0a6:
	movb $1, -992(%rbp)
uuid_000000000007a0a8:
	mov -1040(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007a0ab:
	mov -1008(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007a0ae:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
	mov -992(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0b2
	jmp uuid_000000000007a0b4
uuid_000000000007a0b2:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	jmp uuid_000000000007a0af
	jmp uuid_000000000007a0b1
uuid_000000000007a0af:
	movb $1, -944(%rbp)
uuid_000000000007a0b1:
	mov -1072(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007a0b4:
	mov -960(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007a0b7:
	mov -952(%RBP),%RSP
	add $-1096, %RSP
	mov -944(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a22e
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a10c
	jmp uuid_000000000007a10e
uuid_000000000007a10c:
	push %RBP
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0d6
	jmp uuid_000000000007a0d8
uuid_000000000007a0d6:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0cd
	jmp uuid_000000000007a0cf
uuid_000000000007a0cd:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0c4
	jmp uuid_000000000007a0c6
uuid_000000000007a0c4:
	push %RBP
	mov -1328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0c1
	jmp uuid_000000000007a0c3
uuid_000000000007a0c1:
	push %RBP
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_000000000007a0be
	jmp uuid_000000000007a0c0
uuid_000000000007a0be:
	movb $1, -1344(%rbp)
uuid_000000000007a0c0:
	mov -1408(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007a0c3:
	mov -1360(%RBP),%RSP
	add $-1432, %RSP
uuid_000000000007a0c6:
	mov -1352(%RBP),%RSP
	add $-1432, %RSP
	mov -1344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0ca
	jmp uuid_000000000007a0cc
uuid_000000000007a0ca:
	push %RBP
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	jmp uuid_000000000007a0c7
	jmp uuid_000000000007a0c9
uuid_000000000007a0c7:
	movb $1, -1280(%rbp)
uuid_000000000007a0c9:
	mov -1440(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007a0cc:
	mov -1296(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007a0cf:
	mov -1288(%RBP),%RSP
	add $-1464, %RSP
	mov -1280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0d3
	jmp uuid_000000000007a0d5
uuid_000000000007a0d3:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0d0
	jmp uuid_000000000007a0d2
uuid_000000000007a0d0:
	movb $1, -1216(%rbp)
uuid_000000000007a0d2:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007a0d5:
	mov -1232(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007a0d8:
	mov -1224(%RBP),%RSP
	add $-1480, %RSP
	mov -1216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a109
	jmp uuid_000000000007a10b
uuid_000000000007a109:
	push %RBP
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq $0
	push %RBP
	mov -1512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a103
	jmp uuid_000000000007a105
uuid_000000000007a103:
	push %RBP
	mov -1504(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1576(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0fa
	jmp uuid_000000000007a0fc
uuid_000000000007a0fa:
	push %RBP
	mov -1568(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0df
	jmp uuid_000000000007a0e1
uuid_000000000007a0df:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0dc
	jmp uuid_000000000007a0de
uuid_000000000007a0dc:
	push %RBP
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	jmp uuid_000000000007a0d9
	jmp uuid_000000000007a0db
uuid_000000000007a0d9:
	movb $1, -1648(%rbp)
uuid_000000000007a0db:
	mov -1712(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007a0de:
	mov -1664(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007a0e1:
	mov -1656(%RBP),%RSP
	add $-1736, %RSP
	mov -1648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0f7
	jmp uuid_000000000007a0f9
uuid_000000000007a0f7:
	push %RBP
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0f1
	jmp uuid_000000000007a0f3
uuid_000000000007a0f1:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1832(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0e8
	jmp uuid_000000000007a0ea
uuid_000000000007a0e8:
	push %RBP
	mov -1824(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0e5
	jmp uuid_000000000007a0e7
uuid_000000000007a0e5:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007a0e2
	jmp uuid_000000000007a0e4
uuid_000000000007a0e2:
	movb $1, -1840(%rbp)
uuid_000000000007a0e4:
	mov -1904(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007a0e7:
	mov -1856(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007a0ea:
	mov -1848(%RBP),%RSP
	add $-1928, %RSP
	mov -1840(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0ee
	jmp uuid_000000000007a0f0
uuid_000000000007a0ee:
	push %RBP
	mov -1752(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1944(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0eb
	jmp uuid_000000000007a0ed
uuid_000000000007a0eb:
	movb $1, -1776(%rbp)
uuid_000000000007a0ed:
	mov -1936(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007a0f0:
	mov -1792(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007a0f3:
	mov -1784(%RBP),%RSP
	add $-1944, %RSP
	mov -1776(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a0f4
	jmp uuid_000000000007a0f6
uuid_000000000007a0f4:
	movb $1, -1584(%rbp)
uuid_000000000007a0f6:
	mov -1744(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007a0f9:
	mov -1600(%RBP),%RSP
	add $-1944, %RSP
uuid_000000000007a0fc:
	mov -1592(%RBP),%RSP
	add $-1944, %RSP
	mov -1584(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a100
	jmp uuid_000000000007a102
uuid_000000000007a100:
	push %RBP
	mov -1496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0fd
	jmp uuid_000000000007a0ff
uuid_000000000007a0fd:
	movb $1, -1520(%rbp)
uuid_000000000007a0ff:
	mov -1952(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a102:
	mov -1536(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a105:
	mov -1528(%RBP),%RSP
	add $-1960, %RSP
	mov -1520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a106
	jmp uuid_000000000007a108
uuid_000000000007a106:
	movb $1, -1168(%rbp)
uuid_000000000007a108:
	mov -1488(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a10b:
	mov -1184(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a10e:
	mov -1176(%RBP),%RSP
	add $-1960, %RSP
	mov -1168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a22b
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -2024(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a145
	jmp uuid_000000000007a147
uuid_000000000007a145:
	push %RBP
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	jmp uuid_000000000007a142
	jmp uuid_000000000007a144
uuid_000000000007a142:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq $0
	push %RBP
	mov -2104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a13c
	jmp uuid_000000000007a13e
uuid_000000000007a13c:
	push %RBP
	mov -2096(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a133
	jmp uuid_000000000007a135
uuid_000000000007a133:
	push %RBP
	mov -2160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a118
	jmp uuid_000000000007a11a
uuid_000000000007a118:
	push %RBP
	mov -2224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a115
	jmp uuid_000000000007a117
uuid_000000000007a115:
	push %RBP
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	jmp uuid_000000000007a112
	jmp uuid_000000000007a114
uuid_000000000007a112:
	movb $1, -2240(%rbp)
uuid_000000000007a114:
	mov -2304(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007a117:
	mov -2256(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007a11a:
	mov -2248(%RBP),%RSP
	add $-2328, %RSP
	mov -2240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a130
	jmp uuid_000000000007a132
uuid_000000000007a130:
	push %RBP
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq $0
	push %RBP
	mov -2360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a12a
	jmp uuid_000000000007a12c
uuid_000000000007a12a:
	push %RBP
	mov -2352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a121
	jmp uuid_000000000007a123
uuid_000000000007a121:
	push %RBP
	mov -2416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a11e
	jmp uuid_000000000007a120
uuid_000000000007a11e:
	push %RBP
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	jmp uuid_000000000007a11b
	jmp uuid_000000000007a11d
uuid_000000000007a11b:
	movb $1, -2432(%rbp)
uuid_000000000007a11d:
	mov -2496(%RBP),%RSP
	add $-2520, %RSP
uuid_000000000007a120:
	mov -2448(%RBP),%RSP
	add $-2520, %RSP
uuid_000000000007a123:
	mov -2440(%RBP),%RSP
	add $-2520, %RSP
	mov -2432(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a127
	jmp uuid_000000000007a129
uuid_000000000007a127:
	push %RBP
	mov -2344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2536(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a124
	jmp uuid_000000000007a126
uuid_000000000007a124:
	movb $1, -2368(%rbp)
uuid_000000000007a126:
	mov -2528(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007a129:
	mov -2384(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007a12c:
	mov -2376(%RBP),%RSP
	add $-2536, %RSP
	mov -2368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a12d
	jmp uuid_000000000007a12f
uuid_000000000007a12d:
	movb $1, -2176(%rbp)
uuid_000000000007a12f:
	mov -2336(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007a132:
	mov -2192(%RBP),%RSP
	add $-2536, %RSP
uuid_000000000007a135:
	mov -2184(%RBP),%RSP
	add $-2536, %RSP
	mov -2176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a139
	jmp uuid_000000000007a13b
uuid_000000000007a139:
	push %RBP
	mov -2088(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2552(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a136
	jmp uuid_000000000007a138
uuid_000000000007a136:
	movb $1, -2112(%rbp)
uuid_000000000007a138:
	mov -2544(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007a13b:
	mov -2128(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007a13e:
	mov -2120(%RBP),%RSP
	add $-2552, %RSP
	mov -2112(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a13f
	jmp uuid_000000000007a141
uuid_000000000007a13f:
	movb $1, -2032(%rbp)
uuid_000000000007a141:
	mov -2080(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007a144:
	mov -2048(%RBP),%RSP
	add $-2552, %RSP
uuid_000000000007a147:
	mov -2040(%RBP),%RSP
	add $-2552, %RSP
	mov -2032(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a228
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -2616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a17e
	jmp uuid_000000000007a180
uuid_000000000007a17e:
	push %RBP
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a163
	jmp uuid_000000000007a165
uuid_000000000007a163:
	push %RBP
	mov -2656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a15a
	jmp uuid_000000000007a15c
uuid_000000000007a15a:
	push %RBP
	mov -2720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a151
	jmp uuid_000000000007a153
uuid_000000000007a151:
	push %RBP
	mov -2784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a14e
	jmp uuid_000000000007a150
uuid_000000000007a14e:
	push %RBP
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	jmp uuid_000000000007a14b
	jmp uuid_000000000007a14d
uuid_000000000007a14b:
	movb $1, -2800(%rbp)
uuid_000000000007a14d:
	mov -2864(%RBP),%RSP
	add $-2888, %RSP
uuid_000000000007a150:
	mov -2816(%RBP),%RSP
	add $-2888, %RSP
uuid_000000000007a153:
	mov -2808(%RBP),%RSP
	add $-2888, %RSP
	mov -2800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a157
	jmp uuid_000000000007a159
uuid_000000000007a157:
	push %RBP
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	jmp uuid_000000000007a154
	jmp uuid_000000000007a156
uuid_000000000007a154:
	movb $1, -2736(%rbp)
uuid_000000000007a156:
	mov -2896(%RBP),%RSP
	add $-2920, %RSP
uuid_000000000007a159:
	mov -2752(%RBP),%RSP
	add $-2920, %RSP
uuid_000000000007a15c:
	mov -2744(%RBP),%RSP
	add $-2920, %RSP
	mov -2736(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a160
	jmp uuid_000000000007a162
uuid_000000000007a160:
	push %RBP
	mov -2648(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a15d
	jmp uuid_000000000007a15f
uuid_000000000007a15d:
	movb $1, -2672(%rbp)
uuid_000000000007a15f:
	mov -2928(%RBP),%RSP
	add $-2936, %RSP
uuid_000000000007a162:
	mov -2688(%RBP),%RSP
	add $-2936, %RSP
uuid_000000000007a165:
	mov -2680(%RBP),%RSP
	add $-2936, %RSP
	mov -2672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a17b
	jmp uuid_000000000007a17d
uuid_000000000007a17b:
	push %RBP
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq $0
	push %RBP
	mov -2968(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a175
	jmp uuid_000000000007a177
uuid_000000000007a175:
	push %RBP
	mov -2960(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a16c
	jmp uuid_000000000007a16e
uuid_000000000007a16c:
	push %RBP
	mov -3024(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a169
	jmp uuid_000000000007a16b
uuid_000000000007a169:
	push %RBP
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	jmp uuid_000000000007a166
	jmp uuid_000000000007a168
uuid_000000000007a166:
	movb $1, -3040(%rbp)
uuid_000000000007a168:
	mov -3104(%RBP),%RSP
	add $-3128, %RSP
uuid_000000000007a16b:
	mov -3056(%RBP),%RSP
	add $-3128, %RSP
uuid_000000000007a16e:
	mov -3048(%RBP),%RSP
	add $-3128, %RSP
	mov -3040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a172
	jmp uuid_000000000007a174
uuid_000000000007a172:
	push %RBP
	mov -2952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3144(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a16f
	jmp uuid_000000000007a171
uuid_000000000007a16f:
	movb $1, -2976(%rbp)
uuid_000000000007a171:
	mov -3136(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007a174:
	mov -2992(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007a177:
	mov -2984(%RBP),%RSP
	add $-3144, %RSP
	mov -2976(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a178
	jmp uuid_000000000007a17a
uuid_000000000007a178:
	movb $1, -2624(%rbp)
uuid_000000000007a17a:
	mov -2944(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007a17d:
	mov -2640(%RBP),%RSP
	add $-3144, %RSP
uuid_000000000007a180:
	mov -2632(%RBP),%RSP
	add $-3144, %RSP
	mov -2624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a225
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1a5
	jmp uuid_000000000007a1a7
uuid_000000000007a1a5:
	push %RBP
	pushq -3184(%RBP)
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a18a
	jmp uuid_000000000007a18c
uuid_000000000007a18a:
	push %RBP
	mov -3248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a187
	jmp uuid_000000000007a189
uuid_000000000007a187:
	push %RBP
	mov -3240(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a184
	jmp uuid_000000000007a186
uuid_000000000007a184:
	movb $1, -3264(%rbp)
uuid_000000000007a186:
	mov -3328(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007a189:
	mov -3280(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007a18c:
	mov -3272(%RBP),%RSP
	add $-3336, %RSP
	mov -3264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1a2
	jmp uuid_000000000007a1a4
uuid_000000000007a1a2:
	push %RBP
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	pushq $0
	push %RBP
	mov -3368(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a19c
	jmp uuid_000000000007a19e
uuid_000000000007a19c:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3432(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a193
	jmp uuid_000000000007a195
uuid_000000000007a193:
	push %RBP
	mov -3424(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3496(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a190
	jmp uuid_000000000007a192
uuid_000000000007a190:
	push %RBP
	pushq -3400(%RBP)
	pushq -3408(%RBP)
	pushq -3416(%RBP)
	jmp uuid_000000000007a18d
	jmp uuid_000000000007a18f
uuid_000000000007a18d:
	movb $1, -3440(%rbp)
uuid_000000000007a18f:
	mov -3504(%RBP),%RSP
	add $-3528, %RSP
uuid_000000000007a192:
	mov -3456(%RBP),%RSP
	add $-3528, %RSP
uuid_000000000007a195:
	mov -3448(%RBP),%RSP
	add $-3528, %RSP
	mov -3440(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a199
	jmp uuid_000000000007a19b
uuid_000000000007a199:
	push %RBP
	mov -3352(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a196
	jmp uuid_000000000007a198
uuid_000000000007a196:
	movb $1, -3376(%rbp)
uuid_000000000007a198:
	mov -3536(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007a19b:
	mov -3392(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007a19e:
	mov -3384(%RBP),%RSP
	add $-3544, %RSP
	mov -3376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a19f
	jmp uuid_000000000007a1a1
uuid_000000000007a19f:
	movb $1, -3216(%rbp)
uuid_000000000007a1a1:
	mov -3344(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007a1a4:
	mov -3232(%RBP),%RSP
	add $-3544, %RSP
uuid_000000000007a1a7:
	mov -3224(%RBP),%RSP
	add $-3544, %RSP
	mov -3216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a222
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3608(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1c0
	jmp uuid_000000000007a1c2
uuid_000000000007a1c0:
	push %RBP
	pushq -3584(%RBP)
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	jmp uuid_000000000007a1bd
	jmp uuid_000000000007a1bf
uuid_000000000007a1bd:
	push %RBP
	pushq -3560(%RBP)
	pushq -3568(%RBP)
	pushq -3576(%RBP)
	pushq $0
	push %RBP
	mov -3688(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1b7
	jmp uuid_000000000007a1b9
uuid_000000000007a1b7:
	push %RBP
	mov -3680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1ae
	jmp uuid_000000000007a1b0
uuid_000000000007a1ae:
	push %RBP
	mov -3744(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3816(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1ab
	jmp uuid_000000000007a1ad
uuid_000000000007a1ab:
	push %RBP
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	jmp uuid_000000000007a1a8
	jmp uuid_000000000007a1aa
uuid_000000000007a1a8:
	movb $1, -3760(%rbp)
uuid_000000000007a1aa:
	mov -3824(%RBP),%RSP
	add $-3848, %RSP
uuid_000000000007a1ad:
	mov -3776(%RBP),%RSP
	add $-3848, %RSP
uuid_000000000007a1b0:
	mov -3768(%RBP),%RSP
	add $-3848, %RSP
	mov -3760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1b4
	jmp uuid_000000000007a1b6
uuid_000000000007a1b4:
	push %RBP
	mov -3672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3864(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1b1
	jmp uuid_000000000007a1b3
uuid_000000000007a1b1:
	movb $1, -3696(%rbp)
uuid_000000000007a1b3:
	mov -3856(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007a1b6:
	mov -3712(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007a1b9:
	mov -3704(%RBP),%RSP
	add $-3864, %RSP
	mov -3696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1ba
	jmp uuid_000000000007a1bc
uuid_000000000007a1ba:
	movb $1, -3616(%rbp)
uuid_000000000007a1bc:
	mov -3664(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007a1bf:
	mov -3632(%RBP),%RSP
	add $-3864, %RSP
uuid_000000000007a1c2:
	mov -3624(%RBP),%RSP
	add $-3864, %RSP
	mov -3616(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a21f
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -3928(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1ee
	jmp uuid_000000000007a1f0
uuid_000000000007a1ee:
	push %RBP
	pushq -3904(%RBP)
	pushq -3912(%RBP)
	pushq -3920(%RBP)
	pushq $0
	push %RBP
	mov -3976(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1c9
	jmp uuid_000000000007a1cb
uuid_000000000007a1c9:
	push %RBP
	mov -3968(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4040(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1c6
	jmp uuid_000000000007a1c8
uuid_000000000007a1c6:
	push %RBP
	mov -3960(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a1c3
	jmp uuid_000000000007a1c5
uuid_000000000007a1c3:
	movb $1, -3984(%rbp)
uuid_000000000007a1c5:
	mov -4048(%RBP),%RSP
	add $-4056, %RSP
uuid_000000000007a1c8:
	mov -4000(%RBP),%RSP
	add $-4056, %RSP
uuid_000000000007a1cb:
	mov -3992(%RBP),%RSP
	add $-4056, %RSP
	mov -3984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1eb
	jmp uuid_000000000007a1ed
uuid_000000000007a1eb:
	push %RBP
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	pushq $0
	push %RBP
	mov -4088(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1e5
	jmp uuid_000000000007a1e7
uuid_000000000007a1e5:
	push %RBP
	mov -4080(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1db
	jmp uuid_000000000007a1dd
uuid_000000000007a1db:
	push %RBP
	mov -4144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1d8
	jmp uuid_000000000007a1da
uuid_000000000007a1d8:
	push %RBP
	pushq -4120(%RBP)
	pushq -4128(%RBP)
	pushq -4136(%RBP)
	pushq $0
	push %RBP
	mov -4248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1d2
	jmp uuid_000000000007a1d4
uuid_000000000007a1d2:
	push %RBP
	mov -4240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1cf
	jmp uuid_000000000007a1d1
uuid_000000000007a1cf:
	push %RBP
	mov -4232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a1cc
	jmp uuid_000000000007a1ce
uuid_000000000007a1cc:
	movb $1, -4256(%rbp)
uuid_000000000007a1ce:
	mov -4320(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007a1d1:
	mov -4272(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007a1d4:
	mov -4264(%RBP),%RSP
	add $-4328, %RSP
	mov -4256(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1d5
	jmp uuid_000000000007a1d7
uuid_000000000007a1d5:
	movb $1, -4160(%rbp)
uuid_000000000007a1d7:
	mov -4224(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007a1da:
	mov -4176(%RBP),%RSP
	add $-4328, %RSP
uuid_000000000007a1dd:
	mov -4168(%RBP),%RSP
	add $-4328, %RSP
	mov -4160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1e2
	jmp uuid_000000000007a1e4
uuid_000000000007a1e2:
	push %RBP
	mov -4072(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4344(%rbp)
	pushq $uuid_000000000007a1de
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1df
	jmp uuid_000000000007a1e1
uuid_000000000007a1df:
	movb $1, -4096(%rbp)
uuid_000000000007a1e1:
	mov -4336(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007a1e4:
	mov -4112(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007a1e7:
	mov -4104(%RBP),%RSP
	add $-4344, %RSP
	mov -4096(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1e8
	jmp uuid_000000000007a1ea
uuid_000000000007a1e8:
	movb $1, -3936(%rbp)
uuid_000000000007a1ea:
	mov -4064(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007a1ed:
	mov -3952(%RBP),%RSP
	add $-4344, %RSP
uuid_000000000007a1f0:
	mov -3944(%RBP),%RSP
	add $-4344, %RSP
	mov -3936(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a21c
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -4408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a20c
	jmp uuid_000000000007a20e
uuid_000000000007a20c:
	push %RBP
	pushq -4384(%RBP)
	pushq -4392(%RBP)
	pushq -4400(%RBP)
	pushq $0
	push %RBP
	mov -4456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a1fa
	jmp uuid_000000000007a1fc
uuid_000000000007a1fa:
	push %RBP
	mov -4448(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a1f7
	jmp uuid_000000000007a1f9
uuid_000000000007a1f7:
	push %RBP
	mov -4440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a1f4
	jmp uuid_000000000007a1f6
uuid_000000000007a1f4:
	movb $1, -4464(%rbp)
uuid_000000000007a1f6:
	mov -4528(%RBP),%RSP
	add $-4536, %RSP
uuid_000000000007a1f9:
	mov -4480(%RBP),%RSP
	add $-4536, %RSP
uuid_000000000007a1fc:
	mov -4472(%RBP),%RSP
	add $-4536, %RSP
	mov -4464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a209
	jmp uuid_000000000007a20b
uuid_000000000007a209:
	push %RBP
	pushq -4360(%RBP)
	pushq -4368(%RBP)
	pushq -4376(%RBP)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a203
	jmp uuid_000000000007a205
uuid_000000000007a203:
	push %RBP
	mov -4560(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a200
	jmp uuid_000000000007a202
uuid_000000000007a200:
	push %RBP
	mov -4552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a1fd
	jmp uuid_000000000007a1ff
uuid_000000000007a1fd:
	movb $1, -4576(%rbp)
uuid_000000000007a1ff:
	mov -4640(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007a202:
	mov -4592(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007a205:
	mov -4584(%RBP),%RSP
	add $-4648, %RSP
	mov -4576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a206
	jmp uuid_000000000007a208
uuid_000000000007a206:
	movb $1, -4416(%rbp)
uuid_000000000007a208:
	mov -4544(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007a20b:
	mov -4432(%RBP),%RSP
	add $-4648, %RSP
uuid_000000000007a20e:
	mov -4424(%RBP),%RSP
	add $-4648, %RSP
	mov -4416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a219
	push %RBP
	jmp uuid_000000000007a216
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a215
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a218
uuid_000000000007a216:
uuid_000000000007a218:
	mov -4656(%RBP),%RSP
	add $-4656, %RSP
	jmp uuid_000000000007a21b
uuid_000000000007a219:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4648(%rbp)
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a212
	jmp uuid_000000000007a214
uuid_000000000007a212:
	push %RBP
#call function can-unify : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a20f
	jmp uuid_000000000007a211
uuid_000000000007a20f:
	movq $1, -64(%rbp)
uuid_000000000007a211:
	mov -4664(%RBP),%RSP
	add $-4664, %RSP
uuid_000000000007a214:
	mov -4656(%RBP),%RSP
	add $-4664, %RSP
uuid_000000000007a21b:
	mov -4352(%RBP),%RSP
	add $-4664, %RSP
	jmp uuid_000000000007a21e
uuid_000000000007a21c:
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4056(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4328(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a1f1
	jmp uuid_000000000007a1f3
uuid_000000000007a1f1:
	movq $1, -64(%rbp)
uuid_000000000007a1f3:
	mov -4352(%RBP),%RSP
	add $-4352, %RSP
uuid_000000000007a21e:
	mov -3872(%RBP),%RSP
	add $-4352, %RSP
	jmp uuid_000000000007a221
uuid_000000000007a21f:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3640(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a221:
	mov -3552(%RBP),%RSP
	add $-3864, %RSP
	jmp uuid_000000000007a224
uuid_000000000007a222:
	movq $1, -64(%rbp)
uuid_000000000007a224:
	mov -3152(%RBP),%RSP
	add $-3544, %RSP
	jmp uuid_000000000007a227
uuid_000000000007a225:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3112(%rbp)
	pushq -3120(%rbp)
	pushq -3128(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a181
	jmp uuid_000000000007a183
uuid_000000000007a181:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a183:
	mov -3152(%RBP),%RSP
	add $-3152, %RSP
uuid_000000000007a227:
	mov -2560(%RBP),%RSP
	add $-3152, %RSP
	jmp uuid_000000000007a22a
uuid_000000000007a228:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a148
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
	jmp uuid_000000000007a14a
uuid_000000000007a148:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a14a:
	mov -2560(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007a22a:
	mov -1968(%RBP),%RSP
	add $-2560, %RSP
	jmp uuid_000000000007a22d
uuid_000000000007a22b:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a10f
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
	jmp uuid_000000000007a111
uuid_000000000007a10f:
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a111:
	mov -1968(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007a22d:
	mov -1104(%RBP),%RSP
	add $-1968, %RSP
	jmp uuid_000000000007a230
uuid_000000000007a22e:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0b8
	jmp uuid_000000000007a0ba
uuid_000000000007a0b8:
	movq $1, -64(%rbp)
uuid_000000000007a0ba:
	mov -1104(%RBP),%RSP
	add $-1104, %RSP
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0bb
	jmp uuid_000000000007a0bd
uuid_000000000007a0bb:
	movq $1, -64(%rbp)
uuid_000000000007a0bd:
	mov -1112(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007a230:
	mov -880(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007a233
uuid_000000000007a231:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0a3
	jmp uuid_000000000007a0a5
uuid_000000000007a0a3:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a0a0
	jmp uuid_000000000007a0a2
uuid_000000000007a0a0:
	movq $1, -64(%rbp)
uuid_000000000007a0a2:
	mov -888(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007a0a5:
	mov -880(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007a233:
	mov -656(%RBP),%RSP
	add $-888, %RSP
	jmp uuid_000000000007a236
uuid_000000000007a234:
	movq $1, -64(%rbp)
uuid_000000000007a236:
	mov -480(%RBP),%RSP
	add $-648, %RSP
	jmp uuid_000000000007a239
uuid_000000000007a237:
	movq $1, -64(%rbp)
uuid_000000000007a239:
	mov -248(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007a23c
uuid_000000000007a23a:
	movq $1, -64(%rbp)
uuid_000000000007a23c:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_CL_ArrowTContextConsTypeType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a23d
	jmp uuid_000000000007a23f
uuid_000000000007a23d:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a23f:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	subq $120, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_SB_inner_CL_ArrowTContextConsTypeType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a246
	jmp uuid_000000000007a248
uuid_000000000007a246:
	push %RBP
	jmp uuid_000000000007a243
	jmp uuid_000000000007a245
uuid_000000000007a243:
	push %RBP
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a240
	jmp uuid_000000000007a242
uuid_000000000007a240:
	movb $1, -304(%rbp)
uuid_000000000007a242:
	mov -328(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007a245:
	mov -320(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007a248:
	mov -312(%RBP),%RSP
	add $-352, %RSP
	mov -304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a480
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a25e
	jmp uuid_000000000007a260
uuid_000000000007a25e:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a24f
	jmp uuid_000000000007a251
uuid_000000000007a24f:
	push %RBP
	mov -456(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a24c
	jmp uuid_000000000007a24e
uuid_000000000007a24c:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a249
	jmp uuid_000000000007a24b
uuid_000000000007a249:
	movb $1, -472(%rbp)
uuid_000000000007a24b:
	mov -536(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007a24e:
	mov -488(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007a251:
	mov -480(%RBP),%RSP
	add $-544, %RSP
	mov -472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a25b
	jmp uuid_000000000007a25d
uuid_000000000007a25b:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a255
	jmp uuid_000000000007a257
uuid_000000000007a255:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a252
	jmp uuid_000000000007a254
uuid_000000000007a252:
	movb $1, -584(%rbp)
uuid_000000000007a254:
	mov -600(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007a257:
	mov -592(%RBP),%RSP
	add $-608, %RSP
	mov -584(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a258
	jmp uuid_000000000007a25a
uuid_000000000007a258:
	movb $1, -424(%rbp)
uuid_000000000007a25a:
	mov -552(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007a25d:
	mov -440(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007a260:
	mov -432(%RBP),%RSP
	add $-608, %RSP
	mov -424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a47d
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a279
	jmp uuid_000000000007a27b
uuid_000000000007a279:
	push %RBP
	jmp uuid_000000000007a276
	jmp uuid_000000000007a278
uuid_000000000007a276:
	push %RBP
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a270
	jmp uuid_000000000007a272
uuid_000000000007a270:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a267
	jmp uuid_000000000007a269
uuid_000000000007a267:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a264
	jmp uuid_000000000007a266
uuid_000000000007a264:
	push %RBP
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	jmp uuid_000000000007a261
	jmp uuid_000000000007a263
uuid_000000000007a261:
	movb $1, -800(%rbp)
uuid_000000000007a263:
	mov -864(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007a266:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007a269:
	mov -808(%RBP),%RSP
	add $-888, %RSP
	mov -800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a26d
	jmp uuid_000000000007a26f
uuid_000000000007a26d:
	push %RBP
	mov -712(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq $uuid_000000000007a06c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a26a
	jmp uuid_000000000007a26c
uuid_000000000007a26a:
	movb $1, -736(%rbp)
uuid_000000000007a26c:
	mov -896(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007a26f:
	mov -752(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007a272:
	mov -744(%RBP),%RSP
	add $-904, %RSP
	mov -736(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a273
	jmp uuid_000000000007a275
uuid_000000000007a273:
	movb $1, -680(%rbp)
uuid_000000000007a275:
	mov -704(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007a278:
	mov -696(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007a27b:
	mov -688(%RBP),%RSP
	add $-904, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a47a
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a288
	jmp uuid_000000000007a28a
uuid_000000000007a288:
	push %RBP
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	jmp uuid_000000000007a285
	jmp uuid_000000000007a287
uuid_000000000007a285:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a27f
	jmp uuid_000000000007a281
uuid_000000000007a27f:
	push %RBP
	mov -1040(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a27c
	jmp uuid_000000000007a27e
uuid_000000000007a27c:
	movb $1, -1056(%rbp)
uuid_000000000007a27e:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a281:
	mov -1064(%RBP),%RSP
	add $-1080, %RSP
	mov -1056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a282
	jmp uuid_000000000007a284
uuid_000000000007a282:
	movb $1, -976(%rbp)
uuid_000000000007a284:
	mov -1024(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a287:
	mov -992(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007a28a:
	mov -984(%RBP),%RSP
	add $-1080, %RSP
	mov -976(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a477
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a29a
	jmp uuid_000000000007a29c
uuid_000000000007a29a:
	push %RBP
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	jmp uuid_000000000007a297
	jmp uuid_000000000007a299
uuid_000000000007a297:
	push %RBP
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq $0
	push %RBP
	mov -1224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a291
	jmp uuid_000000000007a293
uuid_000000000007a291:
	push %RBP
	mov -1216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a28e
	jmp uuid_000000000007a290
uuid_000000000007a28e:
	push %RBP
	mov -1208(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a28b
	jmp uuid_000000000007a28d
uuid_000000000007a28b:
	movb $1, -1232(%rbp)
uuid_000000000007a28d:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007a290:
	mov -1248(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007a293:
	mov -1240(%RBP),%RSP
	add $-1304, %RSP
	mov -1232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a294
	jmp uuid_000000000007a296
uuid_000000000007a294:
	movb $1, -1152(%rbp)
uuid_000000000007a296:
	mov -1200(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007a299:
	mov -1168(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007a29c:
	mov -1160(%RBP),%RSP
	add $-1304, %RSP
	mov -1152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a474
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2d1
	jmp uuid_000000000007a2d3
uuid_000000000007a2d1:
	push %RBP
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2c8
	jmp uuid_000000000007a2ca
uuid_000000000007a2c8:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2c5
	jmp uuid_000000000007a2c7
uuid_000000000007a2c5:
	push %RBP
	mov -1400(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a2c2
	jmp uuid_000000000007a2c4
uuid_000000000007a2c2:
	movb $1, -1424(%rbp)
uuid_000000000007a2c4:
	mov -1472(%RBP),%RSP
	add $-1496, %RSP
uuid_000000000007a2c7:
	mov -1440(%RBP),%RSP
	add $-1496, %RSP
uuid_000000000007a2ca:
	mov -1432(%RBP),%RSP
	add $-1496, %RSP
	mov -1424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2ce
	jmp uuid_000000000007a2d0
uuid_000000000007a2ce:
	push %RBP
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	jmp uuid_000000000007a2cb
	jmp uuid_000000000007a2cd
uuid_000000000007a2cb:
	movb $1, -1376(%rbp)
uuid_000000000007a2cd:
	mov -1504(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007a2d0:
	mov -1392(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007a2d3:
	mov -1384(%RBP),%RSP
	add $-1528, %RSP
	mov -1376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a471
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a353
	jmp uuid_000000000007a355
uuid_000000000007a353:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a31d
	jmp uuid_000000000007a31f
uuid_000000000007a31d:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a314
	jmp uuid_000000000007a316
uuid_000000000007a314:
	push %RBP
	mov -1696(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a30b
	jmp uuid_000000000007a30d
uuid_000000000007a30b:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1832(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a308
	jmp uuid_000000000007a30a
uuid_000000000007a308:
	push %RBP
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	jmp uuid_000000000007a305
	jmp uuid_000000000007a307
uuid_000000000007a305:
	movb $1, -1776(%rbp)
uuid_000000000007a307:
	mov -1840(%RBP),%RSP
	add $-1864, %RSP
uuid_000000000007a30a:
	mov -1792(%RBP),%RSP
	add $-1864, %RSP
uuid_000000000007a30d:
	mov -1784(%RBP),%RSP
	add $-1864, %RSP
	mov -1776(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a311
	jmp uuid_000000000007a313
uuid_000000000007a311:
	push %RBP
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	jmp uuid_000000000007a30e
	jmp uuid_000000000007a310
uuid_000000000007a30e:
	movb $1, -1712(%rbp)
uuid_000000000007a310:
	mov -1872(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007a313:
	mov -1728(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007a316:
	mov -1720(%RBP),%RSP
	add $-1896, %RSP
	mov -1712(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a31a
	jmp uuid_000000000007a31c
uuid_000000000007a31a:
	push %RBP
	mov -1624(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1912(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a317
	jmp uuid_000000000007a319
uuid_000000000007a317:
	movb $1, -1648(%rbp)
uuid_000000000007a319:
	mov -1904(%RBP),%RSP
	add $-1912, %RSP
uuid_000000000007a31c:
	mov -1664(%RBP),%RSP
	add $-1912, %RSP
uuid_000000000007a31f:
	mov -1656(%RBP),%RSP
	add $-1912, %RSP
	mov -1648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a350
	jmp uuid_000000000007a352
uuid_000000000007a350:
	push %RBP
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1944(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a34a
	jmp uuid_000000000007a34c
uuid_000000000007a34a:
	push %RBP
	mov -1936(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2008(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a341
	jmp uuid_000000000007a343
uuid_000000000007a341:
	push %RBP
	mov -2000(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2072(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a326
	jmp uuid_000000000007a328
uuid_000000000007a326:
	push %RBP
	mov -2064(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a323
	jmp uuid_000000000007a325
uuid_000000000007a323:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	jmp uuid_000000000007a320
	jmp uuid_000000000007a322
uuid_000000000007a320:
	movb $1, -2080(%rbp)
uuid_000000000007a322:
	mov -2144(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007a325:
	mov -2096(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007a328:
	mov -2088(%RBP),%RSP
	add $-2168, %RSP
	mov -2080(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a33e
	jmp uuid_000000000007a340
uuid_000000000007a33e:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq $0
	push %RBP
	mov -2200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a338
	jmp uuid_000000000007a33a
uuid_000000000007a338:
	push %RBP
	mov -2192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a32f
	jmp uuid_000000000007a331
uuid_000000000007a32f:
	push %RBP
	mov -2256(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a32c
	jmp uuid_000000000007a32e
uuid_000000000007a32c:
	push %RBP
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	jmp uuid_000000000007a329
	jmp uuid_000000000007a32b
uuid_000000000007a329:
	movb $1, -2272(%rbp)
uuid_000000000007a32b:
	mov -2336(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007a32e:
	mov -2288(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007a331:
	mov -2280(%RBP),%RSP
	add $-2360, %RSP
	mov -2272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a335
	jmp uuid_000000000007a337
uuid_000000000007a335:
	push %RBP
	mov -2184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2376(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a332
	jmp uuid_000000000007a334
uuid_000000000007a332:
	movb $1, -2208(%rbp)
uuid_000000000007a334:
	mov -2368(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007a337:
	mov -2224(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007a33a:
	mov -2216(%RBP),%RSP
	add $-2376, %RSP
	mov -2208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a33b
	jmp uuid_000000000007a33d
uuid_000000000007a33b:
	movb $1, -2016(%rbp)
uuid_000000000007a33d:
	mov -2176(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007a340:
	mov -2032(%RBP),%RSP
	add $-2376, %RSP
uuid_000000000007a343:
	mov -2024(%RBP),%RSP
	add $-2376, %RSP
	mov -2016(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a347
	jmp uuid_000000000007a349
uuid_000000000007a347:
	push %RBP
	mov -1928(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2392(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a344
	jmp uuid_000000000007a346
uuid_000000000007a344:
	movb $1, -1952(%rbp)
uuid_000000000007a346:
	mov -2384(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007a349:
	mov -1968(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007a34c:
	mov -1960(%RBP),%RSP
	add $-2392, %RSP
	mov -1952(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a34d
	jmp uuid_000000000007a34f
uuid_000000000007a34d:
	movb $1, -1600(%rbp)
uuid_000000000007a34f:
	mov -1920(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007a352:
	mov -1616(%RBP),%RSP
	add $-2392, %RSP
uuid_000000000007a355:
	mov -1608(%RBP),%RSP
	add $-2392, %RSP
	mov -1600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a46e
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -2456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a38c
	jmp uuid_000000000007a38e
uuid_000000000007a38c:
	push %RBP
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	jmp uuid_000000000007a389
	jmp uuid_000000000007a38b
uuid_000000000007a389:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq $0
	push %RBP
	mov -2536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a383
	jmp uuid_000000000007a385
uuid_000000000007a383:
	push %RBP
	mov -2528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a37a
	jmp uuid_000000000007a37c
uuid_000000000007a37a:
	push %RBP
	mov -2592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a35f
	jmp uuid_000000000007a361
uuid_000000000007a35f:
	push %RBP
	mov -2656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a35c
	jmp uuid_000000000007a35e
uuid_000000000007a35c:
	push %RBP
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	jmp uuid_000000000007a359
	jmp uuid_000000000007a35b
uuid_000000000007a359:
	movb $1, -2672(%rbp)
uuid_000000000007a35b:
	mov -2736(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007a35e:
	mov -2688(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007a361:
	mov -2680(%RBP),%RSP
	add $-2760, %RSP
	mov -2672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a377
	jmp uuid_000000000007a379
uuid_000000000007a377:
	push %RBP
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a371
	jmp uuid_000000000007a373
uuid_000000000007a371:
	push %RBP
	mov -2784(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a368
	jmp uuid_000000000007a36a
uuid_000000000007a368:
	push %RBP
	mov -2848(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2920(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a365
	jmp uuid_000000000007a367
uuid_000000000007a365:
	push %RBP
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	jmp uuid_000000000007a362
	jmp uuid_000000000007a364
uuid_000000000007a362:
	movb $1, -2864(%rbp)
uuid_000000000007a364:
	mov -2928(%RBP),%RSP
	add $-2952, %RSP
uuid_000000000007a367:
	mov -2880(%RBP),%RSP
	add $-2952, %RSP
uuid_000000000007a36a:
	mov -2872(%RBP),%RSP
	add $-2952, %RSP
	mov -2864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a36e
	jmp uuid_000000000007a370
uuid_000000000007a36e:
	push %RBP
	mov -2776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a36b
	jmp uuid_000000000007a36d
uuid_000000000007a36b:
	movb $1, -2800(%rbp)
uuid_000000000007a36d:
	mov -2960(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007a370:
	mov -2816(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007a373:
	mov -2808(%RBP),%RSP
	add $-2968, %RSP
	mov -2800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a374
	jmp uuid_000000000007a376
uuid_000000000007a374:
	movb $1, -2608(%rbp)
uuid_000000000007a376:
	mov -2768(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007a379:
	mov -2624(%RBP),%RSP
	add $-2968, %RSP
uuid_000000000007a37c:
	mov -2616(%RBP),%RSP
	add $-2968, %RSP
	mov -2608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a380
	jmp uuid_000000000007a382
uuid_000000000007a380:
	push %RBP
	mov -2520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2984(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a37d
	jmp uuid_000000000007a37f
uuid_000000000007a37d:
	movb $1, -2544(%rbp)
uuid_000000000007a37f:
	mov -2976(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007a382:
	mov -2560(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007a385:
	mov -2552(%RBP),%RSP
	add $-2984, %RSP
	mov -2544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a386
	jmp uuid_000000000007a388
uuid_000000000007a386:
	movb $1, -2464(%rbp)
uuid_000000000007a388:
	mov -2512(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007a38b:
	mov -2480(%RBP),%RSP
	add $-2984, %RSP
uuid_000000000007a38e:
	mov -2472(%RBP),%RSP
	add $-2984, %RSP
	mov -2464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a46b
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -3048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3c5
	jmp uuid_000000000007a3c7
uuid_000000000007a3c5:
	push %RBP
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq $0
	push %RBP
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3aa
	jmp uuid_000000000007a3ac
uuid_000000000007a3aa:
	push %RBP
	mov -3088(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3a1
	jmp uuid_000000000007a3a3
uuid_000000000007a3a1:
	push %RBP
	mov -3152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a398
	jmp uuid_000000000007a39a
uuid_000000000007a398:
	push %RBP
	mov -3216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a395
	jmp uuid_000000000007a397
uuid_000000000007a395:
	push %RBP
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq -3208(%RBP)
	jmp uuid_000000000007a392
	jmp uuid_000000000007a394
uuid_000000000007a392:
	movb $1, -3232(%rbp)
uuid_000000000007a394:
	mov -3296(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007a397:
	mov -3248(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007a39a:
	mov -3240(%RBP),%RSP
	add $-3320, %RSP
	mov -3232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a39e
	jmp uuid_000000000007a3a0
uuid_000000000007a39e:
	push %RBP
	pushq -3128(%RBP)
	pushq -3136(%RBP)
	pushq -3144(%RBP)
	jmp uuid_000000000007a39b
	jmp uuid_000000000007a39d
uuid_000000000007a39b:
	movb $1, -3168(%rbp)
uuid_000000000007a39d:
	mov -3328(%RBP),%RSP
	add $-3352, %RSP
uuid_000000000007a3a0:
	mov -3184(%RBP),%RSP
	add $-3352, %RSP
uuid_000000000007a3a3:
	mov -3176(%RBP),%RSP
	add $-3352, %RSP
	mov -3168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3a7
	jmp uuid_000000000007a3a9
uuid_000000000007a3a7:
	push %RBP
	mov -3080(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3368(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3a4
	jmp uuid_000000000007a3a6
uuid_000000000007a3a4:
	movb $1, -3104(%rbp)
uuid_000000000007a3a6:
	mov -3360(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007a3a9:
	mov -3120(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007a3ac:
	mov -3112(%RBP),%RSP
	add $-3368, %RSP
	mov -3104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3c2
	jmp uuid_000000000007a3c4
uuid_000000000007a3c2:
	push %RBP
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq $0
	push %RBP
	mov -3400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3bc
	jmp uuid_000000000007a3be
uuid_000000000007a3bc:
	push %RBP
	mov -3392(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3b3
	jmp uuid_000000000007a3b5
uuid_000000000007a3b3:
	push %RBP
	mov -3456(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3528(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3b0
	jmp uuid_000000000007a3b2
uuid_000000000007a3b0:
	push %RBP
	pushq -3432(%RBP)
	pushq -3440(%RBP)
	pushq -3448(%RBP)
	jmp uuid_000000000007a3ad
	jmp uuid_000000000007a3af
uuid_000000000007a3ad:
	movb $1, -3472(%rbp)
uuid_000000000007a3af:
	mov -3536(%RBP),%RSP
	add $-3560, %RSP
uuid_000000000007a3b2:
	mov -3488(%RBP),%RSP
	add $-3560, %RSP
uuid_000000000007a3b5:
	mov -3480(%RBP),%RSP
	add $-3560, %RSP
	mov -3472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3b9
	jmp uuid_000000000007a3bb
uuid_000000000007a3b9:
	push %RBP
	mov -3384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3576(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3b6
	jmp uuid_000000000007a3b8
uuid_000000000007a3b6:
	movb $1, -3408(%rbp)
uuid_000000000007a3b8:
	mov -3568(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007a3bb:
	mov -3424(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007a3be:
	mov -3416(%RBP),%RSP
	add $-3576, %RSP
	mov -3408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3bf
	jmp uuid_000000000007a3c1
uuid_000000000007a3bf:
	movb $1, -3056(%rbp)
uuid_000000000007a3c1:
	mov -3376(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007a3c4:
	mov -3072(%RBP),%RSP
	add $-3576, %RSP
uuid_000000000007a3c7:
	mov -3064(%RBP),%RSP
	add $-3576, %RSP
	mov -3056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a468
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -3640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3ec
	jmp uuid_000000000007a3ee
uuid_000000000007a3ec:
	push %RBP
	pushq -3616(%RBP)
	pushq -3624(%RBP)
	pushq -3632(%RBP)
	pushq $0
	push %RBP
	mov -3688(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3d1
	jmp uuid_000000000007a3d3
uuid_000000000007a3d1:
	push %RBP
	mov -3680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3ce
	jmp uuid_000000000007a3d0
uuid_000000000007a3ce:
	push %RBP
	mov -3672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3768(%rbp)
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3cb
	jmp uuid_000000000007a3cd
uuid_000000000007a3cb:
	movb $1, -3696(%rbp)
uuid_000000000007a3cd:
	mov -3760(%RBP),%RSP
	add $-3768, %RSP
uuid_000000000007a3d0:
	mov -3712(%RBP),%RSP
	add $-3768, %RSP
uuid_000000000007a3d3:
	mov -3704(%RBP),%RSP
	add $-3768, %RSP
	mov -3696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3e9
	jmp uuid_000000000007a3eb
uuid_000000000007a3e9:
	push %RBP
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	pushq $0
	push %RBP
	mov -3800(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3e3
	jmp uuid_000000000007a3e5
uuid_000000000007a3e3:
	push %RBP
	mov -3792(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3da
	jmp uuid_000000000007a3dc
uuid_000000000007a3da:
	push %RBP
	mov -3856(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3928(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3d7
	jmp uuid_000000000007a3d9
uuid_000000000007a3d7:
	push %RBP
	pushq -3832(%RBP)
	pushq -3840(%RBP)
	pushq -3848(%RBP)
	jmp uuid_000000000007a3d4
	jmp uuid_000000000007a3d6
uuid_000000000007a3d4:
	movb $1, -3872(%rbp)
uuid_000000000007a3d6:
	mov -3936(%RBP),%RSP
	add $-3960, %RSP
uuid_000000000007a3d9:
	mov -3888(%RBP),%RSP
	add $-3960, %RSP
uuid_000000000007a3dc:
	mov -3880(%RBP),%RSP
	add $-3960, %RSP
	mov -3872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3e0
	jmp uuid_000000000007a3e2
uuid_000000000007a3e0:
	push %RBP
	mov -3784(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3976(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3dd
	jmp uuid_000000000007a3df
uuid_000000000007a3dd:
	movb $1, -3808(%rbp)
uuid_000000000007a3df:
	mov -3968(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007a3e2:
	mov -3824(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007a3e5:
	mov -3816(%RBP),%RSP
	add $-3976, %RSP
	mov -3808(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3e6
	jmp uuid_000000000007a3e8
uuid_000000000007a3e6:
	movb $1, -3648(%rbp)
uuid_000000000007a3e8:
	mov -3776(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007a3eb:
	mov -3664(%RBP),%RSP
	add $-3976, %RSP
uuid_000000000007a3ee:
	mov -3656(%RBP),%RSP
	add $-3976, %RSP
	mov -3648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a465
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a407
	jmp uuid_000000000007a409
uuid_000000000007a407:
	push %RBP
	pushq -4016(%RBP)
	pushq -4024(%RBP)
	pushq -4032(%RBP)
	jmp uuid_000000000007a404
	jmp uuid_000000000007a406
uuid_000000000007a404:
	push %RBP
	pushq -3992(%RBP)
	pushq -4000(%RBP)
	pushq -4008(%RBP)
	pushq $0
	push %RBP
	mov -4120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3fe
	jmp uuid_000000000007a400
uuid_000000000007a3fe:
	push %RBP
	mov -4112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3f5
	jmp uuid_000000000007a3f7
uuid_000000000007a3f5:
	push %RBP
	mov -4176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3f2
	jmp uuid_000000000007a3f4
uuid_000000000007a3f2:
	push %RBP
	pushq -4152(%RBP)
	pushq -4160(%RBP)
	pushq -4168(%RBP)
	jmp uuid_000000000007a3ef
	jmp uuid_000000000007a3f1
uuid_000000000007a3ef:
	movb $1, -4192(%rbp)
uuid_000000000007a3f1:
	mov -4256(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007a3f4:
	mov -4208(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007a3f7:
	mov -4200(%RBP),%RSP
	add $-4280, %RSP
	mov -4192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a3fb
	jmp uuid_000000000007a3fd
uuid_000000000007a3fb:
	push %RBP
	mov -4104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4296(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3f8
	jmp uuid_000000000007a3fa
uuid_000000000007a3f8:
	movb $1, -4128(%rbp)
uuid_000000000007a3fa:
	mov -4288(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007a3fd:
	mov -4144(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007a400:
	mov -4136(%RBP),%RSP
	add $-4296, %RSP
	mov -4128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a401
	jmp uuid_000000000007a403
uuid_000000000007a401:
	movb $1, -4048(%rbp)
uuid_000000000007a403:
	mov -4096(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007a406:
	mov -4064(%RBP),%RSP
	add $-4296, %RSP
uuid_000000000007a409:
	mov -4056(%RBP),%RSP
	add $-4296, %RSP
	mov -4048(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a462
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a434
	jmp uuid_000000000007a436
uuid_000000000007a434:
	push %RBP
	pushq -4336(%RBP)
	pushq -4344(%RBP)
	pushq -4352(%RBP)
	pushq $0
	push %RBP
	mov -4408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a410
	jmp uuid_000000000007a412
uuid_000000000007a410:
	push %RBP
	mov -4400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a40d
	jmp uuid_000000000007a40f
uuid_000000000007a40d:
	push %RBP
	mov -4392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a40a
	jmp uuid_000000000007a40c
uuid_000000000007a40a:
	movb $1, -4416(%rbp)
uuid_000000000007a40c:
	mov -4480(%RBP),%RSP
	add $-4488, %RSP
uuid_000000000007a40f:
	mov -4432(%RBP),%RSP
	add $-4488, %RSP
uuid_000000000007a412:
	mov -4424(%RBP),%RSP
	add $-4488, %RSP
	mov -4416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a431
	jmp uuid_000000000007a433
uuid_000000000007a431:
	push %RBP
	pushq -4312(%RBP)
	pushq -4320(%RBP)
	pushq -4328(%RBP)
	pushq $0
	push %RBP
	mov -4520(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a42b
	jmp uuid_000000000007a42d
uuid_000000000007a42b:
	push %RBP
	mov -4512(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4584(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a422
	jmp uuid_000000000007a424
uuid_000000000007a422:
	push %RBP
	mov -4576(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4648(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a41f
	jmp uuid_000000000007a421
uuid_000000000007a41f:
	push %RBP
	pushq -4552(%RBP)
	pushq -4560(%RBP)
	pushq -4568(%RBP)
	pushq $0
	push %RBP
	mov -4680(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a419
	jmp uuid_000000000007a41b
uuid_000000000007a419:
	push %RBP
	mov -4672(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4744(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a416
	jmp uuid_000000000007a418
uuid_000000000007a416:
	push %RBP
	mov -4664(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a413
	jmp uuid_000000000007a415
uuid_000000000007a413:
	movb $1, -4688(%rbp)
uuid_000000000007a415:
	mov -4752(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007a418:
	mov -4704(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007a41b:
	mov -4696(%RBP),%RSP
	add $-4760, %RSP
	mov -4688(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a41c
	jmp uuid_000000000007a41e
uuid_000000000007a41c:
	movb $1, -4592(%rbp)
uuid_000000000007a41e:
	mov -4656(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007a421:
	mov -4608(%RBP),%RSP
	add $-4760, %RSP
uuid_000000000007a424:
	mov -4600(%RBP),%RSP
	add $-4760, %RSP
	mov -4592(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a428
	jmp uuid_000000000007a42a
uuid_000000000007a428:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4776(%rbp)
	pushq $uuid_000000000007a1de
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a425
	jmp uuid_000000000007a427
uuid_000000000007a425:
	movb $1, -4528(%rbp)
uuid_000000000007a427:
	mov -4768(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007a42a:
	mov -4544(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007a42d:
	mov -4536(%RBP),%RSP
	add $-4776, %RSP
	mov -4528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a42e
	jmp uuid_000000000007a430
uuid_000000000007a42e:
	movb $1, -4368(%rbp)
uuid_000000000007a430:
	mov -4496(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007a433:
	mov -4384(%RBP),%RSP
	add $-4776, %RSP
uuid_000000000007a436:
	mov -4376(%RBP),%RSP
	add $-4776, %RSP
	mov -4368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a45f
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	push %RBP
	mov -4840(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a452
	jmp uuid_000000000007a454
uuid_000000000007a452:
	push %RBP
	pushq -4816(%RBP)
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq $0
	push %RBP
	mov -4888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a440
	jmp uuid_000000000007a442
uuid_000000000007a440:
	push %RBP
	mov -4880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a43d
	jmp uuid_000000000007a43f
uuid_000000000007a43d:
	push %RBP
	mov -4872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a43a
	jmp uuid_000000000007a43c
uuid_000000000007a43a:
	movb $1, -4896(%rbp)
uuid_000000000007a43c:
	mov -4960(%RBP),%RSP
	add $-4968, %RSP
uuid_000000000007a43f:
	mov -4912(%RBP),%RSP
	add $-4968, %RSP
uuid_000000000007a442:
	mov -4904(%RBP),%RSP
	add $-4968, %RSP
	mov -4896(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a44f
	jmp uuid_000000000007a451
uuid_000000000007a44f:
	push %RBP
	pushq -4792(%RBP)
	pushq -4800(%RBP)
	pushq -4808(%RBP)
	pushq $0
	push %RBP
	mov -5000(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a449
	jmp uuid_000000000007a44b
uuid_000000000007a449:
	push %RBP
	mov -4992(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a446
	jmp uuid_000000000007a448
uuid_000000000007a446:
	push %RBP
	mov -4984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a443
	jmp uuid_000000000007a445
uuid_000000000007a443:
	movb $1, -5008(%rbp)
uuid_000000000007a445:
	mov -5072(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007a448:
	mov -5024(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007a44b:
	mov -5016(%RBP),%RSP
	add $-5080, %RSP
	mov -5008(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a44c
	jmp uuid_000000000007a44e
uuid_000000000007a44c:
	movb $1, -4848(%rbp)
uuid_000000000007a44e:
	mov -4976(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007a451:
	mov -4864(%RBP),%RSP
	add $-5080, %RSP
uuid_000000000007a454:
	mov -4856(%RBP),%RSP
	add $-5080, %RSP
	mov -4848(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a45c
	push %RBP
	jmp uuid_000000000007a459
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a458
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a45b
uuid_000000000007a459:
uuid_000000000007a45b:
	mov -5088(%RBP),%RSP
	add $-5088, %RSP
	jmp uuid_000000000007a45e
uuid_000000000007a45c:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5080(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a455
	jmp uuid_000000000007a457
uuid_000000000007a455:
#call function unify : Arrow<Cons<List<Type>,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a457:
	mov -5088(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007a45e:
	mov -4784(%RBP),%RSP
	add $-5088, %RSP
	jmp uuid_000000000007a461
uuid_000000000007a45f:
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4488(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4760(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a437
	jmp uuid_000000000007a439
uuid_000000000007a437:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a439:
	mov -4784(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007a461:
	mov -4304(%RBP),%RSP
	add $-4784, %RSP
	jmp uuid_000000000007a464
uuid_000000000007a462:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a464:
	mov -3984(%RBP),%RSP
	add $-4296, %RSP
	jmp uuid_000000000007a467
uuid_000000000007a465:
uuid_000000000007a467:
	mov -3584(%RBP),%RSP
	add $-3976, %RSP
	jmp uuid_000000000007a46a
uuid_000000000007a468:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a3c8
	jmp uuid_000000000007a3ca
uuid_000000000007a3c8:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -3304(%rbp)
	pushq -3312(%rbp)
	pushq -3320(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3336(%rbp)
	pushq -3344(%rbp)
	pushq -3352(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a3ca:
	mov -3584(%RBP),%RSP
	add $-3584, %RSP
uuid_000000000007a46a:
	mov -2992(%RBP),%RSP
	add $-3584, %RSP
	jmp uuid_000000000007a46d
uuid_000000000007a46b:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a38f
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007a391
uuid_000000000007a38f:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a391:
	mov -2992(%RBP),%RSP
	add $-2992, %RSP
uuid_000000000007a46d:
	mov -2400(%RBP),%RSP
	add $-2992, %RSP
	jmp uuid_000000000007a470
uuid_000000000007a46e:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a356
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007a358
uuid_000000000007a356:
#call function and : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a358:
	mov -2400(%RBP),%RSP
	add $-2400, %RSP
uuid_000000000007a470:
	mov -1536(%RBP),%RSP
	add $-2400, %RSP
	jmp uuid_000000000007a473
uuid_000000000007a471:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2da
	jmp uuid_000000000007a2dc
uuid_000000000007a2da:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	mov -2176(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2d7
	jmp uuid_000000000007a2d9
uuid_000000000007a2d7:
	push %RBP
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2d4
	jmp uuid_000000000007a2d6
uuid_000000000007a2d4:
	movb $1, -2040(%rbp)
uuid_000000000007a2d6:
	mov -2184(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007a2d9:
	mov -2056(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007a2dc:
	mov -2048(%RBP),%RSP
	add $-2304, %RSP
	mov -2040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a302
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2e3
	jmp uuid_000000000007a2e5
uuid_000000000007a2e3:
	push %RBP
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	mov -2704(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2e0
	jmp uuid_000000000007a2e2
uuid_000000000007a2e0:
	push %RBP
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	jmp uuid_000000000007a2dd
	jmp uuid_000000000007a2df
uuid_000000000007a2dd:
	movb $1, -2568(%rbp)
uuid_000000000007a2df:
	mov -2712(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007a2e2:
	mov -2584(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007a2e5:
	mov -2576(%RBP),%RSP
	add $-2832, %RSP
	mov -2568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2ff
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -3088(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2ec
	jmp uuid_000000000007a2ee
uuid_000000000007a2ec:
	push %RBP
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq -3056(%RBP)
	pushq -3064(%RBP)
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	jmp uuid_000000000007a2e9
	jmp uuid_000000000007a2eb
uuid_000000000007a2e9:
	push %RBP
	pushq -2848(%RBP)
	pushq -2856(%RBP)
	pushq -2864(%RBP)
	pushq -2872(%RBP)
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	mov -3360(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2e6
	jmp uuid_000000000007a2e8
uuid_000000000007a2e6:
	movb $1, -3096(%rbp)
uuid_000000000007a2e8:
	mov -3240(%RBP),%RSP
	add $-3360, %RSP
uuid_000000000007a2eb:
	mov -3112(%RBP),%RSP
	add $-3360, %RSP
uuid_000000000007a2ee:
	mov -3104(%RBP),%RSP
	add $-3360, %RSP
	mov -3096(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2fc
	push %RBP
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq $0
	push %RBP
	mov -3616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2f5
	jmp uuid_000000000007a2f7
uuid_000000000007a2f5:
	push %RBP
	pushq -3496(%RBP)
	pushq -3504(%RBP)
	pushq -3512(%RBP)
	pushq -3520(%RBP)
	pushq -3528(%RBP)
	pushq -3536(%RBP)
	pushq -3544(%RBP)
	pushq -3552(%RBP)
	pushq -3560(%RBP)
	pushq -3568(%RBP)
	pushq -3576(%RBP)
	pushq -3584(%RBP)
	pushq -3592(%RBP)
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	jmp uuid_000000000007a2f2
	jmp uuid_000000000007a2f4
uuid_000000000007a2f2:
	push %RBP
	pushq -3376(%RBP)
	pushq -3384(%RBP)
	pushq -3392(%RBP)
	pushq -3400(%RBP)
	pushq -3408(%RBP)
	pushq -3416(%RBP)
	pushq -3424(%RBP)
	pushq -3432(%RBP)
	pushq -3440(%RBP)
	pushq -3448(%RBP)
	pushq -3456(%RBP)
	pushq -3464(%RBP)
	pushq -3472(%RBP)
	pushq -3480(%RBP)
	pushq -3488(%RBP)
	jmp uuid_000000000007a2ef
	jmp uuid_000000000007a2f1
uuid_000000000007a2ef:
	movb $1, -3624(%rbp)
uuid_000000000007a2f1:
	mov -3768(%RBP),%RSP
	add $-3888, %RSP
uuid_000000000007a2f4:
	mov -3640(%RBP),%RSP
	add $-3888, %RSP
uuid_000000000007a2f7:
	mov -3632(%RBP),%RSP
	add $-3888, %RSP
	mov -3624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2f9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a2f8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a2fb
uuid_000000000007a2f9:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -3800(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	pushq -3664(%rbp)
	pushq -3672(%rbp)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	pushq -3752(%rbp)
	pushq -3760(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a2fb:
	mov -3368(%RBP),%RSP
	add $-3888, %RSP
	jmp uuid_000000000007a2fe
uuid_000000000007a2fc:
	movq -3232(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -3224(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -3216(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -3208(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -3200(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -3192(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -3184(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -3176(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -3168(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -3160(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -3152(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -3144(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -3136(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -3128(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3120(%rbp), %r15
	movq %r15, -64(%rbp)
uuid_000000000007a2fe:
	mov -2840(%RBP),%RSP
	add $-3360, %RSP
	jmp uuid_000000000007a301
uuid_000000000007a2ff:
	movq -2832(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -2824(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -2816(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -2808(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2800(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2792(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2784(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2776(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2768(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -64(%rbp)
uuid_000000000007a301:
	mov -2312(%RBP),%RSP
	add $-2832, %RSP
	jmp uuid_000000000007a304
uuid_000000000007a302:
uuid_000000000007a304:
	mov -1784(%RBP),%RSP
	add $-2304, %RSP
uuid_000000000007a473:
	mov -1312(%RBP),%RSP
	add $-2304, %RSP
	jmp uuid_000000000007a476
uuid_000000000007a474:
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-inner : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call unify_SB_inner_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2a3
	jmp uuid_000000000007a2a5
uuid_000000000007a2a3:
	push %RBP
	jmp uuid_000000000007a2a0
	jmp uuid_000000000007a2a2
uuid_000000000007a2a0:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	mov -1960(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a29d
	jmp uuid_000000000007a29f
uuid_000000000007a29d:
	movb $1, -1816(%rbp)
uuid_000000000007a29f:
	mov -1840(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a2a2:
	mov -1832(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a2a5:
	mov -1824(%RBP),%RSP
	add $-1960, %RSP
	mov -1816(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2bf
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -2216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2ac
	jmp uuid_000000000007a2ae
uuid_000000000007a2ac:
	push %RBP
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	mov -2360(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2a9
	jmp uuid_000000000007a2ab
uuid_000000000007a2a9:
	push %RBP
	jmp uuid_000000000007a2a6
	jmp uuid_000000000007a2a8
uuid_000000000007a2a6:
	movb $1, -2224(%rbp)
uuid_000000000007a2a8:
	mov -2368(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007a2ab:
	mov -2240(%RBP),%RSP
	add $-2368, %RSP
uuid_000000000007a2ae:
	mov -2232(%RBP),%RSP
	add $-2368, %RSP
	mov -2224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2bc
	push %RBP
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2b5
	jmp uuid_000000000007a2b7
uuid_000000000007a2b5:
	push %RBP
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	jmp uuid_000000000007a2b2
	jmp uuid_000000000007a2b4
uuid_000000000007a2b2:
	push %RBP
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	jmp uuid_000000000007a2af
	jmp uuid_000000000007a2b1
uuid_000000000007a2af:
	movb $1, -2632(%rbp)
uuid_000000000007a2b1:
	mov -2776(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007a2b4:
	mov -2648(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007a2b7:
	mov -2640(%RBP),%RSP
	add $-2896, %RSP
	mov -2632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a2b9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a2b8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a2bb
uuid_000000000007a2b9:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	pushq -2856(%rbp)
	pushq -2864(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	pushq -2696(%rbp)
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a2bb:
	mov -2376(%RBP),%RSP
	add $-2896, %RSP
	jmp uuid_000000000007a2be
uuid_000000000007a2bc:
uuid_000000000007a2be:
	mov -1968(%RBP),%RSP
	add $-2368, %RSP
	jmp uuid_000000000007a2c1
uuid_000000000007a2bf:
uuid_000000000007a2c1:
	mov -1560(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a476:
	mov -1088(%RBP),%RSP
	add $-1960, %RSP
	jmp uuid_000000000007a479
uuid_000000000007a477:
#call function close : Arrow<TContext+CaseNumber<2>,Array<TContext+CaseNumber<2>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1080(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a479:
	mov -912(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007a47c
uuid_000000000007a47a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a47c:
	mov -616(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_000000000007a47f
uuid_000000000007a47d:
#call function close : Arrow<TContext+CaseNumber<2>,Array<TContext+CaseNumber<2>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -608(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -544(%rbp)
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $6
	pushq $0
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a47f:
	mov -360(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007a482
uuid_000000000007a480:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007a482:
	mov -240(%RBP),%RSP
	add $-352, %RSP
	subq $120, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_CL_ArrowTContextConsListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a48e
	jmp uuid_000000000007a490
uuid_000000000007a48e:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a48b
	jmp uuid_000000000007a48d
uuid_000000000007a48b:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a488
	jmp uuid_000000000007a48a
uuid_000000000007a488:
	movb $1, -400(%rbp)
uuid_000000000007a48a:
	mov -464(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007a48d:
	mov -416(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007a490:
	mov -408(%RBP),%RSP
	add $-504, %RSP
	mov -400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4b6
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4a9
	jmp uuid_000000000007a4ab
uuid_000000000007a4a9:
	push %RBP
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a497
	jmp uuid_000000000007a499
uuid_000000000007a497:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a494
	jmp uuid_000000000007a496
uuid_000000000007a494:
	push %RBP
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	jmp uuid_000000000007a491
	jmp uuid_000000000007a493
uuid_000000000007a491:
	movb $1, -672(%rbp)
uuid_000000000007a493:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007a496:
	mov -688(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007a499:
	mov -680(%RBP),%RSP
	add $-760, %RSP
	mov -672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4a6
	jmp uuid_000000000007a4a8
uuid_000000000007a4a6:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4a0
	jmp uuid_000000000007a4a2
uuid_000000000007a4a0:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a49d
	jmp uuid_000000000007a49f
uuid_000000000007a49d:
	push %RBP
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	jmp uuid_000000000007a49a
	jmp uuid_000000000007a49c
uuid_000000000007a49a:
	movb $1, -816(%rbp)
uuid_000000000007a49c:
	mov -880(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007a49f:
	mov -832(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007a4a2:
	mov -824(%RBP),%RSP
	add $-904, %RSP
	mov -816(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4a3
	jmp uuid_000000000007a4a5
uuid_000000000007a4a3:
	movb $1, -608(%rbp)
uuid_000000000007a4a5:
	mov -768(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007a4a8:
	mov -624(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007a4ab:
	mov -616(%RBP),%RSP
	add $-904, %RSP
	mov -608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4b3
	push %RBP
	jmp uuid_000000000007a4b0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a4af
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a4b2
uuid_000000000007a4b0:
uuid_000000000007a4b2:
	mov -912(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007a4b5
uuid_000000000007a4b3:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	push %RBP
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4ac
	jmp uuid_000000000007a4ae
uuid_000000000007a4ac:
#call function union : Arrow<Cons<TContext,TContext>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function unify : Arrow<Cons<List<Type>,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowTContextConsTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	push -272(%RSP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
uuid_000000000007a4ae:
	mov -912(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007a4b5:
	mov -512(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007a4b8
uuid_000000000007a4b6:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
uuid_000000000007a4b8:
	mov -304(%RBP),%RSP
	add $-504, %RSP
	subq $120, %rsp
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $88, %rsp
	ret
fields_SB_of_SB_type_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4e3
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4d1
	jmp uuid_000000000007a4d3
uuid_000000000007a4d1:
	push %RBP
	mov -112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4c8
	jmp uuid_000000000007a4ca
uuid_000000000007a4c8:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4bf
	jmp uuid_000000000007a4c1
uuid_000000000007a4bf:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4bc
	jmp uuid_000000000007a4be
uuid_000000000007a4bc:
	push %RBP
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	jmp uuid_000000000007a4b9
	jmp uuid_000000000007a4bb
uuid_000000000007a4b9:
	movb $1, -256(%rbp)
uuid_000000000007a4bb:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007a4be:
	mov -272(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007a4c1:
	mov -264(%RBP),%RSP
	add $-344, %RSP
	mov -256(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4c5
	jmp uuid_000000000007a4c7
uuid_000000000007a4c5:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007a4c2
	jmp uuid_000000000007a4c4
uuid_000000000007a4c2:
	movb $1, -192(%rbp)
uuid_000000000007a4c4:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007a4c7:
	mov -208(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007a4ca:
	mov -200(%RBP),%RSP
	add $-376, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4ce
	jmp uuid_000000000007a4d0
uuid_000000000007a4ce:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a4cb
	jmp uuid_000000000007a4cd
uuid_000000000007a4cb:
	movb $1, -128(%rbp)
uuid_000000000007a4cd:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007a4d0:
	mov -144(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007a4d3:
	mov -136(%RBP),%RSP
	add $-392, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4e0
	push %RBP
	jmp uuid_000000000007a4dd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a4dc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a4df
uuid_000000000007a4dd:
	pushq $uuid_000000000007981e
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a4df:
	mov -400(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007a4e2
uuid_000000000007a4e0:
	pushq $uuid_000000000007981e
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fields-of-type : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_type_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a4e2:
	mov -96(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007a4e5
uuid_000000000007a4e3:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a4e5:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
sizeof_SB_type_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5c1
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4e9
	jmp uuid_000000000007a4eb
uuid_000000000007a4e9:
	push %RBP
	jmp uuid_000000000007a4e6
	jmp uuid_000000000007a4e8
uuid_000000000007a4e6:
	movb $1, -136(%rbp)
uuid_000000000007a4e8:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007a4eb:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	mov -136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5be
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4f2
	jmp uuid_000000000007a4f4
uuid_000000000007a4f2:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4ef
	jmp uuid_000000000007a4f1
uuid_000000000007a4ef:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a4ec
	jmp uuid_000000000007a4ee
uuid_000000000007a4ec:
	movb $1, -192(%rbp)
uuid_000000000007a4ee:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007a4f1:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007a4f4:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5bb
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a50d
	jmp uuid_000000000007a50f
uuid_000000000007a50d:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a504
	jmp uuid_000000000007a506
uuid_000000000007a504:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a501
	jmp uuid_000000000007a503
uuid_000000000007a501:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4fb
	jmp uuid_000000000007a4fd
uuid_000000000007a4fb:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4f8
	jmp uuid_000000000007a4fa
uuid_000000000007a4f8:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a4f5
	jmp uuid_000000000007a4f7
uuid_000000000007a4f5:
	movb $1, -464(%rbp)
uuid_000000000007a4f7:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007a4fa:
	mov -480(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007a4fd:
	mov -472(%RBP),%RSP
	add $-536, %RSP
	mov -464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a4fe
	jmp uuid_000000000007a500
uuid_000000000007a4fe:
	movb $1, -368(%rbp)
uuid_000000000007a500:
	mov -432(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007a503:
	mov -384(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007a506:
	mov -376(%RBP),%RSP
	add $-536, %RSP
	mov -368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a50a
	jmp uuid_000000000007a50c
uuid_000000000007a50a:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq $uuid_0000000000079a48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a507
	jmp uuid_000000000007a509
uuid_000000000007a507:
	movb $1, -304(%rbp)
uuid_000000000007a509:
	mov -544(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007a50c:
	mov -320(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007a50f:
	mov -312(%RBP),%RSP
	add $-552, %RSP
	mov -304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5b8
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a528
	jmp uuid_000000000007a52a
uuid_000000000007a528:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -648(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a51f
	jmp uuid_000000000007a521
uuid_000000000007a51f:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a516
	jmp uuid_000000000007a518
uuid_000000000007a516:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a513
	jmp uuid_000000000007a515
uuid_000000000007a513:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	jmp uuid_000000000007a510
	jmp uuid_000000000007a512
uuid_000000000007a510:
	movb $1, -720(%rbp)
uuid_000000000007a512:
	mov -784(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007a515:
	mov -736(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007a518:
	mov -728(%RBP),%RSP
	add $-808, %RSP
	mov -720(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a51c
	jmp uuid_000000000007a51e
uuid_000000000007a51c:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	mov -840(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a519
	jmp uuid_000000000007a51b
uuid_000000000007a519:
	movb $1, -656(%rbp)
uuid_000000000007a51b:
	mov -816(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007a51e:
	mov -672(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007a521:
	mov -664(%RBP),%RSP
	add $-840, %RSP
	mov -656(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a525
	jmp uuid_000000000007a527
uuid_000000000007a525:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -856(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a522
	jmp uuid_000000000007a524
uuid_000000000007a522:
	movb $1, -592(%rbp)
uuid_000000000007a524:
	mov -848(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007a527:
	mov -608(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007a52a:
	mov -600(%RBP),%RSP
	add $-856, %RSP
	mov -592(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5b5
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a543
	jmp uuid_000000000007a545
uuid_000000000007a543:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a53a
	jmp uuid_000000000007a53c
uuid_000000000007a53a:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a531
	jmp uuid_000000000007a533
uuid_000000000007a531:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1080(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a52e
	jmp uuid_000000000007a530
uuid_000000000007a52e:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007a52b
	jmp uuid_000000000007a52d
uuid_000000000007a52b:
	movb $1, -1024(%rbp)
uuid_000000000007a52d:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007a530:
	mov -1040(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007a533:
	mov -1032(%RBP),%RSP
	add $-1112, %RSP
	mov -1024(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a537
	jmp uuid_000000000007a539
uuid_000000000007a537:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007a534
	jmp uuid_000000000007a536
uuid_000000000007a534:
	movb $1, -960(%rbp)
uuid_000000000007a536:
	mov -1120(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007a539:
	mov -976(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007a53c:
	mov -968(%RBP),%RSP
	add $-1144, %RSP
	mov -960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a540
	jmp uuid_000000000007a542
uuid_000000000007a540:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a53d
	jmp uuid_000000000007a53f
uuid_000000000007a53d:
	movb $1, -896(%rbp)
uuid_000000000007a53f:
	mov -1152(%RBP),%RSP
	add $-1160, %RSP
uuid_000000000007a542:
	mov -912(%RBP),%RSP
	add $-1160, %RSP
uuid_000000000007a545:
	mov -904(%RBP),%RSP
	add $-1160, %RSP
	mov -896(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5b2
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a567
	jmp uuid_000000000007a569
uuid_000000000007a567:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a55e
	jmp uuid_000000000007a560
uuid_000000000007a55e:
	push %RBP
	mov -1248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a54c
	jmp uuid_000000000007a54e
uuid_000000000007a54c:
	push %RBP
	mov -1312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a549
	jmp uuid_000000000007a54b
uuid_000000000007a549:
	push %RBP
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	jmp uuid_000000000007a546
	jmp uuid_000000000007a548
uuid_000000000007a546:
	movb $1, -1328(%rbp)
uuid_000000000007a548:
	mov -1392(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007a54b:
	mov -1344(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007a54e:
	mov -1336(%RBP),%RSP
	add $-1416, %RSP
	mov -1328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a55b
	jmp uuid_000000000007a55d
uuid_000000000007a55b:
	push %RBP
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a555
	jmp uuid_000000000007a557
uuid_000000000007a555:
	push %RBP
	mov -1440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a552
	jmp uuid_000000000007a554
uuid_000000000007a552:
	push %RBP
	mov -1432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a54f
	jmp uuid_000000000007a551
uuid_000000000007a54f:
	movb $1, -1456(%rbp)
uuid_000000000007a551:
	mov -1520(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007a554:
	mov -1472(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007a557:
	mov -1464(%RBP),%RSP
	add $-1528, %RSP
	mov -1456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a558
	jmp uuid_000000000007a55a
uuid_000000000007a558:
	movb $1, -1264(%rbp)
uuid_000000000007a55a:
	mov -1424(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007a55d:
	mov -1280(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007a560:
	mov -1272(%RBP),%RSP
	add $-1528, %RSP
	mov -1264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a564
	jmp uuid_000000000007a566
uuid_000000000007a564:
	push %RBP
	mov -1176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $uuid_0000000000079d9e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a561
	jmp uuid_000000000007a563
uuid_000000000007a561:
	movb $1, -1200(%rbp)
uuid_000000000007a563:
	mov -1536(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007a566:
	mov -1216(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007a569:
	mov -1208(%RBP),%RSP
	add $-1544, %RSP
	mov -1200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5af
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1576(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a570
	jmp uuid_000000000007a572
uuid_000000000007a570:
	push %RBP
	jmp uuid_000000000007a56d
	jmp uuid_000000000007a56f
uuid_000000000007a56d:
	push %RBP
	mov -1560(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a56a
	jmp uuid_000000000007a56c
uuid_000000000007a56a:
	movb $1, -1584(%rbp)
uuid_000000000007a56c:
	mov -1608(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007a56f:
	mov -1600(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007a572:
	mov -1592(%RBP),%RSP
	add $-1616, %RSP
	mov -1584(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5ac
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -1648(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a59e
	jmp uuid_000000000007a5a0
uuid_000000000007a59e:
	push %RBP
	mov -1640(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a59b
	jmp uuid_000000000007a59d
uuid_000000000007a59b:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a598
	jmp uuid_000000000007a59a
uuid_000000000007a598:
	movb $1, -1656(%rbp)
uuid_000000000007a59a:
	mov -1704(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007a59d:
	mov -1672(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007a5a0:
	mov -1664(%RBP),%RSP
	add $-1728, %RSP
	mov -1656(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5a9
	push %RBP
	jmp uuid_000000000007a5a6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a5a5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a5a8
uuid_000000000007a5a6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a5a4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007a5a8:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007a5ab
uuid_000000000007a5a9:
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5a1
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	jmp uuid_000000000007a5a3
uuid_000000000007a5a1:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a5a3:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007a5ab:
	mov -1624(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007a5ae
uuid_000000000007a5ac:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Tuple<Type,Type>>,String>,Tuple<Type,Type>>,Tuple<Type,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0, %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -1616(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq $0
	push %RBP
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a585
	jmp uuid_000000000007a587
uuid_000000000007a585:
	push %RBP
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a582
	jmp uuid_000000000007a584
uuid_000000000007a582:
	push %RBP
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a57f
	jmp uuid_000000000007a581
uuid_000000000007a57f:
	movb $1, -1744(%rbp)
uuid_000000000007a581:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007a584:
	mov -1760(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007a587:
	mov -1752(%RBP),%RSP
	add $-1816, %RSP
	mov -1744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a595
	push %RBP
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq $0
	push %RBP
	mov -1880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a58e
	jmp uuid_000000000007a590
uuid_000000000007a58e:
	push %RBP
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	jmp uuid_000000000007a58b
	jmp uuid_000000000007a58d
uuid_000000000007a58b:
	push %RBP
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	jmp uuid_000000000007a588
	jmp uuid_000000000007a58a
uuid_000000000007a588:
	movb $1, -1888(%rbp)
uuid_000000000007a58a:
	mov -1936(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a58d:
	mov -1904(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007a590:
	mov -1896(%RBP),%RSP
	add $-1960, %RSP
	mov -1888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a592
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a591
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a594
uuid_000000000007a592:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq $8, %RAX
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007a594:
	mov -1824(%RBP),%RSP
	add $-2104, %RSP
	jmp uuid_000000000007a597
uuid_000000000007a595:
uuid_000000000007a597:
	mov -1680(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007a5ae:
	mov -1552(%RBP),%RSP
	add $-1816, %RSP
	jmp uuid_000000000007a5b1
uuid_000000000007a5af:
#call function * : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _ML__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a5b1:
	mov -1168(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007a5b4
uuid_000000000007a5b2:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007a5b4:
	mov -864(%RBP),%RSP
	add $-1160, %RSP
	jmp uuid_000000000007a5b7
uuid_000000000007a5b5:
	movq $8, -40(%rbp)
uuid_000000000007a5b7:
	mov -560(%RBP),%RSP
	add $-856, %RSP
	jmp uuid_000000000007a5ba
uuid_000000000007a5b8:
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a5ba:
	mov -272(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007a5bd
uuid_000000000007a5bb:
#call function size-of-class : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call size_SB_of_SB_class_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a5bd:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007a5c0
uuid_000000000007a5be:
uuid_000000000007a5c0:
	mov -104(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007a5c3
uuid_000000000007a5c1:
uuid_000000000007a5c3:
	mov -72(%RBP),%RSP
	add $-96, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
sizeof_SB_aligned_CL_ArrowU64Type:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5c4
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $8
	pushq -40(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	jmp uuid_000000000007a5c6
uuid_000000000007a5c4:
uuid_000000000007a5c6:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType:
	pushq $0
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5dd
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5d0
	jmp uuid_000000000007a5d2
uuid_000000000007a5d0:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a5cd
	jmp uuid_000000000007a5cf
uuid_000000000007a5cd:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007a5ca
	jmp uuid_000000000007a5cc
uuid_000000000007a5ca:
	movb $1, -248(%rbp)
uuid_000000000007a5cc:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007a5cf:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007a5d2:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5da
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a5d9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a5dc
uuid_000000000007a5da:
	push %RBP
#call function is-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5d6
	jmp uuid_000000000007a5d8
uuid_000000000007a5d6:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5d3
	jmp uuid_000000000007a5d5
uuid_000000000007a5d3:
	movq $1, -104(%rbp)
uuid_000000000007a5d5:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007a5d8:
	mov -344(%RBP),%RSP
	add $-352, %RSP
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
uuid_000000000007a5dc:
	mov -200(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007a5df
uuid_000000000007a5dd:
uuid_000000000007a5df:
	mov -152(%RBP),%RSP
	add $-192, %RSP
	mov -104(%rbp), %RAX
	mov %rbp, %rsp
	sub $96, %rsp
	ret
has_SB_infinite_CL_ArrowU64ConsTypeType:
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5e6
	jmp uuid_000000000007a5e8
uuid_000000000007a5e6:
	push %RBP
	jmp uuid_000000000007a5e3
	jmp uuid_000000000007a5e5
uuid_000000000007a5e3:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5e0
	jmp uuid_000000000007a5e2
uuid_000000000007a5e0:
	movb $1, -128(%rbp)
uuid_000000000007a5e2:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007a5e5:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007a5e8:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a641
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a601
	jmp uuid_000000000007a603
uuid_000000000007a601:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5f8
	jmp uuid_000000000007a5fa
uuid_000000000007a5f8:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5ef
	jmp uuid_000000000007a5f1
uuid_000000000007a5ef:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5ec
	jmp uuid_000000000007a5ee
uuid_000000000007a5ec:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	jmp uuid_000000000007a5e9
	jmp uuid_000000000007a5eb
uuid_000000000007a5e9:
	movb $1, -328(%rbp)
uuid_000000000007a5eb:
	mov -392(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007a5ee:
	mov -344(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007a5f1:
	mov -336(%RBP),%RSP
	add $-416, %RSP
	mov -328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5f5
	jmp uuid_000000000007a5f7
uuid_000000000007a5f5:
	push %RBP
	jmp uuid_000000000007a5f2
	jmp uuid_000000000007a5f4
uuid_000000000007a5f2:
	movb $1, -264(%rbp)
uuid_000000000007a5f4:
	mov -424(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007a5f7:
	mov -280(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007a5fa:
	mov -272(%RBP),%RSP
	add $-424, %RSP
	mov -264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a5fe
	jmp uuid_000000000007a600
uuid_000000000007a5fe:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $uuid_0000000000079d9e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a5fb
	jmp uuid_000000000007a5fd
uuid_000000000007a5fb:
	movb $1, -200(%rbp)
uuid_000000000007a5fd:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007a600:
	mov -216(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007a603:
	mov -208(%RBP),%RSP
	add $-440, %RSP
	mov -200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a63e
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a61c
	jmp uuid_000000000007a61e
uuid_000000000007a61c:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a613
	jmp uuid_000000000007a615
uuid_000000000007a613:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a60a
	jmp uuid_000000000007a60c
uuid_000000000007a60a:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a607
	jmp uuid_000000000007a609
uuid_000000000007a607:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_000000000007a604
	jmp uuid_000000000007a606
uuid_000000000007a604:
	movb $1, -608(%rbp)
uuid_000000000007a606:
	mov -672(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007a609:
	mov -624(%RBP),%RSP
	add $-696, %RSP
uuid_000000000007a60c:
	mov -616(%RBP),%RSP
	add $-696, %RSP
	mov -608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a610
	jmp uuid_000000000007a612
uuid_000000000007a610:
	push %RBP
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	jmp uuid_000000000007a60d
	jmp uuid_000000000007a60f
uuid_000000000007a60d:
	movb $1, -544(%rbp)
uuid_000000000007a60f:
	mov -704(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007a612:
	mov -560(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007a615:
	mov -552(%RBP),%RSP
	add $-728, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a619
	jmp uuid_000000000007a61b
uuid_000000000007a619:
	push %RBP
	mov -456(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a616
	jmp uuid_000000000007a618
uuid_000000000007a616:
	movb $1, -480(%rbp)
uuid_000000000007a618:
	mov -736(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007a61b:
	mov -496(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007a61e:
	mov -488(%RBP),%RSP
	add $-744, %RSP
	mov -480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a63b
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a625
	jmp uuid_000000000007a627
uuid_000000000007a625:
	push %RBP
	mov -768(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a622
	jmp uuid_000000000007a624
uuid_000000000007a622:
	push %RBP
	mov -760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a61f
	jmp uuid_000000000007a621
uuid_000000000007a61f:
	movb $1, -784(%rbp)
uuid_000000000007a621:
	mov -848(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007a624:
	mov -800(%RBP),%RSP
	add $-856, %RSP
uuid_000000000007a627:
	mov -792(%RBP),%RSP
	add $-856, %RSP
	mov -784(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a638
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a62e
	jmp uuid_000000000007a630
uuid_000000000007a62e:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a62b
	jmp uuid_000000000007a62d
uuid_000000000007a62b:
	push %RBP
	mov -872(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a628
	jmp uuid_000000000007a62a
uuid_000000000007a628:
	movb $1, -896(%rbp)
uuid_000000000007a62a:
	mov -944(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007a62d:
	mov -912(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007a630:
	mov -904(%RBP),%RSP
	add $-968, %RSP
	mov -896(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a635
	push %RBP
	jmp uuid_000000000007a632
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a631
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a634
uuid_000000000007a632:
uuid_000000000007a634:
	mov -976(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007a637
uuid_000000000007a635:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a637:
	mov -864(%RBP),%RSP
	add $-968, %RSP
	jmp uuid_000000000007a63a
uuid_000000000007a638:
#call function has-infinite : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq $1
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a63a:
	mov -752(%RBP),%RSP
	add $-856, %RSP
	jmp uuid_000000000007a63d
uuid_000000000007a63b:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a63d:
	mov -448(%RBP),%RSP
	add $-744, %RSP
	jmp uuid_000000000007a640
uuid_000000000007a63e:
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -64(%rbp)
uuid_000000000007a640:
	mov -168(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007a643
uuid_000000000007a641:
uuid_000000000007a643:
	mov -96(%RBP),%RSP
	add $-160, %RSP
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a644
	jmp uuid_000000000007a646
uuid_000000000007a644:
	movq $1, -64(%rbp)
uuid_000000000007a646:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
has_SB_forward_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a656
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a64f
	jmp uuid_000000000007a651
uuid_000000000007a64f:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a64c
	jmp uuid_000000000007a64e
uuid_000000000007a64c:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007a649
	jmp uuid_000000000007a64b
uuid_000000000007a649:
	movb $1, -200(%rbp)
uuid_000000000007a64b:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007a64e:
	mov -216(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007a651:
	mov -208(%RBP),%RSP
	add $-288, %RSP
	mov -200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a653
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a652
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a655
uuid_000000000007a653:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -56(%rbp)
uuid_000000000007a655:
	mov -152(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a658
uuid_000000000007a656:
uuid_000000000007a658:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
has_SB_forward_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a65f
	jmp uuid_000000000007a661
uuid_000000000007a65f:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a65c
	jmp uuid_000000000007a65e
uuid_000000000007a65c:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a659
	jmp uuid_000000000007a65b
uuid_000000000007a659:
	movb $1, -104(%rbp)
uuid_000000000007a65b:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a65e:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a661:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6b3
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a668
	jmp uuid_000000000007a66a
uuid_000000000007a668:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a665
	jmp uuid_000000000007a667
uuid_000000000007a665:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a662
	jmp uuid_000000000007a664
uuid_000000000007a662:
	movb $1, -216(%rbp)
uuid_000000000007a664:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007a667:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007a66a:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6b0
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a683
	jmp uuid_000000000007a685
uuid_000000000007a683:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a67a
	jmp uuid_000000000007a67c
uuid_000000000007a67a:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a671
	jmp uuid_000000000007a673
uuid_000000000007a671:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a66e
	jmp uuid_000000000007a670
uuid_000000000007a66e:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007a66b
	jmp uuid_000000000007a66d
uuid_000000000007a66b:
	movb $1, -456(%rbp)
uuid_000000000007a66d:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007a670:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007a673:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a677
	jmp uuid_000000000007a679
uuid_000000000007a677:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	jmp uuid_000000000007a674
	jmp uuid_000000000007a676
uuid_000000000007a674:
	movb $1, -392(%rbp)
uuid_000000000007a676:
	mov -552(%RBP),%RSP
	add $-576, %RSP
uuid_000000000007a679:
	mov -408(%RBP),%RSP
	add $-576, %RSP
uuid_000000000007a67c:
	mov -400(%RBP),%RSP
	add $-576, %RSP
	mov -392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a680
	jmp uuid_000000000007a682
uuid_000000000007a680:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_0000000000079d9e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a67d
	jmp uuid_000000000007a67f
uuid_000000000007a67d:
	movb $1, -328(%rbp)
uuid_000000000007a67f:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007a682:
	mov -344(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007a685:
	mov -336(%RBP),%RSP
	add $-592, %RSP
	mov -328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6ad
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a68c
	jmp uuid_000000000007a68e
uuid_000000000007a68c:
	push %RBP
	mov -616(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a689
	jmp uuid_000000000007a68b
uuid_000000000007a689:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a686
	jmp uuid_000000000007a688
uuid_000000000007a686:
	movb $1, -632(%rbp)
uuid_000000000007a688:
	mov -696(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007a68b:
	mov -648(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007a68e:
	mov -640(%RBP),%RSP
	add $-704, %RSP
	mov -632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6aa
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6a0
	jmp uuid_000000000007a6a2
uuid_000000000007a6a0:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a69d
	jmp uuid_000000000007a69f
uuid_000000000007a69d:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a69a
	jmp uuid_000000000007a69c
uuid_000000000007a69a:
	movb $1, -744(%rbp)
uuid_000000000007a69c:
	mov -792(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007a69f:
	mov -760(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007a6a2:
	mov -752(%RBP),%RSP
	add $-816, %RSP
	mov -744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a6a7
	push %RBP
	jmp uuid_000000000007a6a4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a6a3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a6a6
uuid_000000000007a6a4:
uuid_000000000007a6a6:
	mov -824(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007a6a9
uuid_000000000007a6a7:
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a6a9:
	mov -712(%RBP),%RSP
	add $-816, %RSP
	jmp uuid_000000000007a6ac
uuid_000000000007a6aa:
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,U64>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -704(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a697
	jmp uuid_000000000007a699
uuid_000000000007a697:
	movq $1, -40(%rbp)
uuid_000000000007a699:
	mov -712(%RBP),%RSP
	add $-712, %RSP
uuid_000000000007a6ac:
	mov -600(%RBP),%RSP
	add $-712, %RSP
	jmp uuid_000000000007a6af
uuid_000000000007a6ad:
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a6af:
	mov -296(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007a6b2
uuid_000000000007a6b0:
#call function has-forward : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007a6b2:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a6b5
uuid_000000000007a6b3:
uuid_000000000007a6b5:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg8_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007a6b6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6f7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007a6b7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6f4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007a6b8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6f1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007a6b9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6ee
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007a6ba
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6eb
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007a6bb
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6e8
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007a6bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6e5
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007a6bd
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6e2
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007a6be
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6df
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007a6bf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6dc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007a6c0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6d9
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007a6c1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6d6
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a6c2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6d3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007a6c3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6d0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007a6c4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6cd
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007a6c5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a6ca
	push %RBP
	jmp uuid_000000000007a6c7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a6c6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a6c9
uuid_000000000007a6c7:
uuid_000000000007a6c9:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007a6cc
uuid_000000000007a6ca:
	movq $1, -24(%rbp)
uuid_000000000007a6cc:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a6cf
uuid_000000000007a6cd:
	movq $1, -24(%rbp)
uuid_000000000007a6cf:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007a6d2
uuid_000000000007a6d0:
	movq $1, -24(%rbp)
uuid_000000000007a6d2:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a6d5
uuid_000000000007a6d3:
	movq $1, -24(%rbp)
uuid_000000000007a6d5:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a6d8
uuid_000000000007a6d6:
	movq $1, -24(%rbp)
uuid_000000000007a6d8:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007a6db
uuid_000000000007a6d9:
	movq $1, -24(%rbp)
uuid_000000000007a6db:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a6de
uuid_000000000007a6dc:
	movq $1, -24(%rbp)
uuid_000000000007a6de:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007a6e1
uuid_000000000007a6df:
	movq $1, -24(%rbp)
uuid_000000000007a6e1:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a6e4
uuid_000000000007a6e2:
	movq $1, -24(%rbp)
uuid_000000000007a6e4:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007a6e7
uuid_000000000007a6e5:
	movq $1, -24(%rbp)
uuid_000000000007a6e7:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a6ea
uuid_000000000007a6e8:
	movq $1, -24(%rbp)
uuid_000000000007a6ea:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a6ed
uuid_000000000007a6eb:
	movq $1, -24(%rbp)
uuid_000000000007a6ed:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a6f0
uuid_000000000007a6ee:
	movq $1, -24(%rbp)
uuid_000000000007a6f0:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a6f3
uuid_000000000007a6f1:
	movq $1, -24(%rbp)
uuid_000000000007a6f3:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007a6f6
uuid_000000000007a6f4:
	movq $1, -24(%rbp)
uuid_000000000007a6f6:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007a6f9
uuid_000000000007a6f7:
	movq $1, -24(%rbp)
uuid_000000000007a6f9:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg8_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a700
	jmp uuid_000000000007a702
uuid_000000000007a700:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a6fd
	jmp uuid_000000000007a6ff
uuid_000000000007a6fd:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a6fa
	jmp uuid_000000000007a6fc
uuid_000000000007a6fa:
	movb $1, -104(%rbp)
uuid_000000000007a6fc:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a6ff:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a702:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a713
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a709
	jmp uuid_000000000007a70b
uuid_000000000007a709:
	push %RBP
	jmp uuid_000000000007a706
	jmp uuid_000000000007a708
uuid_000000000007a706:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007992b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a703
	jmp uuid_000000000007a705
uuid_000000000007a703:
	movb $1, -216(%rbp)
uuid_000000000007a705:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007a708:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007a70b:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a710
	push %RBP
	jmp uuid_000000000007a70d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a70c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a70f
uuid_000000000007a70d:
uuid_000000000007a70f:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a712
uuid_000000000007a710:
	movq $1, -40(%rbp)
uuid_000000000007a712:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007a715
uuid_000000000007a713:
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007a715:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg16_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007a716
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a757
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007a717
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a754
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007a718
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a751
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007a719
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a74e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007a71a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a74b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007a71b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a748
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007a71c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a745
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007a71d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a742
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007a71e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a73f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007a71f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a73c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007a720
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a739
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007a721
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a736
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a722
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a733
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007a723
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a730
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007a724
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a72d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007a725
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a72a
	push %RBP
	jmp uuid_000000000007a727
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a726
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a729
uuid_000000000007a727:
uuid_000000000007a729:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007a72c
uuid_000000000007a72a:
	movq $1, -24(%rbp)
uuid_000000000007a72c:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a72f
uuid_000000000007a72d:
	movq $1, -24(%rbp)
uuid_000000000007a72f:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007a732
uuid_000000000007a730:
	movq $1, -24(%rbp)
uuid_000000000007a732:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a735
uuid_000000000007a733:
	movq $1, -24(%rbp)
uuid_000000000007a735:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a738
uuid_000000000007a736:
	movq $1, -24(%rbp)
uuid_000000000007a738:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007a73b
uuid_000000000007a739:
	movq $1, -24(%rbp)
uuid_000000000007a73b:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a73e
uuid_000000000007a73c:
	movq $1, -24(%rbp)
uuid_000000000007a73e:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007a741
uuid_000000000007a73f:
	movq $1, -24(%rbp)
uuid_000000000007a741:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a744
uuid_000000000007a742:
	movq $1, -24(%rbp)
uuid_000000000007a744:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007a747
uuid_000000000007a745:
	movq $1, -24(%rbp)
uuid_000000000007a747:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a74a
uuid_000000000007a748:
	movq $1, -24(%rbp)
uuid_000000000007a74a:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a74d
uuid_000000000007a74b:
	movq $1, -24(%rbp)
uuid_000000000007a74d:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a750
uuid_000000000007a74e:
	movq $1, -24(%rbp)
uuid_000000000007a750:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a753
uuid_000000000007a751:
	movq $1, -24(%rbp)
uuid_000000000007a753:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007a756
uuid_000000000007a754:
	movq $1, -24(%rbp)
uuid_000000000007a756:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007a759
uuid_000000000007a757:
	movq $1, -24(%rbp)
uuid_000000000007a759:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg16_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a760
	jmp uuid_000000000007a762
uuid_000000000007a760:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a75d
	jmp uuid_000000000007a75f
uuid_000000000007a75d:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a75a
	jmp uuid_000000000007a75c
uuid_000000000007a75a:
	movb $1, -104(%rbp)
uuid_000000000007a75c:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a75f:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a762:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a773
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a769
	jmp uuid_000000000007a76b
uuid_000000000007a769:
	push %RBP
	jmp uuid_000000000007a766
	jmp uuid_000000000007a768
uuid_000000000007a766:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007992f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a763
	jmp uuid_000000000007a765
uuid_000000000007a763:
	movb $1, -216(%rbp)
uuid_000000000007a765:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007a768:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007a76b:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a770
	push %RBP
	jmp uuid_000000000007a76d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a76c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a76f
uuid_000000000007a76d:
uuid_000000000007a76f:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a772
uuid_000000000007a770:
	movq $1, -40(%rbp)
uuid_000000000007a772:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007a775
uuid_000000000007a773:
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007a775:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg32_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007a776
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7b7
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007a777
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7b4
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007a778
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7b1
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007a779
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7ae
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007a77a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7ab
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007a77b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7a8
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007a77c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7a5
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007a77d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7a2
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007a77e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a79f
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007a77f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a79c
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007a780
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a799
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007a781
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a796
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a782
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a793
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007a783
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a790
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007a784
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a78d
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007a785
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a78a
	push %RBP
	jmp uuid_000000000007a787
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a786
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a789
uuid_000000000007a787:
uuid_000000000007a789:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007a78c
uuid_000000000007a78a:
	movq $1, -24(%rbp)
uuid_000000000007a78c:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a78f
uuid_000000000007a78d:
	movq $1, -24(%rbp)
uuid_000000000007a78f:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007a792
uuid_000000000007a790:
	movq $1, -24(%rbp)
uuid_000000000007a792:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a795
uuid_000000000007a793:
	movq $1, -24(%rbp)
uuid_000000000007a795:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a798
uuid_000000000007a796:
	movq $1, -24(%rbp)
uuid_000000000007a798:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007a79b
uuid_000000000007a799:
	movq $1, -24(%rbp)
uuid_000000000007a79b:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a79e
uuid_000000000007a79c:
	movq $1, -24(%rbp)
uuid_000000000007a79e:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007a7a1
uuid_000000000007a79f:
	movq $1, -24(%rbp)
uuid_000000000007a7a1:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a7a4
uuid_000000000007a7a2:
	movq $1, -24(%rbp)
uuid_000000000007a7a4:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007a7a7
uuid_000000000007a7a5:
	movq $1, -24(%rbp)
uuid_000000000007a7a7:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a7aa
uuid_000000000007a7a8:
	movq $1, -24(%rbp)
uuid_000000000007a7aa:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a7ad
uuid_000000000007a7ab:
	movq $1, -24(%rbp)
uuid_000000000007a7ad:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a7b0
uuid_000000000007a7ae:
	movq $1, -24(%rbp)
uuid_000000000007a7b0:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a7b3
uuid_000000000007a7b1:
	movq $1, -24(%rbp)
uuid_000000000007a7b3:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007a7b6
uuid_000000000007a7b4:
	movq $1, -24(%rbp)
uuid_000000000007a7b6:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007a7b9
uuid_000000000007a7b7:
	movq $1, -24(%rbp)
uuid_000000000007a7b9:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg32_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7c0
	jmp uuid_000000000007a7c2
uuid_000000000007a7c0:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a7bd
	jmp uuid_000000000007a7bf
uuid_000000000007a7bd:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a7ba
	jmp uuid_000000000007a7bc
uuid_000000000007a7ba:
	movb $1, -104(%rbp)
uuid_000000000007a7bc:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a7bf:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a7c2:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7d3
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7c9
	jmp uuid_000000000007a7cb
uuid_000000000007a7c9:
	push %RBP
	jmp uuid_000000000007a7c6
	jmp uuid_000000000007a7c8
uuid_000000000007a7c6:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079933
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7c3
	jmp uuid_000000000007a7c5
uuid_000000000007a7c3:
	movb $1, -216(%rbp)
uuid_000000000007a7c5:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007a7c8:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007a7cb:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a7d0
	push %RBP
	jmp uuid_000000000007a7cd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a7cc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a7cf
uuid_000000000007a7cd:
uuid_000000000007a7cf:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a7d2
uuid_000000000007a7d0:
	movq $1, -40(%rbp)
uuid_000000000007a7d2:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007a7d5
uuid_000000000007a7d3:
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007a7d5:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_reg64_CL_ArrowU64String:
	pushq $0
	pushq -8(%rbp)
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq $uuid_000000000007a7d6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a817
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq $uuid_000000000007a7d7
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a814
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007a7d8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a811
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007a7d9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a80e
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007a7da
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a80b
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007a7db
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a808
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007a7dc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a805
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007a7dd
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a802
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007a7de
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7ff
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007a7df
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7fc
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007a7e0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7f9
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007a7e1
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7f6
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007a7e2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7f3
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007a7e3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7f0
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007a7e4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7ed
	push %RBP
	pushq -32(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $uuid_000000000007a7e5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a7ea
	push %RBP
	jmp uuid_000000000007a7e7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a7e6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a7e9
uuid_000000000007a7e7:
uuid_000000000007a7e9:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007a7ec
uuid_000000000007a7ea:
	movq $1, -24(%rbp)
uuid_000000000007a7ec:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007a7ef
uuid_000000000007a7ed:
	movq $1, -24(%rbp)
uuid_000000000007a7ef:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007a7f2
uuid_000000000007a7f0:
	movq $1, -24(%rbp)
uuid_000000000007a7f2:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a7f5
uuid_000000000007a7f3:
	movq $1, -24(%rbp)
uuid_000000000007a7f5:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a7f8
uuid_000000000007a7f6:
	movq $1, -24(%rbp)
uuid_000000000007a7f8:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007a7fb
uuid_000000000007a7f9:
	movq $1, -24(%rbp)
uuid_000000000007a7fb:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007a7fe
uuid_000000000007a7fc:
	movq $1, -24(%rbp)
uuid_000000000007a7fe:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007a801
uuid_000000000007a7ff:
	movq $1, -24(%rbp)
uuid_000000000007a801:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007a804
uuid_000000000007a802:
	movq $1, -24(%rbp)
uuid_000000000007a804:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007a807
uuid_000000000007a805:
	movq $1, -24(%rbp)
uuid_000000000007a807:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007a80a
uuid_000000000007a808:
	movq $1, -24(%rbp)
uuid_000000000007a80a:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007a80d
uuid_000000000007a80b:
	movq $1, -24(%rbp)
uuid_000000000007a80d:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007a810
uuid_000000000007a80e:
	movq $1, -24(%rbp)
uuid_000000000007a810:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007a813
uuid_000000000007a811:
	movq $1, -24(%rbp)
uuid_000000000007a813:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	jmp uuid_000000000007a816
uuid_000000000007a814:
	movq $1, -24(%rbp)
uuid_000000000007a816:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	jmp uuid_000000000007a819
uuid_000000000007a817:
	movq $1, -24(%rbp)
uuid_000000000007a819:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_reg64_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a820
	jmp uuid_000000000007a822
uuid_000000000007a820:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a81d
	jmp uuid_000000000007a81f
uuid_000000000007a81d:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a81a
	jmp uuid_000000000007a81c
uuid_000000000007a81a:
	movb $1, -104(%rbp)
uuid_000000000007a81c:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a81f:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a822:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a833
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a829
	jmp uuid_000000000007a82b
uuid_000000000007a829:
	push %RBP
	jmp uuid_000000000007a826
	jmp uuid_000000000007a828
uuid_000000000007a826:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079937
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a823
	jmp uuid_000000000007a825
uuid_000000000007a823:
	movb $1, -216(%rbp)
uuid_000000000007a825:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007a828:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007a82b:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a830
	push %RBP
	jmp uuid_000000000007a82d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a82c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a82f
uuid_000000000007a82d:
uuid_000000000007a82f:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007a832
uuid_000000000007a830:
	movq $1, -40(%rbp)
uuid_000000000007a832:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007a835
uuid_000000000007a833:
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007a835:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_tag_CL_ArrowTypeType:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a849
	jmp uuid_000000000007a84b
uuid_000000000007a849:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a83c
	jmp uuid_000000000007a83e
uuid_000000000007a83c:
	push %RBP
	jmp uuid_000000000007a839
	jmp uuid_000000000007a83b
uuid_000000000007a839:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a836
	jmp uuid_000000000007a838
uuid_000000000007a836:
	movb $1, -128(%rbp)
uuid_000000000007a838:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007a83b:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007a83e:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a846
	push %RBP
	jmp uuid_000000000007a843
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a842
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a845
uuid_000000000007a843:
uuid_000000000007a845:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007a848
uuid_000000000007a846:
#call function get-only-child : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call get_SB_only_SB_child_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007a83f
	jmp uuid_000000000007a841
uuid_000000000007a83f:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079c5f
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a841:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a848:
	mov -96(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007a84b:
	mov -64(%RBP),%RSP
	add $-176, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_size_CL_ArrowTypeType:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-sized : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call is_SB_sized_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a84c
	jmp uuid_000000000007a84e
uuid_000000000007a84c:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a48
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a84e:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a867
	jmp uuid_000000000007a869
uuid_000000000007a867:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a85e
	jmp uuid_000000000007a860
uuid_000000000007a85e:
	push %RBP
	mov -160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a855
	jmp uuid_000000000007a857
uuid_000000000007a855:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a852
	jmp uuid_000000000007a854
uuid_000000000007a852:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	jmp uuid_000000000007a84f
	jmp uuid_000000000007a851
uuid_000000000007a84f:
	movb $1, -240(%rbp)
uuid_000000000007a851:
	mov -304(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007a854:
	mov -256(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007a857:
	mov -248(%RBP),%RSP
	add $-328, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a85b
	jmp uuid_000000000007a85d
uuid_000000000007a85b:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	jmp uuid_000000000007a858
	jmp uuid_000000000007a85a
uuid_000000000007a858:
	movb $1, -176(%rbp)
uuid_000000000007a85a:
	mov -336(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007a85d:
	mov -192(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007a860:
	mov -184(%RBP),%RSP
	add $-360, %RSP
	mov -176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a864
	jmp uuid_000000000007a866
uuid_000000000007a864:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a861
	jmp uuid_000000000007a863
uuid_000000000007a861:
	movb $1, -112(%rbp)
uuid_000000000007a863:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007a866:
	mov -128(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007a869:
	mov -120(%RBP),%RSP
	add $-376, %RSP
	mov -112(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a86e
	push %RBP
	jmp uuid_000000000007a86b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a86a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a86d
uuid_000000000007a86b:
uuid_000000000007a86d:
	mov -384(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007a870
uuid_000000000007a86e:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a870:
	mov -80(%RBP),%RSP
	add $-376, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_size_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a880
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a879
	jmp uuid_000000000007a87b
uuid_000000000007a879:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a876
	jmp uuid_000000000007a878
uuid_000000000007a876:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007a873
	jmp uuid_000000000007a875
uuid_000000000007a873:
	movb $1, -192(%rbp)
uuid_000000000007a875:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007a878:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007a87b:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a87d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a87c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a87f
uuid_000000000007a87d:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a87f:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007a882
uuid_000000000007a880:
uuid_000000000007a882:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
with_SB_size_SB_recurse_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a889
	jmp uuid_000000000007a88b
uuid_000000000007a889:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a886
	jmp uuid_000000000007a888
uuid_000000000007a886:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a883
	jmp uuid_000000000007a885
uuid_000000000007a883:
	movb $1, -96(%rbp)
uuid_000000000007a885:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a888:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a88b:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8d8
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a892
	jmp uuid_000000000007a894
uuid_000000000007a892:
	push %RBP
	jmp uuid_000000000007a88f
	jmp uuid_000000000007a891
uuid_000000000007a88f:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_0000000000079c5f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a88c
	jmp uuid_000000000007a88e
uuid_000000000007a88c:
	movb $1, -208(%rbp)
uuid_000000000007a88e:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a891:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a894:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8d5
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a89b
	jmp uuid_000000000007a89d
uuid_000000000007a89b:
	push %RBP
	jmp uuid_000000000007a898
	jmp uuid_000000000007a89a
uuid_000000000007a898:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000079a48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a895
	jmp uuid_000000000007a897
uuid_000000000007a895:
	movb $1, -280(%rbp)
uuid_000000000007a897:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007a89a:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007a89d:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8d2
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8a4
	jmp uuid_000000000007a8a6
uuid_000000000007a8a4:
	push %RBP
	jmp uuid_000000000007a8a1
	jmp uuid_000000000007a8a3
uuid_000000000007a8a1:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_0000000000079a47
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a89e
	jmp uuid_000000000007a8a0
uuid_000000000007a89e:
	movb $1, -352(%rbp)
uuid_000000000007a8a0:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007a8a3:
	mov -368(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007a8a6:
	mov -360(%RBP),%RSP
	add $-384, %RSP
	mov -352(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8cf
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8ad
	jmp uuid_000000000007a8af
uuid_000000000007a8ad:
	push %RBP
	jmp uuid_000000000007a8aa
	jmp uuid_000000000007a8ac
uuid_000000000007a8aa:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $uuid_0000000000079c8a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a8a7
	jmp uuid_000000000007a8a9
uuid_000000000007a8a7:
	movb $1, -424(%rbp)
uuid_000000000007a8a9:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007a8ac:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007a8af:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8cc
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8b6
	jmp uuid_000000000007a8b8
uuid_000000000007a8b6:
	push %RBP
	jmp uuid_000000000007a8b3
	jmp uuid_000000000007a8b5
uuid_000000000007a8b3:
	push %RBP
	mov -472(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $uuid_0000000000079a49
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a8b0
	jmp uuid_000000000007a8b2
uuid_000000000007a8b0:
	movb $1, -496(%rbp)
uuid_000000000007a8b2:
	mov -520(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007a8b5:
	mov -512(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007a8b8:
	mov -504(%RBP),%RSP
	add $-528, %RSP
	mov -496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8c9
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8bf
	jmp uuid_000000000007a8c1
uuid_000000000007a8bf:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a8bc
	jmp uuid_000000000007a8be
uuid_000000000007a8bc:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007a8b9
	jmp uuid_000000000007a8bb
uuid_000000000007a8b9:
	movb $1, -568(%rbp)
uuid_000000000007a8bb:
	mov -632(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007a8be:
	mov -584(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007a8c1:
	mov -576(%RBP),%RSP
	add $-640, %RSP
	mov -568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8c6
	push %RBP
	jmp uuid_000000000007a8c3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a8c2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a8c5
uuid_000000000007a8c3:
uuid_000000000007a8c5:
	mov -648(%RBP),%RSP
	add $-648, %RSP
	jmp uuid_000000000007a8c8
uuid_000000000007a8c6:
	pushq -640(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a8c8:
	mov -536(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007a8cb
uuid_000000000007a8c9:
uuid_000000000007a8cb:
	mov -464(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007a8ce
uuid_000000000007a8cc:
uuid_000000000007a8ce:
	mov -392(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007a8d1
uuid_000000000007a8cf:
uuid_000000000007a8d1:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007a8d4
uuid_000000000007a8d2:
uuid_000000000007a8d4:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007a8d7
uuid_000000000007a8d5:
uuid_000000000007a8d7:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a8da
uuid_000000000007a8d8:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-size-recurse : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call with_SB_size_SB_recurse_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a8da:
	mov -64(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_fields_CL_ArrowTypeType:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $uuid_0000000000079c8a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8e1
	jmp uuid_000000000007a8e3
uuid_000000000007a8e1:
	push %RBP
	jmp uuid_000000000007a8de
	jmp uuid_000000000007a8e0
uuid_000000000007a8de:
	push %RBP
	mov -72(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_0000000000079c8a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a8db
	jmp uuid_000000000007a8dd
uuid_000000000007a8db:
	movb $1, -96(%rbp)
uuid_000000000007a8dd:
	mov -120(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007a8e0:
	mov -112(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007a8e3:
	mov -104(%RBP),%RSP
	add $-128, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8eb
	push %RBP
	jmp uuid_000000000007a8e8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a8e7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a8ea
uuid_000000000007a8e8:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8e4
	jmp uuid_000000000007a8e6
uuid_000000000007a8e4:
#call function fields-of-tag : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call fields_SB_of_SB_tag_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a8e6:
	mov -192(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007a8ea:
	mov -136(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007a8ed
uuid_000000000007a8eb:
uuid_000000000007a8ed:
	mov -64(%RBP),%RSP
	add $-128, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_tag_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8f4
	jmp uuid_000000000007a8f6
uuid_000000000007a8f4:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a8f1
	jmp uuid_000000000007a8f3
uuid_000000000007a8f1:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a8ee
	jmp uuid_000000000007a8f0
uuid_000000000007a8ee:
	movb $1, -96(%rbp)
uuid_000000000007a8f0:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a8f3:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a8f6:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a950
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a922
	jmp uuid_000000000007a924
uuid_000000000007a922:
	push %RBP
	jmp uuid_000000000007a91f
	jmp uuid_000000000007a921
uuid_000000000007a91f:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_0000000000079a46
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a91c
	jmp uuid_000000000007a91e
uuid_000000000007a91c:
	movb $1, -208(%rbp)
uuid_000000000007a91e:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a921:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a924:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a94d
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a92b
	jmp uuid_000000000007a92d
uuid_000000000007a92b:
	push %RBP
	jmp uuid_000000000007a928
	jmp uuid_000000000007a92a
uuid_000000000007a928:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000079c5f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a925
	jmp uuid_000000000007a927
uuid_000000000007a925:
	movb $1, -280(%rbp)
uuid_000000000007a927:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007a92a:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007a92d:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a94a
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a934
	jmp uuid_000000000007a936
uuid_000000000007a934:
	push %RBP
	jmp uuid_000000000007a931
	jmp uuid_000000000007a933
uuid_000000000007a931:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_0000000000079c8a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a92e
	jmp uuid_000000000007a930
uuid_000000000007a92e:
	movb $1, -352(%rbp)
uuid_000000000007a930:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007a933:
	mov -368(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007a936:
	mov -360(%RBP),%RSP
	add $-384, %RSP
	mov -352(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a947
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a93d
	jmp uuid_000000000007a93f
uuid_000000000007a93d:
	push %RBP
	jmp uuid_000000000007a93a
	jmp uuid_000000000007a93c
uuid_000000000007a93a:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq $uuid_0000000000079a49
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a937
	jmp uuid_000000000007a939
uuid_000000000007a937:
	movb $1, -424(%rbp)
uuid_000000000007a939:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007a93c:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007a93f:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a944
	push %RBP
	jmp uuid_000000000007a941
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a940
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a943
uuid_000000000007a941:
uuid_000000000007a943:
	mov -464(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007a946
uuid_000000000007a944:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a946:
	mov -392(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007a949
uuid_000000000007a947:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a949:
	mov -320(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007a94c
uuid_000000000007a94a:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a94c:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007a94f
uuid_000000000007a94d:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a94f:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a952
uuid_000000000007a950:
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8fd
	jmp uuid_000000000007a8ff
uuid_000000000007a8fd:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	jmp uuid_000000000007a8fa
	jmp uuid_000000000007a8fc
uuid_000000000007a8fa:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a8f7
	jmp uuid_000000000007a8f9
uuid_000000000007a8f7:
	movb $1, -344(%rbp)
uuid_000000000007a8f9:
	mov -392(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007a8fc:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007a8ff:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a919
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a906
	jmp uuid_000000000007a908
uuid_000000000007a906:
	push %RBP
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a903
	jmp uuid_000000000007a905
uuid_000000000007a903:
	push %RBP
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	jmp uuid_000000000007a900
	jmp uuid_000000000007a902
uuid_000000000007a900:
	movb $1, -488(%rbp)
uuid_000000000007a902:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007a905:
	mov -504(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007a908:
	mov -496(%RBP),%RSP
	add $-560, %RSP
	mov -488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a916
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a90f
	jmp uuid_000000000007a911
uuid_000000000007a90f:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	jmp uuid_000000000007a90c
	jmp uuid_000000000007a90e
uuid_000000000007a90c:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	jmp uuid_000000000007a909
	jmp uuid_000000000007a90b
uuid_000000000007a909:
	movb $1, -632(%rbp)
uuid_000000000007a90b:
	mov -680(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007a90e:
	mov -648(%RBP),%RSP
	add $-704, %RSP
uuid_000000000007a911:
	mov -640(%RBP),%RSP
	add $-704, %RSP
	mov -632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a913
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a912
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a915
uuid_000000000007a913:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a915:
	mov -568(%RBP),%RSP
	add $-704, %RSP
	jmp uuid_000000000007a918
uuid_000000000007a916:
	movq -560(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a918:
	mov -424(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007a91b
uuid_000000000007a919:
	movq -384(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a91b:
	mov -280(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007a952:
	mov -64(%RBP),%RSP
	add $-416, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_tag_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a95b
	jmp uuid_000000000007a95d
uuid_000000000007a95b:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a958
	jmp uuid_000000000007a95a
uuid_000000000007a958:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007a955
	jmp uuid_000000000007a957
uuid_000000000007a955:
	movb $1, -144(%rbp)
uuid_000000000007a957:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a95a:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a95d:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a962
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a95f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a95e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a961
uuid_000000000007a95f:
uuid_000000000007a961:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007a964
uuid_000000000007a962:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-tag : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a964:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_constructor_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a96b
	jmp uuid_000000000007a96d
uuid_000000000007a96b:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a968
	jmp uuid_000000000007a96a
uuid_000000000007a968:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a965
	jmp uuid_000000000007a967
uuid_000000000007a965:
	movb $1, -96(%rbp)
uuid_000000000007a967:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a96a:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a96d:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a990
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a97a
	jmp uuid_000000000007a97c
uuid_000000000007a97a:
	push %RBP
	jmp uuid_000000000007a977
	jmp uuid_000000000007a979
uuid_000000000007a977:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_0000000000079a46
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a974
	jmp uuid_000000000007a976
uuid_000000000007a974:
	movb $1, -208(%rbp)
uuid_000000000007a976:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a979:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007a97c:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a98d
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a983
	jmp uuid_000000000007a985
uuid_000000000007a983:
	push %RBP
	jmp uuid_000000000007a980
	jmp uuid_000000000007a982
uuid_000000000007a980:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000079a47
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a97d
	jmp uuid_000000000007a97f
uuid_000000000007a97d:
	movb $1, -280(%rbp)
uuid_000000000007a97f:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007a982:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007a985:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a98a
	push %RBP
	jmp uuid_000000000007a987
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a986
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a989
uuid_000000000007a987:
uuid_000000000007a989:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007a98c
uuid_000000000007a98a:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a98c:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007a98f
uuid_000000000007a98d:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a98f:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007a992
uuid_000000000007a990:
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a971
	movq -136(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -128(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -120(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007a973
uuid_000000000007a971:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a96e
	movq -168(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -160(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -152(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007a970
uuid_000000000007a96e:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a970:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007a973:
	mov -176(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007a992:
	mov -64(%RBP),%RSP
	add $-184, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_representation_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a99b
	jmp uuid_000000000007a99d
uuid_000000000007a99b:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a998
	jmp uuid_000000000007a99a
uuid_000000000007a998:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007a995
	jmp uuid_000000000007a997
uuid_000000000007a995:
	movb $1, -144(%rbp)
uuid_000000000007a997:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a99a:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a99d:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9a2
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a99f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007a99e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007a9a1
uuid_000000000007a99f:
uuid_000000000007a9a1:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007a9a4
uuid_000000000007a9a2:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a9a4:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_representation_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9ab
	jmp uuid_000000000007a9ad
uuid_000000000007a9ab:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a9a8
	jmp uuid_000000000007a9aa
uuid_000000000007a9a8:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007a9a5
	jmp uuid_000000000007a9a7
uuid_000000000007a9a5:
	movb $1, -96(%rbp)
uuid_000000000007a9a7:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a9aa:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007a9ad:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa3d
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9bd
	jmp uuid_000000000007a9bf
uuid_000000000007a9bd:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9ba
	jmp uuid_000000000007a9bc
uuid_000000000007a9ba:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $uuid_0000000000079e45
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9b7
	jmp uuid_000000000007a9b9
uuid_000000000007a9b7:
	movb $1, -208(%rbp)
uuid_000000000007a9b9:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007a9bc:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007a9bf:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa3a
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9c7
	jmp uuid_000000000007a9c9
uuid_000000000007a9c7:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9c4
	jmp uuid_000000000007a9c6
uuid_000000000007a9c4:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_000000000007a9c0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9c1
	jmp uuid_000000000007a9c3
uuid_000000000007a9c1:
	movb $1, -320(%rbp)
uuid_000000000007a9c3:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007a9c6:
	mov -336(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007a9c9:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	mov -320(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa37
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9d0
	jmp uuid_000000000007a9d2
uuid_000000000007a9d0:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9cd
	jmp uuid_000000000007a9cf
uuid_000000000007a9cd:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9ca
	jmp uuid_000000000007a9cc
uuid_000000000007a9ca:
	movb $1, -432(%rbp)
uuid_000000000007a9cc:
	mov -496(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007a9cf:
	mov -448(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007a9d2:
	mov -440(%RBP),%RSP
	add $-504, %RSP
	mov -432(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa34
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9d9
	jmp uuid_000000000007a9db
uuid_000000000007a9d9:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9d6
	jmp uuid_000000000007a9d8
uuid_000000000007a9d6:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_0000000000079eab
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9d3
	jmp uuid_000000000007a9d5
uuid_000000000007a9d3:
	movb $1, -544(%rbp)
uuid_000000000007a9d5:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007a9d8:
	mov -560(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007a9db:
	mov -552(%RBP),%RSP
	add $-616, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa31
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -648(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9e2
	jmp uuid_000000000007a9e4
uuid_000000000007a9e2:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9df
	jmp uuid_000000000007a9e1
uuid_000000000007a9df:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq $uuid_000000000007981c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9dc
	jmp uuid_000000000007a9de
uuid_000000000007a9dc:
	movb $1, -656(%rbp)
uuid_000000000007a9de:
	mov -720(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007a9e1:
	mov -672(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007a9e4:
	mov -664(%RBP),%RSP
	add $-728, %RSP
	mov -656(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa2e
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9eb
	jmp uuid_000000000007a9ed
uuid_000000000007a9eb:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9e8
	jmp uuid_000000000007a9ea
uuid_000000000007a9e8:
	push %RBP
	mov -744(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq $uuid_000000000007992b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9e5
	jmp uuid_000000000007a9e7
uuid_000000000007a9e5:
	movb $1, -768(%rbp)
uuid_000000000007a9e7:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007a9ea:
	mov -784(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007a9ed:
	mov -776(%RBP),%RSP
	add $-840, %RSP
	mov -768(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa2b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9f4
	jmp uuid_000000000007a9f6
uuid_000000000007a9f4:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -936(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9f1
	jmp uuid_000000000007a9f3
uuid_000000000007a9f1:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $uuid_000000000007992f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9ee
	jmp uuid_000000000007a9f0
uuid_000000000007a9ee:
	movb $1, -880(%rbp)
uuid_000000000007a9f0:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007a9f3:
	mov -896(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007a9f6:
	mov -888(%RBP),%RSP
	add $-952, %RSP
	mov -880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa28
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -984(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9fd
	jmp uuid_000000000007a9ff
uuid_000000000007a9fd:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007a9fa
	jmp uuid_000000000007a9fc
uuid_000000000007a9fa:
	push %RBP
	mov -968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $uuid_0000000000079933
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9f7
	jmp uuid_000000000007a9f9
uuid_000000000007a9f7:
	movb $1, -992(%rbp)
uuid_000000000007a9f9:
	mov -1056(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007a9fc:
	mov -1008(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007a9ff:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
	mov -992(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa25
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1096(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa06
	jmp uuid_000000000007aa08
uuid_000000000007aa06:
	push %RBP
	mov -1088(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa03
	jmp uuid_000000000007aa05
uuid_000000000007aa03:
	push %RBP
	mov -1080(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $uuid_0000000000079937
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa00
	jmp uuid_000000000007aa02
uuid_000000000007aa00:
	movb $1, -1104(%rbp)
uuid_000000000007aa02:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007aa05:
	mov -1120(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007aa08:
	mov -1112(%RBP),%RSP
	add $-1176, %RSP
	mov -1104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa22
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa0f
	jmp uuid_000000000007aa11
uuid_000000000007aa0f:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aa0c
	jmp uuid_000000000007aa0e
uuid_000000000007aa0c:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aa09
	jmp uuid_000000000007aa0b
uuid_000000000007aa09:
	movb $1, -1216(%rbp)
uuid_000000000007aa0b:
	mov -1280(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007aa0e:
	mov -1232(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007aa11:
	mov -1224(%RBP),%RSP
	add $-1288, %RSP
	mov -1216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa1f
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa1c
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa15
	jmp uuid_000000000007aa17
uuid_000000000007aa15:
	push %RBP
	jmp uuid_000000000007aa12
	jmp uuid_000000000007aa14
uuid_000000000007aa12:
	movb $1, -1360(%rbp)
uuid_000000000007aa14:
	mov -1376(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007aa17:
	mov -1368(%RBP),%RSP
	add $-1376, %RSP
	mov -1360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa19
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aa18
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aa1b
uuid_000000000007aa19:
uuid_000000000007aa1b:
	mov -1328(%RBP),%RSP
	add $-1376, %RSP
	jmp uuid_000000000007aa1e
uuid_000000000007aa1c:
uuid_000000000007aa1e:
	mov -1296(%RBP),%RSP
	add $-1320, %RSP
	jmp uuid_000000000007aa21
uuid_000000000007aa1f:
	pushq -1288(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa21:
	mov -1184(%RBP),%RSP
	add $-1288, %RSP
	jmp uuid_000000000007aa24
uuid_000000000007aa22:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa24:
	mov -1072(%RBP),%RSP
	add $-1176, %RSP
	jmp uuid_000000000007aa27
uuid_000000000007aa25:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa27:
	mov -960(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007aa2a
uuid_000000000007aa28:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa2a:
	mov -848(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007aa2d
uuid_000000000007aa2b:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa2d:
	mov -736(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007aa30
uuid_000000000007aa2e:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa30:
	mov -624(%RBP),%RSP
	add $-728, %RSP
	jmp uuid_000000000007aa33
uuid_000000000007aa31:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa33:
	mov -512(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_000000000007aa36
uuid_000000000007aa34:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa36:
	mov -400(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007aa39
uuid_000000000007aa37:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa39:
	mov -288(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007aa3c
uuid_000000000007aa3a:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa3c:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007aa3f
uuid_000000000007aa3d:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9b4
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9b1
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007a9b3
uuid_000000000007a9b1:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007a9b3:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007a9b6
uuid_000000000007a9b4:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007a9ae
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007a9b0
uuid_000000000007a9ae:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007a9b0:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007a9b6:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aa3f:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa48
	jmp uuid_000000000007aa4a
uuid_000000000007aa48:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aa45
	jmp uuid_000000000007aa47
uuid_000000000007aa45:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007aa42
	jmp uuid_000000000007aa44
uuid_000000000007aa42:
	movb $1, -144(%rbp)
uuid_000000000007aa44:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aa47:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aa4a:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa4f
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa4c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aa4b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aa4e
uuid_000000000007aa4c:
uuid_000000000007aa4e:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007aa51
uuid_000000000007aa4f:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa51:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_size_SB_unless_SB_class_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa58
	jmp uuid_000000000007aa5a
uuid_000000000007aa58:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aa55
	jmp uuid_000000000007aa57
uuid_000000000007aa55:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aa52
	jmp uuid_000000000007aa54
uuid_000000000007aa52:
	movb $1, -96(%rbp)
uuid_000000000007aa54:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007aa57:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007aa5a:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa7d
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa6a
	jmp uuid_000000000007aa6c
uuid_000000000007aa6a:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aa67
	jmp uuid_000000000007aa69
uuid_000000000007aa67:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aa64
	jmp uuid_000000000007aa66
uuid_000000000007aa64:
	movb $1, -208(%rbp)
uuid_000000000007aa66:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007aa69:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007aa6c:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa7a
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa77
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa70
	jmp uuid_000000000007aa72
uuid_000000000007aa70:
	push %RBP
	jmp uuid_000000000007aa6d
	jmp uuid_000000000007aa6f
uuid_000000000007aa6d:
	movb $1, -352(%rbp)
uuid_000000000007aa6f:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007aa72:
	mov -360(%RBP),%RSP
	add $-368, %RSP
	mov -352(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa74
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aa73
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aa76
uuid_000000000007aa74:
uuid_000000000007aa76:
	mov -320(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007aa79
uuid_000000000007aa77:
uuid_000000000007aa79:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007aa7c
uuid_000000000007aa7a:
	pushq -280(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa7c:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007aa7f
uuid_000000000007aa7d:
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa61
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa5e
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007aa60
uuid_000000000007aa5e:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007aa60:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007aa63
uuid_000000000007aa61:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa5b
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007aa5d
uuid_000000000007aa5b:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa5d:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aa63:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aa7f:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa86
	jmp uuid_000000000007aa88
uuid_000000000007aa86:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aa83
	jmp uuid_000000000007aa85
uuid_000000000007aa83:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aa80
	jmp uuid_000000000007aa82
uuid_000000000007aa80:
	movb $1, -96(%rbp)
uuid_000000000007aa82:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007aa85:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007aa88:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aac3
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aa98
	jmp uuid_000000000007aa9a
uuid_000000000007aa98:
	push %RBP
	jmp uuid_000000000007aa95
	jmp uuid_000000000007aa97
uuid_000000000007aa95:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_0000000000079a49
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa92
	jmp uuid_000000000007aa94
uuid_000000000007aa92:
	movb $1, -208(%rbp)
uuid_000000000007aa94:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007aa97:
	mov -224(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007aa9a:
	mov -216(%RBP),%RSP
	add $-240, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aac0
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aaa1
	jmp uuid_000000000007aaa3
uuid_000000000007aaa1:
	push %RBP
	jmp uuid_000000000007aa9e
	jmp uuid_000000000007aaa0
uuid_000000000007aa9e:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -312(%rbp)
	pushq $uuid_0000000000079a48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa9b
	jmp uuid_000000000007aa9d
uuid_000000000007aa9b:
	movb $1, -280(%rbp)
uuid_000000000007aa9d:
	mov -304(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007aaa0:
	mov -296(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007aaa3:
	mov -288(%RBP),%RSP
	add $-312, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aabd
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aaaa
	jmp uuid_000000000007aaac
uuid_000000000007aaaa:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aaa7
	jmp uuid_000000000007aaa9
uuid_000000000007aaa7:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aaa4
	jmp uuid_000000000007aaa6
uuid_000000000007aaa4:
	movb $1, -352(%rbp)
uuid_000000000007aaa6:
	mov -416(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007aaa9:
	mov -368(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007aaac:
	mov -360(%RBP),%RSP
	add $-424, %RSP
	mov -352(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aaba
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aab7
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aab0
	jmp uuid_000000000007aab2
uuid_000000000007aab0:
	push %RBP
	jmp uuid_000000000007aaad
	jmp uuid_000000000007aaaf
uuid_000000000007aaad:
	movb $1, -496(%rbp)
uuid_000000000007aaaf:
	mov -512(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007aab2:
	mov -504(%RBP),%RSP
	add $-512, %RSP
	mov -496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aab4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aab3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aab6
uuid_000000000007aab4:
uuid_000000000007aab6:
	mov -464(%RBP),%RSP
	add $-512, %RSP
	jmp uuid_000000000007aab9
uuid_000000000007aab7:
uuid_000000000007aab9:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007aabc
uuid_000000000007aaba:
	pushq -424(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size-unless-class : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aabc:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007aabf
uuid_000000000007aabd:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aabf:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007aac2
uuid_000000000007aac0:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aac2:
	mov -176(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007aac5
uuid_000000000007aac3:
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size-unless-class-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa8f
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa8c
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007aa8e
uuid_000000000007aa8c:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007aa8e:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007aa91
uuid_000000000007aa8f:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aa89
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007aa8b
uuid_000000000007aa89:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aa8b:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aa91:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aac5:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
without_SB_size_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aace
	jmp uuid_000000000007aad0
uuid_000000000007aace:
	push %RBP
	mov -128(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aacb
	jmp uuid_000000000007aacd
uuid_000000000007aacb:
	push %RBP
	pushq -104(%RBP)
	pushq -112(%RBP)
	pushq -120(%RBP)
	jmp uuid_000000000007aac8
	jmp uuid_000000000007aaca
uuid_000000000007aac8:
	movb $1, -144(%rbp)
uuid_000000000007aaca:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aacd:
	mov -160(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aad0:
	mov -152(%RBP),%RSP
	add $-232, %RSP
	mov -144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aad5
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aad2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aad1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aad4
uuid_000000000007aad2:
uuid_000000000007aad4:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007aad7
uuid_000000000007aad5:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aad7:
	mov -96(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
without_SB_size_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aade
	jmp uuid_000000000007aae0
uuid_000000000007aade:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aadb
	jmp uuid_000000000007aadd
uuid_000000000007aadb:
	push %RBP
	mov -72(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aad8
	jmp uuid_000000000007aada
uuid_000000000007aad8:
	movb $1, -96(%rbp)
uuid_000000000007aada:
	mov -144(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007aadd:
	mov -112(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007aae0:
	mov -104(%RBP),%RSP
	add $-168, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab1b
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aaf0
	jmp uuid_000000000007aaf2
uuid_000000000007aaf0:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aaed
	jmp uuid_000000000007aaef
uuid_000000000007aaed:
	push %RBP
	mov -184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $uuid_0000000000079a48
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aaea
	jmp uuid_000000000007aaec
uuid_000000000007aaea:
	movb $1, -208(%rbp)
uuid_000000000007aaec:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007aaef:
	mov -224(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007aaf2:
	mov -216(%RBP),%RSP
	add $-280, %RSP
	mov -208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab18
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aaf9
	jmp uuid_000000000007aafb
uuid_000000000007aaf9:
	push %RBP
	mov -304(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aaf6
	jmp uuid_000000000007aaf8
uuid_000000000007aaf6:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq $uuid_0000000000079a49
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aaf3
	jmp uuid_000000000007aaf5
uuid_000000000007aaf3:
	movb $1, -320(%rbp)
uuid_000000000007aaf5:
	mov -384(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007aaf8:
	mov -336(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007aafb:
	mov -328(%RBP),%RSP
	add $-392, %RSP
	mov -320(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab15
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -424(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab02
	jmp uuid_000000000007ab04
uuid_000000000007ab02:
	push %RBP
	mov -416(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aaff
	jmp uuid_000000000007ab01
uuid_000000000007aaff:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aafc
	jmp uuid_000000000007aafe
uuid_000000000007aafc:
	movb $1, -432(%rbp)
uuid_000000000007aafe:
	mov -496(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007ab01:
	mov -448(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007ab04:
	mov -440(%RBP),%RSP
	add $-504, %RSP
	mov -432(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab12
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab0f
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab08
	jmp uuid_000000000007ab0a
uuid_000000000007ab08:
	push %RBP
	jmp uuid_000000000007ab05
	jmp uuid_000000000007ab07
uuid_000000000007ab05:
	movb $1, -576(%rbp)
uuid_000000000007ab07:
	mov -592(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007ab0a:
	mov -584(%RBP),%RSP
	add $-592, %RSP
	mov -576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab0c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ab0b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ab0e
uuid_000000000007ab0c:
uuid_000000000007ab0e:
	mov -544(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007ab11
uuid_000000000007ab0f:
uuid_000000000007ab11:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_000000000007ab14
uuid_000000000007ab12:
	pushq -504(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-size : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ab14:
	mov -400(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007ab17
uuid_000000000007ab15:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ab17:
	mov -288(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007ab1a
uuid_000000000007ab18:
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ab1a:
	mov -176(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007ab1d
uuid_000000000007ab1b:
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function without-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call without_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aae7
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aae4
	pushq $0
	pushq $0
	pushq $3
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007aae6
uuid_000000000007aae4:
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007aae6:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007aae9
uuid_000000000007aae7:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aae1
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007aae3
uuid_000000000007aae1:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aae3:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007aae9:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007ab1d:
	mov -64(%RBP),%RSP
	add $-232, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_tag_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab24
	jmp uuid_000000000007ab26
uuid_000000000007ab24:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab21
	jmp uuid_000000000007ab23
uuid_000000000007ab21:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab1e
	jmp uuid_000000000007ab20
uuid_000000000007ab1e:
	movb $1, -120(%rbp)
uuid_000000000007ab20:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ab23:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ab26:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab3d
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab33
	jmp uuid_000000000007ab35
uuid_000000000007ab33:
	push %RBP
	jmp uuid_000000000007ab30
	jmp uuid_000000000007ab32
uuid_000000000007ab30:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $uuid_0000000000079c5f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab2d
	jmp uuid_000000000007ab2f
uuid_000000000007ab2d:
	movb $1, -232(%rbp)
uuid_000000000007ab2f:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ab32:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ab35:
	mov -240(%RBP),%RSP
	add $-264, %RSP
	mov -232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab3a
	push %RBP
	jmp uuid_000000000007ab37
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ab36
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ab39
uuid_000000000007ab37:
uuid_000000000007ab39:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007ab3c
uuid_000000000007ab3a:
	movq -24(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab3c:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007ab3f
uuid_000000000007ab3d:
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab2a
#call function with-only-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab27
	jmp uuid_000000000007ab29
uuid_000000000007ab27:
	movq -248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab29:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007ab2c
uuid_000000000007ab2a:
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab2c:
	mov -224(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007ab3f:
	mov -88(%RBP),%RSP
	add $-224, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_class_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab46
	jmp uuid_000000000007ab48
uuid_000000000007ab46:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab43
	jmp uuid_000000000007ab45
uuid_000000000007ab43:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab40
	jmp uuid_000000000007ab42
uuid_000000000007ab40:
	movb $1, -120(%rbp)
uuid_000000000007ab42:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ab45:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ab48:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab65
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab55
	jmp uuid_000000000007ab57
uuid_000000000007ab55:
	push %RBP
	jmp uuid_000000000007ab52
	jmp uuid_000000000007ab54
uuid_000000000007ab52:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ab4f
	jmp uuid_000000000007ab51
uuid_000000000007ab4f:
	movb $1, -232(%rbp)
uuid_000000000007ab51:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ab54:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ab57:
	mov -240(%RBP),%RSP
	add $-264, %RSP
	mov -232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab62
	push %RBP
	jmp uuid_000000000007ab5f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ab5e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ab61
uuid_000000000007ab5f:
uuid_000000000007ab61:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007ab64
uuid_000000000007ab62:
	push %RBP
#call function is-class : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_class_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab5b
	jmp uuid_000000000007ab5d
uuid_000000000007ab5b:
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-fragment : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call is_SB_fragment_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab58
	jmp uuid_000000000007ab5a
uuid_000000000007ab58:
	movq -24(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab5a:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ab5d:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007ab64:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007ab67
uuid_000000000007ab65:
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab49
	jmp uuid_000000000007ab4b
uuid_000000000007ab49:
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab4b:
	mov -224(%RBP),%RSP
	add $-224, %RSP
#call function with-only-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab4c
	jmp uuid_000000000007ab4e
uuid_000000000007ab4c:
	movq -248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab4e:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007ab67:
	mov -88(%RBP),%RSP
	add $-256, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
with_SB_only_SB_representation_CL_ArrowListTypeListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab70
	jmp uuid_000000000007ab72
uuid_000000000007ab70:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab6d
	jmp uuid_000000000007ab6f
uuid_000000000007ab6d:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007ab6a
	jmp uuid_000000000007ab6c
uuid_000000000007ab6a:
	movb $1, -184(%rbp)
uuid_000000000007ab6c:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ab6f:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007ab72:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab77
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab74
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ab73
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ab76
uuid_000000000007ab74:
uuid_000000000007ab76:
	mov -280(%RBP),%RSP
	add $-320, %RSP
	jmp uuid_000000000007ab79
uuid_000000000007ab77:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-representation : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007ab79:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
with_SB_only_SB_representation_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab80
	jmp uuid_000000000007ab82
uuid_000000000007ab80:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab7d
	jmp uuid_000000000007ab7f
uuid_000000000007ab7d:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ab7a
	jmp uuid_000000000007ab7c
uuid_000000000007ab7a:
	movb $1, -120(%rbp)
uuid_000000000007ab7c:
	mov -168(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ab7f:
	mov -136(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007ab82:
	mov -128(%RBP),%RSP
	add $-192, %RSP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac11
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab92
	jmp uuid_000000000007ab94
uuid_000000000007ab92:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab8f
	jmp uuid_000000000007ab91
uuid_000000000007ab8f:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $uuid_0000000000079e45
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab8c
	jmp uuid_000000000007ab8e
uuid_000000000007ab8c:
	movb $1, -232(%rbp)
uuid_000000000007ab8e:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007ab91:
	mov -248(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007ab94:
	mov -240(%RBP),%RSP
	add $-304, %RSP
	mov -232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac0e
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab9b
	jmp uuid_000000000007ab9d
uuid_000000000007ab9b:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ab98
	jmp uuid_000000000007ab9a
uuid_000000000007ab98:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq $uuid_000000000007a9c0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab95
	jmp uuid_000000000007ab97
uuid_000000000007ab95:
	movb $1, -344(%rbp)
uuid_000000000007ab97:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ab9a:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ab9d:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac0b
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aba4
	jmp uuid_000000000007aba6
uuid_000000000007aba4:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aba1
	jmp uuid_000000000007aba3
uuid_000000000007aba1:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab9e
	jmp uuid_000000000007aba0
uuid_000000000007ab9e:
	movb $1, -456(%rbp)
uuid_000000000007aba0:
	mov -520(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007aba3:
	mov -472(%RBP),%RSP
	add $-528, %RSP
uuid_000000000007aba6:
	mov -464(%RBP),%RSP
	add $-528, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac08
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abad
	jmp uuid_000000000007abaf
uuid_000000000007abad:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abaa
	jmp uuid_000000000007abac
uuid_000000000007abaa:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq $uuid_0000000000079eab
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aba7
	jmp uuid_000000000007aba9
uuid_000000000007aba7:
	movb $1, -568(%rbp)
uuid_000000000007aba9:
	mov -632(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007abac:
	mov -584(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007abaf:
	mov -576(%RBP),%RSP
	add $-640, %RSP
	mov -568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac05
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abb6
	jmp uuid_000000000007abb8
uuid_000000000007abb6:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abb3
	jmp uuid_000000000007abb5
uuid_000000000007abb3:
	push %RBP
	mov -656(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -752(%rbp)
	pushq $uuid_000000000007981c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abb0
	jmp uuid_000000000007abb2
uuid_000000000007abb0:
	movb $1, -680(%rbp)
uuid_000000000007abb2:
	mov -744(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007abb5:
	mov -696(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007abb8:
	mov -688(%RBP),%RSP
	add $-752, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac02
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -784(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abbf
	jmp uuid_000000000007abc1
uuid_000000000007abbf:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abbc
	jmp uuid_000000000007abbe
uuid_000000000007abbc:
	push %RBP
	mov -768(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq $uuid_000000000007992b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abb9
	jmp uuid_000000000007abbb
uuid_000000000007abb9:
	movb $1, -792(%rbp)
uuid_000000000007abbb:
	mov -856(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007abbe:
	mov -808(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007abc1:
	mov -800(%RBP),%RSP
	add $-864, %RSP
	mov -792(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abff
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abc8
	jmp uuid_000000000007abca
uuid_000000000007abc8:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abc5
	jmp uuid_000000000007abc7
uuid_000000000007abc5:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $uuid_000000000007992f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abc2
	jmp uuid_000000000007abc4
uuid_000000000007abc2:
	movb $1, -904(%rbp)
uuid_000000000007abc4:
	mov -968(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007abc7:
	mov -920(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007abca:
	mov -912(%RBP),%RSP
	add $-976, %RSP
	mov -904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abfc
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abd1
	jmp uuid_000000000007abd3
uuid_000000000007abd1:
	push %RBP
	mov -1000(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abce
	jmp uuid_000000000007abd0
uuid_000000000007abce:
	push %RBP
	mov -992(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1088(%rbp)
	pushq $uuid_0000000000079933
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abcb
	jmp uuid_000000000007abcd
uuid_000000000007abcb:
	movb $1, -1016(%rbp)
uuid_000000000007abcd:
	mov -1080(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007abd0:
	mov -1032(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007abd3:
	mov -1024(%RBP),%RSP
	add $-1088, %RSP
	mov -1016(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abf9
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abda
	jmp uuid_000000000007abdc
uuid_000000000007abda:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abd7
	jmp uuid_000000000007abd9
uuid_000000000007abd7:
	push %RBP
	mov -1104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq $uuid_0000000000079937
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007abd4
	jmp uuid_000000000007abd6
uuid_000000000007abd4:
	movb $1, -1128(%rbp)
uuid_000000000007abd6:
	mov -1192(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007abd9:
	mov -1144(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007abdc:
	mov -1136(%RBP),%RSP
	add $-1200, %RSP
	mov -1128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abf6
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abe3
	jmp uuid_000000000007abe5
uuid_000000000007abe3:
	push %RBP
	mov -1224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007abe0
	jmp uuid_000000000007abe2
uuid_000000000007abe0:
	push %RBP
	mov -1216(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007abdd
	jmp uuid_000000000007abdf
uuid_000000000007abdd:
	movb $1, -1240(%rbp)
uuid_000000000007abdf:
	mov -1304(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007abe2:
	mov -1256(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007abe5:
	mov -1248(%RBP),%RSP
	add $-1312, %RSP
	mov -1240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abf3
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov -1344(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abf0
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abe9
	jmp uuid_000000000007abeb
uuid_000000000007abe9:
	push %RBP
	jmp uuid_000000000007abe6
	jmp uuid_000000000007abe8
uuid_000000000007abe6:
	movb $1, -1384(%rbp)
uuid_000000000007abe8:
	mov -1400(%RBP),%RSP
	add $-1400, %RSP
uuid_000000000007abeb:
	mov -1392(%RBP),%RSP
	add $-1400, %RSP
	mov -1384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007abed
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007abec
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007abef
uuid_000000000007abed:
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007abef:
	mov -1352(%RBP),%RSP
	add $-1400, %RSP
	jmp uuid_000000000007abf2
uuid_000000000007abf0:
uuid_000000000007abf2:
	mov -1320(%RBP),%RSP
	add $-1344, %RSP
	jmp uuid_000000000007abf5
uuid_000000000007abf3:
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007abf5:
	mov -1208(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_000000000007abf8
uuid_000000000007abf6:
uuid_000000000007abf8:
	mov -1096(%RBP),%RSP
	add $-1200, %RSP
	jmp uuid_000000000007abfb
uuid_000000000007abf9:
uuid_000000000007abfb:
	mov -984(%RBP),%RSP
	add $-1088, %RSP
	jmp uuid_000000000007abfe
uuid_000000000007abfc:
uuid_000000000007abfe:
	mov -872(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007ac01
uuid_000000000007abff:
uuid_000000000007ac01:
	mov -760(%RBP),%RSP
	add $-864, %RSP
	jmp uuid_000000000007ac04
uuid_000000000007ac02:
uuid_000000000007ac04:
	mov -648(%RBP),%RSP
	add $-752, %RSP
	jmp uuid_000000000007ac07
uuid_000000000007ac05:
uuid_000000000007ac07:
	mov -536(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007ac0a
uuid_000000000007ac08:
uuid_000000000007ac0a:
	mov -424(%RBP),%RSP
	add $-528, %RSP
	jmp uuid_000000000007ac0d
uuid_000000000007ac0b:
uuid_000000000007ac0d:
	mov -312(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007ac10
uuid_000000000007ac0e:
uuid_000000000007ac10:
	mov -200(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007ac13
uuid_000000000007ac11:
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function with-only-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call with_SB_only_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab89
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab86
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	jmp uuid_000000000007ab88
uuid_000000000007ab86:
	movq -240(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ab88:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007ab8b
uuid_000000000007ab89:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ab83
	movq -216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -40(%rbp)
	jmp uuid_000000000007ab85
uuid_000000000007ab83:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007ab85:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007ab8b:
	mov -248(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007ac13:
	mov -88(%RBP),%RSP
	add $-256, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
normalize_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function without-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
#call function without-size-unless-class : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call without_SB_size_SB_unless_SB_class_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
normalize_CL_ArrowTContextTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac2a
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac27
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac20
	jmp uuid_000000000007ac22
uuid_000000000007ac20:
	push %RBP
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007ac1d
	jmp uuid_000000000007ac1f
uuid_000000000007ac1d:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007ac1a
	jmp uuid_000000000007ac1c
uuid_000000000007ac1a:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ac17
	jmp uuid_000000000007ac19
uuid_000000000007ac17:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ac14
	jmp uuid_000000000007ac16
uuid_000000000007ac14:
	movb $1, -640(%rbp)
uuid_000000000007ac16:
	mov -784(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ac19:
	mov -768(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ac1c:
	mov -736(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ac1f:
	mov -656(%RBP),%RSP
	add $-904, %RSP
uuid_000000000007ac22:
	mov -648(%RBP),%RSP
	add $-904, %RSP
	mov -640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac24
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ac23
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ac26
uuid_000000000007ac24:
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -776(%rbp)
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ac26:
	mov -512(%RBP),%RSP
	add $-904, %RSP
	jmp uuid_000000000007ac29
uuid_000000000007ac27:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ac29:
	mov -384(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007ac2c
uuid_000000000007ac2a:
uuid_000000000007ac2c:
	mov -256(%RBP),%RSP
	add $-376, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $128, %rsp
	ret
denormalize_CL_ArrowTypeType:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function with-tag : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_tag_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function with-fields : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call with_SB_fields_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
enrich_CL_ArrowTypeConsTypeType:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac2d
	jmp uuid_000000000007ac2f
uuid_000000000007ac2d:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ac2f:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
type_SB_of_SB_s_CL_ArrowTypeAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac36
	jmp uuid_000000000007ac38
uuid_000000000007ac36:
	push %RBP
	jmp uuid_000000000007ac33
	jmp uuid_000000000007ac35
uuid_000000000007ac33:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ac30
	jmp uuid_000000000007ac32
uuid_000000000007ac30:
	movb $1, -264(%rbp)
uuid_000000000007ac32:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007ac35:
	mov -280(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007ac38:
	mov -272(%RBP),%RSP
	add $-296, %RSP
	mov -264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac68
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac3f
	jmp uuid_000000000007ac41
uuid_000000000007ac3f:
	push %RBP
	jmp uuid_000000000007ac3c
	jmp uuid_000000000007ac3e
uuid_000000000007ac3c:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ac39
	jmp uuid_000000000007ac3b
uuid_000000000007ac39:
	movb $1, -384(%rbp)
uuid_000000000007ac3b:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ac3e:
	mov -400(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007ac41:
	mov -392(%RBP),%RSP
	add $-416, %RSP
	mov -384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac65
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac5a
	jmp uuid_000000000007ac5c
uuid_000000000007ac5a:
	push %RBP
	mov -488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ac57
	jmp uuid_000000000007ac59
uuid_000000000007ac57:
	push %RBP
	mov -480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac51
	jmp uuid_000000000007ac53
uuid_000000000007ac51:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac48
	jmp uuid_000000000007ac4a
uuid_000000000007ac48:
	push %RBP
	jmp uuid_000000000007ac45
	jmp uuid_000000000007ac47
uuid_000000000007ac45:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $uuid_000000000007972f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac42
	jmp uuid_000000000007ac44
uuid_000000000007ac42:
	movb $1, -776(%rbp)
uuid_000000000007ac44:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007ac47:
	mov -792(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007ac4a:
	mov -784(%RBP),%RSP
	add $-808, %RSP
	mov -776(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac4e
	jmp uuid_000000000007ac50
uuid_000000000007ac4e:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ac4b
	jmp uuid_000000000007ac4d
uuid_000000000007ac4b:
	movb $1, -680(%rbp)
uuid_000000000007ac4d:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007ac50:
	mov -696(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007ac53:
	mov -688(%RBP),%RSP
	add $-888, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac54
	jmp uuid_000000000007ac56
uuid_000000000007ac54:
	movb $1, -504(%rbp)
uuid_000000000007ac56:
	mov -600(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007ac59:
	mov -520(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007ac5c:
	mov -512(%RBP),%RSP
	add $-888, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac62
	push %RBP
	jmp uuid_000000000007ac5f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ac5e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ac61
uuid_000000000007ac5f:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ac5d
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ac61:
	mov -896(%RBP),%RSP
	add $-896, %RSP
	jmp uuid_000000000007ac64
uuid_000000000007ac62:
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ac64:
	mov -424(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007ac67
uuid_000000000007ac65:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007ac67:
	mov -304(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007ac6a
uuid_000000000007ac68:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -320(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007ac6a:
	mov -184(%RBP),%RSP
	add $-320, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac71
	jmp uuid_000000000007ac73
uuid_000000000007ac71:
	push %RBP
	jmp uuid_000000000007ac6e
	jmp uuid_000000000007ac70
uuid_000000000007ac6e:
	push %RBP
	mov -232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ac6b
	jmp uuid_000000000007ac6d
uuid_000000000007ac6b:
	movb $1, -304(%rbp)
uuid_000000000007ac6d:
	mov -328(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ac70:
	mov -320(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ac73:
	mov -312(%RBP),%RSP
	add $-336, %RSP
	mov -304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acd5
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac94
	jmp uuid_000000000007ac96
uuid_000000000007ac94:
	push %RBP
	jmp uuid_000000000007ac91
	jmp uuid_000000000007ac93
uuid_000000000007ac91:
	push %RBP
	mov -352(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ac8e
	jmp uuid_000000000007ac90
uuid_000000000007ac8e:
	movb $1, -424(%rbp)
uuid_000000000007ac90:
	mov -448(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007ac93:
	mov -440(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007ac96:
	mov -432(%RBP),%RSP
	add $-456, %RSP
	mov -424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acd2
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acc8
	jmp uuid_000000000007acca
uuid_000000000007acc8:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007acc5
	jmp uuid_000000000007acc7
uuid_000000000007acc5:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -712(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acbf
	jmp uuid_000000000007acc1
uuid_000000000007acbf:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -808(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acb6
	jmp uuid_000000000007acb8
uuid_000000000007acb6:
	push %RBP
	jmp uuid_000000000007acb3
	jmp uuid_000000000007acb5
uuid_000000000007acb3:
	push %RBP
	mov -744(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq $uuid_000000000007972f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007acb0
	jmp uuid_000000000007acb2
uuid_000000000007acb0:
	movb $1, -816(%rbp)
uuid_000000000007acb2:
	mov -840(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007acb5:
	mov -832(%RBP),%RSP
	add $-848, %RSP
uuid_000000000007acb8:
	mov -824(%RBP),%RSP
	add $-848, %RSP
	mov -816(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acbc
	jmp uuid_000000000007acbe
uuid_000000000007acbc:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007acb9
	jmp uuid_000000000007acbb
uuid_000000000007acb9:
	movb $1, -720(%rbp)
uuid_000000000007acbb:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007acbe:
	mov -736(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007acc1:
	mov -728(%RBP),%RSP
	add $-928, %RSP
	mov -720(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acc2
	jmp uuid_000000000007acc4
uuid_000000000007acc2:
	movb $1, -544(%rbp)
uuid_000000000007acc4:
	mov -640(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007acc7:
	mov -560(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007acca:
	mov -552(%RBP),%RSP
	add $-928, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007accf
	push %RBP
	jmp uuid_000000000007accc
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007accb
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007acce
uuid_000000000007accc:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ac5d
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007acce:
	mov -936(%RBP),%RSP
	add $-936, %RSP
	jmp uuid_000000000007acd1
uuid_000000000007accf:
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	movq -112(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007acd1:
	mov -464(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007acd4
uuid_000000000007acd2:
	pushq $0
	pushq $0
	pushq $3
#call function parse-field-of : Arrow<String,Tuple<String,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	mov %RBX, %RBP
	call parse_SB_field_SB_of_CL_ArrowTupleTypeStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac9d
	jmp uuid_000000000007ac9f
uuid_000000000007ac9d:
	push %RBP
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	jmp uuid_000000000007ac9a
	jmp uuid_000000000007ac9c
uuid_000000000007ac9a:
	push %RBP
	mov -536(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq $uuid_0000000000079496
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac97
	jmp uuid_000000000007ac99
uuid_000000000007ac97:
	movb $1, -576(%rbp)
uuid_000000000007ac99:
	mov -624(%RBP),%RSP
	add $-632, %RSP
uuid_000000000007ac9c:
	mov -592(%RBP),%RSP
	add $-632, %RSP
uuid_000000000007ac9f:
	mov -584(%RBP),%RSP
	add $-632, %RSP
	mov -576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acad
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aca6
	jmp uuid_000000000007aca8
uuid_000000000007aca6:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007aca3
	jmp uuid_000000000007aca5
uuid_000000000007aca3:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007aca0
	jmp uuid_000000000007aca2
uuid_000000000007aca0:
	movb $1, -688(%rbp)
uuid_000000000007aca2:
	mov -736(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007aca5:
	mov -704(%RBP),%RSP
	add $-744, %RSP
uuid_000000000007aca8:
	mov -696(%RBP),%RSP
	add $-744, %RSP
	mov -688(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acaa
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aca9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007acac
uuid_000000000007acaa:
#call function add-alias : Arrow<Cons<Cons<String,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079664
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -744(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079664
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a89
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call add_SB_alias_CL_ArrowNilConsTypeConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -728(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -472(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -464(%rbp)
uuid_000000000007acac:
	mov -640(%RBP),%RSP
	add $-744, %RSP
	jmp uuid_000000000007acaf
uuid_000000000007acad:
	movq -616(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -472(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -464(%rbp)
uuid_000000000007acaf:
	mov -528(%RBP),%RSP
	add $-632, %RSP
	movq -480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -128(%rbp)
uuid_000000000007acd4:
	mov -344(%RBP),%RSP
	add $-632, %RSP
	jmp uuid_000000000007acd7
uuid_000000000007acd5:
	pushq $0
	pushq $0
	pushq $3
#call function parse-field-of : Arrow<String,Tuple<String,Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	mov %RBX, %RBP
	call parse_SB_field_SB_of_CL_ArrowTupleTypeStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac7a
	jmp uuid_000000000007ac7c
uuid_000000000007ac7a:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007ac77
	jmp uuid_000000000007ac79
uuid_000000000007ac77:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $uuid_0000000000079496
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ac74
	jmp uuid_000000000007ac76
uuid_000000000007ac74:
	movb $1, -456(%rbp)
uuid_000000000007ac76:
	mov -504(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007ac79:
	mov -472(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007ac7c:
	mov -464(%RBP),%RSP
	add $-512, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac8b
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac83
	jmp uuid_000000000007ac85
uuid_000000000007ac83:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007ac80
	jmp uuid_000000000007ac82
uuid_000000000007ac80:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ac7d
	jmp uuid_000000000007ac7f
uuid_000000000007ac7d:
	movb $1, -568(%rbp)
uuid_000000000007ac7f:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007ac82:
	mov -584(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007ac85:
	mov -576(%RBP),%RSP
	add $-624, %RSP
	mov -568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ac88
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ac87
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ac8a
uuid_000000000007ac88:
#call function add-alias : Arrow<Cons<Cons<String,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079664
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -624(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079664
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a89
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call add_SB_alias_CL_ArrowNilConsTypeConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ac86
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -608(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -344(%rbp)
uuid_000000000007ac8a:
	mov -520(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007ac8d
uuid_000000000007ac8b:
	movq -496(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -344(%rbp)
uuid_000000000007ac8d:
	mov -408(%RBP),%RSP
	add $-512, %RSP
	movq -360(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -128(%rbp)
uuid_000000000007acd7:
	mov -224(%RBP),%RSP
	add $-512, %RSP
	subq $24, %rsp
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $120, %rsp
	ret
typeof_SB_lhs_CL_ArrowTypeAST:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acf6
	jmp uuid_000000000007acf8
uuid_000000000007acf6:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ace4
	jmp uuid_000000000007ace6
uuid_000000000007ace4:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acdb
	jmp uuid_000000000007acdd
uuid_000000000007acdb:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007acd8
	jmp uuid_000000000007acda
uuid_000000000007acd8:
	movb $1, -456(%rbp)
uuid_000000000007acda:
	mov -472(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007acdd:
	mov -464(%RBP),%RSP
	add $-496, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ace1
	jmp uuid_000000000007ace3
uuid_000000000007ace1:
	push %RBP
	jmp uuid_000000000007acde
	jmp uuid_000000000007ace0
uuid_000000000007acde:
	movb $1, -360(%rbp)
uuid_000000000007ace0:
	mov -504(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007ace3:
	mov -376(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007ace6:
	mov -368(%RBP),%RSP
	add $-504, %RSP
	mov -360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acf3
	jmp uuid_000000000007acf5
uuid_000000000007acf3:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -584(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aced
	jmp uuid_000000000007acef
uuid_000000000007aced:
	push %RBP
	jmp uuid_000000000007acea
	jmp uuid_000000000007acec
uuid_000000000007acea:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ace7
	jmp uuid_000000000007ace9
uuid_000000000007ace7:
	movb $1, -592(%rbp)
uuid_000000000007ace9:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007acec:
	mov -608(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007acef:
	mov -600(%RBP),%RSP
	add $-624, %RSP
	mov -592(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acf0
	jmp uuid_000000000007acf2
uuid_000000000007acf0:
	movb $1, -264(%rbp)
uuid_000000000007acf2:
	mov -512(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007acf5:
	mov -280(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007acf8:
	mov -272(%RBP),%RSP
	add $-624, %RSP
	mov -264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad2e
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad20
	jmp uuid_000000000007ad22
uuid_000000000007ad20:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad17
	jmp uuid_000000000007ad19
uuid_000000000007ad17:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad05
	jmp uuid_000000000007ad07
uuid_000000000007ad05:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007acfc
	jmp uuid_000000000007acfe
uuid_000000000007acfc:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007acf9
	jmp uuid_000000000007acfb
uuid_000000000007acf9:
	movb $1, -1000(%rbp)
uuid_000000000007acfb:
	mov -1016(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007acfe:
	mov -1008(%RBP),%RSP
	add $-1040, %RSP
	mov -1000(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad02
	jmp uuid_000000000007ad04
uuid_000000000007ad02:
	push %RBP
	jmp uuid_000000000007acff
	jmp uuid_000000000007ad01
uuid_000000000007acff:
	movb $1, -904(%rbp)
uuid_000000000007ad01:
	mov -1048(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007ad04:
	mov -920(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007ad07:
	mov -912(%RBP),%RSP
	add $-1048, %RSP
	mov -904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad14
	jmp uuid_000000000007ad16
uuid_000000000007ad14:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad0e
	jmp uuid_000000000007ad10
uuid_000000000007ad0e:
	push %RBP
	jmp uuid_000000000007ad0b
	jmp uuid_000000000007ad0d
uuid_000000000007ad0b:
	push %RBP
	mov -1064(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad08
	jmp uuid_000000000007ad0a
uuid_000000000007ad08:
	movb $1, -1136(%rbp)
uuid_000000000007ad0a:
	mov -1160(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007ad0d:
	mov -1152(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007ad10:
	mov -1144(%RBP),%RSP
	add $-1168, %RSP
	mov -1136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad11
	jmp uuid_000000000007ad13
uuid_000000000007ad11:
	movb $1, -808(%rbp)
uuid_000000000007ad13:
	mov -1056(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007ad16:
	mov -824(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007ad19:
	mov -816(%RBP),%RSP
	add $-1168, %RSP
	mov -808(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad1d
	jmp uuid_000000000007ad1f
uuid_000000000007ad1d:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ad1a
	jmp uuid_000000000007ad1c
uuid_000000000007ad1a:
	movb $1, -712(%rbp)
uuid_000000000007ad1c:
	mov -1176(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007ad1f:
	mov -728(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007ad22:
	mov -720(%RBP),%RSP
	add $-1248, %RSP
	mov -712(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad2b
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov -1328(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad28
	push %RBP
	jmp uuid_000000000007ad25
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ad24
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ad27
uuid_000000000007ad25:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ad23
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007ad27:
	mov -1336(%RBP),%RSP
	add $-1336, %RSP
	jmp uuid_000000000007ad2a
uuid_000000000007ad28:
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ad2a:
	mov -1256(%RBP),%RSP
	add $-1328, %RSP
	jmp uuid_000000000007ad2d
uuid_000000000007ad2b:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007ad2d:
	mov -632(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007ad30
uuid_000000000007ad2e:
	movq -496(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007ad30:
	mov -184(%RBP),%RSP
	add $-624, %RSP
	subq $24, %rsp
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
typeof_SB_tag_CL_ArrowTypeString:
#call function .lookup : Arrow<Cons<Cons<BTreeEq<String,Type>,String>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call _DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -128(%RSP)
	push -128(%RSP)
	push -128(%RSP)
	subq $24, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
cons_SB_head_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad51
	jmp uuid_000000000007ad53
uuid_000000000007ad51:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad48
	jmp uuid_000000000007ad4a
uuid_000000000007ad48:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad3f
	jmp uuid_000000000007ad41
uuid_000000000007ad3f:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad3c
	jmp uuid_000000000007ad3e
uuid_000000000007ad3c:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007ad39
	jmp uuid_000000000007ad3b
uuid_000000000007ad39:
	movb $1, -248(%rbp)
uuid_000000000007ad3b:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ad3e:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ad41:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad45
	jmp uuid_000000000007ad47
uuid_000000000007ad45:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007ad42
	jmp uuid_000000000007ad44
uuid_000000000007ad42:
	movb $1, -184(%rbp)
uuid_000000000007ad44:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007ad47:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007ad4a:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad4e
	jmp uuid_000000000007ad50
uuid_000000000007ad4e:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad4b
	jmp uuid_000000000007ad4d
uuid_000000000007ad4b:
	movb $1, -120(%rbp)
uuid_000000000007ad4d:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007ad50:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007ad53:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad58
	push %RBP
	jmp uuid_000000000007ad55
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ad54
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ad57
uuid_000000000007ad55:
uuid_000000000007ad57:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007ad5a
uuid_000000000007ad58:
	movq -336(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ad5a:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_SB_tail_CL_ArrowTypeType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad73
	jmp uuid_000000000007ad75
uuid_000000000007ad73:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad6a
	jmp uuid_000000000007ad6c
uuid_000000000007ad6a:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad61
	jmp uuid_000000000007ad63
uuid_000000000007ad61:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad5e
	jmp uuid_000000000007ad60
uuid_000000000007ad5e:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007ad5b
	jmp uuid_000000000007ad5d
uuid_000000000007ad5b:
	movb $1, -248(%rbp)
uuid_000000000007ad5d:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ad60:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007ad63:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad67
	jmp uuid_000000000007ad69
uuid_000000000007ad67:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007ad64
	jmp uuid_000000000007ad66
uuid_000000000007ad64:
	movb $1, -184(%rbp)
uuid_000000000007ad66:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007ad69:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007ad6c:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad70
	jmp uuid_000000000007ad72
uuid_000000000007ad70:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ad6d
	jmp uuid_000000000007ad6f
uuid_000000000007ad6d:
	movb $1, -120(%rbp)
uuid_000000000007ad6f:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007ad72:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007ad75:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad7a
	push %RBP
	jmp uuid_000000000007ad77
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ad76
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ad79
uuid_000000000007ad77:
uuid_000000000007ad79:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007ad7c
uuid_000000000007ad7a:
	movq -368(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007ad7c:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	subq $24, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
parameter_SB_number_CL_ArrowU64ConsStringType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad83
	jmp uuid_000000000007ad85
uuid_000000000007ad83:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ad80
	jmp uuid_000000000007ad82
uuid_000000000007ad80:
	push %RBP
	jmp uuid_000000000007ad7d
	jmp uuid_000000000007ad7f
uuid_000000000007ad7d:
	movb $1, -112(%rbp)
uuid_000000000007ad7f:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ad82:
	mov -128(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007ad85:
	mov -120(%RBP),%RSP
	add $-176, %RSP
	mov -112(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad8a
	push %RBP
	jmp uuid_000000000007ad87
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ad86
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ad89
uuid_000000000007ad87:
uuid_000000000007ad89:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007ad8c
uuid_000000000007ad8a:
#call function parameter-number : Arrow<Cons<Cons<List<Type>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -32(%rbp)
	pushq $1
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
uuid_000000000007ad8c:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad9d
	jmp uuid_000000000007ad9f
uuid_000000000007ad9d:
	push %RBP
	mov -152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ad9a
	jmp uuid_000000000007ad9c
uuid_000000000007ad9a:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad94
	jmp uuid_000000000007ad96
uuid_000000000007ad94:
	push %RBP
	mov -248(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ad91
	jmp uuid_000000000007ad93
uuid_000000000007ad91:
	movb $1, -264(%rbp)
uuid_000000000007ad93:
	mov -280(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007ad96:
	mov -272(%RBP),%RSP
	add $-288, %RSP
	mov -264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ad97
	jmp uuid_000000000007ad99
uuid_000000000007ad97:
	movb $1, -168(%rbp)
uuid_000000000007ad99:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007ad9c:
	mov -184(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007ad9f:
	mov -176(%RBP),%RSP
	add $-288, %RSP
	mov -168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ada7
	push %RBP
	jmp uuid_000000000007ada4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ada3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ada6
uuid_000000000007ada4:
uuid_000000000007ada6:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007ada9
uuid_000000000007ada7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ada0
#call function parameter-number : Arrow<Cons<Cons<List<Type>,String>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -48(%rbp)
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsU64ConsStringListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -72(%rbp)
	jmp uuid_000000000007ada2
uuid_000000000007ada0:
	movq -56(%rbp), %r15
	movq %r15, -72(%rbp)
	mov -56(%rbp), %r15
	mov %r15, -72(%rbp)
uuid_000000000007ada2:
	mov -296(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007ada9:
	mov -120(%RBP),%RSP
	add $-296, %RSP
	mov -72(%rbp), %RAX
	mov %rbp, %rsp
	sub $64, %rsp
	ret
apply_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq $1
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	subq $24, %rsp
	pushq 24(%rsp)
	pushq 40(%rsp)
	pushq 56(%rsp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
apply_CL_ArrowTypeConsU64ConsASTConsU64ConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $3
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007adaa
	jmp uuid_000000000007adac
uuid_000000000007adaa:
#call function reduce-plural : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call reduce_SB_plural_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007adac:
	mov -224(%RBP),%RSP
	add $-224, %RSP
	push %RBP
#call function .length : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	movq -144(%RBP), %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adb0
	jmp uuid_000000000007adb2
uuid_000000000007adb0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adad
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adae
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adaf
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007adb2:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function .length : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adc6
	jmp uuid_000000000007adc8
uuid_000000000007adc6:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adb3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adb4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
uuid_000000000007adc3:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007adc4
	jmp uuid_000000000007adc5
uuid_000000000007adc4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adb5
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adbc
	jmp uuid_000000000007adbe
uuid_000000000007adbc:
	push %RBP
	mov -360(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007adb9
	jmp uuid_000000000007adbb
uuid_000000000007adb9:
	push %RBP
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	jmp uuid_000000000007adb6
	jmp uuid_000000000007adb8
uuid_000000000007adb6:
	movb $1, -376(%rbp)
uuid_000000000007adb8:
	mov -440(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007adbb:
	mov -392(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007adbe:
	mov -384(%RBP),%RSP
	add $-464, %RSP
	mov -376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adc0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007adbf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007adc2
uuid_000000000007adc0:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -432(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -248(%rbp)
uuid_000000000007adc2:
	mov -328(%RBP),%RSP
	add $-464, %RSP
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007adc3
uuid_000000000007adc5:
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007adc8:
	mov -240(%RBP),%RSP
	add $-280, %RSP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
uuid_000000000007ae02:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ae03
	jmp uuid_000000000007ae04
uuid_000000000007ae03:
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adcf
	jmp uuid_000000000007add1
uuid_000000000007adcf:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007adcc
	jmp uuid_000000000007adce
uuid_000000000007adcc:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007adc9
	jmp uuid_000000000007adcb
uuid_000000000007adc9:
	movb $1, -416(%rbp)
uuid_000000000007adcb:
	mov -480(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007adce:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007add1:
	mov -424(%RBP),%RSP
	add $-504, %RSP
	mov -416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adff
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007adfe
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ae01
uuid_000000000007adff:
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	push %RBP
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adea
	jmp uuid_000000000007adec
uuid_000000000007adea:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ade1
	jmp uuid_000000000007ade3
uuid_000000000007ade1:
	push %RBP
	mov -616(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007add8
	jmp uuid_000000000007adda
uuid_000000000007add8:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007add5
	jmp uuid_000000000007add7
uuid_000000000007add5:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007add2
	jmp uuid_000000000007add4
uuid_000000000007add2:
	movb $1, -696(%rbp)
uuid_000000000007add4:
	mov -760(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007add7:
	mov -712(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007adda:
	mov -704(%RBP),%RSP
	add $-784, %RSP
	mov -696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adde
	jmp uuid_000000000007ade0
uuid_000000000007adde:
	push %RBP
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_000000000007addb
	jmp uuid_000000000007addd
uuid_000000000007addb:
	movb $1, -632(%rbp)
uuid_000000000007addd:
	mov -792(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007ade0:
	mov -648(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007ade3:
	mov -640(%RBP),%RSP
	add $-816, %RSP
	mov -632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ade7
	jmp uuid_000000000007ade9
uuid_000000000007ade7:
	push %RBP
	mov -544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -832(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ade4
	jmp uuid_000000000007ade6
uuid_000000000007ade4:
	movb $1, -568(%rbp)
uuid_000000000007ade6:
	mov -824(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007ade9:
	mov -584(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007adec:
	mov -576(%RBP),%RSP
	add $-832, %RSP
	mov -568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adfb
	push %RBP
	jmp uuid_000000000007adf8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007adf7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007adfa
uuid_000000000007adf8:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adf6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007adfa:
	mov -840(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007adfd
uuid_000000000007adfb:
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -64(%RBP), %RAX
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007adf3
	jmp uuid_000000000007adf5
uuid_000000000007adf3:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007adf0
	jmp uuid_000000000007adf2
uuid_000000000007adf0:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007aded
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adee
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007adef
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<SourceLocation,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007adf2:
	mov -992(%RBP),%RSP
	add $-992, %RSP
#call function try-specialize : Arrow<Cons<Cons<Cons<String,Type>,TContext>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call try_SB_specialize_CL_ArrowNilConsTypeConsTContextConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007adf5:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007adfd:
	mov -536(%RBP),%RSP
	add $-992, %RSP
	movq -472(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -288(%rbp)
uuid_000000000007ae01:
	mov -368(%RBP),%RSP
	add $-992, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $120, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ae02
uuid_000000000007ae04:
	subq $24, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
apply_CL_ArrowASTConsASTContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae82
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae7f
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae0b
	jmp uuid_000000000007ae0d
uuid_000000000007ae0b:
	push %RBP
	jmp uuid_000000000007ae08
	jmp uuid_000000000007ae0a
uuid_000000000007ae08:
	push %RBP
	jmp uuid_000000000007ae05
	jmp uuid_000000000007ae07
uuid_000000000007ae05:
	movb $1, -568(%rbp)
uuid_000000000007ae07:
	mov -592(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007ae0a:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007ae0d:
	mov -576(%RBP),%RSP
	add $-592, %RSP
	mov -568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae7c
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae11
	jmp uuid_000000000007ae13
uuid_000000000007ae11:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007ae0e
	jmp uuid_000000000007ae10
uuid_000000000007ae0e:
	movb $1, -680(%rbp)
uuid_000000000007ae10:
	mov -696(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007ae13:
	mov -688(%RBP),%RSP
	add $-720, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae79
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae1a
	jmp uuid_000000000007ae1c
uuid_000000000007ae1a:
	push %RBP
	jmp uuid_000000000007ae17
	jmp uuid_000000000007ae19
uuid_000000000007ae17:
	push %RBP
	mov -736(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ae14
	jmp uuid_000000000007ae16
uuid_000000000007ae14:
	movb $1, -808(%rbp)
uuid_000000000007ae16:
	mov -832(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007ae19:
	mov -824(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007ae1c:
	mov -816(%RBP),%RSP
	add $-840, %RSP
	mov -808(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae76
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae3c
	jmp uuid_000000000007ae3e
uuid_000000000007ae3c:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae39
	jmp uuid_000000000007ae3b
uuid_000000000007ae39:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae36
	jmp uuid_000000000007ae38
uuid_000000000007ae36:
	movb $1, -928(%rbp)
uuid_000000000007ae38:
	mov -1024(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007ae3b:
	mov -944(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007ae3e:
	mov -936(%RBP),%RSP
	add $-1096, %RSP
	mov -928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae73
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1176(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae48
	jmp uuid_000000000007ae4a
uuid_000000000007ae48:
	push %RBP
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	jmp uuid_000000000007ae45
	jmp uuid_000000000007ae47
uuid_000000000007ae45:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae42
	jmp uuid_000000000007ae44
uuid_000000000007ae42:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae3f
	jmp uuid_000000000007ae41
uuid_000000000007ae3f:
	movb $1, -1184(%rbp)
uuid_000000000007ae41:
	mov -1312(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007ae44:
	mov -1232(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007ae47:
	mov -1200(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007ae4a:
	mov -1192(%RBP),%RSP
	add $-1384, %RSP
	mov -1184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae70
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae51
	jmp uuid_000000000007ae53
uuid_000000000007ae51:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae4e
	jmp uuid_000000000007ae50
uuid_000000000007ae4e:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae4b
	jmp uuid_000000000007ae4d
uuid_000000000007ae4b:
	movb $1, -1472(%rbp)
uuid_000000000007ae4d:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007ae50:
	mov -1488(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007ae53:
	mov -1480(%RBP),%RSP
	add $-1640, %RSP
	mov -1472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae6d
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae5a
	jmp uuid_000000000007ae5c
uuid_000000000007ae5a:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae57
	jmp uuid_000000000007ae59
uuid_000000000007ae57:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae54
	jmp uuid_000000000007ae56
uuid_000000000007ae54:
	movb $1, -1728(%rbp)
uuid_000000000007ae56:
	mov -1824(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007ae59:
	mov -1744(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007ae5c:
	mov -1736(%RBP),%RSP
	add $-1896, %RSP
	mov -1728(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae6a
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1976(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae63
	jmp uuid_000000000007ae65
uuid_000000000007ae63:
	push %RBP
	mov -1968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae60
	jmp uuid_000000000007ae62
uuid_000000000007ae60:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007ae5d
	jmp uuid_000000000007ae5f
uuid_000000000007ae5d:
	movb $1, -1984(%rbp)
uuid_000000000007ae5f:
	mov -2080(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007ae62:
	mov -2000(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007ae65:
	mov -1992(%RBP),%RSP
	add $-2136, %RSP
	mov -1984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae67
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ae66
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ae69
uuid_000000000007ae67:
#call function substitute : Arrow<Cons<Context,Token>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTokenConsTokenContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
	push -184(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007ae69:
	mov -1904(%RBP),%RSP
	add $-2136, %RSP
	jmp uuid_000000000007ae6c
uuid_000000000007ae6a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007ae6c:
	mov -1648(%RBP),%RSP
	add $-1896, %RSP
	jmp uuid_000000000007ae6f
uuid_000000000007ae6d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007ae6f:
	mov -1392(%RBP),%RSP
	add $-1640, %RSP
	jmp uuid_000000000007ae72
uuid_000000000007ae70:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $5
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007ae72:
	mov -1104(%RBP),%RSP
	add $-1384, %RSP
	jmp uuid_000000000007ae75
uuid_000000000007ae73:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007ae75:
	mov -848(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007ae78
uuid_000000000007ae76:
uuid_000000000007ae33:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ae34
	jmp uuid_000000000007ae35
uuid_000000000007ae34:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq $0
	push %RBP
	mov -1040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae26
	jmp uuid_000000000007ae28
uuid_000000000007ae26:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	jmp uuid_000000000007ae23
	jmp uuid_000000000007ae25
uuid_000000000007ae23:
	push %RBP
	mov -960(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ae20
	jmp uuid_000000000007ae22
uuid_000000000007ae20:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae1d
	jmp uuid_000000000007ae1f
uuid_000000000007ae1d:
	movb $1, -1048(%rbp)
uuid_000000000007ae1f:
	mov -1160(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007ae22:
	mov -1144(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007ae25:
	mov -1064(%RBP),%RSP
	add $-1256, %RSP
uuid_000000000007ae28:
	mov -1056(%RBP),%RSP
	add $-1256, %RSP
	mov -1048(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae30
	push %RBP
	jmp uuid_000000000007ae2d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ae2c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ae2f
uuid_000000000007ae2d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ae2f:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
	jmp uuid_000000000007ae32
uuid_000000000007ae30:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -840(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ae29
	movq -1256(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007ae2b
uuid_000000000007ae29:
	movq -1136(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -184(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ae2b:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007ae32:
	mov -944(%RBP),%RSP
	add $-1264, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007ae33
uuid_000000000007ae35:
uuid_000000000007ae78:
	mov -728(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007ae7b
uuid_000000000007ae79:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	pushq $4
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007ae7b:
	mov -600(%RBP),%RSP
	add $-720, %RSP
	jmp uuid_000000000007ae7e
uuid_000000000007ae7c:
uuid_000000000007ae7e:
	mov -488(%RBP),%RSP
	add $-592, %RSP
	jmp uuid_000000000007ae81
uuid_000000000007ae7f:
uuid_000000000007ae81:
	mov -408(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_000000000007ae84
uuid_000000000007ae82:
uuid_000000000007ae84:
	mov -328(%RBP),%RSP
	add $-400, %RSP
	subq $72, %rsp
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
apply_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae8d
	jmp uuid_000000000007ae8f
uuid_000000000007ae8d:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae8a
	jmp uuid_000000000007ae8c
uuid_000000000007ae8a:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ae87
	jmp uuid_000000000007ae89
uuid_000000000007ae87:
	movb $1, -240(%rbp)
uuid_000000000007ae89:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007ae8c:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007ae8f:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aeb5
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aea8
	jmp uuid_000000000007aeaa
uuid_000000000007aea8:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae9f
	jmp uuid_000000000007aea1
uuid_000000000007ae9f:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae96
	jmp uuid_000000000007ae98
uuid_000000000007ae96:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae93
	jmp uuid_000000000007ae95
uuid_000000000007ae93:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007ae90
	jmp uuid_000000000007ae92
uuid_000000000007ae90:
	movb $1, -480(%rbp)
uuid_000000000007ae92:
	mov -544(%RBP),%RSP
	add $-568, %RSP
uuid_000000000007ae95:
	mov -496(%RBP),%RSP
	add $-568, %RSP
uuid_000000000007ae98:
	mov -488(%RBP),%RSP
	add $-568, %RSP
	mov -480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ae9c
	jmp uuid_000000000007ae9e
uuid_000000000007ae9c:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007ae99
	jmp uuid_000000000007ae9b
uuid_000000000007ae99:
	movb $1, -416(%rbp)
uuid_000000000007ae9b:
	mov -576(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007ae9e:
	mov -432(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007aea1:
	mov -424(%RBP),%RSP
	add $-600, %RSP
	mov -416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aea5
	jmp uuid_000000000007aea7
uuid_000000000007aea5:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aea2
	jmp uuid_000000000007aea4
uuid_000000000007aea2:
	movb $1, -352(%rbp)
uuid_000000000007aea4:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007aea7:
	mov -368(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007aeaa:
	mov -360(%RBP),%RSP
	add $-616, %RSP
	mov -352(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aeb2
	push %RBP
	jmp uuid_000000000007aeaf
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aeae
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aeb1
uuid_000000000007aeaf:
uuid_000000000007aeb1:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007aeb4
uuid_000000000007aeb2:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aeab
	jmp uuid_000000000007aead
uuid_000000000007aeab:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007aead:
	mov -624(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007aeb4:
	mov -320(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007aeb7
uuid_000000000007aeb5:
#call function + : Arrow<Cons<List<Type>,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
#call function apply-plural : Arrow<Cons<Cons<Cons<String,Type>,Type>,AST>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_SB_plural_CL_ArrowListTypeConsASTConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowListTypeConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	push -112(%RSP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007aeb7:
	mov -208(%RBP),%RSP
	add $-312, %RSP
	subq $40, %rsp
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
reduce_SB_plural_CL_ArrowListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
uuid_000000000007aecc:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aecd
	jmp uuid_000000000007aece
uuid_000000000007aecd:
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aec2
	jmp uuid_000000000007aec4
uuid_000000000007aec2:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aebf
	jmp uuid_000000000007aec1
uuid_000000000007aebf:
	push %RBP
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	jmp uuid_000000000007aebc
	jmp uuid_000000000007aebe
uuid_000000000007aebc:
	movb $1, -224(%rbp)
uuid_000000000007aebe:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007aec1:
	mov -240(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007aec4:
	mov -232(%RBP),%RSP
	add $-312, %RSP
	mov -224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aec9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aec8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aecb
uuid_000000000007aec9:
	push %RBP
#call function is-constructor : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_constructor_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aec5
	jmp uuid_000000000007aec7
uuid_000000000007aec5:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007aec7:
	mov -320(%RBP),%RSP
	add $-320, %RSP
	movq -280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -248(%rbp), %r15
	movq %r15, -96(%rbp)
uuid_000000000007aecb:
	mov -176(%RBP),%RSP
	add $-320, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007aecc
uuid_000000000007aece:
	push %RBP
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aecf
	jmp uuid_000000000007aed1
uuid_000000000007aecf:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007aed1:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007aef8:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aef9
	jmp uuid_000000000007aefa
uuid_000000000007aef9:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aed8
	jmp uuid_000000000007aeda
uuid_000000000007aed8:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aed5
	jmp uuid_000000000007aed7
uuid_000000000007aed5:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007aed2
	jmp uuid_000000000007aed4
uuid_000000000007aed2:
	movb $1, -232(%rbp)
uuid_000000000007aed4:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007aed7:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007aeda:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aef5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aef4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aef7
uuid_000000000007aef5:
	movq -288(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
uuid_000000000007aeee:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aeef
	jmp uuid_000000000007aef0
uuid_000000000007aeef:
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aee1
	jmp uuid_000000000007aee3
uuid_000000000007aee1:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aede
	jmp uuid_000000000007aee0
uuid_000000000007aede:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007aedb
	jmp uuid_000000000007aedd
uuid_000000000007aedb:
	movb $1, -456(%rbp)
uuid_000000000007aedd:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007aee0:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007aee3:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aeeb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aeea
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aeed
uuid_000000000007aeeb:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aee7
	jmp uuid_000000000007aee9
uuid_000000000007aee7:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aee4
	jmp uuid_000000000007aee6
uuid_000000000007aee4:
	pushq $0
	pushq $0
	pushq $3
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007aee6:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007aee9:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	movq -512(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -328(%rbp)
uuid_000000000007aeed:
	mov -408(%RBP),%RSP
	add $-560, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007aeee
uuid_000000000007aef0:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007aef1
	jmp uuid_000000000007aef3
uuid_000000000007aef1:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007aef3:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007aef7:
	mov -184(%RBP),%RSP
	add $-368, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007aef8
uuid_000000000007aefa:
	movq -88(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -72(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007af21:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af22
	jmp uuid_000000000007af23
uuid_000000000007af22:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af01
	jmp uuid_000000000007af03
uuid_000000000007af01:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aefe
	jmp uuid_000000000007af00
uuid_000000000007aefe:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007aefb
	jmp uuid_000000000007aefd
uuid_000000000007aefb:
	movb $1, -232(%rbp)
uuid_000000000007aefd:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007af00:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007af03:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af1e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007af1d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007af20
uuid_000000000007af1e:
	movq -288(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -8(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
uuid_000000000007af17:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af18
	jmp uuid_000000000007af19
uuid_000000000007af18:
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	push %RBP
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af0a
	jmp uuid_000000000007af0c
uuid_000000000007af0a:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af07
	jmp uuid_000000000007af09
uuid_000000000007af07:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007af04
	jmp uuid_000000000007af06
uuid_000000000007af04:
	movb $1, -456(%rbp)
uuid_000000000007af06:
	mov -520(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007af09:
	mov -472(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007af0c:
	mov -464(%RBP),%RSP
	add $-544, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af14
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007af13
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007af16
uuid_000000000007af14:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af10
	jmp uuid_000000000007af12
uuid_000000000007af10:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af0d
	jmp uuid_000000000007af0f
uuid_000000000007af0d:
	pushq $0
	pushq $0
	pushq $3
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007af0f:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007af12:
	mov -552(%RBP),%RSP
	add $-560, %RSP
	movq -512(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -328(%rbp)
uuid_000000000007af16:
	mov -408(%RBP),%RSP
	add $-560, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007af17
uuid_000000000007af19:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af1a
	jmp uuid_000000000007af1c
uuid_000000000007af1a:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007af1c:
	mov -368(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007af20:
	mov -184(%RBP),%RSP
	add $-368, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007af21
uuid_000000000007af23:
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
apply_SB_or_SB_cons_SB_and_SB_specialize_CL_ArrowTypeConsASTConsTypeConsTypeString:
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af27
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af24
	jmp uuid_000000000007af26
uuid_000000000007af24:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007af26:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007af29
uuid_000000000007af27:
#call function apply : Arrow<Cons<Cons<Cons<Cons<String,Type>,Type>,U64>,AST>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $1
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowTypeConsASTConsU64ConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
uuid_000000000007af29:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
try_SB_specialize_CL_ArrowNilConsTypeConsTContextConsTypeString:
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007af6d:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af6e
	jmp uuid_000000000007af6f
uuid_000000000007af6e:
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af6a
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $0
	push %RBP
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af36
	jmp uuid_000000000007af38
uuid_000000000007af36:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007af33
	jmp uuid_000000000007af35
uuid_000000000007af33:
	push %RBP
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	jmp uuid_000000000007af30
	jmp uuid_000000000007af32
uuid_000000000007af30:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007af2d
	jmp uuid_000000000007af2f
uuid_000000000007af2d:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af2a
	jmp uuid_000000000007af2c
uuid_000000000007af2a:
	movb $1, -688(%rbp)
uuid_000000000007af2c:
	mov -832(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007af2f:
	mov -816(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007af32:
	mov -784(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007af35:
	mov -704(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007af38:
	mov -696(%RBP),%RSP
	add $-952, %RSP
	mov -688(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af67
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007af66
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007af69
uuid_000000000007af67:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -824(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af63
	jmp uuid_000000000007af65
uuid_000000000007af63:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq $uuid_000000000007af39
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af3a
#call function normalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	jmp uuid_000000000007af3c
uuid_000000000007af3a:
uuid_000000000007af3c:
	mov -992(%RBP),%RSP
	add $-992, %RSP
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	push %RBP
#call function is-special : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call is_SB_special_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af60
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af5d
	jmp uuid_000000000007af5f
uuid_000000000007af5d:
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	push %RBP
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af4f
	jmp uuid_000000000007af51
uuid_000000000007af4f:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af46
	jmp uuid_000000000007af48
uuid_000000000007af46:
	push %RBP
	jmp uuid_000000000007af43
	jmp uuid_000000000007af45
uuid_000000000007af43:
	push %RBP
	jmp uuid_000000000007af40
	jmp uuid_000000000007af42
uuid_000000000007af40:
	push %RBP
	jmp uuid_000000000007af3d
	jmp uuid_000000000007af3f
uuid_000000000007af3d:
	movb $1, -1264(%rbp)
uuid_000000000007af3f:
	mov -1296(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007af42:
	mov -1288(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007af45:
	mov -1280(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007af48:
	mov -1272(%RBP),%RSP
	add $-1296, %RSP
	mov -1264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af4c
	jmp uuid_000000000007af4e
uuid_000000000007af4c:
	push %RBP
	jmp uuid_000000000007af49
	jmp uuid_000000000007af4b
uuid_000000000007af49:
	movb $1, -1168(%rbp)
uuid_000000000007af4b:
	mov -1304(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007af4e:
	mov -1184(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007af51:
	mov -1176(%RBP),%RSP
	add $-1304, %RSP
	mov -1168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af5a
	push %RBP
	jmp uuid_000000000007af57
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007af56
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007af59
uuid_000000000007af57:
uuid_000000000007af59:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
	jmp uuid_000000000007af5c
uuid_000000000007af5a:
#call function cons : Arrow<Cons<StackToSpecialize,List<StackToSpecialize>>,List<StackToSpecialize>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListStackToSpecializeConsListStackToSpecializeStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007af5c:
	mov -1088(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007af5f:
	mov -1008(%RBP),%RSP
	add $-1304, %RSP
	jmp uuid_000000000007af62
uuid_000000000007af60:
uuid_000000000007af62:
	mov -1000(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007af65:
	mov -960(%RBP),%RSP
	add $-1000, %RSP
	movq -952(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -192(%rbp)
uuid_000000000007af69:
	mov -560(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007af6c
uuid_000000000007af6a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007af6c:
	mov -432(%RBP),%RSP
	add $-552, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007af6d
uuid_000000000007af6f:
	mov %rbp, %rsp
	sub $184, %rsp
	ret
unify_SB_hint_CL_ArrowTypeConsTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af88
	jmp uuid_000000000007af8a
uuid_000000000007af88:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af76
	jmp uuid_000000000007af78
uuid_000000000007af76:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af73
	jmp uuid_000000000007af75
uuid_000000000007af73:
	push %RBP
	mov -208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007af70
	jmp uuid_000000000007af72
uuid_000000000007af70:
	movb $1, -232(%rbp)
uuid_000000000007af72:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007af75:
	mov -248(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007af78:
	mov -240(%RBP),%RSP
	add $-304, %RSP
	mov -232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af85
	jmp uuid_000000000007af87
uuid_000000000007af85:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af7f
	jmp uuid_000000000007af81
uuid_000000000007af7f:
	push %RBP
	mov -328(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af7c
	jmp uuid_000000000007af7e
uuid_000000000007af7c:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007af79
	jmp uuid_000000000007af7b
uuid_000000000007af79:
	movb $1, -344(%rbp)
uuid_000000000007af7b:
	mov -408(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007af7e:
	mov -360(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007af81:
	mov -352(%RBP),%RSP
	add $-416, %RSP
	mov -344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af82
	jmp uuid_000000000007af84
uuid_000000000007af82:
	movb $1, -184(%rbp)
uuid_000000000007af84:
	mov -312(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007af87:
	mov -200(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007af8a:
	mov -192(%RBP),%RSP
	add $-416, %RSP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afa7
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af9d
	jmp uuid_000000000007af9f
uuid_000000000007af9d:
	push %RBP
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af94
	jmp uuid_000000000007af96
uuid_000000000007af94:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af91
	jmp uuid_000000000007af93
uuid_000000000007af91:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007af8e
	jmp uuid_000000000007af90
uuid_000000000007af8e:
	movb $1, -536(%rbp)
uuid_000000000007af90:
	mov -584(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007af93:
	mov -552(%RBP),%RSP
	add $-608, %RSP
uuid_000000000007af96:
	mov -544(%RBP),%RSP
	add $-608, %RSP
	mov -536(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007af9a
	jmp uuid_000000000007af9c
uuid_000000000007af9a:
	push %RBP
	jmp uuid_000000000007af97
	jmp uuid_000000000007af99
uuid_000000000007af97:
	movb $1, -488(%rbp)
uuid_000000000007af99:
	mov -616(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007af9c:
	mov -504(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007af9f:
	mov -496(%RBP),%RSP
	add $-616, %RSP
	mov -488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afa4
	push %RBP
	jmp uuid_000000000007afa1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007afa0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007afa3
uuid_000000000007afa1:
uuid_000000000007afa3:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007afa6
uuid_000000000007afa4:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007afa6:
	mov -424(%RBP),%RSP
	add $-616, %RSP
	jmp uuid_000000000007afa9
uuid_000000000007afa7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -416(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007af8b
	pushq -304(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	jmp uuid_000000000007af8d
uuid_000000000007af8b:
	movq -24(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007af8d:
	mov -424(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007afa9:
	mov -120(%RBP),%RSP
	add $-424, %RSP
	subq $24, %rsp
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $56, %rsp
	ret
unify_SB_hint_CL_ArrowListTypeConsListTypeType:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afbc
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afb2
	jmp uuid_000000000007afb4
uuid_000000000007afb2:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007afaf
	jmp uuid_000000000007afb1
uuid_000000000007afaf:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	jmp uuid_000000000007afac
	jmp uuid_000000000007afae
uuid_000000000007afac:
	movb $1, -216(%rbp)
uuid_000000000007afae:
	mov -280(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007afb1:
	mov -232(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007afb4:
	mov -224(%RBP),%RSP
	add $-304, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afb9
	push %RBP
	jmp uuid_000000000007afb6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007afb5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007afb8
uuid_000000000007afb6:
uuid_000000000007afb8:
	mov -312(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007afbb
uuid_000000000007afb9:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function unify-hint : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function unify-hint : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call unify_SB_hint_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007afbb:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007afbe
uuid_000000000007afbc:
uuid_000000000007afbe:
	mov -120(%RBP),%RSP
	add $-160, %RSP
	subq $40, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType:
#call function mark-class-exists : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_class_SB_exists_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afd8
	jmp uuid_000000000007afda
uuid_000000000007afd8:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007afd5
	jmp uuid_000000000007afd7
uuid_000000000007afd5:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afcf
	jmp uuid_000000000007afd1
uuid_000000000007afcf:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afc6
	jmp uuid_000000000007afc8
uuid_000000000007afc6:
	push %RBP
	jmp uuid_000000000007afc3
	jmp uuid_000000000007afc5
uuid_000000000007afc3:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $uuid_000000000007afbf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007afc0
	jmp uuid_000000000007afc2
uuid_000000000007afc0:
	movb $1, -552(%rbp)
uuid_000000000007afc2:
	mov -576(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007afc5:
	mov -568(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007afc8:
	mov -560(%RBP),%RSP
	add $-584, %RSP
	mov -552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afcc
	jmp uuid_000000000007afce
uuid_000000000007afcc:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007afc9
	jmp uuid_000000000007afcb
uuid_000000000007afc9:
	movb $1, -456(%rbp)
uuid_000000000007afcb:
	mov -592(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007afce:
	mov -472(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007afd1:
	mov -464(%RBP),%RSP
	add $-664, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afd2
	jmp uuid_000000000007afd4
uuid_000000000007afd2:
	movb $1, -280(%rbp)
uuid_000000000007afd4:
	mov -376(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007afd7:
	mov -296(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007afda:
	mov -288(%RBP),%RSP
	add $-664, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b017
	push %RBP
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	jmp uuid_000000000007b014
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b013
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b016
uuid_000000000007b014:
#call function infer-type-constructor : Arrow<Cons<Type,AST>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -120(%rbp)
	push %RBP
	movq -104(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b010
	jmp uuid_000000000007b012
uuid_000000000007b010:
	pushq $uuid_0000000000079496
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	push %RBP
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $0
	push %RBP
	mov -912(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afe1
	jmp uuid_000000000007afe3
uuid_000000000007afe1:
	push %RBP
	jmp uuid_000000000007afde
	jmp uuid_000000000007afe0
uuid_000000000007afde:
	push %RBP
	mov -848(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007afdb
	jmp uuid_000000000007afdd
uuid_000000000007afdb:
	movb $1, -920(%rbp)
uuid_000000000007afdd:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007afe0:
	mov -936(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007afe3:
	mov -928(%RBP),%RSP
	add $-952, %RSP
	mov -920(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007affd
	push %RBP
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $0
	push %RBP
	mov -1032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007aff3
	jmp uuid_000000000007aff5
uuid_000000000007aff3:
	push %RBP
	mov -1024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007aff0
	jmp uuid_000000000007aff2
uuid_000000000007aff0:
	push %RBP
	mov -1016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afea
	jmp uuid_000000000007afec
uuid_000000000007afea:
	push %RBP
	jmp uuid_000000000007afe7
	jmp uuid_000000000007afe9
uuid_000000000007afe7:
	push %RBP
	mov -1144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007afe4
	jmp uuid_000000000007afe6
uuid_000000000007afe4:
	movb $1, -1216(%rbp)
uuid_000000000007afe6:
	mov -1240(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007afe9:
	mov -1232(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007afec:
	mov -1224(%RBP),%RSP
	add $-1248, %RSP
	mov -1216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007afed
	jmp uuid_000000000007afef
uuid_000000000007afed:
	movb $1, -1040(%rbp)
uuid_000000000007afef:
	mov -1136(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007aff2:
	mov -1056(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007aff5:
	mov -1048(%RBP),%RSP
	add $-1248, %RSP
	mov -1040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007affa
	push %RBP
	jmp uuid_000000000007aff7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007aff6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007aff9
uuid_000000000007aff7:
uuid_000000000007aff9:
	mov -1256(%RBP),%RSP
	add $-1256, %RSP
	jmp uuid_000000000007affc
uuid_000000000007affa:
	movq -1248(%rbp), %r15
	movq %r15, -760(%rbp)
	mov -1248(%rbp), %r15
	mov %r15, -760(%rbp)
uuid_000000000007affc:
	mov -960(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007afff
uuid_000000000007affd:
	movq -952(%rbp), %r15
	movq %r15, -760(%rbp)
	mov -952(%rbp), %r15
	mov %r15, -760(%rbp)
uuid_000000000007afff:
	mov -840(%RBP),%RSP
	add $-952, %RSP
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -760(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007b00d
	jmp uuid_000000000007b00f
uuid_000000000007b00d:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b006
	jmp uuid_000000000007b008
uuid_000000000007b006:
	push %RBP
	jmp uuid_000000000007b003
	jmp uuid_000000000007b005
uuid_000000000007b003:
	push %RBP
	mov -1000(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b000
	jmp uuid_000000000007b002
uuid_000000000007b000:
	movb $1, -1024(%rbp)
uuid_000000000007b002:
	mov -1048(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007b005:
	mov -1040(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007b008:
	mov -1032(%RBP),%RSP
	add $-1056, %RSP
	mov -1024(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b00a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b009
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b00c
uuid_000000000007b00a:
#call function has-only-child : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1056(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call has_SB_only_SB_child_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b00c:
	mov -992(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007b00f:
	mov -960(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007b012:
	mov -752(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007b016:
	mov -672(%RBP),%RSP
	add $-1056, %RSP
	jmp uuid_000000000007b019
uuid_000000000007b017:
#call function infer-type-definition : Arrow<Cons<Cons<Type,AST>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	movq -104(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function infer-type-constructor : Arrow<Cons<Type,AST>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function max : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call max_CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -120(%rbp)
uuid_000000000007b019:
	mov -200(%RBP),%RSP
	add $-680, %RSP
	mov -120(%rbp), %RAX
	mov %rbp, %rsp
	sub $112, %rsp
	ret
arity_CL_ArrowU64ListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b029
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b022
	jmp uuid_000000000007b024
uuid_000000000007b022:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b01f
	jmp uuid_000000000007b021
uuid_000000000007b01f:
	push %RBP
	jmp uuid_000000000007b01c
	jmp uuid_000000000007b01e
uuid_000000000007b01c:
	movb $1, -200(%rbp)
uuid_000000000007b01e:
	mov -264(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b021:
	mov -216(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007b024:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	mov -200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b026
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b025
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b028
uuid_000000000007b026:
#call function arity : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007b028:
	mov -152(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007b02b
uuid_000000000007b029:
uuid_000000000007b02b:
	mov -104(%RBP),%RSP
	add $-144, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
arity_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b032
	jmp uuid_000000000007b034
uuid_000000000007b032:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b02f
	jmp uuid_000000000007b031
uuid_000000000007b02f:
	push %RBP
	jmp uuid_000000000007b02c
	jmp uuid_000000000007b02e
uuid_000000000007b02c:
	movb $1, -104(%rbp)
uuid_000000000007b02e:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b031:
	mov -120(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007b034:
	mov -112(%RBP),%RSP
	add $-168, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b039
	push %RBP
	jmp uuid_000000000007b036
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b035
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b038
uuid_000000000007b036:
uuid_000000000007b038:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007b03b
uuid_000000000007b039:
#call function arity : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -40(%rbp)
uuid_000000000007b03b:
	mov -72(%RBP),%RSP
	add $-168, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_SB_arity_CL_ArrowU64Type:
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b054
	jmp uuid_000000000007b056
uuid_000000000007b054:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b04b
	jmp uuid_000000000007b04d
uuid_000000000007b04b:
	push %RBP
	mov -152(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -224(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b042
	jmp uuid_000000000007b044
uuid_000000000007b042:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b03f
	jmp uuid_000000000007b041
uuid_000000000007b03f:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	jmp uuid_000000000007b03c
	jmp uuid_000000000007b03e
uuid_000000000007b03c:
	movb $1, -232(%rbp)
uuid_000000000007b03e:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007b041:
	mov -248(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007b044:
	mov -240(%RBP),%RSP
	add $-320, %RSP
	mov -232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b048
	jmp uuid_000000000007b04a
uuid_000000000007b048:
	push %RBP
	pushq -128(%RBP)
	pushq -136(%RBP)
	pushq -144(%RBP)
	jmp uuid_000000000007b045
	jmp uuid_000000000007b047
uuid_000000000007b045:
	movb $1, -168(%rbp)
uuid_000000000007b047:
	mov -328(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007b04a:
	mov -184(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007b04d:
	mov -176(%RBP),%RSP
	add $-352, %RSP
	mov -168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b051
	jmp uuid_000000000007b053
uuid_000000000007b051:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b04e
	jmp uuid_000000000007b050
uuid_000000000007b04e:
	movb $1, -104(%rbp)
uuid_000000000007b050:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007b053:
	mov -120(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007b056:
	mov -112(%RBP),%RSP
	add $-368, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b05b
	push %RBP
	jmp uuid_000000000007b058
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b057
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b05a
uuid_000000000007b058:
uuid_000000000007b05a:
	mov -376(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007b05d
uuid_000000000007b05b:
#call function cons-arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call cons_SB_arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007b05d:
	mov -72(%RBP),%RSP
	add $-368, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
parse_SB_field_SB_of_CL_ArrowTupleTypeStringString:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $uuid_0000000000079496
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b061:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	mov $0, %R14B
	cmpb %R14B, %AL
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b062
	jmp uuid_000000000007b063
uuid_000000000007b062:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	mov $58, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b05e
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007b060
uuid_000000000007b05e:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -48(%rbp)
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	movq $uuid_0000000000079496, -8(%rbp)
uuid_000000000007b060:
	mov -80(%RBP),%RSP
	add $-80, %RSP
	add $8, %RSP
	jmp uuid_000000000007b061
uuid_000000000007b063:
	pushq -48(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	subq $40, %rsp
	pushq 40(%rsp)
	pushq 56(%rsp)
	pushq 72(%rsp)
	pushq 88(%rsp)
	pushq 104(%rsp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
implicit_SB_tail_CL_ArrowTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b07c
	jmp uuid_000000000007b07e
uuid_000000000007b07c:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b073
	jmp uuid_000000000007b075
uuid_000000000007b073:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b06a
	jmp uuid_000000000007b06c
uuid_000000000007b06a:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b067
	jmp uuid_000000000007b069
uuid_000000000007b067:
	push %RBP
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	jmp uuid_000000000007b064
	jmp uuid_000000000007b066
uuid_000000000007b064:
	movb $1, -224(%rbp)
uuid_000000000007b066:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b069:
	mov -240(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b06c:
	mov -232(%RBP),%RSP
	add $-312, %RSP
	mov -224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b070
	jmp uuid_000000000007b072
uuid_000000000007b070:
	push %RBP
	pushq -120(%RBP)
	pushq -128(%RBP)
	pushq -136(%RBP)
	jmp uuid_000000000007b06d
	jmp uuid_000000000007b06f
uuid_000000000007b06d:
	movb $1, -160(%rbp)
uuid_000000000007b06f:
	mov -320(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007b072:
	mov -176(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007b075:
	mov -168(%RBP),%RSP
	add $-344, %RSP
	mov -160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b079
	jmp uuid_000000000007b07b
uuid_000000000007b079:
	push %RBP
	mov -72(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b076
	jmp uuid_000000000007b078
uuid_000000000007b076:
	movb $1, -96(%rbp)
uuid_000000000007b078:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007b07b:
	mov -112(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007b07e:
	mov -104(%RBP),%RSP
	add $-360, %RSP
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b083
	push %RBP
	jmp uuid_000000000007b080
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b07f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b082
uuid_000000000007b080:
uuid_000000000007b082:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007b085
uuid_000000000007b083:
	movq -344(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b085:
	mov -64(%RBP),%RSP
	add $-360, %RSP
	subq $24, %rsp
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
typeof_SB_var_CL_ArrowTypeConsStringConsTContextAST:
#call function typeof-var-raw : Arrow<Cons<Cons<AST,TContext>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b087
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b086
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b089
uuid_000000000007b087:
uuid_000000000007b089:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	subq $24, %rsp
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
typeof_SB_var_SB_raw_CL_ArrowTypeConsStringConsTContextAST:
#call function find-alias-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007b0ac:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0ad
	jmp uuid_000000000007b0ae
uuid_000000000007b0ad:
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0a9
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -608(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b096
	jmp uuid_000000000007b098
uuid_000000000007b096:
	push %RBP
	jmp uuid_000000000007b093
	jmp uuid_000000000007b095
uuid_000000000007b093:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	jmp uuid_000000000007b090
	jmp uuid_000000000007b092
uuid_000000000007b090:
	push %RBP
	mov -504(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b08d
	jmp uuid_000000000007b08f
uuid_000000000007b08d:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b08a
	jmp uuid_000000000007b08c
uuid_000000000007b08a:
	movb $1, -616(%rbp)
uuid_000000000007b08c:
	mov -688(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007b08f:
	mov -672(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007b092:
	mov -640(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007b095:
	mov -632(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007b098:
	mov -624(%RBP),%RSP
	add $-808, %RSP
	mov -616(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0a6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b0a5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b0a8
uuid_000000000007b0a6:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0a2
	movq -808(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -80(%rbp)
	jmp uuid_000000000007b0a4
uuid_000000000007b0a2:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b09c
	movq -664(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -216(%rbp)
	jmp uuid_000000000007b09e
uuid_000000000007b09c:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b099
	movq -664(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -216(%rbp)
	jmp uuid_000000000007b09b
uuid_000000000007b099:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
uuid_000000000007b09b:
	mov -832(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007b09e:
	mov -824(%RBP),%RSP
	add $-832, %RSP
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b09f
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	jmp uuid_000000000007b0a1
uuid_000000000007b09f:
	movq -808(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -80(%rbp)
uuid_000000000007b0a1:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007b0a4:
	mov -816(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007b0a8:
	mov -488(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007b0ab
uuid_000000000007b0a9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
uuid_000000000007b0ab:
	mov -360(%RBP),%RSP
	add $-480, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007b0ac
uuid_000000000007b0ae:
	subq $24, %rsp
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
typecheck_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
uuid_000000000007b0bc:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0bd
	jmp uuid_000000000007b0be
uuid_000000000007b0bd:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0b5
	jmp uuid_000000000007b0b7
uuid_000000000007b0b5:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b0b2
	jmp uuid_000000000007b0b4
uuid_000000000007b0b2:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b0af
	jmp uuid_000000000007b0b1
uuid_000000000007b0af:
	movb $1, -312(%rbp)
uuid_000000000007b0b1:
	mov -408(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007b0b4:
	mov -328(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007b0b7:
	mov -320(%RBP),%RSP
	add $-480, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0b9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b0b8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b0bb
uuid_000000000007b0b9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -480(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b0bb:
	mov -232(%RBP),%RSP
	add $-480, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b0bc
uuid_000000000007b0be:
uuid_000000000007b0cc:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0cd
	jmp uuid_000000000007b0ce
uuid_000000000007b0cd:
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0c5
	jmp uuid_000000000007b0c7
uuid_000000000007b0c5:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b0c2
	jmp uuid_000000000007b0c4
uuid_000000000007b0c2:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b0bf
	jmp uuid_000000000007b0c1
uuid_000000000007b0bf:
	movb $1, -312(%rbp)
uuid_000000000007b0c1:
	mov -408(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007b0c4:
	mov -328(%RBP),%RSP
	add $-480, %RSP
uuid_000000000007b0c7:
	mov -320(%RBP),%RSP
	add $-480, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0c9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b0c8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b0cb
uuid_000000000007b0c9:
#call function infer-global-context : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call infer_SB_global_SB_context_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -480(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007b0cb:
	mov -232(%RBP),%RSP
	add $-480, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b0cc
uuid_000000000007b0ce:
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b0f3:
#call function non-zero : Arrow<List<StackToSpecialize>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b0f4
	jmp uuid_000000000007b0f5
uuid_000000000007b0f4:
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0ec
	jmp uuid_000000000007b0ee
uuid_000000000007b0ec:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b0e9
	jmp uuid_000000000007b0eb
uuid_000000000007b0e9:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0e3
	jmp uuid_000000000007b0e5
uuid_000000000007b0e3:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007b0e0
	jmp uuid_000000000007b0e2
uuid_000000000007b0e0:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	jmp uuid_000000000007b0dd
	jmp uuid_000000000007b0df
uuid_000000000007b0dd:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007b0da
	jmp uuid_000000000007b0dc
uuid_000000000007b0da:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b0d7
	jmp uuid_000000000007b0d9
uuid_000000000007b0d7:
	movb $1, -984(%rbp)
uuid_000000000007b0d9:
	mov -1192(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007b0dc:
	mov -1160(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007b0df:
	mov -1032(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007b0e2:
	mov -1000(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007b0e5:
	mov -992(%RBP),%RSP
	add $-1200, %RSP
	mov -984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0e6
	jmp uuid_000000000007b0e8
uuid_000000000007b0e6:
	movb $1, -568(%rbp)
uuid_000000000007b0e8:
	mov -792(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007b0eb:
	mov -584(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007b0ee:
	mov -576(%RBP),%RSP
	add $-1200, %RSP
	mov -568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0f0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b0ef
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b0f2
uuid_000000000007b0f0:
	mov $stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1, %r14
	movq -784(%rbp), %r15
	movq %r15, 0(%r14)
	movq -776(%rbp), %r15
	movq %r15, 8(%r14)
	movq -768(%rbp), %r15
	movq %r15, 16(%r14)
	movq -760(%rbp), %r15
	movq %r15, 24(%r14)
	movq -752(%rbp), %r15
	movq %r15, 32(%r14)
	movq -744(%rbp), %r15
	movq %r15, 40(%r14)
	movq -736(%rbp), %r15
	movq %r15, 48(%r14)
	movq -728(%rbp), %r15
	movq %r15, 56(%r14)
	movq -720(%rbp), %r15
	movq %r15, 64(%r14)
	movq -712(%rbp), %r15
	movq %r15, 72(%r14)
	movq -704(%rbp), %r15
	movq %r15, 80(%r14)
	movq -696(%rbp), %r15
	movq %r15, 88(%r14)
	movq -688(%rbp), %r15
	movq %r15, 96(%r14)
	movq -680(%rbp), %r15
	movq %r15, 104(%r14)
	movq -672(%rbp), %r15
	movq %r15, 112(%r14)
	movq -664(%rbp), %r15
	movq %r15, 120(%r14)
	movq -656(%rbp), %r15
	movq %r15, 128(%r14)
	movq -648(%rbp), %r15
	movq %r15, 136(%r14)
	movq -640(%rbp), %r15
	movq %r15, 144(%r14)
	movq -632(%rbp), %r15
	movq %r15, 152(%r14)
	movq -624(%rbp), %r15
	movq %r15, 160(%r14)
	movq -616(%rbp), %r15
	movq %r15, 168(%r14)
	movq -608(%rbp), %r15
	movq %r15, 176(%r14)
	movq -600(%rbp), %r15
	movq %r15, 184(%r14)
	movq -592(%rbp), %r15
	movq %r15, 192(%r14)
#call function specialize : Arrow<Cons<Cons<Cons<String,Type>,TContext>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1200(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call specialize_CL_ArrowNilConsTypeConsTContextConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b0f2:
	mov -360(%RBP),%RSP
	add $-1200, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $200, %rsp
	add $184, %rsp
	add $8, %rsp
	add $24, %rsp
	add $120, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b0f3
uuid_000000000007b0f5:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
substitute_CL_ArrowTokenConsTokenContext:
	mov -104(%RBP), %RAX
	push %RAX
uuid_000000000007b13f:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b140
	jmp uuid_000000000007b141
uuid_000000000007b140:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov -368(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b13c
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b108
	jmp uuid_000000000007b10a
uuid_000000000007b108:
	push %RBP
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b0fc
	jmp uuid_000000000007b0fe
uuid_000000000007b0fc:
	push %RBP
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	jmp uuid_000000000007b0f9
	jmp uuid_000000000007b0fb
uuid_000000000007b0f9:
	push %RBP
	jmp uuid_000000000007b0f6
	jmp uuid_000000000007b0f8
uuid_000000000007b0f6:
	movb $1, -576(%rbp)
uuid_000000000007b0f8:
	mov -656(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007b0fb:
	mov -592(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007b0fe:
	mov -584(%RBP),%RSP
	add $-656, %RSP
	mov -576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b105
	jmp uuid_000000000007b107
uuid_000000000007b105:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b102
	jmp uuid_000000000007b104
uuid_000000000007b102:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b0ff
	jmp uuid_000000000007b101
uuid_000000000007b0ff:
	movb $1, -480(%rbp)
uuid_000000000007b101:
	mov -680(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b104:
	mov -664(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b107:
	mov -496(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b10a:
	mov -488(%RBP),%RSP
	add $-776, %RSP
	mov -480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b139
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b120
	jmp uuid_000000000007b122
uuid_000000000007b120:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b114
	jmp uuid_000000000007b116
uuid_000000000007b114:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007b111
	jmp uuid_000000000007b113
uuid_000000000007b111:
	push %RBP
	jmp uuid_000000000007b10e
	jmp uuid_000000000007b110
uuid_000000000007b10e:
	movb $1, -984(%rbp)
uuid_000000000007b110:
	mov -1064(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007b113:
	mov -1000(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007b116:
	mov -992(%RBP),%RSP
	add $-1064, %RSP
	mov -984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b11d
	jmp uuid_000000000007b11f
uuid_000000000007b11d:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b11a
	jmp uuid_000000000007b11c
uuid_000000000007b11a:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b117
	jmp uuid_000000000007b119
uuid_000000000007b117:
	movb $1, -888(%rbp)
uuid_000000000007b119:
	mov -1088(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007b11c:
	mov -1072(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007b11f:
	mov -904(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007b122:
	mov -896(%RBP),%RSP
	add $-1184, %RSP
	mov -888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b136
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq $0
	push %RBP
	mov -1288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b12f
	jmp uuid_000000000007b131
uuid_000000000007b12f:
	push %RBP
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	jmp uuid_000000000007b12c
	jmp uuid_000000000007b12e
uuid_000000000007b12c:
	push %RBP
	mov -1208(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b129
	jmp uuid_000000000007b12b
uuid_000000000007b129:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b126
	jmp uuid_000000000007b128
uuid_000000000007b126:
	movb $1, -1296(%rbp)
uuid_000000000007b128:
	mov -1408(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007b12b:
	mov -1392(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007b12e:
	mov -1312(%RBP),%RSP
	add $-1504, %RSP
uuid_000000000007b131:
	mov -1304(%RBP),%RSP
	add $-1504, %RSP
	mov -1296(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b133
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b132
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b135
uuid_000000000007b133:
	movq -1504(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b135:
	mov -1192(%RBP),%RSP
	add $-1504, %RSP
	jmp uuid_000000000007b138
uuid_000000000007b136:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b123
	movq -1184(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b125
uuid_000000000007b123:
	movq -1056(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -104(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b125:
	mov -1192(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007b138:
	mov -784(%RBP),%RSP
	add $-1192, %RSP
	jmp uuid_000000000007b13b
uuid_000000000007b139:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b10b
	movq -776(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b10d
uuid_000000000007b10b:
	movq -648(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -640(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -104(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b10d:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007b13b:
	mov -376(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007b13e
uuid_000000000007b13c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b13e:
	mov -272(%RBP),%RSP
	add $-368, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	jmp uuid_000000000007b13f
uuid_000000000007b141:
	subq $56, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $160, %rsp
	ret
substitute_CL_ArrowListTypeConsListTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b151
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b14a
	jmp uuid_000000000007b14c
uuid_000000000007b14a:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b147
	jmp uuid_000000000007b149
uuid_000000000007b147:
	push %RBP
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007b144
	jmp uuid_000000000007b146
uuid_000000000007b144:
	movb $1, -312(%rbp)
uuid_000000000007b146:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007b149:
	mov -328(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007b14c:
	mov -320(%RBP),%RSP
	add $-400, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b14e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b14d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b150
uuid_000000000007b14e:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
#call function substitute : Arrow<Cons<TContext,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b150:
	mov -264(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007b153
uuid_000000000007b151:
uuid_000000000007b153:
	mov -216(%RBP),%RSP
	add $-256, %RSP
	subq $40, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
substitute_CL_ArrowTypeConsTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b157
	jmp uuid_000000000007b159
uuid_000000000007b157:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b154
	jmp uuid_000000000007b156
uuid_000000000007b154:
	movb $1, -216(%rbp)
uuid_000000000007b156:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007b159:
	mov -224(%RBP),%RSP
	add $-240, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b192
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b17c
	jmp uuid_000000000007b17e
uuid_000000000007b17c:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b179
	jmp uuid_000000000007b17b
uuid_000000000007b179:
	push %RBP
	mov -256(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b176
	jmp uuid_000000000007b178
uuid_000000000007b176:
	movb $1, -280(%rbp)
uuid_000000000007b178:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007b17b:
	mov -296(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007b17e:
	mov -288(%RBP),%RSP
	add $-352, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b18f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b185
	jmp uuid_000000000007b187
uuid_000000000007b185:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b182
	jmp uuid_000000000007b184
uuid_000000000007b182:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b17f
	jmp uuid_000000000007b181
uuid_000000000007b17f:
	movb $1, -392(%rbp)
uuid_000000000007b181:
	mov -440(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007b184:
	mov -408(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007b187:
	mov -400(%RBP),%RSP
	add $-464, %RSP
	mov -392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b18c
	push %RBP
	jmp uuid_000000000007b189
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b188
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b18b
uuid_000000000007b189:
uuid_000000000007b18b:
	mov -472(%RBP),%RSP
	add $-472, %RSP
	jmp uuid_000000000007b18e
uuid_000000000007b18c:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b18e:
	mov -360(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007b191
uuid_000000000007b18f:
	pushq -352(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b191:
	mov -248(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007b194
uuid_000000000007b192:
uuid_000000000007b173:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b174
	jmp uuid_000000000007b175
uuid_000000000007b174:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b170
	push %RBP
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b166
	jmp uuid_000000000007b168
uuid_000000000007b166:
	push %RBP
	jmp uuid_000000000007b163
	jmp uuid_000000000007b165
uuid_000000000007b163:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007b160
	jmp uuid_000000000007b162
uuid_000000000007b160:
	push %RBP
	mov -512(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b15d
	jmp uuid_000000000007b15f
uuid_000000000007b15d:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b15a
	jmp uuid_000000000007b15c
uuid_000000000007b15a:
	movb $1, -624(%rbp)
uuid_000000000007b15c:
	mov -696(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007b15f:
	mov -680(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007b162:
	mov -648(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007b165:
	mov -640(%RBP),%RSP
	add $-816, %RSP
uuid_000000000007b168:
	mov -632(%RBP),%RSP
	add $-816, %RSP
	mov -624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b16d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b16c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b16f
uuid_000000000007b16d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b169
	movq -816(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -776(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b16b
uuid_000000000007b169:
	movq -672(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -664(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -128(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b16b:
	mov -824(%RBP),%RSP
	add $-824, %RSP
uuid_000000000007b16f:
	mov -496(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007b172
uuid_000000000007b170:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b172:
	mov -368(%RBP),%RSP
	add $-488, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007b173
uuid_000000000007b175:
uuid_000000000007b194:
	mov -184(%RBP),%RSP
	add $-240, %RSP
	subq $24, %rsp
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
substitute_CL_ArrowListTypeConsListTypeContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1a4
	push %RBP
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b19d
	jmp uuid_000000000007b19f
uuid_000000000007b19d:
	push %RBP
	mov -272(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b19a
	jmp uuid_000000000007b19c
uuid_000000000007b19a:
	push %RBP
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	jmp uuid_000000000007b197
	jmp uuid_000000000007b199
uuid_000000000007b197:
	movb $1, -288(%rbp)
uuid_000000000007b199:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007b19c:
	mov -304(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007b19f:
	mov -296(%RBP),%RSP
	add $-376, %RSP
	mov -288(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1a1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b1a0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b1a3
uuid_000000000007b1a1:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
#call function substitute : Arrow<Cons<Context,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007b1a3:
	mov -240(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007b1a6
uuid_000000000007b1a4:
uuid_000000000007b1a6:
	mov -192(%RBP),%RSP
	add $-232, %RSP
	subq $40, %rsp
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $144, %rsp
	ret
substitute_CL_ArrowTypeConsTypeContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1aa
	jmp uuid_000000000007b1ac
uuid_000000000007b1aa:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b1a7
	jmp uuid_000000000007b1a9
uuid_000000000007b1a7:
	movb $1, -192(%rbp)
uuid_000000000007b1a9:
	mov -208(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007b1ac:
	mov -200(%RBP),%RSP
	add $-216, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b215
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1ff
	jmp uuid_000000000007b201
uuid_000000000007b1ff:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b1fc
	jmp uuid_000000000007b1fe
uuid_000000000007b1fc:
	push %RBP
	mov -232(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b1f9
	jmp uuid_000000000007b1fb
uuid_000000000007b1f9:
	movb $1, -256(%rbp)
uuid_000000000007b1fb:
	mov -320(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007b1fe:
	mov -272(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007b201:
	mov -264(%RBP),%RSP
	add $-328, %RSP
	mov -256(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b212
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b208
	jmp uuid_000000000007b20a
uuid_000000000007b208:
	push %RBP
	mov -352(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b205
	jmp uuid_000000000007b207
uuid_000000000007b205:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b202
	jmp uuid_000000000007b204
uuid_000000000007b202:
	movb $1, -368(%rbp)
uuid_000000000007b204:
	mov -416(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007b207:
	mov -384(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007b20a:
	mov -376(%RBP),%RSP
	add $-440, %RSP
	mov -368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b20f
	push %RBP
	jmp uuid_000000000007b20c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b20b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b20e
uuid_000000000007b20c:
uuid_000000000007b20e:
	mov -448(%RBP),%RSP
	add $-448, %RSP
	jmp uuid_000000000007b211
uuid_000000000007b20f:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007b211:
	mov -336(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007b214
uuid_000000000007b212:
	pushq -328(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<Context,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowListTypeConsListTypeContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	push -168(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
uuid_000000000007b214:
	mov -224(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007b217
uuid_000000000007b215:
uuid_000000000007b1f6:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b1f7
	jmp uuid_000000000007b1f8
uuid_000000000007b1f7:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1f3
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1bf
	jmp uuid_000000000007b1c1
uuid_000000000007b1bf:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1b3
	jmp uuid_000000000007b1b5
uuid_000000000007b1b3:
	push %RBP
	jmp uuid_000000000007b1b0
	jmp uuid_000000000007b1b2
uuid_000000000007b1b0:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b1ad
	jmp uuid_000000000007b1af
uuid_000000000007b1ad:
	movb $1, -624(%rbp)
uuid_000000000007b1af:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007b1b2:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007b1b5:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1bc
	jmp uuid_000000000007b1be
uuid_000000000007b1bc:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b1b9
	jmp uuid_000000000007b1bb
uuid_000000000007b1b9:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b1b6
	jmp uuid_000000000007b1b8
uuid_000000000007b1b6:
	movb $1, -528(%rbp)
uuid_000000000007b1b8:
	mov -680(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b1bb:
	mov -664(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b1be:
	mov -544(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007b1c1:
	mov -536(%RBP),%RSP
	add $-776, %RSP
	mov -528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1f0
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1d7
	jmp uuid_000000000007b1d9
uuid_000000000007b1d7:
	push %RBP
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1cb
	jmp uuid_000000000007b1cd
uuid_000000000007b1cb:
	push %RBP
	jmp uuid_000000000007b1c8
	jmp uuid_000000000007b1ca
uuid_000000000007b1c8:
	push %RBP
	mov -912(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b1c5
	jmp uuid_000000000007b1c7
uuid_000000000007b1c5:
	movb $1, -984(%rbp)
uuid_000000000007b1c7:
	mov -1008(%RBP),%RSP
	add $-1016, %RSP
uuid_000000000007b1ca:
	mov -1000(%RBP),%RSP
	add $-1016, %RSP
uuid_000000000007b1cd:
	mov -992(%RBP),%RSP
	add $-1016, %RSP
	mov -984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1d4
	jmp uuid_000000000007b1d6
uuid_000000000007b1d4:
	push %RBP
	mov -800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b1d1
	jmp uuid_000000000007b1d3
uuid_000000000007b1d1:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b1ce
	jmp uuid_000000000007b1d0
uuid_000000000007b1ce:
	movb $1, -888(%rbp)
uuid_000000000007b1d0:
	mov -1040(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007b1d3:
	mov -1024(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007b1d6:
	mov -904(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007b1d9:
	mov -896(%RBP),%RSP
	add $-1136, %RSP
	mov -888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1ed
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -1240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1e6
	jmp uuid_000000000007b1e8
uuid_000000000007b1e6:
	push %RBP
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	jmp uuid_000000000007b1e3
	jmp uuid_000000000007b1e5
uuid_000000000007b1e3:
	push %RBP
	mov -1160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b1e0
	jmp uuid_000000000007b1e2
uuid_000000000007b1e0:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b1dd
	jmp uuid_000000000007b1df
uuid_000000000007b1dd:
	movb $1, -1248(%rbp)
uuid_000000000007b1df:
	mov -1360(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007b1e2:
	mov -1344(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007b1e5:
	mov -1264(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007b1e8:
	mov -1256(%RBP),%RSP
	add $-1456, %RSP
	mov -1248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b1ea
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b1e9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b1ec
uuid_000000000007b1ea:
	movq -1456(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b1ec:
	mov -1144(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_000000000007b1ef
uuid_000000000007b1ed:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b1da
	movq -1136(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b1dc
uuid_000000000007b1da:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b1dc:
	mov -1144(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007b1ef:
	mov -784(%RBP),%RSP
	add $-1144, %RSP
	jmp uuid_000000000007b1f2
uuid_000000000007b1f0:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -216(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b1c2
	movq -776(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b1c4
uuid_000000000007b1c2:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b1c4:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007b1f2:
	mov -424(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007b1f5
uuid_000000000007b1f3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b1f5:
	mov -320(%RBP),%RSP
	add $-416, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	jmp uuid_000000000007b1f6
uuid_000000000007b1f8:
uuid_000000000007b217:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	subq $24, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $128, %rsp
	ret
substitute_SB_lhs_CL_ArrowASTConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b248
	jmp uuid_000000000007b24a
uuid_000000000007b248:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b23f
	jmp uuid_000000000007b241
uuid_000000000007b23f:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b22d
	jmp uuid_000000000007b22f
uuid_000000000007b22d:
	push %RBP
	mov -536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b21b
	jmp uuid_000000000007b21d
uuid_000000000007b21b:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	jmp uuid_000000000007b218
	jmp uuid_000000000007b21a
uuid_000000000007b218:
	movb $1, -648(%rbp)
uuid_000000000007b21a:
	mov -664(%RBP),%RSP
	add $-688, %RSP
uuid_000000000007b21d:
	mov -656(%RBP),%RSP
	add $-688, %RSP
	mov -648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b22a
	jmp uuid_000000000007b22c
uuid_000000000007b22a:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b224
	jmp uuid_000000000007b226
uuid_000000000007b224:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	jmp uuid_000000000007b221
	jmp uuid_000000000007b223
uuid_000000000007b221:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b21e
	jmp uuid_000000000007b220
uuid_000000000007b21e:
	movb $1, -776(%rbp)
uuid_000000000007b220:
	mov -856(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007b223:
	mov -792(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007b226:
	mov -784(%RBP),%RSP
	add $-864, %RSP
	mov -776(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b227
	jmp uuid_000000000007b229
uuid_000000000007b227:
	movb $1, -552(%rbp)
uuid_000000000007b229:
	mov -696(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007b22c:
	mov -568(%RBP),%RSP
	add $-864, %RSP
uuid_000000000007b22f:
	mov -560(%RBP),%RSP
	add $-864, %RSP
	mov -552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b23c
	jmp uuid_000000000007b23e
uuid_000000000007b23c:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -944(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b236
	jmp uuid_000000000007b238
uuid_000000000007b236:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007b233
	jmp uuid_000000000007b235
uuid_000000000007b233:
	push %RBP
	mov -880(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b230
	jmp uuid_000000000007b232
uuid_000000000007b230:
	movb $1, -952(%rbp)
uuid_000000000007b232:
	mov -1032(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007b235:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007b238:
	mov -960(%RBP),%RSP
	add $-1040, %RSP
	mov -952(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b239
	jmp uuid_000000000007b23b
uuid_000000000007b239:
	movb $1, -456(%rbp)
uuid_000000000007b23b:
	mov -872(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007b23e:
	mov -472(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007b241:
	mov -464(%RBP),%RSP
	add $-1040, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b245
	jmp uuid_000000000007b247
uuid_000000000007b245:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b242
	jmp uuid_000000000007b244
uuid_000000000007b242:
	movb $1, -360(%rbp)
uuid_000000000007b244:
	mov -1048(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007b247:
	mov -376(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007b24a:
	mov -368(%RBP),%RSP
	add $-1120, %RSP
	mov -360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2a1
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b272
	jmp uuid_000000000007b274
uuid_000000000007b272:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b260
	jmp uuid_000000000007b262
uuid_000000000007b260:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b24e
	jmp uuid_000000000007b250
uuid_000000000007b24e:
	push %RBP
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007b24b
	jmp uuid_000000000007b24d
uuid_000000000007b24b:
	movb $1, -1400(%rbp)
uuid_000000000007b24d:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007b250:
	mov -1408(%RBP),%RSP
	add $-1440, %RSP
	mov -1400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b25d
	jmp uuid_000000000007b25f
uuid_000000000007b25d:
	push %RBP
	mov -1280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b257
	jmp uuid_000000000007b259
uuid_000000000007b257:
	push %RBP
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	jmp uuid_000000000007b254
	jmp uuid_000000000007b256
uuid_000000000007b254:
	push %RBP
	mov -1456(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b251
	jmp uuid_000000000007b253
uuid_000000000007b251:
	movb $1, -1528(%rbp)
uuid_000000000007b253:
	mov -1608(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007b256:
	mov -1544(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007b259:
	mov -1536(%RBP),%RSP
	add $-1616, %RSP
	mov -1528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b25a
	jmp uuid_000000000007b25c
uuid_000000000007b25a:
	movb $1, -1304(%rbp)
uuid_000000000007b25c:
	mov -1448(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007b25f:
	mov -1320(%RBP),%RSP
	add $-1616, %RSP
uuid_000000000007b262:
	mov -1312(%RBP),%RSP
	add $-1616, %RSP
	mov -1304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b26f
	jmp uuid_000000000007b271
uuid_000000000007b26f:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b269
	jmp uuid_000000000007b26b
uuid_000000000007b269:
	push %RBP
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	jmp uuid_000000000007b266
	jmp uuid_000000000007b268
uuid_000000000007b266:
	push %RBP
	mov -1632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1792(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b263
	jmp uuid_000000000007b265
uuid_000000000007b263:
	movb $1, -1704(%rbp)
uuid_000000000007b265:
	mov -1784(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007b268:
	mov -1720(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007b26b:
	mov -1712(%RBP),%RSP
	add $-1792, %RSP
	mov -1704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b26c
	jmp uuid_000000000007b26e
uuid_000000000007b26c:
	movb $1, -1208(%rbp)
uuid_000000000007b26e:
	mov -1624(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007b271:
	mov -1224(%RBP),%RSP
	add $-1792, %RSP
uuid_000000000007b274:
	mov -1216(%RBP),%RSP
	add $-1792, %RSP
	mov -1208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b29e
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b284
	jmp uuid_000000000007b286
uuid_000000000007b284:
	push %RBP
	mov -1864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1968(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b27b
	jmp uuid_000000000007b27d
uuid_000000000007b27b:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007b278
	jmp uuid_000000000007b27a
uuid_000000000007b278:
	push %RBP
	mov -1904(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b275
	jmp uuid_000000000007b277
uuid_000000000007b275:
	movb $1, -1976(%rbp)
uuid_000000000007b277:
	mov -2056(%RBP),%RSP
	add $-2064, %RSP
uuid_000000000007b27a:
	mov -1992(%RBP),%RSP
	add $-2064, %RSP
uuid_000000000007b27d:
	mov -1984(%RBP),%RSP
	add $-2064, %RSP
	mov -1976(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b281
	jmp uuid_000000000007b283
uuid_000000000007b281:
	push %RBP
	mov -1856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b27e
	jmp uuid_000000000007b280
uuid_000000000007b27e:
	movb $1, -1880(%rbp)
uuid_000000000007b280:
	mov -2072(%RBP),%RSP
	add $-2144, %RSP
uuid_000000000007b283:
	mov -1896(%RBP),%RSP
	add $-2144, %RSP
uuid_000000000007b286:
	mov -1888(%RBP),%RSP
	add $-2144, %RSP
	mov -1880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b29b
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2224(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b28d
	jmp uuid_000000000007b28f
uuid_000000000007b28d:
	push %RBP
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	jmp uuid_000000000007b28a
	jmp uuid_000000000007b28c
uuid_000000000007b28a:
	push %RBP
	mov -2160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b287
	jmp uuid_000000000007b289
uuid_000000000007b287:
	movb $1, -2232(%rbp)
uuid_000000000007b289:
	mov -2312(%RBP),%RSP
	add $-2320, %RSP
uuid_000000000007b28c:
	mov -2248(%RBP),%RSP
	add $-2320, %RSP
uuid_000000000007b28f:
	mov -2240(%RBP),%RSP
	add $-2320, %RSP
	mov -2232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b298
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -2400(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b295
	push %RBP
	jmp uuid_000000000007b292
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b291
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b294
uuid_000000000007b292:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b290
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b294:
	mov -2408(%RBP),%RSP
	add $-2408, %RSP
	jmp uuid_000000000007b297
uuid_000000000007b295:
uuid_000000000007b297:
	mov -2328(%RBP),%RSP
	add $-2400, %RSP
	jmp uuid_000000000007b29a
uuid_000000000007b298:
	pushq -2320(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b29a:
	mov -2152(%RBP),%RSP
	add $-2320, %RSP
	jmp uuid_000000000007b29d
uuid_000000000007b29b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b29d:
	mov -1800(%RBP),%RSP
	add $-2144, %RSP
	jmp uuid_000000000007b2a0
uuid_000000000007b29e:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1616(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b2a0:
	mov -1128(%RBP),%RSP
	add $-1792, %RSP
	jmp uuid_000000000007b2a3
uuid_000000000007b2a1:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b2a3:
	mov -280(%RBP),%RSP
	add $-1120, %RSP
	subq $72, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
substitute_CL_ArrowASTConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b39e
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b39b
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2cb
	jmp uuid_000000000007b2cd
uuid_000000000007b2cb:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -608(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2b9
	jmp uuid_000000000007b2bb
uuid_000000000007b2b9:
	push %RBP
	mov -600(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2a7
	jmp uuid_000000000007b2a9
uuid_000000000007b2a7:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	jmp uuid_000000000007b2a4
	jmp uuid_000000000007b2a6
uuid_000000000007b2a4:
	movb $1, -712(%rbp)
uuid_000000000007b2a6:
	mov -728(%RBP),%RSP
	add $-752, %RSP
uuid_000000000007b2a9:
	mov -720(%RBP),%RSP
	add $-752, %RSP
	mov -712(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2b6
	jmp uuid_000000000007b2b8
uuid_000000000007b2b6:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -832(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2b0
	jmp uuid_000000000007b2b2
uuid_000000000007b2b0:
	push %RBP
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007b2ad
	jmp uuid_000000000007b2af
uuid_000000000007b2ad:
	push %RBP
	mov -768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b2aa
	jmp uuid_000000000007b2ac
uuid_000000000007b2aa:
	movb $1, -840(%rbp)
uuid_000000000007b2ac:
	mov -920(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007b2af:
	mov -856(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007b2b2:
	mov -848(%RBP),%RSP
	add $-928, %RSP
	mov -840(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2b3
	jmp uuid_000000000007b2b5
uuid_000000000007b2b3:
	movb $1, -616(%rbp)
uuid_000000000007b2b5:
	mov -760(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007b2b8:
	mov -632(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007b2bb:
	mov -624(%RBP),%RSP
	add $-928, %RSP
	mov -616(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2c8
	jmp uuid_000000000007b2ca
uuid_000000000007b2c8:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2c2
	jmp uuid_000000000007b2c4
uuid_000000000007b2c2:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007b2bf
	jmp uuid_000000000007b2c1
uuid_000000000007b2bf:
	push %RBP
	mov -944(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1104(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b2bc
	jmp uuid_000000000007b2be
uuid_000000000007b2bc:
	movb $1, -1016(%rbp)
uuid_000000000007b2be:
	mov -1096(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007b2c1:
	mov -1032(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007b2c4:
	mov -1024(%RBP),%RSP
	add $-1104, %RSP
	mov -1016(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2c5
	jmp uuid_000000000007b2c7
uuid_000000000007b2c5:
	movb $1, -520(%rbp)
uuid_000000000007b2c7:
	mov -936(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007b2ca:
	mov -536(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007b2cd:
	mov -528(%RBP),%RSP
	add $-1104, %RSP
	mov -520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b398
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1184(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b311
	jmp uuid_000000000007b313
uuid_000000000007b311:
	push %RBP
	mov -1176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1280(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2ff
	jmp uuid_000000000007b301
uuid_000000000007b2ff:
	push %RBP
	mov -1272(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2ed
	jmp uuid_000000000007b2ef
uuid_000000000007b2ed:
	push %RBP
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	jmp uuid_000000000007b2ea
	jmp uuid_000000000007b2ec
uuid_000000000007b2ea:
	movb $1, -1384(%rbp)
uuid_000000000007b2ec:
	mov -1400(%RBP),%RSP
	add $-1424, %RSP
uuid_000000000007b2ef:
	mov -1392(%RBP),%RSP
	add $-1424, %RSP
	mov -1384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2fc
	jmp uuid_000000000007b2fe
uuid_000000000007b2fc:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1504(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2f6
	jmp uuid_000000000007b2f8
uuid_000000000007b2f6:
	push %RBP
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	jmp uuid_000000000007b2f3
	jmp uuid_000000000007b2f5
uuid_000000000007b2f3:
	push %RBP
	mov -1440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b2f0
	jmp uuid_000000000007b2f2
uuid_000000000007b2f0:
	movb $1, -1512(%rbp)
uuid_000000000007b2f2:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b2f5:
	mov -1528(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b2f8:
	mov -1520(%RBP),%RSP
	add $-1600, %RSP
	mov -1512(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2f9
	jmp uuid_000000000007b2fb
uuid_000000000007b2f9:
	movb $1, -1288(%rbp)
uuid_000000000007b2fb:
	mov -1432(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b2fe:
	mov -1304(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b301:
	mov -1296(%RBP),%RSP
	add $-1600, %RSP
	mov -1288(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b30e
	jmp uuid_000000000007b310
uuid_000000000007b30e:
	push %RBP
	mov -1168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1680(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b308
	jmp uuid_000000000007b30a
uuid_000000000007b308:
	push %RBP
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	jmp uuid_000000000007b305
	jmp uuid_000000000007b307
uuid_000000000007b305:
	push %RBP
	mov -1616(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b302
	jmp uuid_000000000007b304
uuid_000000000007b302:
	movb $1, -1688(%rbp)
uuid_000000000007b304:
	mov -1768(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007b307:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007b30a:
	mov -1696(%RBP),%RSP
	add $-1776, %RSP
	mov -1688(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b30b
	jmp uuid_000000000007b30d
uuid_000000000007b30b:
	movb $1, -1192(%rbp)
uuid_000000000007b30d:
	mov -1608(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007b310:
	mov -1208(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007b313:
	mov -1200(%RBP),%RSP
	add $-1776, %RSP
	mov -1192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b395
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -1856(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b336
	jmp uuid_000000000007b338
uuid_000000000007b336:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	jmp uuid_000000000007b333
	jmp uuid_000000000007b335
uuid_000000000007b333:
	push %RBP
	mov -1792(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b330
	jmp uuid_000000000007b332
uuid_000000000007b330:
	movb $1, -1864(%rbp)
uuid_000000000007b332:
	mov -1944(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007b335:
	mov -1880(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007b338:
	mov -1872(%RBP),%RSP
	add $-1952, %RSP
	mov -1864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b392
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b33f
	jmp uuid_000000000007b341
uuid_000000000007b33f:
	push %RBP
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	jmp uuid_000000000007b33c
	jmp uuid_000000000007b33e
uuid_000000000007b33c:
	push %RBP
	mov -1968(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b339
	jmp uuid_000000000007b33b
uuid_000000000007b339:
	movb $1, -2040(%rbp)
uuid_000000000007b33b:
	mov -2120(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007b33e:
	mov -2056(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007b341:
	mov -2048(%RBP),%RSP
	add $-2128, %RSP
	mov -2040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b38f
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2208(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b34b
	jmp uuid_000000000007b34d
uuid_000000000007b34b:
	push %RBP
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	jmp uuid_000000000007b348
	jmp uuid_000000000007b34a
uuid_000000000007b348:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b345
	jmp uuid_000000000007b347
uuid_000000000007b345:
	push %RBP
	mov -2168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b342
	jmp uuid_000000000007b344
uuid_000000000007b342:
	movb $1, -2216(%rbp)
uuid_000000000007b344:
	mov -2344(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007b347:
	mov -2264(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007b34a:
	mov -2232(%RBP),%RSP
	add $-2416, %RSP
uuid_000000000007b34d:
	mov -2224(%RBP),%RSP
	add $-2416, %RSP
	mov -2216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b38c
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2496(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b351
	jmp uuid_000000000007b353
uuid_000000000007b351:
	push %RBP
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	jmp uuid_000000000007b34e
	jmp uuid_000000000007b350
uuid_000000000007b34e:
	movb $1, -2504(%rbp)
uuid_000000000007b350:
	mov -2520(%RBP),%RSP
	add $-2544, %RSP
uuid_000000000007b353:
	mov -2512(%RBP),%RSP
	add $-2544, %RSP
	mov -2504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b389
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b35a
	jmp uuid_000000000007b35c
uuid_000000000007b35a:
	push %RBP
	mov -2616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b357
	jmp uuid_000000000007b359
uuid_000000000007b357:
	push %RBP
	mov -2608(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b354
	jmp uuid_000000000007b356
uuid_000000000007b354:
	movb $1, -2632(%rbp)
uuid_000000000007b356:
	mov -2728(%RBP),%RSP
	add $-2800, %RSP
uuid_000000000007b359:
	mov -2648(%RBP),%RSP
	add $-2800, %RSP
uuid_000000000007b35c:
	mov -2640(%RBP),%RSP
	add $-2800, %RSP
	mov -2632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b386
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -2880(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b363
	jmp uuid_000000000007b365
uuid_000000000007b363:
	push %RBP
	mov -2872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b360
	jmp uuid_000000000007b362
uuid_000000000007b360:
	push %RBP
	mov -2864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b35d
	jmp uuid_000000000007b35f
uuid_000000000007b35d:
	movb $1, -2888(%rbp)
uuid_000000000007b35f:
	mov -2984(%RBP),%RSP
	add $-3056, %RSP
uuid_000000000007b362:
	mov -2904(%RBP),%RSP
	add $-3056, %RSP
uuid_000000000007b365:
	mov -2896(%RBP),%RSP
	add $-3056, %RSP
	mov -2888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b383
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -3136(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b36c
	jmp uuid_000000000007b36e
uuid_000000000007b36c:
	push %RBP
	mov -3128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b369
	jmp uuid_000000000007b36b
uuid_000000000007b369:
	push %RBP
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	pushq -3088(%RBP)
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	pushq -3120(%RBP)
	jmp uuid_000000000007b366
	jmp uuid_000000000007b368
uuid_000000000007b366:
	movb $1, -3144(%rbp)
uuid_000000000007b368:
	mov -3240(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007b36b:
	mov -3160(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007b36e:
	mov -3152(%RBP),%RSP
	add $-3296, %RSP
	mov -3144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b380
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -3376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b375
	jmp uuid_000000000007b377
uuid_000000000007b375:
	push %RBP
	mov -3368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b372
	jmp uuid_000000000007b374
uuid_000000000007b372:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b36f
	jmp uuid_000000000007b371
uuid_000000000007b36f:
	movb $1, -3384(%rbp)
uuid_000000000007b371:
	mov -3480(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007b374:
	mov -3400(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007b377:
	mov -3392(%RBP),%RSP
	add $-3552, %RSP
	mov -3384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b37d
	push %RBP
	jmp uuid_000000000007b37a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b379
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b37c
uuid_000000000007b37a:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b378
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b37c:
	mov -3560(%RBP),%RSP
	add $-3560, %RSP
	jmp uuid_000000000007b37f
uuid_000000000007b37d:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3488(%rbp)
	pushq -3496(%rbp)
	pushq -3504(%rbp)
	pushq -3512(%rbp)
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	pushq -3424(%rbp)
	pushq -3432(%rbp)
	pushq -3440(%rbp)
	pushq -3448(%rbp)
	pushq -3456(%rbp)
	pushq -3464(%rbp)
	pushq -3472(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b37f:
	mov -3304(%RBP),%RSP
	add $-3552, %RSP
	jmp uuid_000000000007b382
uuid_000000000007b380:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	pushq -3264(%rbp)
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -3168(%rbp)
	pushq -3176(%rbp)
	pushq -3184(%rbp)
	pushq -3192(%rbp)
	pushq -3200(%rbp)
	pushq -3208(%rbp)
	pushq -3216(%rbp)
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b382:
	mov -3064(%RBP),%RSP
	add $-3296, %RSP
	jmp uuid_000000000007b385
uuid_000000000007b383:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	pushq -3016(%rbp)
	pushq -3024(%rbp)
	pushq -3032(%rbp)
	pushq -3040(%rbp)
	pushq -3048(%rbp)
	pushq -3056(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	pushq -2952(%rbp)
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b385:
	mov -2808(%RBP),%RSP
	add $-3056, %RSP
	jmp uuid_000000000007b388
uuid_000000000007b386:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	pushq -2776(%rbp)
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	pushq -2696(%rbp)
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b388:
	mov -2552(%RBP),%RSP
	add $-2800, %RSP
	jmp uuid_000000000007b38b
uuid_000000000007b389:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b38b:
	mov -2424(%RBP),%RSP
	add $-2544, %RSP
	jmp uuid_000000000007b38e
uuid_000000000007b38c:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-lhs : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	mov %RBX, %RBP
	call substitute_SB_lhs_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $5
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b38e:
	mov -2136(%RBP),%RSP
	add $-2416, %RSP
	jmp uuid_000000000007b391
uuid_000000000007b38f:
	pushq -2128(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b391:
	mov -1960(%RBP),%RSP
	add $-2128, %RSP
	jmp uuid_000000000007b394
uuid_000000000007b392:
	pushq -1952(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b394:
	mov -1784(%RBP),%RSP
	add $-1952, %RSP
	jmp uuid_000000000007b397
uuid_000000000007b395:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b32d:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b32e
	jmp uuid_000000000007b32f
uuid_000000000007b32e:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov -2024(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b32a
	push %RBP
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b320
	jmp uuid_000000000007b322
uuid_000000000007b320:
	push %RBP
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	jmp uuid_000000000007b31d
	jmp uuid_000000000007b31f
uuid_000000000007b31d:
	push %RBP
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	jmp uuid_000000000007b31a
	jmp uuid_000000000007b31c
uuid_000000000007b31a:
	push %RBP
	mov -2048(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b317
	jmp uuid_000000000007b319
uuid_000000000007b317:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b314
	jmp uuid_000000000007b316
uuid_000000000007b314:
	movb $1, -2160(%rbp)
uuid_000000000007b316:
	mov -2304(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007b319:
	mov -2288(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007b31c:
	mov -2256(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007b31f:
	mov -2176(%RBP),%RSP
	add $-2424, %RSP
uuid_000000000007b322:
	mov -2168(%RBP),%RSP
	add $-2424, %RSP
	mov -2160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b327
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b326
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b329
uuid_000000000007b327:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2296(%rbp)
	pushq -1600(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b323
	movq -2424(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2416(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2408(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2400(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2392(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2384(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2376(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2368(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2360(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2352(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2344(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b325
uuid_000000000007b323:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b325:
	mov -2432(%RBP),%RSP
	add $-2432, %RSP
uuid_000000000007b329:
	mov -2032(%RBP),%RSP
	add $-2432, %RSP
	jmp uuid_000000000007b32c
uuid_000000000007b32a:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b32c:
	mov -1904(%RBP),%RSP
	add $-2024, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007b32d
uuid_000000000007b32f:
uuid_000000000007b397:
	mov -1112(%RBP),%RSP
	add $-1776, %RSP
	jmp uuid_000000000007b39a
uuid_000000000007b398:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
uuid_000000000007b2e7:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b2e8
	jmp uuid_000000000007b2e9
uuid_000000000007b2e8:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2e4
	push %RBP
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2da
	jmp uuid_000000000007b2dc
uuid_000000000007b2da:
	push %RBP
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	jmp uuid_000000000007b2d7
	jmp uuid_000000000007b2d9
uuid_000000000007b2d7:
	push %RBP
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	jmp uuid_000000000007b2d4
	jmp uuid_000000000007b2d6
uuid_000000000007b2d4:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b2d1
	jmp uuid_000000000007b2d3
uuid_000000000007b2d1:
	push %RBP
	mov -1368(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b2ce
	jmp uuid_000000000007b2d0
uuid_000000000007b2ce:
	movb $1, -1488(%rbp)
uuid_000000000007b2d0:
	mov -1632(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007b2d3:
	mov -1616(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007b2d6:
	mov -1584(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007b2d9:
	mov -1504(%RBP),%RSP
	add $-1752, %RSP
uuid_000000000007b2dc:
	mov -1496(%RBP),%RSP
	add $-1752, %RSP
	mov -1488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b2e1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b2e0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b2e3
uuid_000000000007b2e1:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq -928(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b2dd
	movq -1752(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1744(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1736(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1728(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b2df
uuid_000000000007b2dd:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function substitute : Arrow<Cons<TContext,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowTypeConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b2df:
	mov -1760(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007b2e3:
	mov -1360(%RBP),%RSP
	add $-1760, %RSP
	jmp uuid_000000000007b2e6
uuid_000000000007b2e4:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b2e6:
	mov -1232(%RBP),%RSP
	add $-1352, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007b2e7
uuid_000000000007b2e9:
uuid_000000000007b39a:
	mov -440(%RBP),%RSP
	add $-1104, %RSP
	jmp uuid_000000000007b39d
uuid_000000000007b39b:
uuid_000000000007b39d:
	mov -360(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007b3a0
uuid_000000000007b39e:
uuid_000000000007b3a0:
	mov -280(%RBP),%RSP
	add $-352, %RSP
	subq $72, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
substitute_CL_ArrowSConsSStringSList:
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3cd
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3a4
	jmp uuid_000000000007b3a6
uuid_000000000007b3a4:
	push %RBP
	mov -160(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b3a1
	jmp uuid_000000000007b3a3
uuid_000000000007b3a1:
	movb $1, -176(%rbp)
uuid_000000000007b3a3:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007b3a6:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	mov -176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3ca
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3c3
	jmp uuid_000000000007b3c5
uuid_000000000007b3c3:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b3c0
	jmp uuid_000000000007b3c2
uuid_000000000007b3c0:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b3bd
	jmp uuid_000000000007b3bf
uuid_000000000007b3bd:
	movb $1, -240(%rbp)
uuid_000000000007b3bf:
	mov -288(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b3c2:
	mov -256(%RBP),%RSP
	add $-312, %RSP
uuid_000000000007b3c5:
	mov -248(%RBP),%RSP
	add $-312, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3c7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b3c6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b3c9
uuid_000000000007b3c7:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<StringSList,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowSConsSStringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute : Arrow<Cons<StringSList,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowSConsSStringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007b3c9:
	mov -208(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007b3cc
uuid_000000000007b3ca:
uuid_000000000007b3ba:
#call function non-zero : Arrow<StringSList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64StringSList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b3bb
	jmp uuid_000000000007b3bc
uuid_000000000007b3bb:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3b0
	jmp uuid_000000000007b3b2
uuid_000000000007b3b0:
	push %RBP
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	jmp uuid_000000000007b3ad
	jmp uuid_000000000007b3af
uuid_000000000007b3ad:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b3aa
	jmp uuid_000000000007b3ac
uuid_000000000007b3aa:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b3a7
	jmp uuid_000000000007b3a9
uuid_000000000007b3a7:
	movb $1, -312(%rbp)
uuid_000000000007b3a9:
	mov -376(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007b3ac:
	mov -360(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007b3af:
	mov -328(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007b3b2:
	mov -320(%RBP),%RSP
	add $-424, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3b7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b3b6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b3b9
uuid_000000000007b3b7:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b3b3
	jmp uuid_000000000007b3b5
uuid_000000000007b3b3:
	movq -352(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007b3b5:
	mov -432(%RBP),%RSP
	add $-432, %RSP
	movq -424(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b3b9:
	mov -256(%RBP),%RSP
	add $-432, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b3ba
uuid_000000000007b3bc:
uuid_000000000007b3cc:
	mov -144(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007b3cf
uuid_000000000007b3cd:
	pushq $0
	pushq $0
	pushq $3
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
uuid_000000000007b3cf:
	mov -112(%RBP),%RSP
	add $-136, %RSP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	subq $24, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
specialize_CL_ArrowNilConsTypeConsTContextConsTypeString:
	push %RBP
#call function is-special : Arrow<Cons<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_special_CL_ArrowU64ConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b40e
#call function normalize : Arrow<TContext,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call normalize_CL_ArrowTContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	push -152(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007b408:
#call function non-zero : Arrow<TContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64TContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b409
	jmp uuid_000000000007b40a
uuid_000000000007b409:
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	push %RBP
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b405
	push %RBP
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3dc
	jmp uuid_000000000007b3de
uuid_000000000007b3dc:
	push %RBP
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	jmp uuid_000000000007b3d9
	jmp uuid_000000000007b3db
uuid_000000000007b3d9:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007b3d6
	jmp uuid_000000000007b3d8
uuid_000000000007b3d6:
	push %RBP
	mov -656(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b3d3
	jmp uuid_000000000007b3d5
uuid_000000000007b3d3:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b3d0
	jmp uuid_000000000007b3d2
uuid_000000000007b3d0:
	movb $1, -768(%rbp)
uuid_000000000007b3d2:
	mov -912(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007b3d5:
	mov -896(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007b3d8:
	mov -864(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007b3db:
	mov -784(%RBP),%RSP
	add $-1032, %RSP
uuid_000000000007b3de:
	mov -776(%RBP),%RSP
	add $-1032, %RSP
	mov -768(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b402
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b401
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b404
uuid_000000000007b402:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b3fe
	jmp uuid_000000000007b400
uuid_000000000007b3fe:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b3fb
	jmp uuid_000000000007b3fd
uuid_000000000007b3fb:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	push %RBP
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3f1
	jmp uuid_000000000007b3f3
uuid_000000000007b3f1:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3e8
	jmp uuid_000000000007b3ea
uuid_000000000007b3e8:
	push %RBP
	jmp uuid_000000000007b3e5
	jmp uuid_000000000007b3e7
uuid_000000000007b3e5:
	push %RBP
	jmp uuid_000000000007b3e2
	jmp uuid_000000000007b3e4
uuid_000000000007b3e2:
	push %RBP
	jmp uuid_000000000007b3df
	jmp uuid_000000000007b3e1
uuid_000000000007b3df:
	movb $1, -1304(%rbp)
uuid_000000000007b3e1:
	mov -1336(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007b3e4:
	mov -1328(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007b3e7:
	mov -1320(%RBP),%RSP
	add $-1336, %RSP
uuid_000000000007b3ea:
	mov -1312(%RBP),%RSP
	add $-1336, %RSP
	mov -1304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3ee
	jmp uuid_000000000007b3f0
uuid_000000000007b3ee:
	push %RBP
	jmp uuid_000000000007b3eb
	jmp uuid_000000000007b3ed
uuid_000000000007b3eb:
	movb $1, -1208(%rbp)
uuid_000000000007b3ed:
	mov -1344(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007b3f0:
	mov -1224(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007b3f3:
	mov -1216(%RBP),%RSP
	add $-1344, %RSP
	mov -1208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b3f8
	push %RBP
	jmp uuid_000000000007b3f5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b3f4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b3f7
uuid_000000000007b3f5:
uuid_000000000007b3f7:
	mov -1352(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007b3fa
uuid_000000000007b3f8:
	movq -856(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -832(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -824(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -816(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -200(%rbp)
uuid_000000000007b3fa:
	mov -1128(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007b3fd:
	mov -1048(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007b400:
	mov -1040(%RBP),%RSP
	add $-1344, %RSP
	movq -1032(%rbp), %r15
	movq %r15, -384(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -376(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -368(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -272(%rbp)
uuid_000000000007b404:
	mov -640(%RBP),%RSP
	add $-1344, %RSP
	jmp uuid_000000000007b407
uuid_000000000007b405:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
uuid_000000000007b407:
	mov -512(%RBP),%RSP
	add $-632, %RSP
	add $120, %rsp
	add $120, %rsp
	add $8, %RSP
	jmp uuid_000000000007b408
uuid_000000000007b40a:
#call function mark-as-special : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call mark_SB_as_SB_special_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b40b
	jmp uuid_000000000007b40d
uuid_000000000007b40b:
#call function substitute : Arrow<Cons<TContext,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call substitute_CL_ArrowASTConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
#call function infer-global-context : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call infer_SB_global_SB_context_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function infer-expr : Arrow<Cons<Cons<Cons<Cons<TContext,AST>,IsScoped>,Type>,IsUsed>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $4
	mov %RBX, %RBP
	call infer_SB_expr_CL_ArrowTContextConsIsUsedConsTypeConsIsScopedConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
uuid_000000000007b40d:
	mov -392(%RBP),%RSP
	add $-464, %RSP
	jmp uuid_000000000007b410
uuid_000000000007b40e:
uuid_000000000007b410:
	mov -192(%RBP),%RSP
	add $-192, %RSP
	mov %rbp, %rsp
	sub $184, %rsp
	ret
mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType:
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b424
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b41a
	jmp uuid_000000000007b41c
uuid_000000000007b41a:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b417
	jmp uuid_000000000007b419
uuid_000000000007b417:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	jmp uuid_000000000007b414
	jmp uuid_000000000007b416
uuid_000000000007b414:
	movb $1, -240(%rbp)
uuid_000000000007b416:
	mov -304(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007b419:
	mov -256(%RBP),%RSP
	add $-328, %RSP
uuid_000000000007b41c:
	mov -248(%RBP),%RSP
	add $-328, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b421
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b420
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b423
uuid_000000000007b421:
	push %RBP
#call function is-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call is_SB_parameter_SB_flat_CL_ArrowU64ConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b41d
	jmp uuid_000000000007b41f
uuid_000000000007b41d:
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b41f:
	mov -336(%RBP),%RSP
	add $-336, %RSP
#call function mark-constructor-flat-parameters : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b423:
	mov -192(%RBP),%RSP
	add $-336, %RSP
	jmp uuid_000000000007b426
uuid_000000000007b424:
uuid_000000000007b426:
	mov -144(%RBP),%RSP
	add $-184, %RSP
	mov %rbp, %rsp
	sub $96, %rsp
	ret
mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b43f
	jmp uuid_000000000007b441
uuid_000000000007b43f:
	push %RBP
	mov -104(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b436
	jmp uuid_000000000007b438
uuid_000000000007b436:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b42d
	jmp uuid_000000000007b42f
uuid_000000000007b42d:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b42a
	jmp uuid_000000000007b42c
uuid_000000000007b42a:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007b427
	jmp uuid_000000000007b429
uuid_000000000007b427:
	movb $1, -248(%rbp)
uuid_000000000007b429:
	mov -312(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007b42c:
	mov -264(%RBP),%RSP
	add $-336, %RSP
uuid_000000000007b42f:
	mov -256(%RBP),%RSP
	add $-336, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b433
	jmp uuid_000000000007b435
uuid_000000000007b433:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007b430
	jmp uuid_000000000007b432
uuid_000000000007b430:
	movb $1, -184(%rbp)
uuid_000000000007b432:
	mov -344(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007b435:
	mov -200(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007b438:
	mov -192(%RBP),%RSP
	add $-368, %RSP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b43c
	jmp uuid_000000000007b43e
uuid_000000000007b43c:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b439
	jmp uuid_000000000007b43b
uuid_000000000007b439:
	movb $1, -120(%rbp)
uuid_000000000007b43b:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007b43e:
	mov -136(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007b441:
	mov -128(%RBP),%RSP
	add $-384, %RSP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b45b
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b448
	jmp uuid_000000000007b44a
uuid_000000000007b448:
	push %RBP
	mov -408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b445
	jmp uuid_000000000007b447
uuid_000000000007b445:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b442
	jmp uuid_000000000007b444
uuid_000000000007b442:
	movb $1, -424(%rbp)
uuid_000000000007b444:
	mov -488(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007b447:
	mov -440(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007b44a:
	mov -432(%RBP),%RSP
	add $-496, %RSP
	mov -424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b458
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b44e
	jmp uuid_000000000007b450
uuid_000000000007b44e:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b44b
	jmp uuid_000000000007b44d
uuid_000000000007b44b:
	movb $1, -536(%rbp)
uuid_000000000007b44d:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b450:
	mov -544(%RBP),%RSP
	add $-560, %RSP
	mov -536(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b455
	push %RBP
	jmp uuid_000000000007b452
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b451
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b454
uuid_000000000007b452:
uuid_000000000007b454:
	mov -568(%RBP),%RSP
	add $-568, %RSP
	jmp uuid_000000000007b457
uuid_000000000007b455:
#call function mark-parameter-flat : Arrow<Cons<Cons<String,U64>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function parameter-number : Arrow<Cons<Type,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call parameter_SB_number_CL_ArrowU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call mark_SB_parameter_SB_flat_CL_ArrowNilConsU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b457:
	mov -504(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007b45a
uuid_000000000007b458:
#call function mark-constructor-flat-parameters : Arrow<Cons<Cons<Cons<Cons<Type,String>,U64>,List<Type>>,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -496(%rbp)
#call function arity : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call arity_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsU64ConsListTypeConsU64ConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b45a:
	mov -392(%RBP),%RSP
	add $-496, %RSP
	jmp uuid_000000000007b45d
uuid_000000000007b45b:
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b45d:
	mov -88(%RBP),%RSP
	add $-384, %RSP
	mov %rbp, %rsp
	sub $56, %rsp
	ret
infer_SB_type_SB_constructor_CL_ArrowU64ConsASTType:
	pushq $0
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b464
	jmp uuid_000000000007b466
uuid_000000000007b464:
	push %RBP
	jmp uuid_000000000007b461
	jmp uuid_000000000007b463
uuid_000000000007b461:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b45e
	jmp uuid_000000000007b460
uuid_000000000007b45e:
	movb $1, -272(%rbp)
uuid_000000000007b460:
	mov -296(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007b463:
	mov -288(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007b466:
	mov -280(%RBP),%RSP
	add $-304, %RSP
	mov -272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b488
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b476
	jmp uuid_000000000007b478
uuid_000000000007b476:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b473
	jmp uuid_000000000007b475
uuid_000000000007b473:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b46d
	jmp uuid_000000000007b46f
uuid_000000000007b46d:
	push %RBP
	jmp uuid_000000000007b46a
	jmp uuid_000000000007b46c
uuid_000000000007b46a:
	push %RBP
	mov -496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b467
	jmp uuid_000000000007b469
uuid_000000000007b467:
	movb $1, -568(%rbp)
uuid_000000000007b469:
	mov -592(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007b46c:
	mov -584(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007b46f:
	mov -576(%RBP),%RSP
	add $-600, %RSP
	mov -568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b470
	jmp uuid_000000000007b472
uuid_000000000007b470:
	movb $1, -392(%rbp)
uuid_000000000007b472:
	mov -488(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007b475:
	mov -408(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007b478:
	mov -400(%RBP),%RSP
	add $-600, %RSP
	mov -392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b485
	push %RBP
	jmp uuid_000000000007b482
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b481
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b484
uuid_000000000007b482:
uuid_000000000007b484:
	mov -608(%RBP),%RSP
	add $-608, %RSP
	jmp uuid_000000000007b487
uuid_000000000007b485:
#call function type-of-s-with-fields : Arrow<Cons<Cons<Cons<Type,String>,AST>,U64>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -600(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq $1
	mov %RBX, %RBP
	call type_SB_of_SB_s_SB_with_SB_fields_CL_ArrowTypeConsU64ConsASTConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -144(%RSP)
	push -144(%RSP)
	push -144(%RSP)
#call function mark-constructor-flat-parameters : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call mark_SB_constructor_SB_flat_SB_parameters_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
#call function has-forward : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call has_SB_forward_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b47a
	jmp uuid_000000000007b47c
uuid_000000000007b47a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b479
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b47c:
	mov -632(%RBP),%RSP
	add $-632, %RSP
	push %RBP
#call function has-infinite : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call has_SB_infinite_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b47e
	jmp uuid_000000000007b480
uuid_000000000007b47e:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b47d
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b480:
	mov -640(%RBP),%RSP
	add $-640, %RSP
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079c5f
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function set-type-fields : Arrow<Cons<Type,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call set_SB_type_SB_fields_CL_ArrowNilConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-class-of-tag : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-fields-of-tag : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -600(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a89
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -112(%rbp)
	movq -112(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	movq %RAX, -112(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a46
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -600(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
uuid_000000000007b487:
	mov -312(%RBP),%RSP
	add $-688, %RSP
	jmp uuid_000000000007b48a
uuid_000000000007b488:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079c5f
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079e45
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a46
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a47
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a49
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007941a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function index-class-of-tag : Arrow<Cons<String,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call index_SB_class_SB_of_SB_tag_CL_ArrowNilConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-fields-of-tag : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call index_SB_fields_SB_of_SB_tag_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function .bind : Arrow<Cons<Cons<Array<BTreeEq<String,Type>,?>,String>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov	$type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0, %r12
	push %R12
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call _DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq $8, -112(%rbp)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a46
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
uuid_000000000007b48a:
	mov -192(%RBP),%RSP
	add $-352, %RSP
	mov -112(%rbp), %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
infer_SB_global_SB_context_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b49a
	jmp uuid_000000000007b49c
uuid_000000000007b49a:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b497
	jmp uuid_000000000007b499
uuid_000000000007b497:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b491
	jmp uuid_000000000007b493
uuid_000000000007b491:
	push %RBP
	jmp uuid_000000000007b48e
	jmp uuid_000000000007b490
uuid_000000000007b48e:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b48b
	jmp uuid_000000000007b48d
uuid_000000000007b48b:
	movb $1, -416(%rbp)
uuid_000000000007b48d:
	mov -440(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007b490:
	mov -432(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007b493:
	mov -424(%RBP),%RSP
	add $-448, %RSP
	mov -416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b494
	jmp uuid_000000000007b496
uuid_000000000007b494:
	movb $1, -240(%rbp)
uuid_000000000007b496:
	mov -336(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007b499:
	mov -256(%RBP),%RSP
	add $-448, %RSP
uuid_000000000007b49c:
	mov -248(%RBP),%RSP
	add $-448, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b543
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4ec
	jmp uuid_000000000007b4ee
uuid_000000000007b4ec:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4d7
	jmp uuid_000000000007b4d9
uuid_000000000007b4d7:
	push %RBP
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007b4d4
	jmp uuid_000000000007b4d6
uuid_000000000007b4d4:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4cb
	jmp uuid_000000000007b4cd
uuid_000000000007b4cb:
	push %RBP
	mov -816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4b9
	jmp uuid_000000000007b4bb
uuid_000000000007b4b9:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4b0
	jmp uuid_000000000007b4b2
uuid_000000000007b4b0:
	push %RBP
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	jmp uuid_000000000007b4ad
	jmp uuid_000000000007b4af
uuid_000000000007b4ad:
	movb $1, -1024(%rbp)
uuid_000000000007b4af:
	mov -1040(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007b4b2:
	mov -1032(%RBP),%RSP
	add $-1064, %RSP
	mov -1024(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4b6
	jmp uuid_000000000007b4b8
uuid_000000000007b4b6:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b4b3
	jmp uuid_000000000007b4b5
uuid_000000000007b4b3:
	movb $1, -928(%rbp)
uuid_000000000007b4b5:
	mov -1072(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007b4b8:
	mov -944(%RBP),%RSP
	add $-1144, %RSP
uuid_000000000007b4bb:
	mov -936(%RBP),%RSP
	add $-1144, %RSP
	mov -928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4c8
	jmp uuid_000000000007b4ca
uuid_000000000007b4c8:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1224(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4c2
	jmp uuid_000000000007b4c4
uuid_000000000007b4c2:
	push %RBP
	jmp uuid_000000000007b4bf
	jmp uuid_000000000007b4c1
uuid_000000000007b4bf:
	push %RBP
	mov -1160(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1264(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b4bc
	jmp uuid_000000000007b4be
uuid_000000000007b4bc:
	movb $1, -1232(%rbp)
uuid_000000000007b4be:
	mov -1256(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007b4c1:
	mov -1248(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007b4c4:
	mov -1240(%RBP),%RSP
	add $-1264, %RSP
	mov -1232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4c5
	jmp uuid_000000000007b4c7
uuid_000000000007b4c5:
	movb $1, -832(%rbp)
uuid_000000000007b4c7:
	mov -1152(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007b4ca:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007b4cd:
	mov -840(%RBP),%RSP
	add $-1264, %RSP
	mov -832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4d1
	jmp uuid_000000000007b4d3
uuid_000000000007b4d1:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b4ce
	jmp uuid_000000000007b4d0
uuid_000000000007b4ce:
	movb $1, -704(%rbp)
uuid_000000000007b4d0:
	mov -1272(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007b4d3:
	mov -752(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007b4d6:
	mov -720(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007b4d9:
	mov -712(%RBP),%RSP
	add $-1344, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4e9
	jmp uuid_000000000007b4eb
uuid_000000000007b4e9:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq $0
	push %RBP
	mov -1408(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4e3
	jmp uuid_000000000007b4e5
uuid_000000000007b4e3:
	push %RBP
	jmp uuid_000000000007b4e0
	jmp uuid_000000000007b4e2
uuid_000000000007b4e0:
	push %RBP
	jmp uuid_000000000007b4dd
	jmp uuid_000000000007b4df
uuid_000000000007b4dd:
	push %RBP
	mov -1360(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b4da
	jmp uuid_000000000007b4dc
uuid_000000000007b4da:
	movb $1, -1416(%rbp)
uuid_000000000007b4dc:
	mov -1448(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007b4df:
	mov -1440(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007b4e2:
	mov -1432(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007b4e5:
	mov -1424(%RBP),%RSP
	add $-1456, %RSP
	mov -1416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4e6
	jmp uuid_000000000007b4e8
uuid_000000000007b4e6:
	movb $1, -536(%rbp)
uuid_000000000007b4e8:
	mov -1352(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007b4eb:
	mov -552(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007b4ee:
	mov -544(%RBP),%RSP
	add $-1456, %RSP
	mov -536(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b540
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b529
	jmp uuid_000000000007b52b
uuid_000000000007b529:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1632(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b514
	jmp uuid_000000000007b516
uuid_000000000007b514:
	push %RBP
	mov -1624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1728(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b502
	jmp uuid_000000000007b504
uuid_000000000007b502:
	push %RBP
	mov -1720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1824(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4f9
	jmp uuid_000000000007b4fb
uuid_000000000007b4f9:
	push %RBP
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007b4f6
	jmp uuid_000000000007b4f8
uuid_000000000007b4f6:
	movb $1, -1832(%rbp)
uuid_000000000007b4f8:
	mov -1848(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007b4fb:
	mov -1840(%RBP),%RSP
	add $-1872, %RSP
	mov -1832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4ff
	jmp uuid_000000000007b501
uuid_000000000007b4ff:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b4fc
	jmp uuid_000000000007b4fe
uuid_000000000007b4fc:
	movb $1, -1736(%rbp)
uuid_000000000007b4fe:
	mov -1880(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007b501:
	mov -1752(%RBP),%RSP
	add $-1952, %RSP
uuid_000000000007b504:
	mov -1744(%RBP),%RSP
	add $-1952, %RSP
	mov -1736(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b511
	jmp uuid_000000000007b513
uuid_000000000007b511:
	push %RBP
	mov -1616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2032(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b50b
	jmp uuid_000000000007b50d
uuid_000000000007b50b:
	push %RBP
	jmp uuid_000000000007b508
	jmp uuid_000000000007b50a
uuid_000000000007b508:
	push %RBP
	mov -1968(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2072(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b505
	jmp uuid_000000000007b507
uuid_000000000007b505:
	movb $1, -2040(%rbp)
uuid_000000000007b507:
	mov -2064(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007b50a:
	mov -2056(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007b50d:
	mov -2048(%RBP),%RSP
	add $-2072, %RSP
	mov -2040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b50e
	jmp uuid_000000000007b510
uuid_000000000007b50e:
	movb $1, -1640(%rbp)
uuid_000000000007b510:
	mov -1960(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007b513:
	mov -1656(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007b516:
	mov -1648(%RBP),%RSP
	add $-2072, %RSP
	mov -1640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b526
	jmp uuid_000000000007b528
uuid_000000000007b526:
	push %RBP
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq $0
	push %RBP
	mov -2136(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b520
	jmp uuid_000000000007b522
uuid_000000000007b520:
	push %RBP
	jmp uuid_000000000007b51d
	jmp uuid_000000000007b51f
uuid_000000000007b51d:
	push %RBP
	jmp uuid_000000000007b51a
	jmp uuid_000000000007b51c
uuid_000000000007b51a:
	push %RBP
	mov -2088(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b517
	jmp uuid_000000000007b519
uuid_000000000007b517:
	movb $1, -2144(%rbp)
uuid_000000000007b519:
	mov -2176(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007b51c:
	mov -2168(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007b51f:
	mov -2160(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007b522:
	mov -2152(%RBP),%RSP
	add $-2184, %RSP
	mov -2144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b523
	jmp uuid_000000000007b525
uuid_000000000007b523:
	movb $1, -1544(%rbp)
uuid_000000000007b525:
	mov -2080(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007b528:
	mov -1560(%RBP),%RSP
	add $-2184, %RSP
uuid_000000000007b52b:
	mov -1552(%RBP),%RSP
	add $-2184, %RSP
	mov -1544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b53d
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2264(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b532
	jmp uuid_000000000007b534
uuid_000000000007b532:
	push %RBP
	jmp uuid_000000000007b52f
	jmp uuid_000000000007b531
uuid_000000000007b52f:
	push %RBP
	jmp uuid_000000000007b52c
	jmp uuid_000000000007b52e
uuid_000000000007b52c:
	movb $1, -2272(%rbp)
uuid_000000000007b52e:
	mov -2296(%RBP),%RSP
	add $-2296, %RSP
uuid_000000000007b531:
	mov -2288(%RBP),%RSP
	add $-2296, %RSP
uuid_000000000007b534:
	mov -2280(%RBP),%RSP
	add $-2296, %RSP
	mov -2272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b53a
	push %RBP
	jmp uuid_000000000007b537
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b536
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b539
uuid_000000000007b537:
uuid_000000000007b539:
	mov -2304(%RBP),%RSP
	add $-2304, %RSP
	jmp uuid_000000000007b53c
uuid_000000000007b53a:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b535
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b53c:
	mov -2192(%RBP),%RSP
	add $-2296, %RSP
	jmp uuid_000000000007b53f
uuid_000000000007b53d:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
#call function mark-global-as-seen : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b53f:
	mov -1464(%RBP),%RSP
	add $-2208, %RSP
	jmp uuid_000000000007b542
uuid_000000000007b540:
#call function typeof-lhs : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	mov %RBX, %RBP
	call typeof_SB_lhs_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b4ef
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	jmp uuid_000000000007b4f1
uuid_000000000007b4ef:
uuid_000000000007b4f1:
	mov -1512(%RBP),%RSP
	add $-1512, %RSP
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a89
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function enrich : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call enrich_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1536(%RBP)
	popq -1528(%RBP)
	popq -1520(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4f3
	jmp uuid_000000000007b4f5
uuid_000000000007b4f3:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b4f2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b4f5:
	mov -1544(%RBP),%RSP
	add $-1544, %RSP
#call function mark-global-as-seen : Arrow<Cons<Cons<String,Type>,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call mark_SB_global_SB_as_SB_seen_CL_ArrowNilConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1456(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	mov $global_SB_type_SB_context_CL_TContextTContextCaseNumber2, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
uuid_000000000007b542:
	mov -456(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007b545
uuid_000000000007b543:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function infer-type-definition : Arrow<Cons<Cons<Type,AST>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq $0
	mov %RBX, %RBP
	call infer_SB_type_SB_definition_CL_ArrowU64ConsU64ConsASTType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4a3
	jmp uuid_000000000007b4a5
uuid_000000000007b4a3:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4a0
	jmp uuid_000000000007b4a2
uuid_000000000007b4a0:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b49d
	jmp uuid_000000000007b49f
uuid_000000000007b49d:
	movb $1, -544(%rbp)
uuid_000000000007b49f:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007b4a2:
	mov -560(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007b4a5:
	mov -552(%RBP),%RSP
	add $-616, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b4aa
	push %RBP
	jmp uuid_000000000007b4a7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b4a6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b4a9
uuid_000000000007b4a7:
uuid_000000000007b4a9:
	mov -624(%RBP),%RSP
	add $-624, %RSP
	jmp uuid_000000000007b4ac
uuid_000000000007b4aa:
#call function index-size-of-class : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b4ac:
	mov -512(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007b545:
	mov -160(%RBP),%RSP
	add $-616, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
assert_SB_well_SB_typed_CL_ArrowNilAST:
uuid_000000000007b553:
#call function is-seq : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call is_SB_seq_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b554
	jmp uuid_000000000007b555
uuid_000000000007b554:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b54c
	jmp uuid_000000000007b54e
uuid_000000000007b54c:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b549
	jmp uuid_000000000007b54b
uuid_000000000007b549:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b546
	jmp uuid_000000000007b548
uuid_000000000007b546:
	movb $1, -240(%rbp)
uuid_000000000007b548:
	mov -336(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007b54b:
	mov -256(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007b54e:
	mov -248(%RBP),%RSP
	add $-408, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b550
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b54f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b552
uuid_000000000007b550:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b552:
	mov -160(%RBP),%RSP
	add $-408, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b553
uuid_000000000007b555:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6d6
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6d3
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b55c
	jmp uuid_000000000007b55e
uuid_000000000007b55c:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b559
	jmp uuid_000000000007b55b
uuid_000000000007b559:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	jmp uuid_000000000007b556
	jmp uuid_000000000007b558
uuid_000000000007b556:
	movb $1, -400(%rbp)
uuid_000000000007b558:
	mov -496(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007b55b:
	mov -416(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007b55e:
	mov -408(%RBP),%RSP
	add $-552, %RSP
	mov -400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6d0
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b568
	jmp uuid_000000000007b56a
uuid_000000000007b568:
	push %RBP
	jmp uuid_000000000007b565
	jmp uuid_000000000007b567
uuid_000000000007b565:
	push %RBP
	jmp uuid_000000000007b562
	jmp uuid_000000000007b564
uuid_000000000007b562:
	movb $1, -640(%rbp)
uuid_000000000007b564:
	mov -664(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007b567:
	mov -656(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007b56a:
	mov -648(%RBP),%RSP
	add $-664, %RSP
	mov -640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6cd
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -744(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b586
	jmp uuid_000000000007b588
uuid_000000000007b586:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b583
	jmp uuid_000000000007b585
uuid_000000000007b583:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b57d
	jmp uuid_000000000007b57f
uuid_000000000007b57d:
	push %RBP
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	jmp uuid_000000000007b57a
	jmp uuid_000000000007b57c
uuid_000000000007b57a:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b577
	jmp uuid_000000000007b579
uuid_000000000007b577:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b571
	jmp uuid_000000000007b573
uuid_000000000007b571:
	push %RBP
	jmp uuid_000000000007b56e
	jmp uuid_000000000007b570
uuid_000000000007b56e:
	push %RBP
	mov -1064(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b56b
	jmp uuid_000000000007b56d
uuid_000000000007b56b:
	movb $1, -1136(%rbp)
uuid_000000000007b56d:
	mov -1160(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007b570:
	mov -1152(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007b573:
	mov -1144(%RBP),%RSP
	add $-1168, %RSP
	mov -1136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b574
	jmp uuid_000000000007b576
uuid_000000000007b574:
	movb $1, -928(%rbp)
uuid_000000000007b576:
	mov -1056(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007b579:
	mov -976(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007b57c:
	mov -944(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007b57f:
	mov -936(%RBP),%RSP
	add $-1168, %RSP
	mov -928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b580
	jmp uuid_000000000007b582
uuid_000000000007b580:
	movb $1, -752(%rbp)
uuid_000000000007b582:
	mov -848(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007b585:
	mov -768(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007b588:
	mov -760(%RBP),%RSP
	add $-1168, %RSP
	mov -752(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6ca
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1248(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b598
	jmp uuid_000000000007b59a
uuid_000000000007b598:
	push %RBP
	jmp uuid_000000000007b595
	jmp uuid_000000000007b597
uuid_000000000007b595:
	push %RBP
	mov -1232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b58f
	jmp uuid_000000000007b591
uuid_000000000007b58f:
	push %RBP
	jmp uuid_000000000007b58c
	jmp uuid_000000000007b58e
uuid_000000000007b58c:
	push %RBP
	mov -1288(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq $uuid_00000000000798a9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b589
	jmp uuid_000000000007b58b
uuid_000000000007b589:
	movb $1, -1360(%rbp)
uuid_000000000007b58b:
	mov -1384(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007b58e:
	mov -1376(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007b591:
	mov -1368(%RBP),%RSP
	add $-1392, %RSP
	mov -1360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b592
	jmp uuid_000000000007b594
uuid_000000000007b592:
	movb $1, -1256(%rbp)
uuid_000000000007b594:
	mov -1280(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007b597:
	mov -1272(%RBP),%RSP
	add $-1392, %RSP
uuid_000000000007b59a:
	mov -1264(%RBP),%RSP
	add $-1392, %RSP
	mov -1256(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6c7
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1472(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5b3
	jmp uuid_000000000007b5b5
uuid_000000000007b5b3:
	push %RBP
	mov -1464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1568(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5a1
	jmp uuid_000000000007b5a3
uuid_000000000007b5a1:
	push %RBP
	jmp uuid_000000000007b59e
	jmp uuid_000000000007b5a0
uuid_000000000007b59e:
	push %RBP
	jmp uuid_000000000007b59b
	jmp uuid_000000000007b59d
uuid_000000000007b59b:
	movb $1, -1576(%rbp)
uuid_000000000007b59d:
	mov -1600(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b5a0:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b5a3:
	mov -1584(%RBP),%RSP
	add $-1600, %RSP
	mov -1576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5b0
	jmp uuid_000000000007b5b2
uuid_000000000007b5b0:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1680(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5aa
	jmp uuid_000000000007b5ac
uuid_000000000007b5aa:
	push %RBP
	jmp uuid_000000000007b5a7
	jmp uuid_000000000007b5a9
uuid_000000000007b5a7:
	push %RBP
	mov -1616(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq $uuid_00000000000798c6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5a4
	jmp uuid_000000000007b5a6
uuid_000000000007b5a4:
	movb $1, -1688(%rbp)
uuid_000000000007b5a6:
	mov -1712(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b5a9:
	mov -1704(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b5ac:
	mov -1696(%RBP),%RSP
	add $-1720, %RSP
	mov -1688(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5ad
	jmp uuid_000000000007b5af
uuid_000000000007b5ad:
	movb $1, -1480(%rbp)
uuid_000000000007b5af:
	mov -1608(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b5b2:
	mov -1496(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b5b5:
	mov -1488(%RBP),%RSP
	add $-1720, %RSP
	mov -1480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6c4
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1800(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5d4
	jmp uuid_000000000007b5d6
uuid_000000000007b5d4:
	push %RBP
	mov -1792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5c2
	jmp uuid_000000000007b5c4
uuid_000000000007b5c2:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1992(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5b9
	jmp uuid_000000000007b5bb
uuid_000000000007b5b9:
	push %RBP
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	jmp uuid_000000000007b5b6
	jmp uuid_000000000007b5b8
uuid_000000000007b5b6:
	movb $1, -2000(%rbp)
uuid_000000000007b5b8:
	mov -2016(%RBP),%RSP
	add $-2040, %RSP
uuid_000000000007b5bb:
	mov -2008(%RBP),%RSP
	add $-2040, %RSP
	mov -2000(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5bf
	jmp uuid_000000000007b5c1
uuid_000000000007b5bf:
	push %RBP
	mov -1880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b5bc
	jmp uuid_000000000007b5be
uuid_000000000007b5bc:
	movb $1, -1904(%rbp)
uuid_000000000007b5be:
	mov -2048(%RBP),%RSP
	add $-2120, %RSP
uuid_000000000007b5c1:
	mov -1920(%RBP),%RSP
	add $-2120, %RSP
uuid_000000000007b5c4:
	mov -1912(%RBP),%RSP
	add $-2120, %RSP
	mov -1904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5d1
	jmp uuid_000000000007b5d3
uuid_000000000007b5d1:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2200(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5cb
	jmp uuid_000000000007b5cd
uuid_000000000007b5cb:
	push %RBP
	jmp uuid_000000000007b5c8
	jmp uuid_000000000007b5ca
uuid_000000000007b5c8:
	push %RBP
	mov -2136(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2240(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5c5
	jmp uuid_000000000007b5c7
uuid_000000000007b5c5:
	movb $1, -2208(%rbp)
uuid_000000000007b5c7:
	mov -2232(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007b5ca:
	mov -2224(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007b5cd:
	mov -2216(%RBP),%RSP
	add $-2240, %RSP
	mov -2208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5ce
	jmp uuid_000000000007b5d0
uuid_000000000007b5ce:
	movb $1, -1808(%rbp)
uuid_000000000007b5d0:
	mov -2128(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007b5d3:
	mov -1824(%RBP),%RSP
	add $-2240, %RSP
uuid_000000000007b5d6:
	mov -1816(%RBP),%RSP
	add $-2240, %RSP
	mov -1808(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6c1
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2320(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5f5
	jmp uuid_000000000007b5f7
uuid_000000000007b5f5:
	push %RBP
	mov -2312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2416(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5e3
	jmp uuid_000000000007b5e5
uuid_000000000007b5e3:
	push %RBP
	mov -2408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2512(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5da
	jmp uuid_000000000007b5dc
uuid_000000000007b5da:
	push %RBP
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	jmp uuid_000000000007b5d7
	jmp uuid_000000000007b5d9
uuid_000000000007b5d7:
	movb $1, -2520(%rbp)
uuid_000000000007b5d9:
	mov -2536(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007b5dc:
	mov -2528(%RBP),%RSP
	add $-2560, %RSP
	mov -2520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5e0
	jmp uuid_000000000007b5e2
uuid_000000000007b5e0:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b5dd
	jmp uuid_000000000007b5df
uuid_000000000007b5dd:
	movb $1, -2424(%rbp)
uuid_000000000007b5df:
	mov -2568(%RBP),%RSP
	add $-2640, %RSP
uuid_000000000007b5e2:
	mov -2440(%RBP),%RSP
	add $-2640, %RSP
uuid_000000000007b5e5:
	mov -2432(%RBP),%RSP
	add $-2640, %RSP
	mov -2424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5f2
	jmp uuid_000000000007b5f4
uuid_000000000007b5f2:
	push %RBP
	mov -2304(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2720(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5ec
	jmp uuid_000000000007b5ee
uuid_000000000007b5ec:
	push %RBP
	jmp uuid_000000000007b5e9
	jmp uuid_000000000007b5eb
uuid_000000000007b5e9:
	push %RBP
	mov -2656(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2760(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5e6
	jmp uuid_000000000007b5e8
uuid_000000000007b5e6:
	movb $1, -2728(%rbp)
uuid_000000000007b5e8:
	mov -2752(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007b5eb:
	mov -2744(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007b5ee:
	mov -2736(%RBP),%RSP
	add $-2760, %RSP
	mov -2728(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5ef
	jmp uuid_000000000007b5f1
uuid_000000000007b5ef:
	movb $1, -2328(%rbp)
uuid_000000000007b5f1:
	mov -2648(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007b5f4:
	mov -2344(%RBP),%RSP
	add $-2760, %RSP
uuid_000000000007b5f7:
	mov -2336(%RBP),%RSP
	add $-2760, %RSP
	mov -2328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6be
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2840(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b619
	jmp uuid_000000000007b61b
uuid_000000000007b619:
	push %RBP
	mov -2832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b616
	jmp uuid_000000000007b618
uuid_000000000007b616:
	push %RBP
	mov -2824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b610
	jmp uuid_000000000007b612
uuid_000000000007b610:
	push %RBP
	mov -3008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b60d
	jmp uuid_000000000007b60f
uuid_000000000007b60d:
	push %RBP
	mov -3000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b607
	jmp uuid_000000000007b609
uuid_000000000007b607:
	push %RBP
	mov -3184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b604
	jmp uuid_000000000007b606
uuid_000000000007b604:
	push %RBP
	mov -3176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b5fe
	jmp uuid_000000000007b600
uuid_000000000007b5fe:
	push %RBP
	jmp uuid_000000000007b5fb
	jmp uuid_000000000007b5fd
uuid_000000000007b5fb:
	push %RBP
	mov -3304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3408(%rbp)
	pushq $uuid_00000000000798d9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b5f8
	jmp uuid_000000000007b5fa
uuid_000000000007b5f8:
	movb $1, -3376(%rbp)
uuid_000000000007b5fa:
	mov -3400(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007b5fd:
	mov -3392(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007b600:
	mov -3384(%RBP),%RSP
	add $-3408, %RSP
	mov -3376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b601
	jmp uuid_000000000007b603
uuid_000000000007b601:
	movb $1, -3200(%rbp)
uuid_000000000007b603:
	mov -3296(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007b606:
	mov -3216(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007b609:
	mov -3208(%RBP),%RSP
	add $-3408, %RSP
	mov -3200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b60a
	jmp uuid_000000000007b60c
uuid_000000000007b60a:
	movb $1, -3024(%rbp)
uuid_000000000007b60c:
	mov -3120(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007b60f:
	mov -3040(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007b612:
	mov -3032(%RBP),%RSP
	add $-3408, %RSP
	mov -3024(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b613
	jmp uuid_000000000007b615
uuid_000000000007b613:
	movb $1, -2848(%rbp)
uuid_000000000007b615:
	mov -2944(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007b618:
	mov -2864(%RBP),%RSP
	add $-3408, %RSP
uuid_000000000007b61b:
	mov -2856(%RBP),%RSP
	add $-3408, %RSP
	mov -2848(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6bb
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -3488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b635
	jmp uuid_000000000007b637
uuid_000000000007b635:
	push %RBP
	mov -3480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b632
	jmp uuid_000000000007b634
uuid_000000000007b632:
	push %RBP
	mov -3472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3664(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b62c
	jmp uuid_000000000007b62e
uuid_000000000007b62c:
	push %RBP
	mov -3656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b629
	jmp uuid_000000000007b62b
uuid_000000000007b629:
	push %RBP
	mov -3648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3840(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b623
	jmp uuid_000000000007b625
uuid_000000000007b623:
	push %RBP
	jmp uuid_000000000007b620
	jmp uuid_000000000007b622
uuid_000000000007b620:
	push %RBP
	mov -3776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3880(%rbp)
	pushq $uuid_000000000007b61c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b61d
	jmp uuid_000000000007b61f
uuid_000000000007b61d:
	movb $1, -3848(%rbp)
uuid_000000000007b61f:
	mov -3872(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007b622:
	mov -3864(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007b625:
	mov -3856(%RBP),%RSP
	add $-3880, %RSP
	mov -3848(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b626
	jmp uuid_000000000007b628
uuid_000000000007b626:
	movb $1, -3672(%rbp)
uuid_000000000007b628:
	mov -3768(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007b62b:
	mov -3688(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007b62e:
	mov -3680(%RBP),%RSP
	add $-3880, %RSP
	mov -3672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b62f
	jmp uuid_000000000007b631
uuid_000000000007b62f:
	movb $1, -3496(%rbp)
uuid_000000000007b631:
	mov -3592(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007b634:
	mov -3512(%RBP),%RSP
	add $-3880, %RSP
uuid_000000000007b637:
	mov -3504(%RBP),%RSP
	add $-3880, %RSP
	mov -3496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6b8
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -3960(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b63b
	jmp uuid_000000000007b63d
uuid_000000000007b63b:
	push %RBP
	jmp uuid_000000000007b638
	jmp uuid_000000000007b63a
uuid_000000000007b638:
	movb $1, -3968(%rbp)
uuid_000000000007b63a:
	mov -3984(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007b63d:
	mov -3976(%RBP),%RSP
	add $-3984, %RSP
	mov -3968(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6b5
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4064(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b64d
	jmp uuid_000000000007b64f
uuid_000000000007b64d:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b64a
	jmp uuid_000000000007b64c
uuid_000000000007b64a:
	push %RBP
	mov -4048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4240(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b644
	jmp uuid_000000000007b646
uuid_000000000007b644:
	push %RBP
	jmp uuid_000000000007b641
	jmp uuid_000000000007b643
uuid_000000000007b641:
	push %RBP
	mov -4176(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4280(%rbp)
	pushq $uuid_0000000000079989
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b63e
	jmp uuid_000000000007b640
uuid_000000000007b63e:
	movb $1, -4248(%rbp)
uuid_000000000007b640:
	mov -4272(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007b643:
	mov -4264(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007b646:
	mov -4256(%RBP),%RSP
	add $-4280, %RSP
	mov -4248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b647
	jmp uuid_000000000007b649
uuid_000000000007b647:
	movb $1, -4072(%rbp)
uuid_000000000007b649:
	mov -4168(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007b64c:
	mov -4088(%RBP),%RSP
	add $-4280, %RSP
uuid_000000000007b64f:
	mov -4080(%RBP),%RSP
	add $-4280, %RSP
	mov -4072(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6b2
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b65f
	jmp uuid_000000000007b661
uuid_000000000007b65f:
	push %RBP
	mov -4352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b65c
	jmp uuid_000000000007b65e
uuid_000000000007b65c:
	push %RBP
	mov -4344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4536(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b656
	jmp uuid_000000000007b658
uuid_000000000007b656:
	push %RBP
	jmp uuid_000000000007b653
	jmp uuid_000000000007b655
uuid_000000000007b653:
	push %RBP
	mov -4472(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq $uuid_0000000000079976
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b650
	jmp uuid_000000000007b652
uuid_000000000007b650:
	movb $1, -4544(%rbp)
uuid_000000000007b652:
	mov -4568(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007b655:
	mov -4560(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007b658:
	mov -4552(%RBP),%RSP
	add $-4576, %RSP
	mov -4544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b659
	jmp uuid_000000000007b65b
uuid_000000000007b659:
	movb $1, -4368(%rbp)
uuid_000000000007b65b:
	mov -4464(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007b65e:
	mov -4384(%RBP),%RSP
	add $-4576, %RSP
uuid_000000000007b661:
	mov -4376(%RBP),%RSP
	add $-4576, %RSP
	mov -4368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6af
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4656(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b668
	jmp uuid_000000000007b66a
uuid_000000000007b668:
	push %RBP
	jmp uuid_000000000007b665
	jmp uuid_000000000007b667
uuid_000000000007b665:
	push %RBP
	mov -4592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b662
	jmp uuid_000000000007b664
uuid_000000000007b662:
	movb $1, -4664(%rbp)
uuid_000000000007b664:
	mov -4688(%RBP),%RSP
	add $-4696, %RSP
uuid_000000000007b667:
	mov -4680(%RBP),%RSP
	add $-4696, %RSP
uuid_000000000007b66a:
	mov -4672(%RBP),%RSP
	add $-4696, %RSP
	mov -4664(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6ac
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4776(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b671
	jmp uuid_000000000007b673
uuid_000000000007b671:
	push %RBP
	jmp uuid_000000000007b66e
	jmp uuid_000000000007b670
uuid_000000000007b66e:
	push %RBP
	mov -4712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b66b
	jmp uuid_000000000007b66d
uuid_000000000007b66b:
	movb $1, -4784(%rbp)
uuid_000000000007b66d:
	mov -4808(%RBP),%RSP
	add $-4816, %RSP
uuid_000000000007b670:
	mov -4800(%RBP),%RSP
	add $-4816, %RSP
uuid_000000000007b673:
	mov -4792(%RBP),%RSP
	add $-4816, %RSP
	mov -4784(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6a9
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -4896(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b67d
	jmp uuid_000000000007b67f
uuid_000000000007b67d:
	push %RBP
	pushq -4872(%RBP)
	pushq -4880(%RBP)
	pushq -4888(%RBP)
	jmp uuid_000000000007b67a
	jmp uuid_000000000007b67c
uuid_000000000007b67a:
	push %RBP
	mov -4864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b677
	jmp uuid_000000000007b679
uuid_000000000007b677:
	push %RBP
	mov -4856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b674
	jmp uuid_000000000007b676
uuid_000000000007b674:
	movb $1, -4904(%rbp)
uuid_000000000007b676:
	mov -5032(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007b679:
	mov -4952(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007b67c:
	mov -4920(%RBP),%RSP
	add $-5104, %RSP
uuid_000000000007b67f:
	mov -4912(%RBP),%RSP
	add $-5104, %RSP
	mov -4904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6a6
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5184(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b686
	jmp uuid_000000000007b688
uuid_000000000007b686:
	push %RBP
	mov -5176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b683
	jmp uuid_000000000007b685
uuid_000000000007b683:
	push %RBP
	mov -5168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b680
	jmp uuid_000000000007b682
uuid_000000000007b680:
	movb $1, -5192(%rbp)
uuid_000000000007b682:
	mov -5288(%RBP),%RSP
	add $-5360, %RSP
uuid_000000000007b685:
	mov -5208(%RBP),%RSP
	add $-5360, %RSP
uuid_000000000007b688:
	mov -5200(%RBP),%RSP
	add $-5360, %RSP
	mov -5192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6a3
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5440(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b68f
	jmp uuid_000000000007b691
uuid_000000000007b68f:
	push %RBP
	mov -5432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b68c
	jmp uuid_000000000007b68e
uuid_000000000007b68c:
	push %RBP
	mov -5424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b689
	jmp uuid_000000000007b68b
uuid_000000000007b689:
	movb $1, -5448(%rbp)
uuid_000000000007b68b:
	mov -5544(%RBP),%RSP
	add $-5616, %RSP
uuid_000000000007b68e:
	mov -5464(%RBP),%RSP
	add $-5616, %RSP
uuid_000000000007b691:
	mov -5456(%RBP),%RSP
	add $-5616, %RSP
	mov -5448(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6a0
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -5696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b695
	jmp uuid_000000000007b697
uuid_000000000007b695:
	push %RBP
	jmp uuid_000000000007b692
	jmp uuid_000000000007b694
uuid_000000000007b692:
	movb $1, -5704(%rbp)
uuid_000000000007b694:
	mov -5720(%RBP),%RSP
	add $-5720, %RSP
uuid_000000000007b697:
	mov -5712(%RBP),%RSP
	add $-5720, %RSP
	mov -5704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b69d
	push %RBP
	jmp uuid_000000000007b69a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b699
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b69c
uuid_000000000007b69a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b698
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b69c:
	mov -5728(%RBP),%RSP
	add $-5728, %RSP
	jmp uuid_000000000007b69f
uuid_000000000007b69d:
uuid_000000000007b69f:
	mov -5624(%RBP),%RSP
	add $-5720, %RSP
	jmp uuid_000000000007b6a2
uuid_000000000007b6a0:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6a2:
	mov -5368(%RBP),%RSP
	add $-5616, %RSP
	jmp uuid_000000000007b6a5
uuid_000000000007b6a3:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6a5:
	mov -5112(%RBP),%RSP
	add $-5360, %RSP
	jmp uuid_000000000007b6a8
uuid_000000000007b6a6:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6a8:
	mov -4824(%RBP),%RSP
	add $-5104, %RSP
	jmp uuid_000000000007b6ab
uuid_000000000007b6a9:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6ab:
	mov -4704(%RBP),%RSP
	add $-4816, %RSP
	jmp uuid_000000000007b6ae
uuid_000000000007b6ac:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6ae:
	mov -4584(%RBP),%RSP
	add $-4696, %RSP
	jmp uuid_000000000007b6b1
uuid_000000000007b6af:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6b1:
	mov -4288(%RBP),%RSP
	add $-4576, %RSP
	jmp uuid_000000000007b6b4
uuid_000000000007b6b2:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	pushq -4136(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6b4:
	mov -3992(%RBP),%RSP
	add $-4280, %RSP
	jmp uuid_000000000007b6b7
uuid_000000000007b6b5:
uuid_000000000007b6b7:
	mov -3888(%RBP),%RSP
	add $-3984, %RSP
	jmp uuid_000000000007b6ba
uuid_000000000007b6b8:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3520(%rbp)
	pushq -3528(%rbp)
	pushq -3536(%rbp)
	pushq -3544(%rbp)
	pushq -3552(%rbp)
	pushq -3560(%rbp)
	pushq -3568(%rbp)
	pushq -3576(%rbp)
	pushq -3584(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6ba:
	mov -3416(%RBP),%RSP
	add $-3880, %RSP
	jmp uuid_000000000007b6bd
uuid_000000000007b6bb:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	pushq -3240(%rbp)
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	pushq -3264(%rbp)
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq -3056(%rbp)
	pushq -3064(%rbp)
	pushq -3072(%rbp)
	pushq -3080(%rbp)
	pushq -3088(%rbp)
	pushq -3096(%rbp)
	pushq -3104(%rbp)
	pushq -3112(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6bd:
	mov -2768(%RBP),%RSP
	add $-3408, %RSP
	jmp uuid_000000000007b6c0
uuid_000000000007b6be:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq -2616(%rbp)
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6c0:
	mov -2248(%RBP),%RSP
	add $-2760, %RSP
	jmp uuid_000000000007b6c3
uuid_000000000007b6c1:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6c3:
	mov -1728(%RBP),%RSP
	add $-2240, %RSP
	jmp uuid_000000000007b6c6
uuid_000000000007b6c4:
uuid_000000000007b6c6:
	mov -1400(%RBP),%RSP
	add $-1720, %RSP
	jmp uuid_000000000007b6c9
uuid_000000000007b6c7:
uuid_000000000007b6c9:
	mov -1176(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007b6cc
uuid_000000000007b6ca:
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6cc:
	mov -672(%RBP),%RSP
	add $-1168, %RSP
	jmp uuid_000000000007b6cf
uuid_000000000007b6cd:
uuid_000000000007b6cf:
	mov -560(%RBP),%RSP
	add $-664, %RSP
	jmp uuid_000000000007b6d2
uuid_000000000007b6d0:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b55f
#call function assert-well-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call assert_SB_well_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b561
uuid_000000000007b55f:
uuid_000000000007b561:
	mov -560(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b6d2:
	mov -320(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007b6d5
uuid_000000000007b6d3:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6d5:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007b6d8
uuid_000000000007b6d6:
#call function assert-one-typed : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call assert_SB_one_SB_typed_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b6d8:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
assert_SB_one_SB_typed_CL_ArrowNilAST:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6d9
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a04
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b6db
uuid_000000000007b6d9:
uuid_000000000007b6db:
	mov -88(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
infer_SB_ctx_CL_ArrowTContextConsASTTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b703
	jmp uuid_000000000007b705
uuid_000000000007b703:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6f1
	jmp uuid_000000000007b6f3
uuid_000000000007b6f1:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6df
	jmp uuid_000000000007b6e1
uuid_000000000007b6df:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007b6dc
	jmp uuid_000000000007b6de
uuid_000000000007b6dc:
	movb $1, -552(%rbp)
uuid_000000000007b6de:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007b6e1:
	mov -560(%RBP),%RSP
	add $-592, %RSP
	mov -552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6ee
	jmp uuid_000000000007b6f0
uuid_000000000007b6ee:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6e8
	jmp uuid_000000000007b6ea
uuid_000000000007b6e8:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007b6e5
	jmp uuid_000000000007b6e7
uuid_000000000007b6e5:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b6e2
	jmp uuid_000000000007b6e4
uuid_000000000007b6e2:
	movb $1, -680(%rbp)
uuid_000000000007b6e4:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007b6e7:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007b6ea:
	mov -688(%RBP),%RSP
	add $-768, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6eb
	jmp uuid_000000000007b6ed
uuid_000000000007b6eb:
	movb $1, -456(%rbp)
uuid_000000000007b6ed:
	mov -600(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007b6f0:
	mov -472(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007b6f3:
	mov -464(%RBP),%RSP
	add $-768, %RSP
	mov -456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b700
	jmp uuid_000000000007b702
uuid_000000000007b700:
	push %RBP
	mov -336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6fa
	jmp uuid_000000000007b6fc
uuid_000000000007b6fa:
	push %RBP
	jmp uuid_000000000007b6f7
	jmp uuid_000000000007b6f9
uuid_000000000007b6f7:
	push %RBP
	mov -784(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b6f4
	jmp uuid_000000000007b6f6
uuid_000000000007b6f4:
	movb $1, -856(%rbp)
uuid_000000000007b6f6:
	mov -880(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007b6f9:
	mov -872(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007b6fc:
	mov -864(%RBP),%RSP
	add $-888, %RSP
	mov -856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b6fd
	jmp uuid_000000000007b6ff
uuid_000000000007b6fd:
	movb $1, -360(%rbp)
uuid_000000000007b6ff:
	mov -776(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007b702:
	mov -376(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007b705:
	mov -368(%RBP),%RSP
	add $-888, %RSP
	mov -360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b744
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b736
	jmp uuid_000000000007b738
uuid_000000000007b736:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b72d
	jmp uuid_000000000007b72f
uuid_000000000007b72d:
	push %RBP
	mov -1056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b71b
	jmp uuid_000000000007b71d
uuid_000000000007b71b:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b709
	jmp uuid_000000000007b70b
uuid_000000000007b709:
	push %RBP
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	jmp uuid_000000000007b706
	jmp uuid_000000000007b708
uuid_000000000007b706:
	movb $1, -1264(%rbp)
uuid_000000000007b708:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007b70b:
	mov -1272(%RBP),%RSP
	add $-1304, %RSP
	mov -1264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b718
	jmp uuid_000000000007b71a
uuid_000000000007b718:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b712
	jmp uuid_000000000007b714
uuid_000000000007b712:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	jmp uuid_000000000007b70f
	jmp uuid_000000000007b711
uuid_000000000007b70f:
	push %RBP
	mov -1320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b70c
	jmp uuid_000000000007b70e
uuid_000000000007b70c:
	movb $1, -1392(%rbp)
uuid_000000000007b70e:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007b711:
	mov -1408(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007b714:
	mov -1400(%RBP),%RSP
	add $-1480, %RSP
	mov -1392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b715
	jmp uuid_000000000007b717
uuid_000000000007b715:
	movb $1, -1168(%rbp)
uuid_000000000007b717:
	mov -1312(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007b71a:
	mov -1184(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007b71d:
	mov -1176(%RBP),%RSP
	add $-1480, %RSP
	mov -1168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b72a
	jmp uuid_000000000007b72c
uuid_000000000007b72a:
	push %RBP
	mov -1048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b724
	jmp uuid_000000000007b726
uuid_000000000007b724:
	push %RBP
	jmp uuid_000000000007b721
	jmp uuid_000000000007b723
uuid_000000000007b721:
	push %RBP
	mov -1496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1600(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b71e
	jmp uuid_000000000007b720
uuid_000000000007b71e:
	movb $1, -1568(%rbp)
uuid_000000000007b720:
	mov -1592(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b723:
	mov -1584(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b726:
	mov -1576(%RBP),%RSP
	add $-1600, %RSP
	mov -1568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b727
	jmp uuid_000000000007b729
uuid_000000000007b727:
	movb $1, -1072(%rbp)
uuid_000000000007b729:
	mov -1488(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b72c:
	mov -1088(%RBP),%RSP
	add $-1600, %RSP
uuid_000000000007b72f:
	mov -1080(%RBP),%RSP
	add $-1600, %RSP
	mov -1072(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b733
	jmp uuid_000000000007b735
uuid_000000000007b733:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b730
	jmp uuid_000000000007b732
uuid_000000000007b730:
	movb $1, -976(%rbp)
uuid_000000000007b732:
	mov -1608(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007b735:
	mov -992(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007b738:
	mov -984(%RBP),%RSP
	add $-1680, %RSP
	mov -976(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b741
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov -1760(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b73e
	push %RBP
	jmp uuid_000000000007b73b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b73a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b73d
uuid_000000000007b73b:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b739
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b73d:
	mov -1768(%RBP),%RSP
	add $-1768, %RSP
	jmp uuid_000000000007b740
uuid_000000000007b73e:
uuid_000000000007b740:
	mov -1688(%RBP),%RSP
	add $-1760, %RSP
	jmp uuid_000000000007b743
uuid_000000000007b741:
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1480(%rbp)
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -1480(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq $7
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-ctx : Arrow<Cons<TContext,AST>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	mov %RBX, %RBP
	call infer_SB_ctx_CL_ArrowTContextConsASTTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b743:
	mov -896(%RBP),%RSP
	add $-1680, %RSP
	jmp uuid_000000000007b746
uuid_000000000007b744:
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -768(%rbp)
#call function as-local-variable : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call as_SB_local_SB_variable_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -768(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq $7
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b746:
	mov -280(%RBP),%RSP
	add $-888, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $200, %rsp
	ret
infer_SB_tctx_CL_ArrowTContextConsListTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b756
	push %RBP
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b74f
	jmp uuid_000000000007b751
uuid_000000000007b74f:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b74c
	jmp uuid_000000000007b74e
uuid_000000000007b74c:
	push %RBP
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007b749
	jmp uuid_000000000007b74b
uuid_000000000007b749:
	movb $1, -312(%rbp)
uuid_000000000007b74b:
	mov -376(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007b74e:
	mov -328(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007b751:
	mov -320(%RBP),%RSP
	add $-400, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b753
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b752
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b755
uuid_000000000007b753:
#call function infer-tctx : Arrow<Cons<TContext,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b755:
	mov -264(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007b758
uuid_000000000007b756:
uuid_000000000007b758:
	mov -216(%RBP),%RSP
	add $-256, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
infer_SB_tctx_CL_ArrowTContextConsTypeTContext:
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b75f
	jmp uuid_000000000007b761
uuid_000000000007b75f:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b75c
	jmp uuid_000000000007b75e
uuid_000000000007b75c:
	push %RBP
	mov -192(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b759
	jmp uuid_000000000007b75b
uuid_000000000007b759:
	movb $1, -216(%rbp)
uuid_000000000007b75b:
	mov -264(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b75e:
	mov -232(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007b761:
	mov -224(%RBP),%RSP
	add $-288, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b77b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -320(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b765
	jmp uuid_000000000007b767
uuid_000000000007b765:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b762
	jmp uuid_000000000007b764
uuid_000000000007b762:
	movb $1, -328(%rbp)
uuid_000000000007b764:
	mov -344(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007b767:
	mov -336(%RBP),%RSP
	add $-352, %RSP
	mov -328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b778
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b76e
	jmp uuid_000000000007b770
uuid_000000000007b76e:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b76b
	jmp uuid_000000000007b76d
uuid_000000000007b76b:
	push %RBP
	jmp uuid_000000000007b768
	jmp uuid_000000000007b76a
uuid_000000000007b768:
	movb $1, -392(%rbp)
uuid_000000000007b76a:
	mov -456(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007b76d:
	mov -408(%RBP),%RSP
	add $-456, %RSP
uuid_000000000007b770:
	mov -400(%RBP),%RSP
	add $-456, %RSP
	mov -392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b775
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b772
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b771
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b774
uuid_000000000007b772:
uuid_000000000007b774:
	mov -464(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007b777
uuid_000000000007b775:
#call function infer-tctx : Arrow<Cons<TContext,List<Type>>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsListTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b777:
	mov -360(%RBP),%RSP
	add $-456, %RSP
	jmp uuid_000000000007b77a
uuid_000000000007b778:
#call function close : Arrow<TContext,Array<TContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TContextTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -352(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079e45
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b77a:
	mov -296(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007b77d
uuid_000000000007b77b:
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function infer-tctx : Arrow<Cons<TContext,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call infer_SB_tctx_CL_ArrowTContextConsTypeTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b77d:
	mov -184(%RBP),%RSP
	add $-288, %RSP
	subq $120, %rsp
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	addq $120, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
compile_SB_exit_SB_cleanup_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b77e
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b77f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b780
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_data_SB_header_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b781
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_text_SB_header_CL_ArrowSNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b782
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b783
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b784
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b787
	jmp uuid_000000000007b789
uuid_000000000007b787:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b785
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b786
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007b789:
	mov -40(%RBP),%RSP
	add $-40, %RSP
	push %RBP
	mov $main_SB_with_SB_argv_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b78c
	jmp uuid_000000000007b78e
uuid_000000000007b78c:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b78a
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b78b
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007b78e:
	mov -48(%RBP),%RSP
	add $-48, %RSP
	push %RBP
	mov $main_SB_with_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b799
	jmp uuid_000000000007b79b
uuid_000000000007b799:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b78f
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b790
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
	mov $main_SB_with_SB_argv_CL_U8, %RAX
	mov 0(%RAX), %AL
	cmp $0, %AL
	jne uuid_000000000007b793
	jmp uuid_000000000007b795
uuid_000000000007b793:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b791
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b792
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007b795:
	mov -64(%RBP),%RSP
	add $-64, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b796
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b797
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b798
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007b79b:
	mov -56(%RBP),%RSP
	add $-64, %RSP
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_CL_ArrowNilNil:
	mov $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %r15
	pushq 0(%r15)
	push %RBP
	pushq -16(%rbp)
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7a0
	push %RBP
	pushq -16(%rbp)
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b79d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b79c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b79f
uuid_000000000007b79d:
#call function compile-blob : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_blob_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b79f:
	mov -40(%RBP),%RSP
	add $-48, %RSP
	jmp uuid_000000000007b7a2
uuid_000000000007b7a0:
#call function compile-gnu : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_gnu_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b7a2:
	mov -24(%RBP),%RSP
	add $-32, %RSP
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_blob_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007b7fb:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b7fc
	jmp uuid_000000000007b7fd
uuid_000000000007b7fc:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7b2
	jmp uuid_000000000007b7b4
uuid_000000000007b7b2:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7a9
	jmp uuid_000000000007b7ab
uuid_000000000007b7a9:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7a6
	jmp uuid_000000000007b7a8
uuid_000000000007b7a6:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7a3
	jmp uuid_000000000007b7a5
uuid_000000000007b7a3:
	movb $1, -336(%rbp)
uuid_000000000007b7a5:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007b7a8:
	mov -352(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007b7ab:
	mov -344(%RBP),%RSP
	add $-504, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7af
	jmp uuid_000000000007b7b1
uuid_000000000007b7af:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7ac
	jmp uuid_000000000007b7ae
uuid_000000000007b7ac:
	movb $1, -240(%rbp)
uuid_000000000007b7ae:
	mov -512(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007b7b1:
	mov -256(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007b7b4:
	mov -248(%RBP),%RSP
	add $-584, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7f8
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7d0
	jmp uuid_000000000007b7d2
uuid_000000000007b7d0:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7c7
	jmp uuid_000000000007b7c9
uuid_000000000007b7c7:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7c4
	jmp uuid_000000000007b7c6
uuid_000000000007b7c4:
	push %RBP
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7be
	jmp uuid_000000000007b7c0
uuid_000000000007b7be:
	push %RBP
	jmp uuid_000000000007b7bb
	jmp uuid_000000000007b7bd
uuid_000000000007b7bb:
	push %RBP
	jmp uuid_000000000007b7b8
	jmp uuid_000000000007b7ba
uuid_000000000007b7b8:
	push %RBP
	mov -872(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b7b5
	jmp uuid_000000000007b7b7
uuid_000000000007b7b5:
	movb $1, -928(%rbp)
uuid_000000000007b7b7:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b7ba:
	mov -952(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b7bd:
	mov -944(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b7c0:
	mov -936(%RBP),%RSP
	add $-968, %RSP
	mov -928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7c1
	jmp uuid_000000000007b7c3
uuid_000000000007b7c1:
	movb $1, -768(%rbp)
uuid_000000000007b7c3:
	mov -864(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b7c6:
	mov -784(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b7c9:
	mov -776(%RBP),%RSP
	add $-968, %RSP
	mov -768(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7cd
	jmp uuid_000000000007b7cf
uuid_000000000007b7cd:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7ca
	jmp uuid_000000000007b7cc
uuid_000000000007b7ca:
	movb $1, -672(%rbp)
uuid_000000000007b7cc:
	mov -976(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007b7cf:
	mov -688(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007b7d2:
	mov -680(%RBP),%RSP
	add $-1048, %RSP
	mov -672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7f5
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7ee
	jmp uuid_000000000007b7f0
uuid_000000000007b7ee:
	push %RBP
	mov -1120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7eb
	jmp uuid_000000000007b7ed
uuid_000000000007b7eb:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b7e8
	jmp uuid_000000000007b7ea
uuid_000000000007b7e8:
	movb $1, -1136(%rbp)
uuid_000000000007b7ea:
	mov -1232(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007b7ed:
	mov -1152(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007b7f0:
	mov -1144(%RBP),%RSP
	add $-1304, %RSP
	mov -1136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7f2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b7f1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b7f4
uuid_000000000007b7f2:
	movq -1304(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b7f4:
	mov -1056(%RBP),%RSP
	add $-1304, %RSP
	jmp uuid_000000000007b7f7
uuid_000000000007b7f5:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	push %RBP
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7dc
	jmp uuid_000000000007b7de
uuid_000000000007b7dc:
	push %RBP
	jmp uuid_000000000007b7d9
	jmp uuid_000000000007b7db
uuid_000000000007b7d9:
	push %RBP
	jmp uuid_000000000007b7d6
	jmp uuid_000000000007b7d8
uuid_000000000007b7d6:
	push %RBP
	jmp uuid_000000000007b7d3
	jmp uuid_000000000007b7d5
uuid_000000000007b7d3:
	movb $1, -1208(%rbp)
uuid_000000000007b7d5:
	mov -1240(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007b7d8:
	mov -1232(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007b7db:
	mov -1224(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007b7de:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
	mov -1208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b7e5
	push %RBP
	jmp uuid_000000000007b7e2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b7e1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b7e4
uuid_000000000007b7e2:
uuid_000000000007b7e4:
	mov -1248(%RBP),%RSP
	add $-1248, %RSP
	jmp uuid_000000000007b7e7
uuid_000000000007b7e5:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq $uuid_000000000007b7df
	pushq $0
	pushq $uuid_000000000007b7e0
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment::set-term : Arrow<Cons<Fragment,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	popq -1320(%RBP)
	popq -1312(%RBP)
	popq -1304(%RBP)
	popq -1296(%RBP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -968(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007b7e7:
	mov -1128(%RBP),%RSP
	add $-1392, %RSP
	movq -1048(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b7f7:
	mov -592(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007b7fa
uuid_000000000007b7f8:
	movq -584(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -536(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -528(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -520(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b7fa:
	mov -160(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b7fb
uuid_000000000007b7fd:
	pushq $0
	pushq $0
	pushq $3
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r14
	movq 0(%r14), %r15
	movq %r15, -80(%rbp)
	movq 8(%r14), %r15
	movq %r15, -72(%rbp)
	movq 16(%r14), %r15
	movq %r15, -64(%rbp)
	movq 24(%r14), %r15
	movq %r15, -56(%rbp)
	movq 32(%r14), %r15
	movq %r15, -48(%rbp)
	movq 40(%r14), %r15
	movq %r15, -40(%rbp)
	movq 48(%r14), %r15
	movq %r15, -32(%rbp)
	movq 56(%r14), %r15
	movq %r15, -24(%rbp)
	movq 64(%r14), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b854:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b855
	jmp uuid_000000000007b856
uuid_000000000007b855:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b819
	jmp uuid_000000000007b81b
uuid_000000000007b819:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b810
	jmp uuid_000000000007b812
uuid_000000000007b810:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b80d
	jmp uuid_000000000007b80f
uuid_000000000007b80d:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b807
	jmp uuid_000000000007b809
uuid_000000000007b807:
	push %RBP
	jmp uuid_000000000007b804
	jmp uuid_000000000007b806
uuid_000000000007b804:
	push %RBP
	jmp uuid_000000000007b801
	jmp uuid_000000000007b803
uuid_000000000007b801:
	push %RBP
	mov -464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b7fe
	jmp uuid_000000000007b800
uuid_000000000007b7fe:
	movb $1, -520(%rbp)
uuid_000000000007b800:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b803:
	mov -544(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b806:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b809:
	mov -528(%RBP),%RSP
	add $-560, %RSP
	mov -520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b80a
	jmp uuid_000000000007b80c
uuid_000000000007b80a:
	movb $1, -360(%rbp)
uuid_000000000007b80c:
	mov -456(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b80f:
	mov -376(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007b812:
	mov -368(%RBP),%RSP
	add $-560, %RSP
	mov -360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b816
	jmp uuid_000000000007b818
uuid_000000000007b816:
	push %RBP
	mov -240(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b813
	jmp uuid_000000000007b815
uuid_000000000007b813:
	movb $1, -264(%rbp)
uuid_000000000007b815:
	mov -568(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007b818:
	mov -280(%RBP),%RSP
	add $-640, %RSP
uuid_000000000007b81b:
	mov -272(%RBP),%RSP
	add $-640, %RSP
	mov -264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b851
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b82b
	jmp uuid_000000000007b82d
uuid_000000000007b82b:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b822
	jmp uuid_000000000007b824
uuid_000000000007b822:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b81f
	jmp uuid_000000000007b821
uuid_000000000007b81f:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b81c
	jmp uuid_000000000007b81e
uuid_000000000007b81c:
	movb $1, -824(%rbp)
uuid_000000000007b81e:
	mov -920(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007b821:
	mov -840(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007b824:
	mov -832(%RBP),%RSP
	add $-992, %RSP
	mov -824(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b828
	jmp uuid_000000000007b82a
uuid_000000000007b828:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b825
	jmp uuid_000000000007b827
uuid_000000000007b825:
	movb $1, -728(%rbp)
uuid_000000000007b827:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007b82a:
	mov -744(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007b82d:
	mov -736(%RBP),%RSP
	add $-1072, %RSP
	mov -728(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b84e
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b83a
	jmp uuid_000000000007b83c
uuid_000000000007b83a:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b831
	jmp uuid_000000000007b833
uuid_000000000007b831:
	push %RBP
	jmp uuid_000000000007b82e
	jmp uuid_000000000007b830
uuid_000000000007b82e:
	movb $1, -1256(%rbp)
uuid_000000000007b830:
	mov -1272(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007b833:
	mov -1264(%RBP),%RSP
	add $-1272, %RSP
	mov -1256(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b837
	jmp uuid_000000000007b839
uuid_000000000007b837:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b834
	jmp uuid_000000000007b836
uuid_000000000007b834:
	movb $1, -1160(%rbp)
uuid_000000000007b836:
	mov -1280(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007b839:
	mov -1176(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007b83c:
	mov -1168(%RBP),%RSP
	add $-1352, %RSP
	mov -1160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b84b
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -1432(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b843
	jmp uuid_000000000007b845
uuid_000000000007b843:
	push %RBP
	mov -1424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b840
	jmp uuid_000000000007b842
uuid_000000000007b840:
	push %RBP
	mov -1416(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b83d
	jmp uuid_000000000007b83f
uuid_000000000007b83d:
	movb $1, -1440(%rbp)
uuid_000000000007b83f:
	mov -1536(%RBP),%RSP
	add $-1608, %RSP
uuid_000000000007b842:
	mov -1456(%RBP),%RSP
	add $-1608, %RSP
uuid_000000000007b845:
	mov -1448(%RBP),%RSP
	add $-1608, %RSP
	mov -1440(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b848
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b847
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b84a
uuid_000000000007b848:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $uuid_000000000007b846
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq $0
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1608(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1544(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b84a:
	mov -1360(%RBP),%RSP
	add $-1864, %RSP
	jmp uuid_000000000007b84d
uuid_000000000007b84b:
	movq -1352(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b84d:
	mov -1080(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007b850
uuid_000000000007b84e:
	movq -1072(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b850:
	mov -648(%RBP),%RSP
	add $-1072, %RSP
	jmp uuid_000000000007b853
uuid_000000000007b851:
	movq -640(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b853:
	mov -184(%RBP),%RSP
	add $-640, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b854
uuid_000000000007b856:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %r15
	movq $assemble_SB_final_CL_String, %r14
	movq %r15, 0(%r14)
#call function compile-write : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_write_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_gnu_CL_ArrowNilNil:
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007b8b6:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8b7
	jmp uuid_000000000007b8b8
uuid_000000000007b8b7:
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b872
	jmp uuid_000000000007b874
uuid_000000000007b872:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b869
	jmp uuid_000000000007b86b
uuid_000000000007b869:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b866
	jmp uuid_000000000007b868
uuid_000000000007b866:
	push %RBP
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b860
	jmp uuid_000000000007b862
uuid_000000000007b860:
	push %RBP
	jmp uuid_000000000007b85d
	jmp uuid_000000000007b85f
uuid_000000000007b85d:
	push %RBP
	jmp uuid_000000000007b85a
	jmp uuid_000000000007b85c
uuid_000000000007b85a:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b857
	jmp uuid_000000000007b859
uuid_000000000007b857:
	movb $1, -496(%rbp)
uuid_000000000007b859:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b85c:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b85f:
	mov -512(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b862:
	mov -504(%RBP),%RSP
	add $-536, %RSP
	mov -496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b863
	jmp uuid_000000000007b865
uuid_000000000007b863:
	movb $1, -336(%rbp)
uuid_000000000007b865:
	mov -432(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b868:
	mov -352(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007b86b:
	mov -344(%RBP),%RSP
	add $-536, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b86f
	jmp uuid_000000000007b871
uuid_000000000007b86f:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b86c
	jmp uuid_000000000007b86e
uuid_000000000007b86c:
	movb $1, -240(%rbp)
uuid_000000000007b86e:
	mov -544(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007b871:
	mov -256(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007b874:
	mov -248(%RBP),%RSP
	add $-616, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8b3
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8a0
	jmp uuid_000000000007b8a2
uuid_000000000007b8a0:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b897
	jmp uuid_000000000007b899
uuid_000000000007b897:
	push %RBP
	mov -784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b894
	jmp uuid_000000000007b896
uuid_000000000007b894:
	push %RBP
	mov -776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b891
	jmp uuid_000000000007b893
uuid_000000000007b891:
	movb $1, -800(%rbp)
uuid_000000000007b893:
	mov -896(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b896:
	mov -816(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007b899:
	mov -808(%RBP),%RSP
	add $-968, %RSP
	mov -800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b89d
	jmp uuid_000000000007b89f
uuid_000000000007b89d:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b89a
	jmp uuid_000000000007b89c
uuid_000000000007b89a:
	movb $1, -704(%rbp)
uuid_000000000007b89c:
	mov -976(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007b89f:
	mov -720(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007b8a2:
	mov -712(%RBP),%RSP
	add $-1048, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8b0
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8a9
	jmp uuid_000000000007b8ab
uuid_000000000007b8a9:
	push %RBP
	jmp uuid_000000000007b8a6
	jmp uuid_000000000007b8a8
uuid_000000000007b8a6:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b8a3
	jmp uuid_000000000007b8a5
uuid_000000000007b8a3:
	movb $1, -1136(%rbp)
uuid_000000000007b8a5:
	mov -1160(%RBP),%RSP
	add $-1232, %RSP
uuid_000000000007b8a8:
	mov -1152(%RBP),%RSP
	add $-1232, %RSP
uuid_000000000007b8ab:
	mov -1144(%RBP),%RSP
	add $-1232, %RSP
	mov -1136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8ad
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b8ac
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b8af
uuid_000000000007b8ad:
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b8af:
	mov -1056(%RBP),%RSP
	add $-1232, %RSP
	jmp uuid_000000000007b8b2
uuid_000000000007b8b0:
	movq -1048(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b8b2:
	mov -624(%RBP),%RSP
	add $-1048, %RSP
	jmp uuid_000000000007b8b5
uuid_000000000007b8b3:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq $uuid_000000000007b875
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b876
	jmp uuid_000000000007b878
uuid_000000000007b876:
	mov $assemble_SB_argv_SB_referenced_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007b878:
	mov -624(%RBP),%RSP
	add $-624, %RSP
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b88e
	push %RBP
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b88b
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007b7df
	pushq $0
	pushq $uuid_000000000007b879
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq $uuid_000000000007b87a
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b881
	jmp uuid_000000000007b883
uuid_000000000007b881:
	push %RBP
	jmp uuid_000000000007b87e
	jmp uuid_000000000007b880
uuid_000000000007b87e:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq $uuid_000000000007b87a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b87b
	jmp uuid_000000000007b87d
uuid_000000000007b87b:
	movb $1, -880(%rbp)
uuid_000000000007b87d:
	mov -904(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007b880:
	mov -896(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007b883:
	mov -888(%RBP),%RSP
	add $-912, %RSP
	mov -880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b888
	push %RBP
	jmp uuid_000000000007b885
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b884
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b887
uuid_000000000007b885:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007b846
	pushq $0
	pushq -976(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
#call function without-constructor : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call without_SB_constructor_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007b887:
	mov -920(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007b88a
uuid_000000000007b888:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007b88a:
	mov -848(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007b88d
uuid_000000000007b88b:
#call function fragment::set-term : Arrow<Cons<Fragment,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	push -256(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -536(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	popq 168(%r15)
	popq 176(%r15)
	popq 184(%r15)
	popq 192(%r15)
uuid_000000000007b88d:
	mov -816(%RBP),%RSP
	add $-816, %RSP
	jmp uuid_000000000007b890
uuid_000000000007b88e:
uuid_000000000007b890:
	mov -808(%RBP),%RSP
	add $-808, %RSP
	movq -616(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -16(%rbp)
uuid_000000000007b8b5:
	mov -160(%RBP),%RSP
	add $-808, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b8b6
uuid_000000000007b8b8:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-finish : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_finish_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-write : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_write_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_finish_CL_ArrowNilNil:
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-text-header : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_text_SB_header_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-exit-cleanup : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_exit_SB_cleanup_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8b9
	jmp uuid_000000000007b8bb
uuid_000000000007b8b9:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function compile-data-header : Arrow<Nil,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_SB_data_SB_header_CL_ArrowSNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
uuid_000000000007b8bb:
	mov -40(%RBP),%RSP
	add $-40, %RSP
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function escape-string : Arrow<S,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call escape_SB_string_CL_ArrowSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %r15
	movq $assemble_SB_final_CL_String, %r14
	movq %r15, 0(%r14)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext:
	pushq $0
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq $0
	push %RBP
	mov -440(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8c2
	jmp uuid_000000000007b8c4
uuid_000000000007b8c2:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b8bf
	jmp uuid_000000000007b8c1
uuid_000000000007b8bf:
	push %RBP
	jmp uuid_000000000007b8bc
	jmp uuid_000000000007b8be
uuid_000000000007b8bc:
	movb $1, -448(%rbp)
uuid_000000000007b8be:
	mov -544(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007b8c1:
	mov -464(%RBP),%RSP
	add $-544, %RSP
uuid_000000000007b8c4:
	mov -456(%RBP),%RSP
	add $-544, %RSP
	mov -448(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8cc
	push %RBP
	jmp uuid_000000000007b8c9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b8c8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b8cb
uuid_000000000007b8c9:
uuid_000000000007b8cb:
	mov -552(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007b8ce
uuid_000000000007b8cc:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b8c5
	jmp uuid_000000000007b8c7
uuid_000000000007b8c5:
	movq $1, -288(%rbp)
uuid_000000000007b8c7:
	mov -552(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007b8ce:
	mov -368(%RBP),%RSP
	add $-552, %RSP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8ea
	jmp uuid_000000000007b8ec
uuid_000000000007b8ea:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8e1
	jmp uuid_000000000007b8e3
uuid_000000000007b8e1:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b8de
	jmp uuid_000000000007b8e0
uuid_000000000007b8de:
	push %RBP
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8d8
	jmp uuid_000000000007b8da
uuid_000000000007b8d8:
	push %RBP
	jmp uuid_000000000007b8d5
	jmp uuid_000000000007b8d7
uuid_000000000007b8d5:
	push %RBP
	jmp uuid_000000000007b8d2
	jmp uuid_000000000007b8d4
uuid_000000000007b8d2:
	push %RBP
	mov -912(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b8cf
	jmp uuid_000000000007b8d1
uuid_000000000007b8cf:
	movb $1, -968(%rbp)
uuid_000000000007b8d1:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007b8d4:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007b8d7:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007b8da:
	mov -976(%RBP),%RSP
	add $-1008, %RSP
	mov -968(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8db
	jmp uuid_000000000007b8dd
uuid_000000000007b8db:
	movb $1, -808(%rbp)
uuid_000000000007b8dd:
	mov -904(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007b8e0:
	mov -824(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007b8e3:
	mov -816(%RBP),%RSP
	add $-1008, %RSP
	mov -808(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8e7
	jmp uuid_000000000007b8e9
uuid_000000000007b8e7:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b8e4
	jmp uuid_000000000007b8e6
uuid_000000000007b8e4:
	movb $1, -712(%rbp)
uuid_000000000007b8e6:
	mov -1016(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007b8e9:
	mov -728(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007b8ec:
	mov -720(%RBP),%RSP
	add $-1088, %RSP
	mov -712(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b900
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8f6
	jmp uuid_000000000007b8f8
uuid_000000000007b8f6:
	push %RBP
	jmp uuid_000000000007b8f3
	jmp uuid_000000000007b8f5
uuid_000000000007b8f3:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b8f0
	jmp uuid_000000000007b8f2
uuid_000000000007b8f0:
	movb $1, -1176(%rbp)
uuid_000000000007b8f2:
	mov -1200(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007b8f5:
	mov -1192(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007b8f8:
	mov -1184(%RBP),%RSP
	add $-1272, %RSP
	mov -1176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8fd
	push %RBP
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8fa
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b8f9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b8fc
uuid_000000000007b8fa:
uuid_000000000007b8fc:
	mov -1280(%RBP),%RSP
	add $-1352, %RSP
	jmp uuid_000000000007b8ff
uuid_000000000007b8fd:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b8ff:
	mov -1096(%RBP),%RSP
	add $-1272, %RSP
	jmp uuid_000000000007b902
uuid_000000000007b900:
#call function compile-program-ordered : Arrow<Cons<FContext,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	mov %RBX, %RBP
	call compile_SB_program_SB_ordered_CL_ArrowNilConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RBP
	mov -288(%RBP), %RAX
	cmp $0, %RAX
	jne uuid_000000000007b8ed
#call function compile-global : Arrow<Cons<Cons<FContext,String>,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1008(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call compile_SB_global_CL_ArrowNilConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b8ef
uuid_000000000007b8ed:
uuid_000000000007b8ef:
	mov -1096(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007b902:
	mov -632(%RBP),%RSP
	add $-1096, %RSP
	mov %rbp, %rsp
	sub $280, %rsp
	ret
compile_SB_write_CL_ArrowNilNil:
#call function write-file : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_target_CL_String, %r15
	pushq 0(%r15)
	mov $assemble_SB_final_CL_String, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call write_SB_file_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_SB_context_CL__CL_new_CL_ArrowFContextNil:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	subq $200, %rsp
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function find-alias : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -208(%rbp)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b944:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b945
	jmp uuid_000000000007b946
uuid_000000000007b945:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq $0
	push %RBP
	mov -1104(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b90f
	jmp uuid_000000000007b911
uuid_000000000007b90f:
	push %RBP
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	jmp uuid_000000000007b90c
	jmp uuid_000000000007b90e
uuid_000000000007b90c:
	push %RBP
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	jmp uuid_000000000007b909
	jmp uuid_000000000007b90b
uuid_000000000007b909:
	push %RBP
	mov -920(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b906
	jmp uuid_000000000007b908
uuid_000000000007b906:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b903
	jmp uuid_000000000007b905
uuid_000000000007b903:
	movb $1, -1112(%rbp)
uuid_000000000007b905:
	mov -1336(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007b908:
	mov -1320(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007b90b:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007b90e:
	mov -1128(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007b911:
	mov -1120(%RBP),%RSP
	add $-1536, %RSP
	mov -1112(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b941
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b940
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b943
uuid_000000000007b941:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1328(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b93d
	movq -1536(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b93f
uuid_000000000007b93d:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b92a
	jmp uuid_000000000007b92c
uuid_000000000007b92a:
	push %RBP
	mov -1592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b921
	jmp uuid_000000000007b923
uuid_000000000007b921:
	push %RBP
	mov -1656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1728(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b918
	jmp uuid_000000000007b91a
uuid_000000000007b918:
	push %RBP
	mov -1720(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b915
	jmp uuid_000000000007b917
uuid_000000000007b915:
	push %RBP
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	jmp uuid_000000000007b912
	jmp uuid_000000000007b914
uuid_000000000007b912:
	movb $1, -1736(%rbp)
uuid_000000000007b914:
	mov -1800(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007b917:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007b91a:
	mov -1744(%RBP),%RSP
	add $-1824, %RSP
	mov -1736(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b91e
	jmp uuid_000000000007b920
uuid_000000000007b91e:
	push %RBP
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	jmp uuid_000000000007b91b
	jmp uuid_000000000007b91d
uuid_000000000007b91b:
	movb $1, -1672(%rbp)
uuid_000000000007b91d:
	mov -1832(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007b920:
	mov -1688(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007b923:
	mov -1680(%RBP),%RSP
	add $-1856, %RSP
	mov -1672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b927
	jmp uuid_000000000007b929
uuid_000000000007b927:
	push %RBP
	mov -1584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b924
	jmp uuid_000000000007b926
uuid_000000000007b924:
	movb $1, -1608(%rbp)
uuid_000000000007b926:
	mov -1864(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007b929:
	mov -1624(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007b92c:
	mov -1616(%RBP),%RSP
	add $-1872, %RSP
	mov -1608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b93a
	push %RBP
	jmp uuid_000000000007b937
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b936
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b939
uuid_000000000007b937:
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079eab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007b939:
	mov -1880(%RBP),%RSP
	add $-1880, %RSP
	jmp uuid_000000000007b93c
uuid_000000000007b93a:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b933
	jmp uuid_000000000007b935
uuid_000000000007b933:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b930
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -680(%rbp)
	jmp uuid_000000000007b932
uuid_000000000007b930:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b92d
	jmp uuid_000000000007b92f
uuid_000000000007b92d:
	movq -1280(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -656(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -648(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -640(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -632(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -624(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -616(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -608(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -600(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -592(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -584(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -576(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -568(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -560(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -552(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -544(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -536(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -528(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -680(%rbp)
uuid_000000000007b92f:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007b932:
	mov -1888(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007b935:
	mov -1880(%RBP),%RSP
	add $-1896, %RSP
	movq -1536(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b93c:
	mov -1576(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007b93f:
	mov -1544(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007b943:
	mov -904(%RBP),%RSP
	add $-1896, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b944
uuid_000000000007b946:
	push %RBP
	mov -312(%RBP), %AL
	mov $0, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b963
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b947
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b948
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -520(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -512(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -504(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -496(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -488(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b95f:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b960
	jmp uuid_000000000007b961
uuid_000000000007b960:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b955
	jmp uuid_000000000007b957
uuid_000000000007b955:
	push %RBP
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007b952
	jmp uuid_000000000007b954
uuid_000000000007b952:
	push %RBP
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	jmp uuid_000000000007b94f
	jmp uuid_000000000007b951
uuid_000000000007b94f:
	push %RBP
	mov -928(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b94c
	jmp uuid_000000000007b94e
uuid_000000000007b94c:
	push %RBP
	mov -920(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b949
	jmp uuid_000000000007b94b
uuid_000000000007b949:
	movb $1, -1120(%rbp)
uuid_000000000007b94b:
	mov -1344(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007b94e:
	mov -1328(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007b951:
	mov -1296(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007b954:
	mov -1136(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007b957:
	mov -1128(%RBP),%RSP
	add $-1544, %RSP
	mov -1120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b95c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b95b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b95e
uuid_000000000007b95c:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1336(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b958
	jmp uuid_000000000007b95a
uuid_000000000007b958:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007b95a:
	mov -1552(%RBP),%RSP
	add $-1552, %RSP
	movq -1544(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1536(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1528(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1520(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1512(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1408(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1400(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1392(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1384(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1376(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1368(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b95e:
	mov -912(%RBP),%RSP
	add $-1552, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b95f
uuid_000000000007b961:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b962
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b965
uuid_000000000007b963:
uuid_000000000007b965:
	mov -704(%RBP),%RSP
	add $-704, %RSP
	subq $152, %rsp
	pushq -672(%rbp)
	pushq -664(%rbp)
	pushq -656(%rbp)
	pushq -648(%rbp)
	pushq -640(%rbp)
	pushq -632(%rbp)
	pushq -624(%rbp)
	pushq -616(%rbp)
	pushq -608(%rbp)
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsASTConsTypeConsStringFContext:
#call function fragment-context::lookups : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,U8>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $1
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsU8ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	subq $168, %rsp
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsU8ConsASTConsTypeConsStringFContext:
#call function find-alias : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call find_SB_alias_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -208(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007b9be:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9bf
	jmp uuid_000000000007b9c0
uuid_000000000007b9bf:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b974
	jmp uuid_000000000007b976
uuid_000000000007b974:
	push %RBP
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	jmp uuid_000000000007b971
	jmp uuid_000000000007b973
uuid_000000000007b971:
	push %RBP
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	jmp uuid_000000000007b96e
	jmp uuid_000000000007b970
uuid_000000000007b96e:
	push %RBP
	mov -736(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b96b
	jmp uuid_000000000007b96d
uuid_000000000007b96b:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b968
	jmp uuid_000000000007b96a
uuid_000000000007b968:
	movb $1, -928(%rbp)
uuid_000000000007b96a:
	mov -1152(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007b96d:
	mov -1136(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007b970:
	mov -1104(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007b973:
	mov -944(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007b976:
	mov -936(%RBP),%RSP
	add $-1352, %RSP
	mov -928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9bb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b9ba
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b9bd
uuid_000000000007b9bb:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9b7
	movq -1352(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007b9b9
uuid_000000000007b9b7:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b98f
	jmp uuid_000000000007b991
uuid_000000000007b98f:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b986
	jmp uuid_000000000007b988
uuid_000000000007b986:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b97d
	jmp uuid_000000000007b97f
uuid_000000000007b97d:
	push %RBP
	mov -1536(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -1608(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b97a
	jmp uuid_000000000007b97c
uuid_000000000007b97a:
	push %RBP
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	jmp uuid_000000000007b977
	jmp uuid_000000000007b979
uuid_000000000007b977:
	movb $1, -1552(%rbp)
uuid_000000000007b979:
	mov -1616(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007b97c:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007b97f:
	mov -1560(%RBP),%RSP
	add $-1640, %RSP
	mov -1552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b983
	jmp uuid_000000000007b985
uuid_000000000007b983:
	push %RBP
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	jmp uuid_000000000007b980
	jmp uuid_000000000007b982
uuid_000000000007b980:
	movb $1, -1488(%rbp)
uuid_000000000007b982:
	mov -1648(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007b985:
	mov -1504(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007b988:
	mov -1496(%RBP),%RSP
	add $-1672, %RSP
	mov -1488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b98c
	jmp uuid_000000000007b98e
uuid_000000000007b98c:
	push %RBP
	mov -1400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b989
	jmp uuid_000000000007b98b
uuid_000000000007b989:
	movb $1, -1424(%rbp)
uuid_000000000007b98b:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007b98e:
	mov -1440(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007b991:
	mov -1432(%RBP),%RSP
	add $-1688, %RSP
	mov -1424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9b4
	push %RBP
	jmp uuid_000000000007b9b1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b9b0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b9b3
uuid_000000000007b9b1:
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9ad
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079eab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	jmp uuid_000000000007b9af
uuid_000000000007b9ad:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007b9af:
	mov -1704(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007b9b3:
	mov -1696(%RBP),%RSP
	add $-1704, %RSP
	jmp uuid_000000000007b9b6
uuid_000000000007b9b4:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9a6
	jmp uuid_000000000007b9a8
uuid_000000000007b9a6:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9a3
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9a0
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	movq -1640(%rbp), %r15
	movq %r15, -512(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -504(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -496(%rbp)
	jmp uuid_000000000007b9a2
uuid_000000000007b9a0:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007b9a2:
	mov -1712(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_000000000007b9a5
uuid_000000000007b9a3:
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b999
	jmp uuid_000000000007b99b
uuid_000000000007b999:
	push %RBP
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b996
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	movq -1640(%rbp), %r15
	movq %r15, -512(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -504(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -496(%rbp)
	jmp uuid_000000000007b998
uuid_000000000007b996:
#call function cons : Arrow<Cons<Fragment,List<Fragment>>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListFragmentConsListFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
uuid_000000000007b998:
	mov -1720(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b99b:
	mov -1712(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b9a5:
	mov -1704(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b9a8:
	mov -1696(%RBP),%RSP
	add $-1720, %RSP
	movq -1352(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b9b6:
	mov -1392(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b9b9:
	mov -1360(%RBP),%RSP
	add $-1720, %RSP
uuid_000000000007b9bd:
	mov -720(%RBP),%RSP
	add $-1720, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b9be
uuid_000000000007b9c0:
	push %RBP
	mov -312(%RBP), %AL
	mov $0, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function .length : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call _DT_length_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9c2
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b9c1
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007b962
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b9c4
uuid_000000000007b9c2:
uuid_000000000007b9c4:
	mov -520(%RBP),%RSP
	add $-520, %RSP
	subq $168, %rsp
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
fragment_SB_context_CL__CL_lookup_SB_vararg_CL_ArrowFragmentListConsASTConsTypeConsStringFContext:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007b9db:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9dc
	jmp uuid_000000000007b9dd
uuid_000000000007b9dc:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq $0
	push %RBP
	mov -888(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9d1
	jmp uuid_000000000007b9d3
uuid_000000000007b9d1:
	push %RBP
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	jmp uuid_000000000007b9ce
	jmp uuid_000000000007b9d0
uuid_000000000007b9ce:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	jmp uuid_000000000007b9cb
	jmp uuid_000000000007b9cd
uuid_000000000007b9cb:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b9c8
	jmp uuid_000000000007b9ca
uuid_000000000007b9c8:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9c5
	jmp uuid_000000000007b9c7
uuid_000000000007b9c5:
	movb $1, -896(%rbp)
uuid_000000000007b9c7:
	mov -1120(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007b9ca:
	mov -1104(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007b9cd:
	mov -1072(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007b9d0:
	mov -912(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007b9d3:
	mov -904(%RBP),%RSP
	add $-1320, %RSP
	mov -896(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9d8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007b9d7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007b9da
uuid_000000000007b9d8:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9d4
	jmp uuid_000000000007b9d6
uuid_000000000007b9d4:
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007b9d6:
	mov -1328(%RBP),%RSP
	add $-1328, %RSP
	movq -1320(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007b9da:
	mov -688(%RBP),%RSP
	add $-1328, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007b9db
uuid_000000000007b9dd:
	subq $168, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext:
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	subq $200, %rsp
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::set-vararg : Arrow<Cons<Fragment,List<Array<Fragment,?>>>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
#call function cons : Arrow<Cons<Array<Fragment,?>,List<Array<Fragment,?>>>,List<Array<Fragment,?>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Fragment,Array<Fragment,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	mov %RBX, %RBP
	call cons_CL_ArrowListArray_QM_FragmentConsListArray_QM_FragmentArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_vararg_CL_ArrowFragmentConsListArray_QM_FragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
with_SB_location_CL_ArrowASTConsSourceLocationAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba4b
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov -416(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba48
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9e4
	jmp uuid_000000000007b9e6
uuid_000000000007b9e4:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007b9e1
	jmp uuid_000000000007b9e3
uuid_000000000007b9e1:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b9de
	jmp uuid_000000000007b9e0
uuid_000000000007b9de:
	movb $1, -504(%rbp)
uuid_000000000007b9e0:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007b9e3:
	mov -520(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007b9e6:
	mov -512(%RBP),%RSP
	add $-592, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba45
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9f0
	jmp uuid_000000000007b9f2
uuid_000000000007b9f0:
	push %RBP
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007b9ed
	jmp uuid_000000000007b9ef
uuid_000000000007b9ed:
	push %RBP
	mov -608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007b9ea
	jmp uuid_000000000007b9ec
uuid_000000000007b9ea:
	movb $1, -680(%rbp)
uuid_000000000007b9ec:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007b9ef:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007b9f2:
	mov -688(%RBP),%RSP
	add $-768, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba42
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007b9f9
	jmp uuid_000000000007b9fb
uuid_000000000007b9f9:
	push %RBP
	jmp uuid_000000000007b9f6
	jmp uuid_000000000007b9f8
uuid_000000000007b9f6:
	movb $1, -856(%rbp)
uuid_000000000007b9f8:
	mov -872(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007b9fb:
	mov -864(%RBP),%RSP
	add $-872, %RSP
	mov -856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba3f
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba02
	jmp uuid_000000000007ba04
uuid_000000000007ba02:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9ff
	jmp uuid_000000000007ba01
uuid_000000000007b9ff:
	push %RBP
	mov -936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007b9fc
	jmp uuid_000000000007b9fe
uuid_000000000007b9fc:
	movb $1, -960(%rbp)
uuid_000000000007b9fe:
	mov -1056(%RBP),%RSP
	add $-1128, %RSP
uuid_000000000007ba01:
	mov -976(%RBP),%RSP
	add $-1128, %RSP
uuid_000000000007ba04:
	mov -968(%RBP),%RSP
	add $-1128, %RSP
	mov -960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba3c
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1208(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba0e
	jmp uuid_000000000007ba10
uuid_000000000007ba0e:
	push %RBP
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	jmp uuid_000000000007ba0b
	jmp uuid_000000000007ba0d
uuid_000000000007ba0b:
	push %RBP
	mov -1176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba08
	jmp uuid_000000000007ba0a
uuid_000000000007ba08:
	push %RBP
	mov -1168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba05
	jmp uuid_000000000007ba07
uuid_000000000007ba05:
	movb $1, -1216(%rbp)
uuid_000000000007ba07:
	mov -1344(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007ba0a:
	mov -1264(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007ba0d:
	mov -1232(%RBP),%RSP
	add $-1416, %RSP
uuid_000000000007ba10:
	mov -1224(%RBP),%RSP
	add $-1416, %RSP
	mov -1216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba39
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1496(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba17
	jmp uuid_000000000007ba19
uuid_000000000007ba17:
	push %RBP
	mov -1488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba14
	jmp uuid_000000000007ba16
uuid_000000000007ba14:
	push %RBP
	mov -1480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba11
	jmp uuid_000000000007ba13
uuid_000000000007ba11:
	movb $1, -1504(%rbp)
uuid_000000000007ba13:
	mov -1600(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007ba16:
	mov -1520(%RBP),%RSP
	add $-1672, %RSP
uuid_000000000007ba19:
	mov -1512(%RBP),%RSP
	add $-1672, %RSP
	mov -1504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba36
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -1752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba20
	jmp uuid_000000000007ba22
uuid_000000000007ba20:
	push %RBP
	mov -1744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba1d
	jmp uuid_000000000007ba1f
uuid_000000000007ba1d:
	push %RBP
	mov -1736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba1a
	jmp uuid_000000000007ba1c
uuid_000000000007ba1a:
	movb $1, -1760(%rbp)
uuid_000000000007ba1c:
	mov -1856(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007ba1f:
	mov -1776(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007ba22:
	mov -1768(%RBP),%RSP
	add $-1928, %RSP
	mov -1760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba33
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -2008(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba29
	jmp uuid_000000000007ba2b
uuid_000000000007ba29:
	push %RBP
	mov -2000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba26
	jmp uuid_000000000007ba28
uuid_000000000007ba26:
	push %RBP
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	jmp uuid_000000000007ba23
	jmp uuid_000000000007ba25
uuid_000000000007ba23:
	movb $1, -2016(%rbp)
uuid_000000000007ba25:
	mov -2112(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007ba28:
	mov -2032(%RBP),%RSP
	add $-2168, %RSP
uuid_000000000007ba2b:
	mov -2024(%RBP),%RSP
	add $-2168, %RSP
	mov -2016(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba30
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ba2f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ba32
uuid_000000000007ba30:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ba2c
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	popq -2168(%RBP)
	popq -2160(%RBP)
	popq -2152(%RBP)
	popq -2144(%RBP)
	popq -2136(%RBP)
	popq -2128(%RBP)
	popq -2120(%RBP)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	popq -2104(%RBP)
	popq -2096(%RBP)
	popq -2088(%RBP)
	popq -2080(%RBP)
	popq -2072(%RBP)
	popq -2064(%RBP)
	popq -2056(%RBP)
	popq -2048(%RBP)
	popq -2040(%RBP)
	jmp uuid_000000000007ba2e
uuid_000000000007ba2c:
uuid_000000000007ba2e:
	mov -2176(%RBP),%RSP
	add $-2176, %RSP
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007ba32:
	mov -1936(%RBP),%RSP
	add $-2176, %RSP
	jmp uuid_000000000007ba35
uuid_000000000007ba33:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007ba35:
	mov -1680(%RBP),%RSP
	add $-1928, %RSP
	jmp uuid_000000000007ba38
uuid_000000000007ba36:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007ba38:
	mov -1424(%RBP),%RSP
	add $-1672, %RSP
	jmp uuid_000000000007ba3b
uuid_000000000007ba39:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq $5
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007ba3b:
	mov -1136(%RBP),%RSP
	add $-1416, %RSP
	jmp uuid_000000000007ba3e
uuid_000000000007ba3c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
uuid_000000000007ba3e:
	mov -880(%RBP),%RSP
	add $-1128, %RSP
	jmp uuid_000000000007ba41
uuid_000000000007ba3f:
uuid_000000000007ba41:
	mov -776(%RBP),%RSP
	add $-872, %RSP
	jmp uuid_000000000007ba44
uuid_000000000007ba42:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9f3
	pushq -768(%rbp)
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	pushq $6
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	jmp uuid_000000000007b9f5
uuid_000000000007b9f3:
uuid_000000000007b9f5:
	mov -776(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007ba44:
	mov -600(%RBP),%RSP
	add $-776, %RSP
	jmp uuid_000000000007ba47
uuid_000000000007ba45:
	push %RBP
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007b9e7
	pushq -592(%rbp)
#call function with-location : Arrow<Cons<Token,SourceLocation>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowTokenConsSourceLocationToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	pushq $7
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	jmp uuid_000000000007b9e9
uuid_000000000007b9e7:
uuid_000000000007b9e9:
	mov -600(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007ba47:
	mov -424(%RBP),%RSP
	add $-600, %RSP
	jmp uuid_000000000007ba4a
uuid_000000000007ba48:
uuid_000000000007ba4a:
	mov -344(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007ba4d
uuid_000000000007ba4b:
uuid_000000000007ba4d:
	mov -264(%RBP),%RSP
	add $-336, %RSP
	subq $72, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $112, %rsp
	ret
with_SB_location_CL_ArrowTokenConsSourceLocationToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba57
	jmp uuid_000000000007ba59
uuid_000000000007ba57:
	push %RBP
	jmp uuid_000000000007ba54
	jmp uuid_000000000007ba56
uuid_000000000007ba54:
	push %RBP
	jmp uuid_000000000007ba51
	jmp uuid_000000000007ba53
uuid_000000000007ba51:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ba4e
	jmp uuid_000000000007ba50
uuid_000000000007ba4e:
	movb $1, -224(%rbp)
uuid_000000000007ba50:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ba53:
	mov -248(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ba56:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007ba59:
	mov -232(%RBP),%RSP
	add $-264, %RSP
	mov -224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba5b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ba5a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ba5d
uuid_000000000007ba5b:
	pushq -264(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ba5d:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $96, %rsp
	ret
without_SB_location_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bac2
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007babf
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba64
	jmp uuid_000000000007ba66
uuid_000000000007ba64:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007ba61
	jmp uuid_000000000007ba63
uuid_000000000007ba61:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ba5e
	jmp uuid_000000000007ba60
uuid_000000000007ba5e:
	movb $1, -472(%rbp)
uuid_000000000007ba60:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007ba63:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007ba66:
	mov -480(%RBP),%RSP
	add $-560, %RSP
	mov -472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007babc
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -640(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba6d
	jmp uuid_000000000007ba6f
uuid_000000000007ba6d:
	push %RBP
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	jmp uuid_000000000007ba6a
	jmp uuid_000000000007ba6c
uuid_000000000007ba6a:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ba67
	jmp uuid_000000000007ba69
uuid_000000000007ba67:
	movb $1, -648(%rbp)
uuid_000000000007ba69:
	mov -728(%RBP),%RSP
	add $-736, %RSP
uuid_000000000007ba6c:
	mov -664(%RBP),%RSP
	add $-736, %RSP
uuid_000000000007ba6f:
	mov -656(%RBP),%RSP
	add $-736, %RSP
	mov -648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bab9
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba73
	jmp uuid_000000000007ba75
uuid_000000000007ba73:
	push %RBP
	jmp uuid_000000000007ba70
	jmp uuid_000000000007ba72
uuid_000000000007ba70:
	movb $1, -824(%rbp)
uuid_000000000007ba72:
	mov -840(%RBP),%RSP
	add $-840, %RSP
uuid_000000000007ba75:
	mov -832(%RBP),%RSP
	add $-840, %RSP
	mov -824(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bab6
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba7c
	jmp uuid_000000000007ba7e
uuid_000000000007ba7c:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba79
	jmp uuid_000000000007ba7b
uuid_000000000007ba79:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba76
	jmp uuid_000000000007ba78
uuid_000000000007ba76:
	movb $1, -928(%rbp)
uuid_000000000007ba78:
	mov -1024(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007ba7b:
	mov -944(%RBP),%RSP
	add $-1096, %RSP
uuid_000000000007ba7e:
	mov -936(%RBP),%RSP
	add $-1096, %RSP
	mov -928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bab3
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1176(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba88
	jmp uuid_000000000007ba8a
uuid_000000000007ba88:
	push %RBP
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	jmp uuid_000000000007ba85
	jmp uuid_000000000007ba87
uuid_000000000007ba85:
	push %RBP
	mov -1144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba82
	jmp uuid_000000000007ba84
uuid_000000000007ba82:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba7f
	jmp uuid_000000000007ba81
uuid_000000000007ba7f:
	movb $1, -1184(%rbp)
uuid_000000000007ba81:
	mov -1312(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007ba84:
	mov -1232(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007ba87:
	mov -1200(%RBP),%RSP
	add $-1384, %RSP
uuid_000000000007ba8a:
	mov -1192(%RBP),%RSP
	add $-1384, %RSP
	mov -1184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bab0
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba91
	jmp uuid_000000000007ba93
uuid_000000000007ba91:
	push %RBP
	mov -1456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba8e
	jmp uuid_000000000007ba90
uuid_000000000007ba8e:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba8b
	jmp uuid_000000000007ba8d
uuid_000000000007ba8b:
	movb $1, -1472(%rbp)
uuid_000000000007ba8d:
	mov -1568(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007ba90:
	mov -1488(%RBP),%RSP
	add $-1640, %RSP
uuid_000000000007ba93:
	mov -1480(%RBP),%RSP
	add $-1640, %RSP
	mov -1472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baad
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ba9a
	jmp uuid_000000000007ba9c
uuid_000000000007ba9a:
	push %RBP
	mov -1712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba97
	jmp uuid_000000000007ba99
uuid_000000000007ba97:
	push %RBP
	mov -1704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ba94
	jmp uuid_000000000007ba96
uuid_000000000007ba94:
	movb $1, -1728(%rbp)
uuid_000000000007ba96:
	mov -1824(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007ba99:
	mov -1744(%RBP),%RSP
	add $-1896, %RSP
uuid_000000000007ba9c:
	mov -1736(%RBP),%RSP
	add $-1896, %RSP
	mov -1728(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baaa
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1976(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baa3
	jmp uuid_000000000007baa5
uuid_000000000007baa3:
	push %RBP
	mov -1968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007baa0
	jmp uuid_000000000007baa2
uuid_000000000007baa0:
	push %RBP
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	jmp uuid_000000000007ba9d
	jmp uuid_000000000007ba9f
uuid_000000000007ba9d:
	movb $1, -1984(%rbp)
uuid_000000000007ba9f:
	mov -2080(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007baa2:
	mov -2000(%RBP),%RSP
	add $-2136, %RSP
uuid_000000000007baa5:
	mov -1992(%RBP),%RSP
	add $-2136, %RSP
	mov -1984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baa7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007baa6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007baa9
uuid_000000000007baa7:
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007baa9:
	mov -1904(%RBP),%RSP
	add $-2136, %RSP
	jmp uuid_000000000007baac
uuid_000000000007baaa:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007baac:
	mov -1648(%RBP),%RSP
	add $-1896, %RSP
	jmp uuid_000000000007baaf
uuid_000000000007baad:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007baaf:
	mov -1392(%RBP),%RSP
	add $-1640, %RSP
	jmp uuid_000000000007bab2
uuid_000000000007bab0:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bab2:
	mov -1104(%RBP),%RSP
	add $-1384, %RSP
	jmp uuid_000000000007bab5
uuid_000000000007bab3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bab5:
	mov -848(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007bab8
uuid_000000000007bab6:
uuid_000000000007bab8:
	mov -744(%RBP),%RSP
	add $-840, %RSP
	jmp uuid_000000000007babb
uuid_000000000007bab9:
	pushq -736(%rbp)
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007babb:
	mov -568(%RBP),%RSP
	add $-736, %RSP
	jmp uuid_000000000007babe
uuid_000000000007babc:
	pushq -560(%rbp)
#call function without-location : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007babe:
	mov -392(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007bac1
uuid_000000000007babf:
uuid_000000000007bac1:
	mov -312(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007bac4
uuid_000000000007bac2:
uuid_000000000007bac4:
	mov -232(%RBP),%RSP
	add $-304, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
without_SB_location_CL_ArrowTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bace
	jmp uuid_000000000007bad0
uuid_000000000007bace:
	push %RBP
	jmp uuid_000000000007bacb
	jmp uuid_000000000007bacd
uuid_000000000007bacb:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bac8
	jmp uuid_000000000007baca
uuid_000000000007bac8:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bac5
	jmp uuid_000000000007bac7
uuid_000000000007bac5:
	movb $1, -192(%rbp)
uuid_000000000007bac7:
	mov -232(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007baca:
	mov -216(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007bacd:
	mov -208(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007bad0:
	mov -200(%RBP),%RSP
	add $-240, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bad2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bad1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bad4
uuid_000000000007bad2:
	pushq -240(%rbp)
	pushq -224(%rbp)
	pushq $uuid_0000000000079496
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bad4:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
with_SB_key_CL_ArrowTokenConsStringToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bade
	jmp uuid_000000000007bae0
uuid_000000000007bade:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	jmp uuid_000000000007badb
	jmp uuid_000000000007badd
uuid_000000000007badb:
	push %RBP
	jmp uuid_000000000007bad8
	jmp uuid_000000000007bada
uuid_000000000007bad8:
	push %RBP
	jmp uuid_000000000007bad5
	jmp uuid_000000000007bad7
uuid_000000000007bad5:
	movb $1, -200(%rbp)
uuid_000000000007bad7:
	mov -264(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bada:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007badd:
	mov -216(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bae0:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	mov -200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bae2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bae1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bae4
uuid_000000000007bae2:
	pushq -64(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bae4:
	mov -136(%RBP),%RSP
	add $-264, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
location_SB_of_CL_ArrowSourceLocationAST:
	pushq $uuid_000000000007bae5
	pushq $0
	pushq $0
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baec
	jmp uuid_000000000007baee
uuid_000000000007baec:
	push %RBP
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	jmp uuid_000000000007bae9
	jmp uuid_000000000007baeb
uuid_000000000007bae9:
	push %RBP
	jmp uuid_000000000007bae6
	jmp uuid_000000000007bae8
uuid_000000000007bae6:
	movb $1, -272(%rbp)
uuid_000000000007bae8:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007baeb:
	mov -288(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007baee:
	mov -280(%RBP),%RSP
	add $-352, %RSP
	mov -272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb4d
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -432(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007baf5
	jmp uuid_000000000007baf7
uuid_000000000007baf5:
	push %RBP
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007baf2
	jmp uuid_000000000007baf4
uuid_000000000007baf2:
	push %RBP
	jmp uuid_000000000007baef
	jmp uuid_000000000007baf1
uuid_000000000007baef:
	movb $1, -440(%rbp)
uuid_000000000007baf1:
	mov -520(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007baf4:
	mov -456(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007baf7:
	mov -448(%RBP),%RSP
	add $-520, %RSP
	mov -440(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb4a
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bafe
	jmp uuid_000000000007bb00
uuid_000000000007bafe:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bafb
	jmp uuid_000000000007bafd
uuid_000000000007bafb:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007baf8
	jmp uuid_000000000007bafa
uuid_000000000007baf8:
	movb $1, -608(%rbp)
uuid_000000000007bafa:
	mov -704(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007bafd:
	mov -624(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007bb00:
	mov -616(%RBP),%RSP
	add $-776, %RSP
	mov -608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb47
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb0d
	jmp uuid_000000000007bb0f
uuid_000000000007bb0d:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	jmp uuid_000000000007bb0a
	jmp uuid_000000000007bb0c
uuid_000000000007bb0a:
	push %RBP
	mov -824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb07
	jmp uuid_000000000007bb09
uuid_000000000007bb07:
	push %RBP
	mov -816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb04
	jmp uuid_000000000007bb06
uuid_000000000007bb04:
	movb $1, -864(%rbp)
uuid_000000000007bb06:
	mov -992(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007bb09:
	mov -912(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007bb0c:
	mov -880(%RBP),%RSP
	add $-1064, %RSP
uuid_000000000007bb0f:
	mov -872(%RBP),%RSP
	add $-1064, %RSP
	mov -864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb44
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1144(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb19
	jmp uuid_000000000007bb1b
uuid_000000000007bb19:
	push %RBP
	mov -1136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb16
	jmp uuid_000000000007bb18
uuid_000000000007bb16:
	push %RBP
	mov -1128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb13
	jmp uuid_000000000007bb15
uuid_000000000007bb13:
	movb $1, -1152(%rbp)
uuid_000000000007bb15:
	mov -1248(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007bb18:
	mov -1168(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007bb1b:
	mov -1160(%RBP),%RSP
	add $-1320, %RSP
	mov -1152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb41
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb25
	jmp uuid_000000000007bb27
uuid_000000000007bb25:
	push %RBP
	mov -1392(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb22
	jmp uuid_000000000007bb24
uuid_000000000007bb22:
	push %RBP
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007bb1f
	jmp uuid_000000000007bb21
uuid_000000000007bb1f:
	movb $1, -1408(%rbp)
uuid_000000000007bb21:
	mov -1504(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007bb24:
	mov -1424(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007bb27:
	mov -1416(%RBP),%RSP
	add $-1560, %RSP
	mov -1408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb3e
	push %RBP
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb31
	jmp uuid_000000000007bb33
uuid_000000000007bb31:
	push %RBP
	mov -1632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb2e
	jmp uuid_000000000007bb30
uuid_000000000007bb2e:
	push %RBP
	mov -1624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb2b
	jmp uuid_000000000007bb2d
uuid_000000000007bb2b:
	movb $1, -1648(%rbp)
uuid_000000000007bb2d:
	mov -1744(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007bb30:
	mov -1664(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007bb33:
	mov -1656(%RBP),%RSP
	add $-1816, %RSP
	mov -1648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb3b
	push %RBP
	jmp uuid_000000000007bb38
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bb37
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb3a
uuid_000000000007bb38:
uuid_000000000007bb3a:
	mov -1824(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007bb3d
uuid_000000000007bb3b:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb34
	jmp uuid_000000000007bb36
uuid_000000000007bb34:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bb36:
	mov -1824(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007bb3d:
	mov -1568(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007bb40
uuid_000000000007bb3e:
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb28
	jmp uuid_000000000007bb2a
uuid_000000000007bb28:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bb2a:
	mov -1568(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007bb40:
	mov -1328(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007bb43
uuid_000000000007bb41:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb1c
	jmp uuid_000000000007bb1e
uuid_000000000007bb1c:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bb1e:
	mov -1328(%RBP),%RSP
	add $-1328, %RSP
uuid_000000000007bb43:
	mov -1072(%RBP),%RSP
	add $-1328, %RSP
	jmp uuid_000000000007bb46
uuid_000000000007bb44:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb10
	jmp uuid_000000000007bb12
uuid_000000000007bb10:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bb12:
	mov -1072(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007bb46:
	mov -784(%RBP),%RSP
	add $-1072, %RSP
	jmp uuid_000000000007bb49
uuid_000000000007bb47:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	push %RBP
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function non-zero : Arrow<SourceLocation,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb01
	jmp uuid_000000000007bb03
uuid_000000000007bb01:
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bb03:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007bb49:
	mov -528(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007bb4c
uuid_000000000007bb4a:
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bb4c:
	mov -360(%RBP),%RSP
	add $-520, %RSP
	jmp uuid_000000000007bb4f
uuid_000000000007bb4d:
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007bb4f:
	mov -192(%RBP),%RSP
	add $-352, %RSP
	subq $32, %rsp
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $32, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
unique_CL_ArrowTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb59
	jmp uuid_000000000007bb5b
uuid_000000000007bb59:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007bb56
	jmp uuid_000000000007bb58
uuid_000000000007bb56:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb53
	jmp uuid_000000000007bb55
uuid_000000000007bb53:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb50
	jmp uuid_000000000007bb52
uuid_000000000007bb50:
	movb $1, -192(%rbp)
uuid_000000000007bb52:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bb55:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bb58:
	mov -208(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bb5b:
	mov -200(%RBP),%RSP
	add $-272, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb5d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bb5c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb5f
uuid_000000000007bb5d:
	pushq -272(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq $0
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bb5f:
	mov -128(%RBP),%RSP
	add $-272, %RSP
	subq $56, %rsp
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $64, %rsp
	ret
print_SB_verbose_CL_ArrowNilToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb69
	jmp uuid_000000000007bb6b
uuid_000000000007bb69:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	jmp uuid_000000000007bb66
	jmp uuid_000000000007bb68
uuid_000000000007bb66:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb63
	jmp uuid_000000000007bb65
uuid_000000000007bb63:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb60
	jmp uuid_000000000007bb62
uuid_000000000007bb60:
	movb $1, -192(%rbp)
uuid_000000000007bb62:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bb65:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bb68:
	mov -208(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bb6b:
	mov -200(%RBP),%RSP
	add $-272, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb6d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bb6c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb6f
uuid_000000000007bb6d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000795d8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bb6f:
	mov -128(%RBP),%RSP
	add $-272, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
token_CL__CL_new_CL_ArrowTokenString:
	pushq -8(%rbp)
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function location::new : Arrow<Nil,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call location_CL__CL_new_CL_ArrowSourceLocationNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq $0
	subq $56, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
location_CL__CL_new_CL_ArrowSourceLocationNil:
	pushq $uuid_000000000007bae5
	pushq $0
	pushq $0
	pushq $0
	subq $32, %rsp
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $32, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
non_SB_zero_CL_ArrowU64SourceLocation:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb79
	jmp uuid_000000000007bb7b
uuid_000000000007bb79:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb76
	jmp uuid_000000000007bb78
uuid_000000000007bb76:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb73
	jmp uuid_000000000007bb75
uuid_000000000007bb73:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb70
	jmp uuid_000000000007bb72
uuid_000000000007bb70:
	movb $1, -128(%rbp)
uuid_000000000007bb72:
	mov -176(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007bb75:
	mov -160(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007bb78:
	mov -144(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007bb7b:
	mov -136(%RBP),%RSP
	add $-184, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb80
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bb7f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb82
uuid_000000000007bb80:
	push %RBP
	movq -168(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb7c
	jmp uuid_000000000007bb7e
uuid_000000000007bb7c:
	movq $1, -48(%rbp)
uuid_000000000007bb7e:
	mov -192(%RBP),%RSP
	add $-192, %RSP
uuid_000000000007bb82:
	mov -88(%RBP),%RSP
	add $-192, %RSP
	mov -48(%rbp), %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
is_SB_already_SB_tokenized_CL_ArrowU64String:
	pushq $0
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007bb99:
#call function non-zero : Arrow<List<String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb9a
	jmp uuid_000000000007bb9b
uuid_000000000007bb9a:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb8f
	jmp uuid_000000000007bb91
uuid_000000000007bb8f:
	push %RBP
	mov -96(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bb8c
	jmp uuid_000000000007bb8e
uuid_000000000007bb8c:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bb89
	jmp uuid_000000000007bb8b
uuid_000000000007bb89:
	movb $1, -112(%rbp)
uuid_000000000007bb8b:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007bb8e:
	mov -128(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007bb91:
	mov -120(%RBP),%RSP
	add $-168, %RSP
	mov -112(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bb96
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bb95
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bb98
uuid_000000000007bb96:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bb92
	jmp uuid_000000000007bb94
uuid_000000000007bb92:
	movq $1, -24(%rbp)
uuid_000000000007bb94:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	movq -152(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -144(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -136(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007bb98:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bb99
uuid_000000000007bb9b:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
tokenize_CL_ArrowNilString:
	pushq $uuid_0000000000079496
	push %RBP
#call function is-already-tokenized : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call is_SB_already_SB_tokenized_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bba0
#call function read-file : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call read_SB_file_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
#call function cons : Arrow<Cons<String,List<String>>,List<String>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call cons_CL_ArrowListStringConsListStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov $already_SB_tokenized_CL_ListStringListStringCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	jmp uuid_000000000007bba2
uuid_000000000007bba0:
uuid_000000000007bba2:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $3
	pushq $1
	pushq $1
	pushq $1
	pushq $1
	pushq $0
uuid_000000000007bc24:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007bc25
	jmp uuid_000000000007bc26
uuid_000000000007bc25:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -112(%rbp)
	mov -128(%RBP), %AL
	mov $10, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bba7
	push %RBP
	jmp uuid_000000000007bba4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bba3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bba6
uuid_000000000007bba4:
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -80(%rbp)
uuid_000000000007bba6:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007bba9
uuid_000000000007bba7:
	movq -72(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -72(%rbp)
	movq $1, -80(%rbp)
uuid_000000000007bba9:
	mov -120(%RBP),%RSP
	add $-128, %RSP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -136(%rbp)
	mov -152(%RBP), %AL
	mov $35, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc21
	push %RBP
	pushq -136(%rbp)
	mov -168(%RBP), %AL
	mov $10, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc1e
	push %RBP
	pushq -136(%rbp)
	mov -184(%RBP), %AL
	mov $9, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc1b
	push %RBP
	pushq -136(%rbp)
	mov -200(%RBP), %AL
	mov $32, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc18
	push %RBP
	pushq -136(%rbp)
	mov -216(%RBP), %AL
	mov $40, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc15
	push %RBP
	pushq -136(%rbp)
	mov -232(%RBP), %AL
	mov $41, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc12
	push %RBP
	pushq -136(%rbp)
	mov -248(%RBP), %AL
	mov $39, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc0f
	push %RBP
	pushq -136(%rbp)
	mov -264(%RBP), %AL
	mov $59, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc0c
	push %RBP
	pushq -136(%rbp)
	jmp uuid_000000000007bc09
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bc08
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc0b
uuid_000000000007bc09:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007bc05
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000795d6
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc02
	jmp uuid_000000000007bc04
uuid_000000000007bc02:
	pushq $uuid_00000000000795d6
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bc04:
	mov -296(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007bc07
uuid_000000000007bc05:
uuid_000000000007bc07:
	mov -288(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007bc0b:
	mov -272(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007bc0e
uuid_000000000007bc0c:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007bbfb
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbf4
	jmp uuid_000000000007bbf6
uuid_000000000007bbf4:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bbf6:
	mov -280(%RBP),%RSP
	add $-336, %RSP
	pushq $uuid_00000000000795d3
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007bbfd
uuid_000000000007bbfb:
uuid_000000000007bbfd:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bc0e:
	mov -256(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007bc11
uuid_000000000007bc0f:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007bbed
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbe6
	jmp uuid_000000000007bbe8
uuid_000000000007bbe6:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bbe8:
	mov -264(%RBP),%RSP
	add $-320, %RSP
	pushq $uuid_00000000000795d5
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007bbef
uuid_000000000007bbed:
uuid_000000000007bbef:
	mov -256(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007bc11:
	mov -240(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bc14
uuid_000000000007bc12:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007bbdf
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbd8
	jmp uuid_000000000007bbda
uuid_000000000007bbd8:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bbda:
	mov -248(%RBP),%RSP
	add $-304, %RSP
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
	pushq $uuid_00000000000793bc
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	jmp uuid_000000000007bbe1
uuid_000000000007bbdf:
uuid_000000000007bbe1:
	mov -240(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007bc14:
	mov -224(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007bc17
uuid_000000000007bc15:
	push %RBP
	mov -40(%RBP), %AL
	cmp $0, %AL
	jne uuid_000000000007bbd1
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbca
	jmp uuid_000000000007bbcc
uuid_000000000007bbca:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bbcc:
	mov -232(%RBP),%RSP
	add $-288, %RSP
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -104(%rbp)
	pushq $uuid_00000000000793ba
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	jmp uuid_000000000007bbd3
uuid_000000000007bbd1:
uuid_000000000007bbd3:
	mov -224(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007bc17:
	mov -208(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007bc1a
uuid_000000000007bc18:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbc3
	jmp uuid_000000000007bbc5
uuid_000000000007bbc3:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bbc5:
	mov -208(%RBP),%RSP
	add $-264, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
uuid_000000000007bc1a:
	mov -192(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007bc1d
uuid_000000000007bc1b:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbbc
	jmp uuid_000000000007bbbe
uuid_000000000007bbbc:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bbbe:
	mov -192(%RBP),%RSP
	add $-248, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
uuid_000000000007bc1d:
	mov -176(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bc20
uuid_000000000007bc1e:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbb5
	jmp uuid_000000000007bbb7
uuid_000000000007bbb5:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bbb7:
	mov -176(%RBP),%RSP
	add $-232, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	movb $0, -40(%rbp)
uuid_000000000007bc20:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007bc23
uuid_000000000007bc21:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bbae
	jmp uuid_000000000007bbb0
uuid_000000000007bbae:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007bbb0:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	movq -72(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -72(%rbp), %r15
	mov %r15, -88(%rbp)
	movq -80(%rbp), %r15
	movq %r15, -96(%rbp)
	mov -80(%rbp), %r15
	mov %r15, -96(%rbp)
	movb $1, -40(%rbp)
uuid_000000000007bc23:
	mov -144(%RBP),%RSP
	add $-216, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -24(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %rsp
	add $8, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bc24
uuid_000000000007bc26:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc2b
	jmp uuid_000000000007bc2d
uuid_000000000007bc2b:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function iuid : Arrow<Nil,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call iuid_CL_ArrowU64Nil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	pushq $0
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
uuid_000000000007bc2d:
	mov -112(%RBP),%RSP
	add $-168, %RSP
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	push %RBP
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc34
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc32
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bc33
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc36
uuid_000000000007bc34:
uuid_000000000007bc36:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	mov %rbp, %rsp
	sub $16, %rsp
	ret
align_CL_ArrowI64I64:
#call function max : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $8
	mov %RBX, %RBP
	call max_CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
is_SB_nil_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc3d
	jmp uuid_000000000007bc3f
uuid_000000000007bc3d:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc3a
	jmp uuid_000000000007bc3c
uuid_000000000007bc3a:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc37
	jmp uuid_000000000007bc39
uuid_000000000007bc37:
	movb $1, -104(%rbp)
uuid_000000000007bc39:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bc3c:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bc3f:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc50
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc46
	jmp uuid_000000000007bc48
uuid_000000000007bc46:
	push %RBP
	jmp uuid_000000000007bc43
	jmp uuid_000000000007bc45
uuid_000000000007bc43:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc40
	jmp uuid_000000000007bc42
uuid_000000000007bc40:
	movb $1, -216(%rbp)
uuid_000000000007bc42:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bc45:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bc48:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc4d
	push %RBP
	jmp uuid_000000000007bc4a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bc49
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc4c
uuid_000000000007bc4a:
uuid_000000000007bc4c:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bc4f
uuid_000000000007bc4d:
	movq $1, -40(%rbp)
uuid_000000000007bc4f:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bc52
uuid_000000000007bc50:
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-nil : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_nil_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bc52:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_seq_CL_ArrowU64AST:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc59
	jmp uuid_000000000007bc5b
uuid_000000000007bc59:
	push %RBP
	jmp uuid_000000000007bc56
	jmp uuid_000000000007bc58
uuid_000000000007bc56:
	push %RBP
	jmp uuid_000000000007bc53
	jmp uuid_000000000007bc55
uuid_000000000007bc53:
	movb $1, -248(%rbp)
uuid_000000000007bc55:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bc58:
	mov -264(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007bc5b:
	mov -256(%RBP),%RSP
	add $-272, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc60
	push %RBP
	jmp uuid_000000000007bc5d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bc5c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc5f
uuid_000000000007bc5d:
uuid_000000000007bc5f:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007bc62
uuid_000000000007bc60:
	movq $1, -88(%rbp)
uuid_000000000007bc62:
	mov -168(%RBP),%RSP
	add $-272, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
is_SB_arrow_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc69
	jmp uuid_000000000007bc6b
uuid_000000000007bc69:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc66
	jmp uuid_000000000007bc68
uuid_000000000007bc66:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc63
	jmp uuid_000000000007bc65
uuid_000000000007bc63:
	movb $1, -104(%rbp)
uuid_000000000007bc65:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bc68:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bc6b:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc7c
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc72
	jmp uuid_000000000007bc74
uuid_000000000007bc72:
	push %RBP
	jmp uuid_000000000007bc6f
	jmp uuid_000000000007bc71
uuid_000000000007bc6f:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079a89
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc6c
	jmp uuid_000000000007bc6e
uuid_000000000007bc6c:
	movb $1, -216(%rbp)
uuid_000000000007bc6e:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bc71:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bc74:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc79
	push %RBP
	jmp uuid_000000000007bc76
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bc75
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc78
uuid_000000000007bc76:
uuid_000000000007bc78:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bc7b
uuid_000000000007bc79:
	movq $1, -40(%rbp)
uuid_000000000007bc7b:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bc7e
uuid_000000000007bc7c:
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bc7e:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_hook_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc85
	jmp uuid_000000000007bc87
uuid_000000000007bc85:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc82
	jmp uuid_000000000007bc84
uuid_000000000007bc82:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc7f
	jmp uuid_000000000007bc81
uuid_000000000007bc7f:
	movb $1, -104(%rbp)
uuid_000000000007bc81:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bc84:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bc87:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc98
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc8e
	jmp uuid_000000000007bc90
uuid_000000000007bc8e:
	push %RBP
	jmp uuid_000000000007bc8b
	jmp uuid_000000000007bc8d
uuid_000000000007bc8b:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_0000000000079bdc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bc88
	jmp uuid_000000000007bc8a
uuid_000000000007bc88:
	movb $1, -216(%rbp)
uuid_000000000007bc8a:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bc8d:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bc90:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bc95
	push %RBP
	jmp uuid_000000000007bc92
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bc91
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bc94
uuid_000000000007bc92:
uuid_000000000007bc94:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bc97
uuid_000000000007bc95:
	movq $1, -40(%rbp)
uuid_000000000007bc97:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bc9a
uuid_000000000007bc98:
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-hook : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_hook_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bc9a:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_blob_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bca1
	jmp uuid_000000000007bca3
uuid_000000000007bca1:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc9e
	jmp uuid_000000000007bca0
uuid_000000000007bc9e:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bc9b
	jmp uuid_000000000007bc9d
uuid_000000000007bc9b:
	movb $1, -104(%rbp)
uuid_000000000007bc9d:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bca0:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bca3:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcb4
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcaa
	jmp uuid_000000000007bcac
uuid_000000000007bcaa:
	push %RBP
	jmp uuid_000000000007bca7
	jmp uuid_000000000007bca9
uuid_000000000007bca7:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007af39
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bca4
	jmp uuid_000000000007bca6
uuid_000000000007bca4:
	movb $1, -216(%rbp)
uuid_000000000007bca6:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bca9:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bcac:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcb1
	push %RBP
	jmp uuid_000000000007bcae
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bcad
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bcb0
uuid_000000000007bcae:
uuid_000000000007bcb0:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bcb3
uuid_000000000007bcb1:
	movq $1, -40(%rbp)
uuid_000000000007bcb3:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bcb6
uuid_000000000007bcb4:
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-blob : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_blob_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bcb6:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_cons_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcbd
	jmp uuid_000000000007bcbf
uuid_000000000007bcbd:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bcba
	jmp uuid_000000000007bcbc
uuid_000000000007bcba:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bcb7
	jmp uuid_000000000007bcb9
uuid_000000000007bcb7:
	movb $1, -104(%rbp)
uuid_000000000007bcb9:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bcbc:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bcbf:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcd0
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcc6
	jmp uuid_000000000007bcc8
uuid_000000000007bcc6:
	push %RBP
	jmp uuid_000000000007bcc3
	jmp uuid_000000000007bcc5
uuid_000000000007bcc3:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcc0
	jmp uuid_000000000007bcc2
uuid_000000000007bcc0:
	movb $1, -216(%rbp)
uuid_000000000007bcc2:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bcc5:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bcc8:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bccd
	push %RBP
	jmp uuid_000000000007bcca
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bcc9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bccc
uuid_000000000007bcca:
uuid_000000000007bccc:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bccf
uuid_000000000007bccd:
	movq $1, -40(%rbp)
uuid_000000000007bccf:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bcd2
uuid_000000000007bcd0:
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bcd2:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_impure_SB_ctx_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcd9
	jmp uuid_000000000007bcdb
uuid_000000000007bcd9:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bcd6
	jmp uuid_000000000007bcd8
uuid_000000000007bcd6:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bcd3
	jmp uuid_000000000007bcd5
uuid_000000000007bcd3:
	movb $1, -104(%rbp)
uuid_000000000007bcd5:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bcd8:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bcdb:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bced
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bce3
	jmp uuid_000000000007bce5
uuid_000000000007bce3:
	push %RBP
	jmp uuid_000000000007bce0
	jmp uuid_000000000007bce2
uuid_000000000007bce0:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bcdc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcdd
	jmp uuid_000000000007bcdf
uuid_000000000007bcdd:
	movb $1, -216(%rbp)
uuid_000000000007bcdf:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bce2:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bce5:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcea
	push %RBP
	jmp uuid_000000000007bce7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bce6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bce9
uuid_000000000007bce7:
uuid_000000000007bce9:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bcec
uuid_000000000007bcea:
	movq $1, -40(%rbp)
uuid_000000000007bcec:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bcef
uuid_000000000007bced:
#call function is-impure-ctx : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_ctx_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-impure-ctx : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_ctx_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bcef:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_string_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bcf6
	jmp uuid_000000000007bcf8
uuid_000000000007bcf6:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bcf3
	jmp uuid_000000000007bcf5
uuid_000000000007bcf3:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bcf0
	jmp uuid_000000000007bcf2
uuid_000000000007bcf0:
	movb $1, -104(%rbp)
uuid_000000000007bcf2:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bcf5:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bcf8:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd0a
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd00
	jmp uuid_000000000007bd02
uuid_000000000007bd00:
	push %RBP
	jmp uuid_000000000007bcfd
	jmp uuid_000000000007bcff
uuid_000000000007bcfd:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bcf9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bcfa
	jmp uuid_000000000007bcfc
uuid_000000000007bcfa:
	movb $1, -216(%rbp)
uuid_000000000007bcfc:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bcff:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bd02:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd07
	push %RBP
	jmp uuid_000000000007bd04
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bd03
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd06
uuid_000000000007bd04:
uuid_000000000007bd06:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bd09
uuid_000000000007bd07:
	movq $1, -40(%rbp)
uuid_000000000007bd09:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bd0c
uuid_000000000007bd0a:
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bd0c:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_onto_SB_stack_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd13
	jmp uuid_000000000007bd15
uuid_000000000007bd13:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd10
	jmp uuid_000000000007bd12
uuid_000000000007bd10:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd0d
	jmp uuid_000000000007bd0f
uuid_000000000007bd0d:
	movb $1, -104(%rbp)
uuid_000000000007bd0f:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bd12:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bd15:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd39
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd2f
	jmp uuid_000000000007bd31
uuid_000000000007bd2f:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd26
	jmp uuid_000000000007bd28
uuid_000000000007bd26:
	push %RBP
	jmp uuid_000000000007bd23
	jmp uuid_000000000007bd25
uuid_000000000007bd23:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd1d
	jmp uuid_000000000007bd1f
uuid_000000000007bd1d:
	push %RBP
	jmp uuid_000000000007bd1a
	jmp uuid_000000000007bd1c
uuid_000000000007bd1a:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007bd16
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd17
	jmp uuid_000000000007bd19
uuid_000000000007bd17:
	movb $1, -336(%rbp)
uuid_000000000007bd19:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bd1c:
	mov -352(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bd1f:
	mov -344(%RBP),%RSP
	add $-368, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd20
	jmp uuid_000000000007bd22
uuid_000000000007bd20:
	movb $1, -280(%rbp)
uuid_000000000007bd22:
	mov -304(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bd25:
	mov -296(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bd28:
	mov -288(%RBP),%RSP
	add $-368, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd2c
	jmp uuid_000000000007bd2e
uuid_000000000007bd2c:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007a06c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd29
	jmp uuid_000000000007bd2b
uuid_000000000007bd29:
	movb $1, -216(%rbp)
uuid_000000000007bd2b:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bd2e:
	mov -232(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bd31:
	mov -224(%RBP),%RSP
	add $-384, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd36
	push %RBP
	jmp uuid_000000000007bd33
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bd32
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd35
uuid_000000000007bd33:
uuid_000000000007bd35:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007bd38
uuid_000000000007bd36:
	movq $1, -40(%rbp)
uuid_000000000007bd38:
	mov -184(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007bd3b
uuid_000000000007bd39:
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bd3b:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_impure_SB_offset_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd42
	jmp uuid_000000000007bd44
uuid_000000000007bd42:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd3f
	jmp uuid_000000000007bd41
uuid_000000000007bd3f:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd3c
	jmp uuid_000000000007bd3e
uuid_000000000007bd3c:
	movb $1, -104(%rbp)
uuid_000000000007bd3e:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bd41:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bd44:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd68
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd5e
	jmp uuid_000000000007bd60
uuid_000000000007bd5e:
	push %RBP
	mov -200(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -272(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd55
	jmp uuid_000000000007bd57
uuid_000000000007bd55:
	push %RBP
	jmp uuid_000000000007bd52
	jmp uuid_000000000007bd54
uuid_000000000007bd52:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd4c
	jmp uuid_000000000007bd4e
uuid_000000000007bd4c:
	push %RBP
	jmp uuid_000000000007bd49
	jmp uuid_000000000007bd4b
uuid_000000000007bd49:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq $uuid_000000000007bd45
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd46
	jmp uuid_000000000007bd48
uuid_000000000007bd46:
	movb $1, -336(%rbp)
uuid_000000000007bd48:
	mov -360(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bd4b:
	mov -352(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bd4e:
	mov -344(%RBP),%RSP
	add $-368, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd4f
	jmp uuid_000000000007bd51
uuid_000000000007bd4f:
	movb $1, -280(%rbp)
uuid_000000000007bd51:
	mov -304(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bd54:
	mov -296(%RBP),%RSP
	add $-368, %RSP
uuid_000000000007bd57:
	mov -288(%RBP),%RSP
	add $-368, %RSP
	mov -280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd5b
	jmp uuid_000000000007bd5d
uuid_000000000007bd5b:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -384(%rbp)
	pushq $uuid_000000000007a06c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd58
	jmp uuid_000000000007bd5a
uuid_000000000007bd58:
	movb $1, -216(%rbp)
uuid_000000000007bd5a:
	mov -376(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bd5d:
	mov -232(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bd60:
	mov -224(%RBP),%RSP
	add $-384, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd65
	push %RBP
	jmp uuid_000000000007bd62
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bd61
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd64
uuid_000000000007bd62:
uuid_000000000007bd64:
	mov -392(%RBP),%RSP
	add $-392, %RSP
	jmp uuid_000000000007bd67
uuid_000000000007bd65:
	movq $1, -40(%rbp)
uuid_000000000007bd67:
	mov -184(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007bd6a
uuid_000000000007bd68:
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bd6a:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
is_SB_branchconditional_CL_ArrowU64Type:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd71
	jmp uuid_000000000007bd73
uuid_000000000007bd71:
	push %RBP
	mov -88(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd6e
	jmp uuid_000000000007bd70
uuid_000000000007bd6e:
	push %RBP
	mov -80(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd6b
	jmp uuid_000000000007bd6d
uuid_000000000007bd6b:
	movb $1, -104(%rbp)
uuid_000000000007bd6d:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bd70:
	mov -120(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bd73:
	mov -112(%RBP),%RSP
	add $-176, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd85
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -208(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd7b
	jmp uuid_000000000007bd7d
uuid_000000000007bd7b:
	push %RBP
	jmp uuid_000000000007bd78
	jmp uuid_000000000007bd7a
uuid_000000000007bd78:
	push %RBP
	mov -192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq $uuid_000000000007bd74
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bd75
	jmp uuid_000000000007bd77
uuid_000000000007bd75:
	movb $1, -216(%rbp)
uuid_000000000007bd77:
	mov -240(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bd7a:
	mov -232(%RBP),%RSP
	add $-248, %RSP
uuid_000000000007bd7d:
	mov -224(%RBP),%RSP
	add $-248, %RSP
	mov -216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd82
	push %RBP
	jmp uuid_000000000007bd7f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bd7e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd81
uuid_000000000007bd7f:
uuid_000000000007bd81:
	mov -256(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007bd84
uuid_000000000007bd82:
	movq $1, -40(%rbp)
uuid_000000000007bd84:
	mov -184(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007bd87
uuid_000000000007bd85:
#call function is-branchconditional : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_branchconditional_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-branchconditional : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	mov %RBX, %RBP
	call is_SB_branchconditional_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007bd87:
	mov -72(%RBP),%RSP
	add $-176, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_AD__CL_ArrowASTConsASTAST:
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd98
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd8e
	jmp uuid_000000000007bd90
uuid_000000000007bd8e:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd8b
	jmp uuid_000000000007bd8d
uuid_000000000007bd8b:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bd88
	jmp uuid_000000000007bd8a
uuid_000000000007bd88:
	movb $1, -392(%rbp)
uuid_000000000007bd8a:
	mov -488(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007bd8d:
	mov -408(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007bd90:
	mov -400(%RBP),%RSP
	add $-560, %RSP
	mov -392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bd95
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007bd92
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bd91
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bd94
uuid_000000000007bd92:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bd94:
	mov -568(%RBP),%RSP
	add $-640, %RSP
	jmp uuid_000000000007bd97
uuid_000000000007bd95:
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007bd97:
	mov -312(%RBP),%RSP
	add $-560, %RSP
	jmp uuid_000000000007bd9a
uuid_000000000007bd98:
uuid_000000000007bd9a:
	mov -232(%RBP),%RSP
	add $-304, %RSP
	subq $72, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $152, %rsp
	ret
print_CL_ArrowNilToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bda4
	jmp uuid_000000000007bda6
uuid_000000000007bda4:
	push %RBP
	jmp uuid_000000000007bda1
	jmp uuid_000000000007bda3
uuid_000000000007bda1:
	push %RBP
	jmp uuid_000000000007bd9e
	jmp uuid_000000000007bda0
uuid_000000000007bd9e:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bd9b
	jmp uuid_000000000007bd9d
uuid_000000000007bd9b:
	movb $1, -192(%rbp)
uuid_000000000007bd9d:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007bda0:
	mov -216(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007bda3:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007bda6:
	mov -200(%RBP),%RSP
	add $-232, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bda8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bda7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bdaa
uuid_000000000007bda8:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bdaa:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $64, %rsp
	ret
print_CL_ArrowNilContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdc0
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdbd
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdb4
	jmp uuid_000000000007bdb6
uuid_000000000007bdb4:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007bdb1
	jmp uuid_000000000007bdb3
uuid_000000000007bdb1:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bdae
	jmp uuid_000000000007bdb0
uuid_000000000007bdae:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bdab
	jmp uuid_000000000007bdad
uuid_000000000007bdab:
	movb $1, -520(%rbp)
uuid_000000000007bdad:
	mov -632(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007bdb0:
	mov -616(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007bdb3:
	mov -536(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007bdb6:
	mov -528(%RBP),%RSP
	add $-728, %RSP
	mov -520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdba
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bdb9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bdbc
uuid_000000000007bdba:
#call function print : Arrow<Context,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdb7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdb8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bdbc:
	mov -416(%RBP),%RSP
	add $-728, %RSP
	jmp uuid_000000000007bdbf
uuid_000000000007bdbd:
uuid_000000000007bdbf:
	mov -312(%RBP),%RSP
	add $-408, %RSP
	jmp uuid_000000000007bdc2
uuid_000000000007bdc0:
uuid_000000000007bdc2:
	mov -208(%RBP),%RSP
	add $-304, %RSP
	mov %rbp, %rsp
	sub $104, %rsp
	ret
print_CL_ArrowNilTContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdd9
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdd6
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdcf
	jmp uuid_000000000007bdd1
uuid_000000000007bdcf:
	push %RBP
	jmp uuid_000000000007bdcc
	jmp uuid_000000000007bdce
uuid_000000000007bdcc:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007bdc9
	jmp uuid_000000000007bdcb
uuid_000000000007bdc9:
	push %RBP
	mov -528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bdc6
	jmp uuid_000000000007bdc8
uuid_000000000007bdc6:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bdc3
	jmp uuid_000000000007bdc5
uuid_000000000007bdc3:
	movb $1, -640(%rbp)
uuid_000000000007bdc5:
	mov -712(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bdc8:
	mov -696(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bdcb:
	mov -664(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bdce:
	mov -656(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007bdd1:
	mov -648(%RBP),%RSP
	add $-832, %RSP
	mov -640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdd3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bdd2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bdd5
uuid_000000000007bdd3:
#call function print : Arrow<TContext,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdb8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bdd5:
	mov -512(%RBP),%RSP
	add $-832, %RSP
	jmp uuid_000000000007bdd8
uuid_000000000007bdd6:
uuid_000000000007bdd8:
	mov -384(%RBP),%RSP
	add $-504, %RSP
	jmp uuid_000000000007bddb
uuid_000000000007bdd9:
uuid_000000000007bddb:
	mov -256(%RBP),%RSP
	add $-376, %RSP
	mov %rbp, %rsp
	sub $128, %rsp
	ret
print_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be4c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be49
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bde3
	jmp uuid_000000000007bde5
uuid_000000000007bde3:
	push %RBP
	jmp uuid_000000000007bde0
	jmp uuid_000000000007bde2
uuid_000000000007bde0:
	push %RBP
	mov -328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bddd
	jmp uuid_000000000007bddf
uuid_000000000007bddd:
	movb $1, -400(%rbp)
uuid_000000000007bddf:
	mov -424(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007bde2:
	mov -416(%RBP),%RSP
	add $-432, %RSP
uuid_000000000007bde5:
	mov -408(%RBP),%RSP
	add $-432, %RSP
	mov -400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be46
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdec
	jmp uuid_000000000007bdee
uuid_000000000007bdec:
	push %RBP
	jmp uuid_000000000007bde9
	jmp uuid_000000000007bdeb
uuid_000000000007bde9:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bde6
	jmp uuid_000000000007bde8
uuid_000000000007bde6:
	movb $1, -520(%rbp)
uuid_000000000007bde8:
	mov -544(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007bdeb:
	mov -536(%RBP),%RSP
	add $-552, %RSP
uuid_000000000007bdee:
	mov -528(%RBP),%RSP
	add $-552, %RSP
	mov -520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be43
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdf2
	jmp uuid_000000000007bdf4
uuid_000000000007bdf2:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007bdef
	jmp uuid_000000000007bdf1
uuid_000000000007bdef:
	movb $1, -640(%rbp)
uuid_000000000007bdf1:
	mov -656(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007bdf4:
	mov -648(%RBP),%RSP
	add $-680, %RSP
	mov -640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be40
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bdf8
	jmp uuid_000000000007bdfa
uuid_000000000007bdf8:
	push %RBP
	jmp uuid_000000000007bdf5
	jmp uuid_000000000007bdf7
uuid_000000000007bdf5:
	movb $1, -768(%rbp)
uuid_000000000007bdf7:
	mov -784(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007bdfa:
	mov -776(%RBP),%RSP
	add $-784, %RSP
	mov -768(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be3d
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be01
	jmp uuid_000000000007be03
uuid_000000000007be01:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bdfe
	jmp uuid_000000000007be00
uuid_000000000007bdfe:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bdfb
	jmp uuid_000000000007bdfd
uuid_000000000007bdfb:
	movb $1, -872(%rbp)
uuid_000000000007bdfd:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007be00:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007be03:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be3a
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be0b
	jmp uuid_000000000007be0d
uuid_000000000007be0b:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be08
	jmp uuid_000000000007be0a
uuid_000000000007be08:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007be05
	jmp uuid_000000000007be07
uuid_000000000007be05:
	movb $1, -1128(%rbp)
uuid_000000000007be07:
	mov -1224(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007be0a:
	mov -1144(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007be0d:
	mov -1136(%RBP),%RSP
	add $-1280, %RSP
	mov -1128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be37
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be15
	jmp uuid_000000000007be17
uuid_000000000007be15:
	push %RBP
	mov -1352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be12
	jmp uuid_000000000007be14
uuid_000000000007be12:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be0f
	jmp uuid_000000000007be11
uuid_000000000007be0f:
	movb $1, -1368(%rbp)
uuid_000000000007be11:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007be14:
	mov -1384(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007be17:
	mov -1376(%RBP),%RSP
	add $-1536, %RSP
	mov -1368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be34
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be21
	jmp uuid_000000000007be23
uuid_000000000007be21:
	push %RBP
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007be1e
	jmp uuid_000000000007be20
uuid_000000000007be1e:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be1b
	jmp uuid_000000000007be1d
uuid_000000000007be1b:
	push %RBP
	mov -1576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be18
	jmp uuid_000000000007be1a
uuid_000000000007be18:
	movb $1, -1624(%rbp)
uuid_000000000007be1a:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007be1d:
	mov -1672(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007be20:
	mov -1640(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007be23:
	mov -1632(%RBP),%RSP
	add $-1824, %RSP
	mov -1624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be31
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be2a
	jmp uuid_000000000007be2c
uuid_000000000007be2a:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be27
	jmp uuid_000000000007be29
uuid_000000000007be27:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be24
	jmp uuid_000000000007be26
uuid_000000000007be24:
	movb $1, -1912(%rbp)
uuid_000000000007be26:
	mov -2008(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007be29:
	mov -1928(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007be2c:
	mov -1920(%RBP),%RSP
	add $-2080, %RSP
	mov -1912(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be2e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007be2d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be30
uuid_000000000007be2e:
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdb8
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be30:
	mov -1832(%RBP),%RSP
	add $-2080, %RSP
	jmp uuid_000000000007be33
uuid_000000000007be31:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793ba
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000795d6
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079664
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be33:
	mov -1544(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007be36
uuid_000000000007be34:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793ba
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be36:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
	jmp uuid_000000000007be39
uuid_000000000007be37:
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be0e
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be39:
	mov -1048(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007be3c
uuid_000000000007be3a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be04
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdb7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be3c:
	mov -792(%RBP),%RSP
	add $-1040, %RSP
	jmp uuid_000000000007be3f
uuid_000000000007be3d:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a06c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be3f:
	mov -688(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007be42
uuid_000000000007be40:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be42:
	mov -560(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007be45
uuid_000000000007be43:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000795d5
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be45:
	mov -440(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007be48
uuid_000000000007be46:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be48:
	mov -320(%RBP),%RSP
	add $-432, %RSP
	jmp uuid_000000000007be4b
uuid_000000000007be49:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793aa
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be4b:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007be4e
uuid_000000000007be4c:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bddc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be4e:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
print_CL_ArrowNilFContext:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be4f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be63:
#call function non-zero : Arrow<FContext,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be64
	jmp uuid_000000000007be65
uuid_000000000007be64:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be5c
	jmp uuid_000000000007be5e
uuid_000000000007be5c:
	push %RBP
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	jmp uuid_000000000007be59
	jmp uuid_000000000007be5b
uuid_000000000007be59:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007be56
	jmp uuid_000000000007be58
uuid_000000000007be56:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007be53
	jmp uuid_000000000007be55
uuid_000000000007be53:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be50
	jmp uuid_000000000007be52
uuid_000000000007be50:
	movb $1, -624(%rbp)
uuid_000000000007be52:
	mov -848(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007be55:
	mov -832(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007be58:
	mov -800(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007be5b:
	mov -640(%RBP),%RSP
	add $-1048, %RSP
uuid_000000000007be5e:
	mov -632(%RBP),%RSP
	add $-1048, %RSP
	mov -624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be60
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007be5f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be62
uuid_000000000007be60:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -840(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079bde
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -1048(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007be62:
	mov -416(%RBP),%RSP
	add $-1048, %RSP
	add $200, %rsp
	add $200, %rsp
	add $8, %rsp
	add $152, %rsp
	add $24, %rsp
	add $8, %rsp
	add $200, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007be63
uuid_000000000007be65:
	mov %rbp, %rsp
	sub $208, %rsp
	ret
print_CL_ArrowNilFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq $0
	push %RBP
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be78
	jmp uuid_000000000007be7a
uuid_000000000007be78:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007be75
	jmp uuid_000000000007be77
uuid_000000000007be75:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be72
	jmp uuid_000000000007be74
uuid_000000000007be72:
	push %RBP
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	jmp uuid_000000000007be6f
	jmp uuid_000000000007be71
uuid_000000000007be6f:
	push %RBP
	mov -408(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007be6c
	jmp uuid_000000000007be6e
uuid_000000000007be6c:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be69
	jmp uuid_000000000007be6b
uuid_000000000007be69:
	push %RBP
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007be66
	jmp uuid_000000000007be68
uuid_000000000007be66:
	movb $1, -480(%rbp)
uuid_000000000007be68:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007be6b:
	mov -784(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007be6e:
	mov -768(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007be71:
	mov -736(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007be74:
	mov -528(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007be77:
	mov -496(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007be7a:
	mov -488(%RBP),%RSP
	add $-912, %RSP
	mov -480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be91
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007be90
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be93
uuid_000000000007be91:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be7b
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007be7c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<I64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007be8d:
#call function non-zero : Arrow<FragmentKV,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007be8e
	jmp uuid_000000000007be8f
uuid_000000000007be8e:
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	push %RBP
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq $0
	push %RBP
	mov -1016(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be86
	jmp uuid_000000000007be88
uuid_000000000007be86:
	push %RBP
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	jmp uuid_000000000007be83
	jmp uuid_000000000007be85
uuid_000000000007be83:
	push %RBP
	mov -984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007be80
	jmp uuid_000000000007be82
uuid_000000000007be80:
	push %RBP
	mov -976(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be7d
	jmp uuid_000000000007be7f
uuid_000000000007be7d:
	movb $1, -1024(%rbp)
uuid_000000000007be7f:
	mov -1088(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007be82:
	mov -1072(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007be85:
	mov -1040(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007be88:
	mov -1032(%RBP),%RSP
	add $-1136, %RSP
	mov -1024(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be8a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007be89
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007be8c
uuid_000000000007be8a:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000795d9
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bdb7
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -1136(%rbp), %r15
	movq %r15, -832(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -824(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -792(%rbp)
uuid_000000000007be8c:
	mov -968(%RBP),%RSP
	add $-1136, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007be8d
uuid_000000000007be8f:
uuid_000000000007be93:
	mov -320(%RBP),%RSP
	add $-912, %RSP
	mov %rbp, %rsp
	sub $160, %rsp
	ret
print_CL_ArrowNilFragmentList:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007be9a
	jmp uuid_000000000007be9c
uuid_000000000007be9a:
	push %RBP
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	jmp uuid_000000000007be97
	jmp uuid_000000000007be99
uuid_000000000007be97:
	push %RBP
	mov -360(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007be94
	jmp uuid_000000000007be96
uuid_000000000007be94:
	movb $1, -528(%rbp)
uuid_000000000007be96:
	mov -704(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007be99:
	mov -544(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007be9c:
	mov -536(%RBP),%RSP
	add $-872, %RSP
	mov -528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bea1
	push %RBP
	jmp uuid_000000000007be9e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007be9d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bea0
uuid_000000000007be9e:
uuid_000000000007bea0:
	mov -880(%RBP),%RSP
	add $-880, %RSP
	jmp uuid_000000000007bea3
uuid_000000000007bea1:
#call function print : Arrow<FragmentList,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bea3:
	mov -352(%RBP),%RSP
	add $-872, %RSP
	mov %rbp, %rsp
	sub $176, %rsp
	ret
print_CL_ArrowNilSourceLocation:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bead
	jmp uuid_000000000007beaf
uuid_000000000007bead:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007beaa
	jmp uuid_000000000007beac
uuid_000000000007beaa:
	push %RBP
	mov -96(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bea7
	jmp uuid_000000000007bea9
uuid_000000000007bea7:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bea4
	jmp uuid_000000000007bea6
uuid_000000000007bea4:
	movb $1, -120(%rbp)
uuid_000000000007bea6:
	mov -168(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007bea9:
	mov -152(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007beac:
	mov -136(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007beaf:
	mov -128(%RBP),%RSP
	add $-176, %RSP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007beb4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007beb3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007beb6
uuid_000000000007beb4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007beb0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007beb1
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007beb2
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007beb6:
	mov -80(%RBP),%RSP
	add $-176, %RSP
	mov %rbp, %rsp
	sub $40, %rsp
	ret
print_CL_ArrowNilType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007beea
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007beba
	jmp uuid_000000000007bebc
uuid_000000000007beba:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007beb7
	jmp uuid_000000000007beb9
uuid_000000000007beb7:
	movb $1, -128(%rbp)
uuid_000000000007beb9:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007bebc:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bee7
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bec3
	jmp uuid_000000000007bec5
uuid_000000000007bec3:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bec0
	jmp uuid_000000000007bec2
uuid_000000000007bec0:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bebd
	jmp uuid_000000000007bebf
uuid_000000000007bebd:
	movb $1, -192(%rbp)
uuid_000000000007bebf:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bec2:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bec5:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bee4
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007becc
	jmp uuid_000000000007bece
uuid_000000000007becc:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bec9
	jmp uuid_000000000007becb
uuid_000000000007bec9:
	push %RBP
	mov -280(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bec6
	jmp uuid_000000000007bec8
uuid_000000000007bec6:
	movb $1, -304(%rbp)
uuid_000000000007bec8:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007becb:
	mov -320(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007bece:
	mov -312(%RBP),%RSP
	add $-376, %RSP
	mov -304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bee1
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007beda
	jmp uuid_000000000007bedc
uuid_000000000007beda:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bed7
	jmp uuid_000000000007bed9
uuid_000000000007bed7:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bed4
	jmp uuid_000000000007bed6
uuid_000000000007bed4:
	movb $1, -416(%rbp)
uuid_000000000007bed6:
	mov -480(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007bed9:
	mov -432(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007bedc:
	mov -424(%RBP),%RSP
	add $-488, %RSP
	mov -416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bede
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bedd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bee0
uuid_000000000007bede:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007976f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079770
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bee0:
	mov -384(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007bee3
uuid_000000000007bee1:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bed1
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bed0
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bed3
uuid_000000000007bed1:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007becf
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bed3:
	mov -384(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007bee3:
	mov -272(%RBP),%RSP
	add $-384, %RSP
	jmp uuid_000000000007bee6
uuid_000000000007bee4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bee6:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007bee9
uuid_000000000007bee7:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bee9:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007beec
uuid_000000000007beea:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079574
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007beec:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
print_CL_ArrowNilListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf08
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bef5
	jmp uuid_000000000007bef7
uuid_000000000007bef5:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bef2
	jmp uuid_000000000007bef4
uuid_000000000007bef2:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007beef
	jmp uuid_000000000007bef1
uuid_000000000007beef:
	movb $1, -192(%rbp)
uuid_000000000007bef1:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007bef4:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007bef7:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf05
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007befe
	jmp uuid_000000000007bf00
uuid_000000000007befe:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007befb
	jmp uuid_000000000007befd
uuid_000000000007befb:
	push %RBP
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	jmp uuid_000000000007bef8
	jmp uuid_000000000007befa
uuid_000000000007bef8:
	movb $1, -336(%rbp)
uuid_000000000007befa:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007befd:
	mov -352(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007bf00:
	mov -344(%RBP),%RSP
	add $-424, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf02
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bf01
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf04
uuid_000000000007bf02:
#call function print : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007972f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf04:
	mov -288(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007bf07
uuid_000000000007bf05:
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf07:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007bf0a
uuid_000000000007bf08:
uuid_000000000007bf0a:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $48, %rsp
	ret
reverse_CL_ArrowFragmentListFragmentList:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007bf18:
#call function non-zero : Arrow<FragmentList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bf19
	jmp uuid_000000000007bf1a
uuid_000000000007bf19:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf11
	jmp uuid_000000000007bf13
uuid_000000000007bf11:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007bf0e
	jmp uuid_000000000007bf10
uuid_000000000007bf0e:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf0b
	jmp uuid_000000000007bf0d
uuid_000000000007bf0b:
	movb $1, -696(%rbp)
uuid_000000000007bf0d:
	mov -872(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007bf10:
	mov -712(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007bf13:
	mov -704(%RBP),%RSP
	add $-1040, %RSP
	mov -696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf15
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bf14
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf17
uuid_000000000007bf15:
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq $0
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	movq -1040(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007bf17:
	mov -520(%RBP),%RSP
	add $-1040, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007bf18
uuid_000000000007bf1a:
	subq $168, %rsp
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
serialize_SB_ast_CL_ArrowNilAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf9b
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf98
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf1e
	jmp uuid_000000000007bf20
uuid_000000000007bf1e:
	push %RBP
	jmp uuid_000000000007bf1b
	jmp uuid_000000000007bf1d
uuid_000000000007bf1b:
	movb $1, -400(%rbp)
uuid_000000000007bf1d:
	mov -416(%RBP),%RSP
	add $-416, %RSP
uuid_000000000007bf20:
	mov -408(%RBP),%RSP
	add $-416, %RSP
	mov -400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf95
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf27
	jmp uuid_000000000007bf29
uuid_000000000007bf27:
	push %RBP
	jmp uuid_000000000007bf24
	jmp uuid_000000000007bf26
uuid_000000000007bf24:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bf21
	jmp uuid_000000000007bf23
uuid_000000000007bf21:
	movb $1, -504(%rbp)
uuid_000000000007bf23:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007bf26:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007bf29:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf92
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf31
	jmp uuid_000000000007bf33
uuid_000000000007bf31:
	push %RBP
	jmp uuid_000000000007bf2e
	jmp uuid_000000000007bf30
uuid_000000000007bf2e:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bf2b
	jmp uuid_000000000007bf2d
uuid_000000000007bf2b:
	movb $1, -624(%rbp)
uuid_000000000007bf2d:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007bf30:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007bf33:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf8f
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf38
	jmp uuid_000000000007bf3a
uuid_000000000007bf38:
	push %RBP
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	jmp uuid_000000000007bf35
	jmp uuid_000000000007bf37
uuid_000000000007bf35:
	movb $1, -744(%rbp)
uuid_000000000007bf37:
	mov -760(%RBP),%RSP
	add $-784, %RSP
uuid_000000000007bf3a:
	mov -752(%RBP),%RSP
	add $-784, %RSP
	mov -744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf8c
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf41
	jmp uuid_000000000007bf43
uuid_000000000007bf41:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf3e
	jmp uuid_000000000007bf40
uuid_000000000007bf3e:
	push %RBP
	mov -848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf3b
	jmp uuid_000000000007bf3d
uuid_000000000007bf3b:
	movb $1, -872(%rbp)
uuid_000000000007bf3d:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007bf40:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007bf43:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf89
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf4c
	jmp uuid_000000000007bf4e
uuid_000000000007bf4c:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf49
	jmp uuid_000000000007bf4b
uuid_000000000007bf49:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007bf46
	jmp uuid_000000000007bf48
uuid_000000000007bf46:
	movb $1, -1128(%rbp)
uuid_000000000007bf48:
	mov -1224(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007bf4b:
	mov -1144(%RBP),%RSP
	add $-1280, %RSP
uuid_000000000007bf4e:
	mov -1136(%RBP),%RSP
	add $-1280, %RSP
	mov -1128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf86
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf56
	jmp uuid_000000000007bf58
uuid_000000000007bf56:
	push %RBP
	mov -1352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf53
	jmp uuid_000000000007bf55
uuid_000000000007bf53:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf50
	jmp uuid_000000000007bf52
uuid_000000000007bf50:
	movb $1, -1368(%rbp)
uuid_000000000007bf52:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007bf55:
	mov -1384(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007bf58:
	mov -1376(%RBP),%RSP
	add $-1536, %RSP
	mov -1368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf83
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf63
	jmp uuid_000000000007bf65
uuid_000000000007bf63:
	push %RBP
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007bf60
	jmp uuid_000000000007bf62
uuid_000000000007bf60:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf5d
	jmp uuid_000000000007bf5f
uuid_000000000007bf5d:
	push %RBP
	mov -1576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf5a
	jmp uuid_000000000007bf5c
uuid_000000000007bf5a:
	movb $1, -1624(%rbp)
uuid_000000000007bf5c:
	mov -1752(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007bf5f:
	mov -1672(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007bf62:
	mov -1640(%RBP),%RSP
	add $-1824, %RSP
uuid_000000000007bf65:
	mov -1632(%RBP),%RSP
	add $-1824, %RSP
	mov -1624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf80
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -1904(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf6d
	jmp uuid_000000000007bf6f
uuid_000000000007bf6d:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf6a
	jmp uuid_000000000007bf6c
uuid_000000000007bf6a:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2080(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf67
	jmp uuid_000000000007bf69
uuid_000000000007bf67:
	movb $1, -1912(%rbp)
uuid_000000000007bf69:
	mov -2008(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007bf6c:
	mov -1928(%RBP),%RSP
	add $-2080, %RSP
uuid_000000000007bf6f:
	mov -1920(%RBP),%RSP
	add $-2080, %RSP
	mov -1912(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf7d
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -2160(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf76
	jmp uuid_000000000007bf78
uuid_000000000007bf76:
	push %RBP
	mov -2152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf73
	jmp uuid_000000000007bf75
uuid_000000000007bf73:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bf70
	jmp uuid_000000000007bf72
uuid_000000000007bf70:
	movb $1, -2168(%rbp)
uuid_000000000007bf72:
	mov -2264(%RBP),%RSP
	add $-2336, %RSP
uuid_000000000007bf75:
	mov -2184(%RBP),%RSP
	add $-2336, %RSP
uuid_000000000007bf78:
	mov -2176(%RBP),%RSP
	add $-2336, %RSP
	mov -2168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bf7a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bf79
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bf7c
uuid_000000000007bf7a:
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf7c:
	mov -2088(%RBP),%RSP
	add $-2336, %RSP
	jmp uuid_000000000007bf7f
uuid_000000000007bf7d:
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf7f:
	mov -1832(%RBP),%RSP
	add $-2080, %RSP
	jmp uuid_000000000007bf82
uuid_000000000007bf80:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf66
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf45
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf82:
	mov -1544(%RBP),%RSP
	add $-1824, %RSP
	jmp uuid_000000000007bf85
uuid_000000000007bf83:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf59
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf45
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf85:
	mov -1288(%RBP),%RSP
	add $-1536, %RSP
	jmp uuid_000000000007bf88
uuid_000000000007bf86:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf4f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf45
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf88:
	mov -1048(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007bf8b
uuid_000000000007bf89:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf44
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf45
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf8b:
	mov -792(%RBP),%RSP
	add $-1040, %RSP
	jmp uuid_000000000007bf8e
uuid_000000000007bf8c:
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf8e:
	mov -664(%RBP),%RSP
	add $-784, %RSP
	jmp uuid_000000000007bf91
uuid_000000000007bf8f:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf34
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf91:
	mov -544(%RBP),%RSP
	add $-656, %RSP
	jmp uuid_000000000007bf94
uuid_000000000007bf92:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf2a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf94:
	mov -424(%RBP),%RSP
	add $-536, %RSP
	jmp uuid_000000000007bf97
uuid_000000000007bf95:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a06c
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf97:
	mov -320(%RBP),%RSP
	add $-416, %RSP
	jmp uuid_000000000007bf9a
uuid_000000000007bf98:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf9a:
	mov -240(%RBP),%RSP
	add $-312, %RSP
	jmp uuid_000000000007bf9d
uuid_000000000007bf9b:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793aa
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bf9d:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	mov %rbp, %rsp
	sub $80, %rsp
	ret
serialize_SB_ast_CL_ArrowNilListType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfb9
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfa6
	jmp uuid_000000000007bfa8
uuid_000000000007bfa6:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfa3
	jmp uuid_000000000007bfa5
uuid_000000000007bfa3:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007bfa0
	jmp uuid_000000000007bfa2
uuid_000000000007bfa0:
	movb $1, -192(%rbp)
uuid_000000000007bfa2:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007bfa5:
	mov -208(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007bfa8:
	mov -200(%RBP),%RSP
	add $-280, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfb6
	push %RBP
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfaf
	jmp uuid_000000000007bfb1
uuid_000000000007bfaf:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfac
	jmp uuid_000000000007bfae
uuid_000000000007bfac:
	push %RBP
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	jmp uuid_000000000007bfa9
	jmp uuid_000000000007bfab
uuid_000000000007bfa9:
	movb $1, -336(%rbp)
uuid_000000000007bfab:
	mov -400(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007bfae:
	mov -352(%RBP),%RSP
	add $-424, %RSP
uuid_000000000007bfb1:
	mov -344(%RBP),%RSP
	add $-424, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfb3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bfb2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bfb5
uuid_000000000007bfb3:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf59
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf45
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfb5:
	mov -288(%RBP),%RSP
	add $-424, %RSP
	jmp uuid_000000000007bfb8
uuid_000000000007bfb6:
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfb8:
	mov -144(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007bfbb
uuid_000000000007bfb9:
uuid_000000000007bfbb:
	mov -96(%RBP),%RSP
	add $-136, %RSP
	mov %rbp, %rsp
	sub $48, %rsp
	ret
serialize_SB_ast_CL_ArrowNilType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfed
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfc0
	jmp uuid_000000000007bfc2
uuid_000000000007bfc0:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bfbd
	jmp uuid_000000000007bfbf
uuid_000000000007bfbd:
	movb $1, -128(%rbp)
uuid_000000000007bfbf:
	mov -144(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007bfc2:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfea
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfc9
	jmp uuid_000000000007bfcb
uuid_000000000007bfc9:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfc6
	jmp uuid_000000000007bfc8
uuid_000000000007bfc6:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfc3
	jmp uuid_000000000007bfc5
uuid_000000000007bfc3:
	movb $1, -192(%rbp)
uuid_000000000007bfc5:
	mov -240(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bfc8:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007bfcb:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfe7
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -296(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfd3
	jmp uuid_000000000007bfd5
uuid_000000000007bfd3:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfd0
	jmp uuid_000000000007bfd2
uuid_000000000007bfd0:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bfcd
	jmp uuid_000000000007bfcf
uuid_000000000007bfcd:
	movb $1, -304(%rbp)
uuid_000000000007bfcf:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007bfd2:
	mov -320(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007bfd5:
	mov -312(%RBP),%RSP
	add $-376, %RSP
	mov -304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfe4
	push %RBP
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfdc
	jmp uuid_000000000007bfde
uuid_000000000007bfdc:
	push %RBP
	mov -400(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfd9
	jmp uuid_000000000007bfdb
uuid_000000000007bfd9:
	push %RBP
	mov -392(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bfd6
	jmp uuid_000000000007bfd8
uuid_000000000007bfd6:
	movb $1, -416(%rbp)
uuid_000000000007bfd8:
	mov -480(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007bfdb:
	mov -432(%RBP),%RSP
	add $-488, %RSP
uuid_000000000007bfde:
	mov -424(%RBP),%RSP
	add $-488, %RSP
	mov -416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bfe1
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007bfe0
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007bfe3
uuid_000000000007bfe1:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf59
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf34
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bfdf
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<List<Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf45
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfe3:
	mov -384(%RBP),%RSP
	add $-488, %RSP
	jmp uuid_000000000007bfe6
uuid_000000000007bfe4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf34
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfe6:
	mov -272(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007bfe9
uuid_000000000007bfe7:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf59
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bfcc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf59
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bb
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf45
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf45
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfe9:
	mov -160(%RBP),%RSP
	add $-264, %RSP
	jmp uuid_000000000007bfec
uuid_000000000007bfea:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bf2a
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -152(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfec:
	mov -96(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007bfef
uuid_000000000007bfed:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bfbc
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007bfef:
	mov -64(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $32, %rsp
	ret
slot_CL_ArrowTypeConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007bff6
	jmp uuid_000000000007bff8
uuid_000000000007bff6:
	push %RBP
	jmp uuid_000000000007bff3
	jmp uuid_000000000007bff5
uuid_000000000007bff3:
	push %RBP
	mov -104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007bff0
	jmp uuid_000000000007bff2
uuid_000000000007bff0:
	movb $1, -128(%rbp)
uuid_000000000007bff2:
	mov -152(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007bff5:
	mov -144(%RBP),%RSP
	add $-160, %RSP
uuid_000000000007bff8:
	mov -136(%RBP),%RSP
	add $-160, %RSP
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c00f
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c002
	jmp uuid_000000000007c004
uuid_000000000007c002:
	push %RBP
	mov -184(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bfff
	jmp uuid_000000000007c001
uuid_000000000007bfff:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007bffc
	jmp uuid_000000000007bffe
uuid_000000000007bffc:
	movb $1, -200(%rbp)
uuid_000000000007bffe:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007c001:
	mov -216(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007c004:
	mov -208(%RBP),%RSP
	add $-272, %RSP
	mov -200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c00c
	push %RBP
	jmp uuid_000000000007c009
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c008
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c00b
uuid_000000000007c009:
uuid_000000000007c00b:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007c00e
uuid_000000000007c00c:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c005
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	movq -328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -48(%rbp)
	jmp uuid_000000000007c007
uuid_000000000007c005:
	movq -296(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_000000000007c007:
	mov -304(%RBP),%RSP
	add $-304, %RSP
uuid_000000000007c00e:
	mov -168(%RBP),%RSP
	add $-304, %RSP
	jmp uuid_000000000007c011
uuid_000000000007c00f:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007bff9
	jmp uuid_000000000007bffb
uuid_000000000007bff9:
	movq -24(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -48(%rbp)
uuid_000000000007bffb:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007c011:
	mov -96(%RBP),%RSP
	add $-168, %RSP
	subq $24, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
slot_CL_ArrowTypeConsStringConsStringType:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c018
	jmp uuid_000000000007c01a
uuid_000000000007c018:
	push %RBP
	mov -120(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c015
	jmp uuid_000000000007c017
uuid_000000000007c015:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c012
	jmp uuid_000000000007c014
uuid_000000000007c012:
	movb $1, -136(%rbp)
uuid_000000000007c014:
	mov -200(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007c017:
	mov -152(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007c01a:
	mov -144(%RBP),%RSP
	add $-208, %RSP
	mov -136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c044
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c037
	jmp uuid_000000000007c039
uuid_000000000007c037:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c034
	jmp uuid_000000000007c036
uuid_000000000007c034:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c031
	jmp uuid_000000000007c033
uuid_000000000007c031:
	movb $1, -248(%rbp)
uuid_000000000007c033:
	mov -296(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007c036:
	mov -264(%RBP),%RSP
	add $-320, %RSP
uuid_000000000007c039:
	mov -256(%RBP),%RSP
	add $-320, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c041
	push %RBP
	jmp uuid_000000000007c03e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c03d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c040
uuid_000000000007c03e:
uuid_000000000007c040:
	mov -328(%RBP),%RSP
	add $-328, %RSP
	jmp uuid_000000000007c043
uuid_000000000007c041:
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c03a
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	movq -376(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -56(%rbp)
	jmp uuid_000000000007c03c
uuid_000000000007c03a:
	movq -344(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007c03c:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c043:
	mov -216(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007c046
uuid_000000000007c044:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c02e
	jmp uuid_000000000007c030
uuid_000000000007c02e:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c021
	jmp uuid_000000000007c023
uuid_000000000007c021:
	push %RBP
	jmp uuid_000000000007c01e
	jmp uuid_000000000007c020
uuid_000000000007c01e:
	push %RBP
	mov -288(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c01b
	jmp uuid_000000000007c01d
uuid_000000000007c01b:
	movb $1, -312(%rbp)
uuid_000000000007c01d:
	mov -336(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007c020:
	mov -328(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007c023:
	mov -320(%RBP),%RSP
	add $-344, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c02b
	push %RBP
	jmp uuid_000000000007c028
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c027
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c02a
uuid_000000000007c028:
uuid_000000000007c02a:
	mov -352(%RBP),%RSP
	add $-352, %RSP
	jmp uuid_000000000007c02d
uuid_000000000007c02b:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c024
	jmp uuid_000000000007c026
uuid_000000000007c024:
	movq -24(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007c026:
	mov -352(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c02d:
	mov -264(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c030:
	mov -216(%RBP),%RSP
	add $-352, %RSP
uuid_000000000007c046:
	mov -104(%RBP),%RSP
	add $-352, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
uuid_CL_ArrowStringNil:
	movq $uuid_SB_counter_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $uuid_SB_counter_CL_U64, %r14
	movq %r15, 0(%r14)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c047
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-hex : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $uuid_SB_counter_CL_U64, %r15
	pushq 0(%r15)
	mov %RBX, %RBP
	call to_SB_hex_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
iuid_CL_ArrowU64Nil:
	movq $uuid_SB_counter_CL_U64, %RAX
	movq 0(%RAX), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, %r15
	movq $uuid_SB_counter_CL_U64, %r14
	movq %r15, 0(%r14)
	mov $uuid_SB_counter_CL_U64, %r15
	pushq 0(%r15)
	mov -16(%rbp), %RAX
	mov %rbp, %rsp
	sub $8, %rsp
	ret
var_SB_name_SB_if_SB_var_CL_ArrowStringAST:
	pushq $uuid_0000000000079496
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c04e
	jmp uuid_000000000007c050
uuid_000000000007c04e:
	push %RBP
	jmp uuid_000000000007c04b
	jmp uuid_000000000007c04d
uuid_000000000007c04b:
	push %RBP
	mov -176(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c048
	jmp uuid_000000000007c04a
uuid_000000000007c048:
	movb $1, -248(%rbp)
uuid_000000000007c04a:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007c04d:
	mov -264(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007c050:
	mov -256(%RBP),%RSP
	add $-280, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c061
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -360(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c057
	jmp uuid_000000000007c059
uuid_000000000007c057:
	push %RBP
	jmp uuid_000000000007c054
	jmp uuid_000000000007c056
uuid_000000000007c054:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c051
	jmp uuid_000000000007c053
uuid_000000000007c051:
	movb $1, -368(%rbp)
uuid_000000000007c053:
	mov -392(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007c056:
	mov -384(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007c059:
	mov -376(%RBP),%RSP
	add $-400, %RSP
	mov -368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c05e
	push %RBP
	jmp uuid_000000000007c05b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c05a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c05d
uuid_000000000007c05b:
uuid_000000000007c05d:
	mov -408(%RBP),%RSP
	add $-408, %RSP
	jmp uuid_000000000007c060
uuid_000000000007c05e:
	movq -400(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -400(%rbp), %r15
	mov %r15, -88(%rbp)
uuid_000000000007c060:
	mov -288(%RBP),%RSP
	add $-400, %RSP
	jmp uuid_000000000007c063
uuid_000000000007c061:
	movq -280(%rbp), %r15
	movq %r15, -88(%rbp)
	mov -280(%rbp), %r15
	mov %r15, -88(%rbp)
uuid_000000000007c063:
	mov -168(%RBP),%RSP
	add $-280, %RSP
	mov -88(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_expect_CL_ArrowNilConsListTokenString:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<List<Token>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
parse_SB_lambda_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c08f
	jmp uuid_000000000007c091
uuid_000000000007c08f:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -352(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c07a
	jmp uuid_000000000007c07c
uuid_000000000007c07a:
	push %RBP
	mov -344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c077
	jmp uuid_000000000007c079
uuid_000000000007c077:
	push %RBP
	pushq -288(%RBP)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq $0
	push %RBP
	mov -512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c071
	jmp uuid_000000000007c073
uuid_000000000007c071:
	push %RBP
	jmp uuid_000000000007c06e
	jmp uuid_000000000007c070
uuid_000000000007c06e:
	push %RBP
	jmp uuid_000000000007c06b
	jmp uuid_000000000007c06d
uuid_000000000007c06b:
	push %RBP
	mov -464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c068
	jmp uuid_000000000007c06a
uuid_000000000007c068:
	movb $1, -520(%rbp)
uuid_000000000007c06a:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c06d:
	mov -544(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c070:
	mov -536(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c073:
	mov -528(%RBP),%RSP
	add $-560, %RSP
	mov -520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c074
	jmp uuid_000000000007c076
uuid_000000000007c074:
	movb $1, -360(%rbp)
uuid_000000000007c076:
	mov -456(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c079:
	mov -376(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007c07c:
	mov -368(%RBP),%RSP
	add $-560, %RSP
	mov -360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c08c
	jmp uuid_000000000007c08e
uuid_000000000007c08c:
	push %RBP
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq -240(%RBP)
	pushq $0
	push %RBP
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c086
	jmp uuid_000000000007c088
uuid_000000000007c086:
	push %RBP
	jmp uuid_000000000007c083
	jmp uuid_000000000007c085
uuid_000000000007c083:
	push %RBP
	jmp uuid_000000000007c080
	jmp uuid_000000000007c082
uuid_000000000007c080:
	push %RBP
	mov -576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -672(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c07d
	jmp uuid_000000000007c07f
uuid_000000000007c07d:
	movb $1, -632(%rbp)
uuid_000000000007c07f:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007c082:
	mov -656(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007c085:
	mov -648(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007c088:
	mov -640(%RBP),%RSP
	add $-672, %RSP
	mov -632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c089
	jmp uuid_000000000007c08b
uuid_000000000007c089:
	movb $1, -264(%rbp)
uuid_000000000007c08b:
	mov -568(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007c08e:
	mov -280(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007c091:
	mov -272(%RBP),%RSP
	add $-672, %RSP
	mov -264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c096
	push %RBP
	jmp uuid_000000000007c093
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c092
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c095
uuid_000000000007c093:
uuid_000000000007c095:
	mov -680(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007c098
uuid_000000000007c096:
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -448(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -408(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -400(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c098:
	mov -184(%RBP),%RSP
	add $-672, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0aa
	jmp uuid_000000000007c0ac
uuid_000000000007c0aa:
	push %RBP
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	jmp uuid_000000000007c0a7
	jmp uuid_000000000007c0a9
uuid_000000000007c0a7:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq $0
	push %RBP
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0a1
	jmp uuid_000000000007c0a3
uuid_000000000007c0a1:
	push %RBP
	jmp uuid_000000000007c09e
	jmp uuid_000000000007c0a0
uuid_000000000007c09e:
	push %RBP
	mov -1240(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1344(%rbp)
	pushq $uuid_0000000000079664
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c09b
	jmp uuid_000000000007c09d
uuid_000000000007c09b:
	movb $1, -1312(%rbp)
uuid_000000000007c09d:
	mov -1336(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c0a0:
	mov -1328(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c0a3:
	mov -1320(%RBP),%RSP
	add $-1344, %RSP
	mov -1312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0a4
	jmp uuid_000000000007c0a6
uuid_000000000007c0a4:
	movb $1, -1136(%rbp)
uuid_000000000007c0a6:
	mov -1232(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c0a9:
	mov -1152(%RBP),%RSP
	add $-1344, %RSP
uuid_000000000007c0ac:
	mov -1144(%RBP),%RSP
	add $-1344, %RSP
	mov -1136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0c7
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	push %RBP
	mov -1504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0c0
	jmp uuid_000000000007c0c2
uuid_000000000007c0c0:
	push %RBP
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	jmp uuid_000000000007c0bd
	jmp uuid_000000000007c0bf
uuid_000000000007c0bd:
	push %RBP
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	jmp uuid_000000000007c0ba
	jmp uuid_000000000007c0bc
uuid_000000000007c0ba:
	movb $1, -1512(%rbp)
uuid_000000000007c0bc:
	mov -1608(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007c0bf:
	mov -1528(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007c0c2:
	mov -1520(%RBP),%RSP
	add $-1680, %RSP
	mov -1512(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0c4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c0c3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0c6
uuid_000000000007c0c4:
	movq -1680(%rbp), %r15
	movq %r15, -744(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -736(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -728(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -720(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -712(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -704(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -680(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1544(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1536(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c0c6:
	mov -1352(%RBP),%RSP
	add $-1680, %RSP
	jmp uuid_000000000007c0c9
uuid_000000000007c0c7:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0b3
	jmp uuid_000000000007c0b5
uuid_000000000007c0b3:
	push %RBP
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	jmp uuid_000000000007c0b0
	jmp uuid_000000000007c0b2
uuid_000000000007c0b0:
	push %RBP
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	jmp uuid_000000000007c0ad
	jmp uuid_000000000007c0af
uuid_000000000007c0ad:
	movb $1, -1664(%rbp)
uuid_000000000007c0af:
	mov -1760(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007c0b2:
	mov -1680(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007c0b5:
	mov -1672(%RBP),%RSP
	add $-1832, %RSP
	mov -1664(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0b7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c0b6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0b9
uuid_000000000007c0b7:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST+CaseNumber<9>,Array<AST+CaseNumber<9>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTCaseNumber9ASTCaseNumber9
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $5
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	movq -1752(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1744(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1736(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1728(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -752(%rbp)
uuid_000000000007c0b9:
	mov -1504(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007c0c9:
	mov -976(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007c106:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c107
	jmp uuid_000000000007c108
uuid_000000000007c107:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0d9
	jmp uuid_000000000007c0db
uuid_000000000007c0d9:
	push %RBP
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	jmp uuid_000000000007c0d6
	jmp uuid_000000000007c0d8
uuid_000000000007c0d6:
	push %RBP
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq $0
	push %RBP
	mov -2320(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0d0
	jmp uuid_000000000007c0d2
uuid_000000000007c0d0:
	push %RBP
	jmp uuid_000000000007c0cd
	jmp uuid_000000000007c0cf
uuid_000000000007c0cd:
	push %RBP
	mov -2256(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2360(%rbp)
	pushq $uuid_0000000000079664
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c0ca
	jmp uuid_000000000007c0cc
uuid_000000000007c0ca:
	movb $1, -2328(%rbp)
uuid_000000000007c0cc:
	mov -2352(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007c0cf:
	mov -2344(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007c0d2:
	mov -2336(%RBP),%RSP
	add $-2360, %RSP
	mov -2328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0d3
	jmp uuid_000000000007c0d5
uuid_000000000007c0d3:
	movb $1, -2152(%rbp)
uuid_000000000007c0d5:
	mov -2248(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007c0d8:
	mov -2168(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007c0db:
	mov -2160(%RBP),%RSP
	add $-2360, %RSP
	mov -2152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c103
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2520(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0ef
	jmp uuid_000000000007c0f1
uuid_000000000007c0ef:
	push %RBP
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	mov -2616(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0ec
	jmp uuid_000000000007c0ee
uuid_000000000007c0ec:
	push %RBP
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	jmp uuid_000000000007c0e9
	jmp uuid_000000000007c0eb
uuid_000000000007c0e9:
	movb $1, -2528(%rbp)
uuid_000000000007c0eb:
	mov -2624(%RBP),%RSP
	add $-2696, %RSP
uuid_000000000007c0ee:
	mov -2544(%RBP),%RSP
	add $-2696, %RSP
uuid_000000000007c0f1:
	mov -2536(%RBP),%RSP
	add $-2696, %RSP
	mov -2528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c100
	push %RBP
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0f9
	jmp uuid_000000000007c0fb
uuid_000000000007c0f9:
	push %RBP
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	jmp uuid_000000000007c0f6
	jmp uuid_000000000007c0f8
uuid_000000000007c0f6:
	push %RBP
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	jmp uuid_000000000007c0f3
	jmp uuid_000000000007c0f5
uuid_000000000007c0f3:
	movb $1, -2864(%rbp)
uuid_000000000007c0f5:
	mov -2960(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007c0f8:
	mov -2880(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007c0fb:
	mov -2872(%RBP),%RSP
	add $-3032, %RSP
	mov -2864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0fd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c0fc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0ff
uuid_000000000007c0fd:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	pushq -3016(%rbp)
	pushq -3024(%rbp)
	pushq -3032(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	movq -2952(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2944(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2936(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2928(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2920(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2912(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2904(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2896(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2888(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c0ff:
	mov -2704(%RBP),%RSP
	add $-3032, %RSP
	jmp uuid_000000000007c102
uuid_000000000007c100:
#call function parse-expect : Arrow<Cons<String,List<Token>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c0f2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_expect_CL_ArrowNilConsListTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c102:
	mov -2368(%RBP),%RSP
	add $-2696, %RSP
	jmp uuid_000000000007c105
uuid_000000000007c103:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0e2
	jmp uuid_000000000007c0e4
uuid_000000000007c0e2:
	push %RBP
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	jmp uuid_000000000007c0df
	jmp uuid_000000000007c0e1
uuid_000000000007c0df:
	push %RBP
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	jmp uuid_000000000007c0dc
	jmp uuid_000000000007c0de
uuid_000000000007c0dc:
	movb $1, -2680(%rbp)
uuid_000000000007c0de:
	mov -2776(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007c0e1:
	mov -2696(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007c0e4:
	mov -2688(%RBP),%RSP
	add $-2848, %RSP
	mov -2680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c0e6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c0e5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c0e8
uuid_000000000007c0e6:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $5
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	movq -2768(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -2712(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -2704(%rbp), %r15
	movq %r15, -752(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c0e8:
	mov -2520(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007c105:
	mov -1992(%RBP),%RSP
	add $-2848, %RSP
	add $152, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $152, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c106
uuid_000000000007c108:
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -1984(%rbp)
	pushq -1976(%rbp)
	pushq -1968(%rbp)
	pushq -1960(%rbp)
	pushq -1952(%rbp)
	pushq -1944(%rbp)
	pushq -1936(%rbp)
	pushq -1928(%rbp)
	pushq -1920(%rbp)
	pushq -1912(%rbp)
	pushq -1904(%rbp)
	pushq -1896(%rbp)
	pushq -1888(%rbp)
	pushq -1880(%rbp)
	pushq -1872(%rbp)
	pushq -1864(%rbp)
	pushq -1856(%rbp)
	pushq -1848(%rbp)
	pushq -1840(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007c154:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c155
	jmp uuid_000000000007c156
uuid_000000000007c155:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c11f
	jmp uuid_000000000007c121
uuid_000000000007c11f:
	push %RBP
	mov -368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c11c
	jmp uuid_000000000007c11e
uuid_000000000007c11c:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c116
	jmp uuid_000000000007c118
uuid_000000000007c116:
	push %RBP
	jmp uuid_000000000007c113
	jmp uuid_000000000007c115
uuid_000000000007c113:
	push %RBP
	jmp uuid_000000000007c110
	jmp uuid_000000000007c112
uuid_000000000007c110:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq $uuid_00000000000795d3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c10d
	jmp uuid_000000000007c10f
uuid_000000000007c10d:
	movb $1, -544(%rbp)
uuid_000000000007c10f:
	mov -576(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007c112:
	mov -568(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007c115:
	mov -560(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007c118:
	mov -552(%RBP),%RSP
	add $-584, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c119
	jmp uuid_000000000007c11b
uuid_000000000007c119:
	movb $1, -384(%rbp)
uuid_000000000007c11b:
	mov -480(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007c11e:
	mov -400(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007c121:
	mov -392(%RBP),%RSP
	add $-584, %RSP
	mov -384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c151
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c134
	jmp uuid_000000000007c136
uuid_000000000007c134:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c131
	jmp uuid_000000000007c133
uuid_000000000007c131:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c12b
	jmp uuid_000000000007c12d
uuid_000000000007c12b:
	push %RBP
	jmp uuid_000000000007c128
	jmp uuid_000000000007c12a
uuid_000000000007c128:
	push %RBP
	jmp uuid_000000000007c125
	jmp uuid_000000000007c127
uuid_000000000007c125:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c122
	jmp uuid_000000000007c124
uuid_000000000007c122:
	movb $1, -832(%rbp)
uuid_000000000007c124:
	mov -864(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c127:
	mov -856(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c12a:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c12d:
	mov -840(%RBP),%RSP
	add $-872, %RSP
	mov -832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c12e
	jmp uuid_000000000007c130
uuid_000000000007c12e:
	movb $1, -672(%rbp)
uuid_000000000007c130:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c133:
	mov -688(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c136:
	mov -680(%RBP),%RSP
	add $-872, %RSP
	mov -672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c14e
	push %RBP
	jmp uuid_000000000007c14b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c14a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c14d
uuid_000000000007c14b:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c140
	jmp uuid_000000000007c142
uuid_000000000007c140:
	push %RBP
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	jmp uuid_000000000007c13d
	jmp uuid_000000000007c13f
uuid_000000000007c13d:
	push %RBP
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	jmp uuid_000000000007c13a
	jmp uuid_000000000007c13c
uuid_000000000007c13a:
	movb $1, -1200(%rbp)
uuid_000000000007c13c:
	mov -1296(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007c13f:
	mov -1216(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007c142:
	mov -1208(%RBP),%RSP
	add $-1368, %RSP
	mov -1200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c147
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c146
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c149
uuid_000000000007c147:
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c143
	movq -1368(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1360(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1352(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -88(%rbp)
	jmp uuid_000000000007c145
uuid_000000000007c143:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c145:
	mov -1376(%RBP),%RSP
	add $-1376, %RSP
	movq -1288(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c149:
	mov -1040(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007c14d:
	mov -880(%RBP),%RSP
	add $-1376, %RSP
	jmp uuid_000000000007c150
uuid_000000000007c14e:
	push %RBP
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c137
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007c139
uuid_000000000007c137:
uuid_000000000007c139:
	mov -880(%RBP),%RSP
	add $-880, %RSP
	movq -760(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c150:
	mov -592(%RBP),%RSP
	add $-880, %RSP
	jmp uuid_000000000007c153
uuid_000000000007c151:
	movq -72(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -48(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -24(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c153:
	mov -304(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c154
uuid_000000000007c156:
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_one_SB_expression_CL_ArrowParsePartialListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov -376(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1ef
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c16d
	jmp uuid_000000000007c16f
uuid_000000000007c16d:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c16a
	jmp uuid_000000000007c16c
uuid_000000000007c16a:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c164
	jmp uuid_000000000007c166
uuid_000000000007c164:
	push %RBP
	jmp uuid_000000000007c161
	jmp uuid_000000000007c163
uuid_000000000007c161:
	push %RBP
	jmp uuid_000000000007c15e
	jmp uuid_000000000007c160
uuid_000000000007c15e:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -664(%rbp)
	pushq $uuid_00000000000795d6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c15b
	jmp uuid_000000000007c15d
uuid_000000000007c15b:
	movb $1, -624(%rbp)
uuid_000000000007c15d:
	mov -656(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007c160:
	mov -648(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007c163:
	mov -640(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007c166:
	mov -632(%RBP),%RSP
	add $-664, %RSP
	mov -624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c167
	jmp uuid_000000000007c169
uuid_000000000007c167:
	movb $1, -464(%rbp)
uuid_000000000007c169:
	mov -560(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007c16c:
	mov -480(%RBP),%RSP
	add $-664, %RSP
uuid_000000000007c16f:
	mov -472(%RBP),%RSP
	add $-664, %RSP
	mov -464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1ec
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -744(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c18f
	jmp uuid_000000000007c191
uuid_000000000007c18f:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c18c
	jmp uuid_000000000007c18e
uuid_000000000007c18c:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq $0
	push %RBP
	mov -904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c186
	jmp uuid_000000000007c188
uuid_000000000007c186:
	push %RBP
	jmp uuid_000000000007c183
	jmp uuid_000000000007c185
uuid_000000000007c183:
	push %RBP
	jmp uuid_000000000007c180
	jmp uuid_000000000007c182
uuid_000000000007c180:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c17d
	jmp uuid_000000000007c17f
uuid_000000000007c17d:
	movb $1, -912(%rbp)
uuid_000000000007c17f:
	mov -944(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007c182:
	mov -936(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007c185:
	mov -928(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007c188:
	mov -920(%RBP),%RSP
	add $-952, %RSP
	mov -912(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c189
	jmp uuid_000000000007c18b
uuid_000000000007c189:
	movb $1, -752(%rbp)
uuid_000000000007c18b:
	mov -848(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007c18e:
	mov -768(%RBP),%RSP
	add $-952, %RSP
uuid_000000000007c191:
	mov -760(%RBP),%RSP
	add $-952, %RSP
	mov -752(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1e9
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1032(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1a5
	jmp uuid_000000000007c1a7
uuid_000000000007c1a5:
	push %RBP
	mov -1024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c1a2
	jmp uuid_000000000007c1a4
uuid_000000000007c1a2:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c19c
	jmp uuid_000000000007c19e
uuid_000000000007c19c:
	push %RBP
	jmp uuid_000000000007c199
	jmp uuid_000000000007c19b
uuid_000000000007c199:
	push %RBP
	jmp uuid_000000000007c196
	jmp uuid_000000000007c198
uuid_000000000007c196:
	push %RBP
	mov -1144(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1240(%rbp)
	pushq $uuid_00000000000793ba
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c193
	jmp uuid_000000000007c195
uuid_000000000007c193:
	movb $1, -1200(%rbp)
uuid_000000000007c195:
	mov -1232(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c198:
	mov -1224(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c19b:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c19e:
	mov -1208(%RBP),%RSP
	add $-1240, %RSP
	mov -1200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c19f
	jmp uuid_000000000007c1a1
uuid_000000000007c19f:
	movb $1, -1040(%rbp)
uuid_000000000007c1a1:
	mov -1136(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c1a4:
	mov -1056(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c1a7:
	mov -1048(%RBP),%RSP
	add $-1240, %RSP
	mov -1040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1e6
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1d0
	jmp uuid_000000000007c1d2
uuid_000000000007c1d0:
	push %RBP
	mov -1312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1bb
	jmp uuid_000000000007c1bd
uuid_000000000007c1bb:
	push %RBP
	mov -1408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c1b8
	jmp uuid_000000000007c1ba
uuid_000000000007c1b8:
	push %RBP
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	jmp uuid_000000000007c1b5
	jmp uuid_000000000007c1b7
uuid_000000000007c1b5:
	movb $1, -1424(%rbp)
uuid_000000000007c1b7:
	mov -1520(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007c1ba:
	mov -1440(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007c1bd:
	mov -1432(%RBP),%RSP
	add $-1576, %RSP
	mov -1424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1cd
	jmp uuid_000000000007c1cf
uuid_000000000007c1cd:
	push %RBP
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1c7
	jmp uuid_000000000007c1c9
uuid_000000000007c1c7:
	push %RBP
	jmp uuid_000000000007c1c4
	jmp uuid_000000000007c1c6
uuid_000000000007c1c4:
	push %RBP
	jmp uuid_000000000007c1c1
	jmp uuid_000000000007c1c3
uuid_000000000007c1c1:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1688(%rbp)
	pushq $uuid_00000000000795d5
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1be
	jmp uuid_000000000007c1c0
uuid_000000000007c1be:
	movb $1, -1648(%rbp)
uuid_000000000007c1c0:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007c1c3:
	mov -1672(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007c1c6:
	mov -1664(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007c1c9:
	mov -1656(%RBP),%RSP
	add $-1688, %RSP
	mov -1648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1ca
	jmp uuid_000000000007c1cc
uuid_000000000007c1ca:
	movb $1, -1328(%rbp)
uuid_000000000007c1cc:
	mov -1584(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007c1cf:
	mov -1344(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007c1d2:
	mov -1336(%RBP),%RSP
	add $-1688, %RSP
	mov -1328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1e3
	push %RBP
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1d9
	jmp uuid_000000000007c1db
uuid_000000000007c1d9:
	push %RBP
	mov -1760(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c1d6
	jmp uuid_000000000007c1d8
uuid_000000000007c1d6:
	push %RBP
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	jmp uuid_000000000007c1d3
	jmp uuid_000000000007c1d5
uuid_000000000007c1d3:
	movb $1, -1776(%rbp)
uuid_000000000007c1d5:
	mov -1872(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007c1d8:
	mov -1792(%RBP),%RSP
	add $-1928, %RSP
uuid_000000000007c1db:
	mov -1784(%RBP),%RSP
	add $-1928, %RSP
	mov -1776(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1e0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c1df
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c1e2
uuid_000000000007c1e0:
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -1880(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1dc
	mov -1880(%RBP), %RAX
	push %RAX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007c1de
uuid_000000000007c1dc:
	mov -1880(%RBP), %RAX
	push %RAX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007c1de:
	mov -1936(%RBP),%RSP
	add $-1936, %RSP
	movq -1864(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1856(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1848(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1840(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1832(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1824(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1816(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1808(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1800(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007c1e2:
	mov -1696(%RBP),%RSP
	add $-1936, %RSP
	jmp uuid_000000000007c1e5
uuid_000000000007c1e3:
	mov -1528(%RBP), %RAX
	push %RAX
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1512(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1504(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007c1e5:
	mov -1248(%RBP),%RSP
	add $-1688, %RSP
	jmp uuid_000000000007c1e8
uuid_000000000007c1e6:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1ae
	jmp uuid_000000000007c1b0
uuid_000000000007c1ae:
	push %RBP
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	jmp uuid_000000000007c1ab
	jmp uuid_000000000007c1ad
uuid_000000000007c1ab:
	push %RBP
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	jmp uuid_000000000007c1a8
	jmp uuid_000000000007c1aa
uuid_000000000007c1a8:
	movb $1, -1560(%rbp)
uuid_000000000007c1aa:
	mov -1656(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007c1ad:
	mov -1576(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007c1b0:
	mov -1568(%RBP),%RSP
	add $-1728, %RSP
	mov -1560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1b2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c1b1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c1b4
uuid_000000000007c1b2:
	movq -1728(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1720(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1712(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1608(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007c1b4:
	mov -1400(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007c1e8:
	mov -960(%RBP),%RSP
	add $-1728, %RSP
	jmp uuid_000000000007c1eb
uuid_000000000007c1e9:
#call function parse-unexpect : Arrow<Cons<String,List<Token>>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c192
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call parse_SB_unexpect_CL_ArrowNilConsListTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c1eb:
	mov -672(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007c1ee
uuid_000000000007c1ec:
#call function parse-lambda : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call parse_SB_lambda_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	push %RBP
	mov -976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c176
	jmp uuid_000000000007c178
uuid_000000000007c176:
	push %RBP
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	jmp uuid_000000000007c173
	jmp uuid_000000000007c175
uuid_000000000007c173:
	push %RBP
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	jmp uuid_000000000007c170
	jmp uuid_000000000007c172
uuid_000000000007c170:
	movb $1, -984(%rbp)
uuid_000000000007c172:
	mov -1080(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007c175:
	mov -1000(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007c178:
	mov -992(%RBP),%RSP
	add $-1152, %RSP
	mov -984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c17a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c179
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c17c
uuid_000000000007c17a:
	movq -1152(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -160(%rbp)
uuid_000000000007c17c:
	mov -824(%RBP),%RSP
	add $-1152, %RSP
uuid_000000000007c1ee:
	mov -384(%RBP),%RSP
	add $-1152, %RSP
	jmp uuid_000000000007c1f1
uuid_000000000007c1ef:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $9
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
uuid_000000000007c1f1:
	mov -304(%RBP),%RSP
	add $-376, %RSP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_toplevel_CL_ArrowASTListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
uuid_000000000007c43d:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c43e
	jmp uuid_000000000007c43f
uuid_000000000007c43e:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c206
	jmp uuid_000000000007c208
uuid_000000000007c206:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c203
	jmp uuid_000000000007c205
uuid_000000000007c203:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c1fd
	jmp uuid_000000000007c1ff
uuid_000000000007c1fd:
	push %RBP
	jmp uuid_000000000007c1fa
	jmp uuid_000000000007c1fc
uuid_000000000007c1fa:
	push %RBP
	jmp uuid_000000000007c1f7
	jmp uuid_000000000007c1f9
uuid_000000000007c1f7:
	push %RBP
	mov -416(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -512(%rbp)
	pushq $uuid_00000000000795d3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c1f4
	jmp uuid_000000000007c1f6
uuid_000000000007c1f4:
	movb $1, -472(%rbp)
uuid_000000000007c1f6:
	mov -504(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007c1f9:
	mov -496(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007c1fc:
	mov -488(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007c1ff:
	mov -480(%RBP),%RSP
	add $-512, %RSP
	mov -472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c200
	jmp uuid_000000000007c202
uuid_000000000007c200:
	movb $1, -312(%rbp)
uuid_000000000007c202:
	mov -408(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007c205:
	mov -328(%RBP),%RSP
	add $-512, %RSP
uuid_000000000007c208:
	mov -320(%RBP),%RSP
	add $-512, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c43a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c21c
	jmp uuid_000000000007c21e
uuid_000000000007c21c:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c219
	jmp uuid_000000000007c21b
uuid_000000000007c219:
	push %RBP
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c213
	jmp uuid_000000000007c215
uuid_000000000007c213:
	push %RBP
	jmp uuid_000000000007c210
	jmp uuid_000000000007c212
uuid_000000000007c210:
	push %RBP
	jmp uuid_000000000007c20d
	jmp uuid_000000000007c20f
uuid_000000000007c20d:
	push %RBP
	mov -704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -800(%rbp)
	pushq $uuid_000000000007c209
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c20a
	jmp uuid_000000000007c20c
uuid_000000000007c20a:
	movb $1, -760(%rbp)
uuid_000000000007c20c:
	mov -792(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c20f:
	mov -784(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c212:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c215:
	mov -768(%RBP),%RSP
	add $-800, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c216
	jmp uuid_000000000007c218
uuid_000000000007c216:
	movb $1, -600(%rbp)
uuid_000000000007c218:
	mov -696(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c21b:
	mov -616(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c21e:
	mov -608(%RBP),%RSP
	add $-800, %RSP
	mov -600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c437
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c25c
	jmp uuid_000000000007c25e
uuid_000000000007c25c:
	push %RBP
	mov -872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c259
	jmp uuid_000000000007c25b
uuid_000000000007c259:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq $0
	push %RBP
	mov -1040(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c253
	jmp uuid_000000000007c255
uuid_000000000007c253:
	push %RBP
	jmp uuid_000000000007c250
	jmp uuid_000000000007c252
uuid_000000000007c250:
	push %RBP
	jmp uuid_000000000007c24d
	jmp uuid_000000000007c24f
uuid_000000000007c24d:
	push %RBP
	mov -992(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1088(%rbp)
	pushq $uuid_000000000007c249
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c24a
	jmp uuid_000000000007c24c
uuid_000000000007c24a:
	movb $1, -1048(%rbp)
uuid_000000000007c24c:
	mov -1080(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007c24f:
	mov -1072(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007c252:
	mov -1064(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007c255:
	mov -1056(%RBP),%RSP
	add $-1088, %RSP
	mov -1048(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c256
	jmp uuid_000000000007c258
uuid_000000000007c256:
	movb $1, -888(%rbp)
uuid_000000000007c258:
	mov -984(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007c25b:
	mov -904(%RBP),%RSP
	add $-1088, %RSP
uuid_000000000007c25e:
	mov -896(%RBP),%RSP
	add $-1088, %RSP
	mov -888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c434
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c295
	jmp uuid_000000000007c297
uuid_000000000007c295:
	push %RBP
	mov -1160(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c27f
	jmp uuid_000000000007c281
uuid_000000000007c27f:
	push %RBP
	mov -1256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c27c
	jmp uuid_000000000007c27e
uuid_000000000007c27c:
	push %RBP
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq $0
	push %RBP
	mov -1424(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c276
	jmp uuid_000000000007c278
uuid_000000000007c276:
	push %RBP
	jmp uuid_000000000007c273
	jmp uuid_000000000007c275
uuid_000000000007c273:
	push %RBP
	jmp uuid_000000000007c270
	jmp uuid_000000000007c272
uuid_000000000007c270:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq $uuid_000000000007c26c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c26d
	jmp uuid_000000000007c26f
uuid_000000000007c26d:
	movb $1, -1432(%rbp)
uuid_000000000007c26f:
	mov -1464(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007c272:
	mov -1456(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007c275:
	mov -1448(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007c278:
	mov -1440(%RBP),%RSP
	add $-1472, %RSP
	mov -1432(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c279
	jmp uuid_000000000007c27b
uuid_000000000007c279:
	movb $1, -1272(%rbp)
uuid_000000000007c27b:
	mov -1368(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007c27e:
	mov -1288(%RBP),%RSP
	add $-1472, %RSP
uuid_000000000007c281:
	mov -1280(%RBP),%RSP
	add $-1472, %RSP
	mov -1272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c292
	jmp uuid_000000000007c294
uuid_000000000007c292:
	push %RBP
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c28c
	jmp uuid_000000000007c28e
uuid_000000000007c28c:
	push %RBP
	jmp uuid_000000000007c289
	jmp uuid_000000000007c28b
uuid_000000000007c289:
	push %RBP
	jmp uuid_000000000007c286
	jmp uuid_000000000007c288
uuid_000000000007c286:
	push %RBP
	mov -1488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1584(%rbp)
	pushq $uuid_000000000007c282
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c283
	jmp uuid_000000000007c285
uuid_000000000007c283:
	movb $1, -1544(%rbp)
uuid_000000000007c285:
	mov -1576(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007c288:
	mov -1568(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007c28b:
	mov -1560(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007c28e:
	mov -1552(%RBP),%RSP
	add $-1584, %RSP
	mov -1544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c28f
	jmp uuid_000000000007c291
uuid_000000000007c28f:
	movb $1, -1176(%rbp)
uuid_000000000007c291:
	mov -1480(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007c294:
	mov -1192(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007c297:
	mov -1184(%RBP),%RSP
	add $-1584, %RSP
	mov -1176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c431
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2c4
	jmp uuid_000000000007c2c6
uuid_000000000007c2c4:
	push %RBP
	mov -1656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c2c1
	jmp uuid_000000000007c2c3
uuid_000000000007c2c1:
	push %RBP
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq $0
	push %RBP
	mov -1824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2bb
	jmp uuid_000000000007c2bd
uuid_000000000007c2bb:
	push %RBP
	jmp uuid_000000000007c2b8
	jmp uuid_000000000007c2ba
uuid_000000000007c2b8:
	push %RBP
	jmp uuid_000000000007c2b5
	jmp uuid_000000000007c2b7
uuid_000000000007c2b5:
	push %RBP
	mov -1776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq $uuid_000000000007c26c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c2b2
	jmp uuid_000000000007c2b4
uuid_000000000007c2b2:
	movb $1, -1832(%rbp)
uuid_000000000007c2b4:
	mov -1864(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007c2b7:
	mov -1856(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007c2ba:
	mov -1848(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007c2bd:
	mov -1840(%RBP),%RSP
	add $-1872, %RSP
	mov -1832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2be
	jmp uuid_000000000007c2c0
uuid_000000000007c2be:
	movb $1, -1672(%rbp)
uuid_000000000007c2c0:
	mov -1768(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007c2c3:
	mov -1688(%RBP),%RSP
	add $-1872, %RSP
uuid_000000000007c2c6:
	mov -1680(%RBP),%RSP
	add $-1872, %RSP
	mov -1672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c42e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c334
	jmp uuid_000000000007c336
uuid_000000000007c334:
	push %RBP
	mov -1944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c31e
	jmp uuid_000000000007c320
uuid_000000000007c31e:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c308
	jmp uuid_000000000007c30a
uuid_000000000007c308:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2f3
	jmp uuid_000000000007c2f5
uuid_000000000007c2f3:
	push %RBP
	mov -2232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c2f0
	jmp uuid_000000000007c2f2
uuid_000000000007c2f0:
	push %RBP
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq $0
	push %RBP
	mov -2400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2ea
	jmp uuid_000000000007c2ec
uuid_000000000007c2ea:
	push %RBP
	jmp uuid_000000000007c2e7
	jmp uuid_000000000007c2e9
uuid_000000000007c2e7:
	push %RBP
	jmp uuid_000000000007c2e4
	jmp uuid_000000000007c2e6
uuid_000000000007c2e4:
	push %RBP
	mov -2352(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c2e1
	jmp uuid_000000000007c2e3
uuid_000000000007c2e1:
	movb $1, -2408(%rbp)
uuid_000000000007c2e3:
	mov -2440(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007c2e6:
	mov -2432(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007c2e9:
	mov -2424(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007c2ec:
	mov -2416(%RBP),%RSP
	add $-2448, %RSP
	mov -2408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2ed
	jmp uuid_000000000007c2ef
uuid_000000000007c2ed:
	movb $1, -2248(%rbp)
uuid_000000000007c2ef:
	mov -2344(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007c2f2:
	mov -2264(%RBP),%RSP
	add $-2448, %RSP
uuid_000000000007c2f5:
	mov -2256(%RBP),%RSP
	add $-2448, %RSP
	mov -2248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c305
	jmp uuid_000000000007c307
uuid_000000000007c305:
	push %RBP
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq $0
	push %RBP
	mov -2512(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2ff
	jmp uuid_000000000007c301
uuid_000000000007c2ff:
	push %RBP
	jmp uuid_000000000007c2fc
	jmp uuid_000000000007c2fe
uuid_000000000007c2fc:
	push %RBP
	jmp uuid_000000000007c2f9
	jmp uuid_000000000007c2fb
uuid_000000000007c2f9:
	push %RBP
	mov -2464(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c2f6
	jmp uuid_000000000007c2f8
uuid_000000000007c2f6:
	movb $1, -2520(%rbp)
uuid_000000000007c2f8:
	mov -2552(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c2fb:
	mov -2544(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c2fe:
	mov -2536(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c301:
	mov -2528(%RBP),%RSP
	add $-2560, %RSP
	mov -2520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c302
	jmp uuid_000000000007c304
uuid_000000000007c302:
	movb $1, -2152(%rbp)
uuid_000000000007c304:
	mov -2456(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c307:
	mov -2168(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c30a:
	mov -2160(%RBP),%RSP
	add $-2560, %RSP
	mov -2152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c31b
	jmp uuid_000000000007c31d
uuid_000000000007c31b:
	push %RBP
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq $0
	push %RBP
	mov -2624(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c315
	jmp uuid_000000000007c317
uuid_000000000007c315:
	push %RBP
	jmp uuid_000000000007c312
	jmp uuid_000000000007c314
uuid_000000000007c312:
	push %RBP
	jmp uuid_000000000007c30f
	jmp uuid_000000000007c311
uuid_000000000007c30f:
	push %RBP
	mov -2576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2672(%rbp)
	pushq $uuid_000000000007c30b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c30c
	jmp uuid_000000000007c30e
uuid_000000000007c30c:
	movb $1, -2632(%rbp)
uuid_000000000007c30e:
	mov -2664(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007c311:
	mov -2656(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007c314:
	mov -2648(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007c317:
	mov -2640(%RBP),%RSP
	add $-2672, %RSP
	mov -2632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c318
	jmp uuid_000000000007c31a
uuid_000000000007c318:
	movb $1, -2056(%rbp)
uuid_000000000007c31a:
	mov -2568(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007c31d:
	mov -2072(%RBP),%RSP
	add $-2672, %RSP
uuid_000000000007c320:
	mov -2064(%RBP),%RSP
	add $-2672, %RSP
	mov -2056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c331
	jmp uuid_000000000007c333
uuid_000000000007c331:
	push %RBP
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c32b
	jmp uuid_000000000007c32d
uuid_000000000007c32b:
	push %RBP
	jmp uuid_000000000007c328
	jmp uuid_000000000007c32a
uuid_000000000007c328:
	push %RBP
	jmp uuid_000000000007c325
	jmp uuid_000000000007c327
uuid_000000000007c325:
	push %RBP
	mov -2688(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq $uuid_000000000007c321
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c322
	jmp uuid_000000000007c324
uuid_000000000007c322:
	movb $1, -2744(%rbp)
uuid_000000000007c324:
	mov -2776(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007c327:
	mov -2768(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007c32a:
	mov -2760(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007c32d:
	mov -2752(%RBP),%RSP
	add $-2784, %RSP
	mov -2744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c32e
	jmp uuid_000000000007c330
uuid_000000000007c32e:
	movb $1, -1960(%rbp)
uuid_000000000007c330:
	mov -2680(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007c333:
	mov -1976(%RBP),%RSP
	add $-2784, %RSP
uuid_000000000007c336:
	mov -1968(%RBP),%RSP
	add $-2784, %RSP
	mov -1960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c42b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c37c
	jmp uuid_000000000007c37e
uuid_000000000007c37c:
	push %RBP
	mov -2856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c366
	jmp uuid_000000000007c368
uuid_000000000007c366:
	push %RBP
	mov -2952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3056(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c351
	jmp uuid_000000000007c353
uuid_000000000007c351:
	push %RBP
	mov -3048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c34e
	jmp uuid_000000000007c350
uuid_000000000007c34e:
	push %RBP
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq $0
	push %RBP
	mov -3216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c348
	jmp uuid_000000000007c34a
uuid_000000000007c348:
	push %RBP
	jmp uuid_000000000007c345
	jmp uuid_000000000007c347
uuid_000000000007c345:
	push %RBP
	jmp uuid_000000000007c342
	jmp uuid_000000000007c344
uuid_000000000007c342:
	push %RBP
	mov -3168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c33f
	jmp uuid_000000000007c341
uuid_000000000007c33f:
	movb $1, -3224(%rbp)
uuid_000000000007c341:
	mov -3256(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007c344:
	mov -3248(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007c347:
	mov -3240(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007c34a:
	mov -3232(%RBP),%RSP
	add $-3264, %RSP
	mov -3224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c34b
	jmp uuid_000000000007c34d
uuid_000000000007c34b:
	movb $1, -3064(%rbp)
uuid_000000000007c34d:
	mov -3160(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007c350:
	mov -3080(%RBP),%RSP
	add $-3264, %RSP
uuid_000000000007c353:
	mov -3072(%RBP),%RSP
	add $-3264, %RSP
	mov -3064(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c363
	jmp uuid_000000000007c365
uuid_000000000007c363:
	push %RBP
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq $0
	push %RBP
	mov -3328(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c35d
	jmp uuid_000000000007c35f
uuid_000000000007c35d:
	push %RBP
	jmp uuid_000000000007c35a
	jmp uuid_000000000007c35c
uuid_000000000007c35a:
	push %RBP
	jmp uuid_000000000007c357
	jmp uuid_000000000007c359
uuid_000000000007c357:
	push %RBP
	mov -3280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c354
	jmp uuid_000000000007c356
uuid_000000000007c354:
	movb $1, -3336(%rbp)
uuid_000000000007c356:
	mov -3368(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007c359:
	mov -3360(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007c35c:
	mov -3352(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007c35f:
	mov -3344(%RBP),%RSP
	add $-3376, %RSP
	mov -3336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c360
	jmp uuid_000000000007c362
uuid_000000000007c360:
	movb $1, -2968(%rbp)
uuid_000000000007c362:
	mov -3272(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007c365:
	mov -2984(%RBP),%RSP
	add $-3376, %RSP
uuid_000000000007c368:
	mov -2976(%RBP),%RSP
	add $-3376, %RSP
	mov -2968(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c379
	jmp uuid_000000000007c37b
uuid_000000000007c379:
	push %RBP
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	pushq $0
	push %RBP
	mov -3440(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c373
	jmp uuid_000000000007c375
uuid_000000000007c373:
	push %RBP
	jmp uuid_000000000007c370
	jmp uuid_000000000007c372
uuid_000000000007c370:
	push %RBP
	jmp uuid_000000000007c36d
	jmp uuid_000000000007c36f
uuid_000000000007c36d:
	push %RBP
	mov -3392(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3488(%rbp)
	pushq $uuid_000000000007c369
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c36a
	jmp uuid_000000000007c36c
uuid_000000000007c36a:
	movb $1, -3448(%rbp)
uuid_000000000007c36c:
	mov -3480(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007c36f:
	mov -3472(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007c372:
	mov -3464(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007c375:
	mov -3456(%RBP),%RSP
	add $-3488, %RSP
	mov -3448(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c376
	jmp uuid_000000000007c378
uuid_000000000007c376:
	movb $1, -2872(%rbp)
uuid_000000000007c378:
	mov -3384(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007c37b:
	mov -2888(%RBP),%RSP
	add $-3488, %RSP
uuid_000000000007c37e:
	mov -2880(%RBP),%RSP
	add $-3488, %RSP
	mov -2872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c428
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -3568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3a7
	jmp uuid_000000000007c3a9
uuid_000000000007c3a7:
	push %RBP
	mov -3560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c391
	jmp uuid_000000000007c393
uuid_000000000007c391:
	push %RBP
	mov -3656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c38e
	jmp uuid_000000000007c390
uuid_000000000007c38e:
	push %RBP
	pushq -3600(%RBP)
	pushq -3608(%RBP)
	pushq -3616(%RBP)
	pushq -3624(%RBP)
	pushq -3632(%RBP)
	pushq -3640(%RBP)
	pushq -3648(%RBP)
	pushq $0
	push %RBP
	mov -3824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c388
	jmp uuid_000000000007c38a
uuid_000000000007c388:
	push %RBP
	jmp uuid_000000000007c385
	jmp uuid_000000000007c387
uuid_000000000007c385:
	push %RBP
	jmp uuid_000000000007c382
	jmp uuid_000000000007c384
uuid_000000000007c382:
	push %RBP
	mov -3776(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c37f
	jmp uuid_000000000007c381
uuid_000000000007c37f:
	movb $1, -3832(%rbp)
uuid_000000000007c381:
	mov -3864(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007c384:
	mov -3856(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007c387:
	mov -3848(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007c38a:
	mov -3840(%RBP),%RSP
	add $-3872, %RSP
	mov -3832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c38b
	jmp uuid_000000000007c38d
uuid_000000000007c38b:
	movb $1, -3672(%rbp)
uuid_000000000007c38d:
	mov -3768(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007c390:
	mov -3688(%RBP),%RSP
	add $-3872, %RSP
uuid_000000000007c393:
	mov -3680(%RBP),%RSP
	add $-3872, %RSP
	mov -3672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3a4
	jmp uuid_000000000007c3a6
uuid_000000000007c3a4:
	push %RBP
	pushq -3504(%RBP)
	pushq -3512(%RBP)
	pushq -3520(%RBP)
	pushq -3528(%RBP)
	pushq -3536(%RBP)
	pushq -3544(%RBP)
	pushq -3552(%RBP)
	pushq $0
	push %RBP
	mov -3936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c39e
	jmp uuid_000000000007c3a0
uuid_000000000007c39e:
	push %RBP
	jmp uuid_000000000007c39b
	jmp uuid_000000000007c39d
uuid_000000000007c39b:
	push %RBP
	jmp uuid_000000000007c398
	jmp uuid_000000000007c39a
uuid_000000000007c398:
	push %RBP
	mov -3888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3984(%rbp)
	pushq $uuid_000000000007c394
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c395
	jmp uuid_000000000007c397
uuid_000000000007c395:
	movb $1, -3944(%rbp)
uuid_000000000007c397:
	mov -3976(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007c39a:
	mov -3968(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007c39d:
	mov -3960(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007c3a0:
	mov -3952(%RBP),%RSP
	add $-3984, %RSP
	mov -3944(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3a1
	jmp uuid_000000000007c3a3
uuid_000000000007c3a1:
	movb $1, -3576(%rbp)
uuid_000000000007c3a3:
	mov -3880(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007c3a6:
	mov -3592(%RBP),%RSP
	add $-3984, %RSP
uuid_000000000007c3a9:
	mov -3584(%RBP),%RSP
	add $-3984, %RSP
	mov -3576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c425
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4064(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3db
	jmp uuid_000000000007c3dd
uuid_000000000007c3db:
	push %RBP
	mov -4056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3c5
	jmp uuid_000000000007c3c7
uuid_000000000007c3c5:
	push %RBP
	mov -4152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3bc
	jmp uuid_000000000007c3be
uuid_000000000007c3bc:
	push %RBP
	mov -4248(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c3b9
	jmp uuid_000000000007c3bb
uuid_000000000007c3b9:
	push %RBP
	pushq -4192(%RBP)
	pushq -4200(%RBP)
	pushq -4208(%RBP)
	pushq -4216(%RBP)
	pushq -4224(%RBP)
	pushq -4232(%RBP)
	pushq -4240(%RBP)
	pushq $0
	push %RBP
	mov -4416(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3b3
	jmp uuid_000000000007c3b5
uuid_000000000007c3b3:
	push %RBP
	jmp uuid_000000000007c3b0
	jmp uuid_000000000007c3b2
uuid_000000000007c3b0:
	push %RBP
	jmp uuid_000000000007c3ad
	jmp uuid_000000000007c3af
uuid_000000000007c3ad:
	push %RBP
	mov -4368(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c3aa
	jmp uuid_000000000007c3ac
uuid_000000000007c3aa:
	movb $1, -4424(%rbp)
uuid_000000000007c3ac:
	mov -4456(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007c3af:
	mov -4448(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007c3b2:
	mov -4440(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007c3b5:
	mov -4432(%RBP),%RSP
	add $-4464, %RSP
	mov -4424(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3b6
	jmp uuid_000000000007c3b8
uuid_000000000007c3b6:
	movb $1, -4264(%rbp)
uuid_000000000007c3b8:
	mov -4360(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007c3bb:
	mov -4280(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007c3be:
	mov -4272(%RBP),%RSP
	add $-4464, %RSP
	mov -4264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3c2
	jmp uuid_000000000007c3c4
uuid_000000000007c3c2:
	push %RBP
	pushq -4096(%RBP)
	pushq -4104(%RBP)
	pushq -4112(%RBP)
	pushq -4120(%RBP)
	pushq -4128(%RBP)
	pushq -4136(%RBP)
	pushq -4144(%RBP)
	jmp uuid_000000000007c3bf
	jmp uuid_000000000007c3c1
uuid_000000000007c3bf:
	movb $1, -4168(%rbp)
uuid_000000000007c3c1:
	mov -4472(%RBP),%RSP
	add $-4528, %RSP
uuid_000000000007c3c4:
	mov -4184(%RBP),%RSP
	add $-4528, %RSP
uuid_000000000007c3c7:
	mov -4176(%RBP),%RSP
	add $-4528, %RSP
	mov -4168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3d8
	jmp uuid_000000000007c3da
uuid_000000000007c3d8:
	push %RBP
	pushq -4000(%RBP)
	pushq -4008(%RBP)
	pushq -4016(%RBP)
	pushq -4024(%RBP)
	pushq -4032(%RBP)
	pushq -4040(%RBP)
	pushq -4048(%RBP)
	pushq $0
	push %RBP
	mov -4592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3d2
	jmp uuid_000000000007c3d4
uuid_000000000007c3d2:
	push %RBP
	jmp uuid_000000000007c3cf
	jmp uuid_000000000007c3d1
uuid_000000000007c3cf:
	push %RBP
	jmp uuid_000000000007c3cc
	jmp uuid_000000000007c3ce
uuid_000000000007c3cc:
	push %RBP
	mov -4544(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4640(%rbp)
	pushq $uuid_000000000007c3c8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c3c9
	jmp uuid_000000000007c3cb
uuid_000000000007c3c9:
	movb $1, -4600(%rbp)
uuid_000000000007c3cb:
	mov -4632(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007c3ce:
	mov -4624(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007c3d1:
	mov -4616(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007c3d4:
	mov -4608(%RBP),%RSP
	add $-4640, %RSP
	mov -4600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3d5
	jmp uuid_000000000007c3d7
uuid_000000000007c3d5:
	movb $1, -4072(%rbp)
uuid_000000000007c3d7:
	mov -4536(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007c3da:
	mov -4088(%RBP),%RSP
	add $-4640, %RSP
uuid_000000000007c3dd:
	mov -4080(%RBP),%RSP
	add $-4640, %RSP
	mov -4072(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c422
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4720(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3fe
	jmp uuid_000000000007c400
uuid_000000000007c3fe:
	push %RBP
	mov -4712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4816(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3f5
	jmp uuid_000000000007c3f7
uuid_000000000007c3f5:
	push %RBP
	mov -4808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c3f2
	jmp uuid_000000000007c3f4
uuid_000000000007c3f2:
	push %RBP
	pushq -4752(%RBP)
	pushq -4760(%RBP)
	pushq -4768(%RBP)
	pushq -4776(%RBP)
	pushq -4784(%RBP)
	pushq -4792(%RBP)
	pushq -4800(%RBP)
	pushq $0
	push %RBP
	mov -4976(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3ec
	jmp uuid_000000000007c3ee
uuid_000000000007c3ec:
	push %RBP
	jmp uuid_000000000007c3e9
	jmp uuid_000000000007c3eb
uuid_000000000007c3e9:
	push %RBP
	jmp uuid_000000000007c3e6
	jmp uuid_000000000007c3e8
uuid_000000000007c3e6:
	push %RBP
	mov -4928(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5024(%rbp)
	pushq $uuid_000000000007c3e2
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c3e3
	jmp uuid_000000000007c3e5
uuid_000000000007c3e3:
	movb $1, -4984(%rbp)
uuid_000000000007c3e5:
	mov -5016(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007c3e8:
	mov -5008(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007c3eb:
	mov -5000(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007c3ee:
	mov -4992(%RBP),%RSP
	add $-5024, %RSP
	mov -4984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3ef
	jmp uuid_000000000007c3f1
uuid_000000000007c3ef:
	movb $1, -4824(%rbp)
uuid_000000000007c3f1:
	mov -4920(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007c3f4:
	mov -4840(%RBP),%RSP
	add $-5024, %RSP
uuid_000000000007c3f7:
	mov -4832(%RBP),%RSP
	add $-5024, %RSP
	mov -4824(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c3fb
	jmp uuid_000000000007c3fd
uuid_000000000007c3fb:
	push %RBP
	pushq -4656(%RBP)
	pushq -4664(%RBP)
	pushq -4672(%RBP)
	pushq -4680(%RBP)
	pushq -4688(%RBP)
	pushq -4696(%RBP)
	pushq -4704(%RBP)
	jmp uuid_000000000007c3f8
	jmp uuid_000000000007c3fa
uuid_000000000007c3f8:
	movb $1, -4728(%rbp)
uuid_000000000007c3fa:
	mov -5032(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007c3fd:
	mov -4744(%RBP),%RSP
	add $-5088, %RSP
uuid_000000000007c400:
	mov -4736(%RBP),%RSP
	add $-5088, %RSP
	mov -4728(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c41f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007c41c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c41b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c41e
uuid_000000000007c41c:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq $0
	push %RBP
	mov -5480(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c414
	jmp uuid_000000000007c416
uuid_000000000007c414:
	push %RBP
	pushq -5408(%RBP)
	pushq -5416(%RBP)
	pushq -5424(%RBP)
	pushq -5432(%RBP)
	pushq -5440(%RBP)
	pushq -5448(%RBP)
	pushq -5456(%RBP)
	pushq -5464(%RBP)
	pushq -5472(%RBP)
	jmp uuid_000000000007c411
	jmp uuid_000000000007c413
uuid_000000000007c411:
	push %RBP
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	pushq -5392(%RBP)
	pushq -5400(%RBP)
	jmp uuid_000000000007c40e
	jmp uuid_000000000007c410
uuid_000000000007c40e:
	movb $1, -5488(%rbp)
uuid_000000000007c410:
	mov -5584(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007c413:
	mov -5504(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007c416:
	mov -5496(%RBP),%RSP
	add $-5656, %RSP
	mov -5488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c418
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c417
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c41a
uuid_000000000007c418:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -5576(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -5568(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -5560(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -5552(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -5544(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -5536(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -5528(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -5520(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -5512(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c41a:
	mov -5328(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007c41e:
	mov -5096(%RBP),%RSP
	add $-5656, %RSP
	jmp uuid_000000000007c421
uuid_000000000007c41f:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	pushq -4864(%rbp)
	pushq -4872(%rbp)
	pushq -4880(%rbp)
	pushq -4888(%rbp)
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq $0
	push %RBP
	mov -5400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c407
	jmp uuid_000000000007c409
uuid_000000000007c407:
	push %RBP
	pushq -5328(%RBP)
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	pushq -5392(%RBP)
	jmp uuid_000000000007c404
	jmp uuid_000000000007c406
uuid_000000000007c404:
	push %RBP
	pushq -5256(%RBP)
	pushq -5264(%RBP)
	pushq -5272(%RBP)
	pushq -5280(%RBP)
	pushq -5288(%RBP)
	pushq -5296(%RBP)
	pushq -5304(%RBP)
	pushq -5312(%RBP)
	pushq -5320(%RBP)
	jmp uuid_000000000007c401
	jmp uuid_000000000007c403
uuid_000000000007c401:
	movb $1, -5408(%rbp)
uuid_000000000007c403:
	mov -5504(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007c406:
	mov -5424(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007c409:
	mov -5416(%RBP),%RSP
	add $-5576, %RSP
	mov -5408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c40b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c40a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c40d
uuid_000000000007c40b:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -5496(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -5488(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -5480(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -5472(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -5464(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -5456(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -5448(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -5440(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -5432(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c40d:
	mov -5248(%RBP),%RSP
	add $-5576, %RSP
uuid_000000000007c421:
	mov -4648(%RBP),%RSP
	add $-5576, %RSP
	jmp uuid_000000000007c424
uuid_000000000007c422:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007c3de
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c3df
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007c3df
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4480(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c3e0
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007c3e0
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c3e1
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007c3e1
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c3df
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007c3df
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c3e1
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007c3e1
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4464(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4464(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4480(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079968
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $3
	pushq $5
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -4352(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -4344(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -4336(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -4328(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -4320(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -4312(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -4304(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -4296(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -4288(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c424:
	mov -3992(%RBP),%RSP
	add $-4640, %RSP
	jmp uuid_000000000007c427
uuid_000000000007c425:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3872(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -3760(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3752(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -3744(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -3736(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -3728(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -3720(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -3712(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -3704(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -3696(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c427:
	mov -3496(%RBP),%RSP
	add $-3984, %RSP
	jmp uuid_000000000007c42a
uuid_000000000007c428:
#call function index-size-of-class : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3376(%rbp)
#call function to-u64 : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3264(%rbp)
	mov %RBX, %RBP
	call to_SB_u64_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call index_SB_size_SB_of_SB_class_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -3152(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -3144(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -3136(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -3128(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -3120(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -3112(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -3104(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -3096(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -3088(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c42a:
	mov -2792(%RBP),%RSP
	add $-3488, %RSP
	jmp uuid_000000000007c42d
uuid_000000000007c42b:
#call function close : Arrow<SfxList,Array<SfxList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SfxListSfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2448(%rbp)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079e45
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a9c0
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2560(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	movq -2336(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2272(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c42d:
	mov -1880(%RBP),%RSP
	add $-2784, %RSP
	jmp uuid_000000000007c430
uuid_000000000007c42e:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq $0
	push %RBP
	mov -2184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2cd
	jmp uuid_000000000007c2cf
uuid_000000000007c2cd:
	push %RBP
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	jmp uuid_000000000007c2ca
	jmp uuid_000000000007c2cc
uuid_000000000007c2ca:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	jmp uuid_000000000007c2c7
	jmp uuid_000000000007c2c9
uuid_000000000007c2c7:
	movb $1, -2192(%rbp)
uuid_000000000007c2c9:
	mov -2288(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007c2cc:
	mov -2208(%RBP),%RSP
	add $-2360, %RSP
uuid_000000000007c2cf:
	mov -2200(%RBP),%RSP
	add $-2360, %RSP
	mov -2192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2de
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c2dd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c2e0
uuid_000000000007c2de:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2d6
	jmp uuid_000000000007c2d8
uuid_000000000007c2d6:
	push %RBP
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	jmp uuid_000000000007c2d3
	jmp uuid_000000000007c2d5
uuid_000000000007c2d3:
	push %RBP
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	jmp uuid_000000000007c2d0
	jmp uuid_000000000007c2d2
uuid_000000000007c2d0:
	movb $1, -2680(%rbp)
uuid_000000000007c2d2:
	mov -2776(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007c2d5:
	mov -2696(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007c2d8:
	mov -2688(%RBP),%RSP
	add $-2848, %RSP
	mov -2680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2da
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c2d9
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c2dc
uuid_000000000007c2da:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2784(%rbp)
	pushq -2792(%rbp)
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -2768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c2dc:
	mov -2520(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007c2e0:
	mov -2032(%RBP),%RSP
	add $-2848, %RSP
uuid_000000000007c430:
	mov -1592(%RBP),%RSP
	add $-2848, %RSP
	jmp uuid_000000000007c433
uuid_000000000007c431:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c29e
	jmp uuid_000000000007c2a0
uuid_000000000007c29e:
	push %RBP
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	jmp uuid_000000000007c29b
	jmp uuid_000000000007c29d
uuid_000000000007c29b:
	push %RBP
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	jmp uuid_000000000007c298
	jmp uuid_000000000007c29a
uuid_000000000007c298:
	movb $1, -1904(%rbp)
uuid_000000000007c29a:
	mov -2000(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007c29d:
	mov -1920(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007c2a0:
	mov -1912(%RBP),%RSP
	add $-2072, %RSP
	mov -1904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2af
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c2ae
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c2b1
uuid_000000000007c2af:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq $0
	push %RBP
	mov -2384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2a7
	jmp uuid_000000000007c2a9
uuid_000000000007c2a7:
	push %RBP
	pushq -2312(%RBP)
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	jmp uuid_000000000007c2a4
	jmp uuid_000000000007c2a6
uuid_000000000007c2a4:
	push %RBP
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	jmp uuid_000000000007c2a1
	jmp uuid_000000000007c2a3
uuid_000000000007c2a1:
	movb $1, -2392(%rbp)
uuid_000000000007c2a3:
	mov -2488(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c2a6:
	mov -2408(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007c2a9:
	mov -2400(%RBP),%RSP
	add $-2560, %RSP
	mov -2392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c2ab
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c2aa
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c2ad
uuid_000000000007c2ab:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	pushq -2512(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
#call function type-of-s : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call type_SB_of_SB_s_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function index-tag-is-fragment : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function tag-of : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	mov %RBX, %RBP
	call tag_SB_of_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call index_SB_tag_SB_is_SB_fragment_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -2480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -2432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -2424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -2416(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c2ad:
	mov -2232(%RBP),%RSP
	add $-2584, %RSP
uuid_000000000007c2b1:
	mov -1744(%RBP),%RSP
	add $-2584, %RSP
uuid_000000000007c433:
	mov -1096(%RBP),%RSP
	add $-2584, %RSP
	jmp uuid_000000000007c436
uuid_000000000007c434:
#call function parse-many-expressions : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov %RBX, %RBP
	call parse_SB_many_SB_expressions_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c265
	jmp uuid_000000000007c267
uuid_000000000007c265:
	push %RBP
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	jmp uuid_000000000007c262
	jmp uuid_000000000007c264
uuid_000000000007c262:
	push %RBP
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	jmp uuid_000000000007c25f
	jmp uuid_000000000007c261
uuid_000000000007c25f:
	movb $1, -1408(%rbp)
uuid_000000000007c261:
	mov -1504(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007c264:
	mov -1424(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007c267:
	mov -1416(%RBP),%RSP
	add $-1576, %RSP
	mov -1408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c269
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c268
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c26b
uuid_000000000007c269:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -1496(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c26b:
	mov -1248(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007c436:
	mov -808(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007c439
uuid_000000000007c437:
#call function parse-one-expression : Arrow<List<Token>,ParsePartial>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	mov %RBX, %RBP
	call parse_SB_one_SB_expression_CL_ArrowParsePartialListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq $0
	push %RBP
	mov -1112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c225
	jmp uuid_000000000007c227
uuid_000000000007c225:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	jmp uuid_000000000007c222
	jmp uuid_000000000007c224
uuid_000000000007c222:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	jmp uuid_000000000007c21f
	jmp uuid_000000000007c221
uuid_000000000007c21f:
	movb $1, -1120(%rbp)
uuid_000000000007c221:
	mov -1216(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007c224:
	mov -1136(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007c227:
	mov -1128(%RBP),%RSP
	add $-1288, %RSP
	mov -1120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c246
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c245
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c248
uuid_000000000007c246:
#call function take-one-expr : Arrow<List<Token>,Tuple<List<Token>,List<Token>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	mov %RBX, %RBP
	call take_SB_one_SB_expr_CL_ArrowTupleListTokenListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c22e
	jmp uuid_000000000007c230
uuid_000000000007c22e:
	push %RBP
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	jmp uuid_000000000007c22b
	jmp uuid_000000000007c22d
uuid_000000000007c22b:
	push %RBP
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	jmp uuid_000000000007c228
	jmp uuid_000000000007c22a
uuid_000000000007c228:
	movb $1, -1608(%rbp)
uuid_000000000007c22a:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c22d:
	mov -1624(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c230:
	mov -1616(%RBP),%RSP
	add $-1776, %RSP
	mov -1608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c242
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c241
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c244
uuid_000000000007c242:
#call function parse-toplevel : Arrow<List<Token>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	mov %RBX, %RBP
	call parse_SB_toplevel_CL_ArrowASTListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	push %RBP
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq $0
	push %RBP
	mov -2000(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c237
	jmp uuid_000000000007c239
uuid_000000000007c237:
	push %RBP
	mov -1992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c234
	jmp uuid_000000000007c236
uuid_000000000007c234:
	push %RBP
	mov -1984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2176(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c231
	jmp uuid_000000000007c233
uuid_000000000007c231:
	movb $1, -2008(%rbp)
uuid_000000000007c233:
	mov -2104(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007c236:
	mov -2024(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007c239:
	mov -2016(%RBP),%RSP
	add $-2176, %RSP
	mov -2008(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c23e
	push %RBP
	jmp uuid_000000000007c23b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c23a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c23d
uuid_000000000007c23b:
uuid_000000000007c23d:
	mov -2184(%RBP),%RSP
	add $-2184, %RSP
	jmp uuid_000000000007c240
uuid_000000000007c23e:
	movq -2096(%rbp), %r15
	movq %r15, -1848(%rbp)
	movq -2088(%rbp), %r15
	movq %r15, -1840(%rbp)
	movq -2080(%rbp), %r15
	movq %r15, -1832(%rbp)
	movq -2072(%rbp), %r15
	movq %r15, -1824(%rbp)
	movq -2064(%rbp), %r15
	movq %r15, -1816(%rbp)
	movq -2056(%rbp), %r15
	movq %r15, -1808(%rbp)
	movq -2048(%rbp), %r15
	movq %r15, -1800(%rbp)
	movq -2040(%rbp), %r15
	movq %r15, -1792(%rbp)
	movq -2032(%rbp), %r15
	movq %r15, -1784(%rbp)
uuid_000000000007c240:
	mov -1928(%RBP),%RSP
	add $-2176, %RSP
#call function close : Arrow<MacroList,Array<MacroList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_MacroListMacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function without-location : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	mov %RBX, %RBP
	call without_SB_location_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $0
	pushq $0
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	popq 72(%r15)
	popq 80(%r15)
	popq 88(%r15)
	popq 96(%r15)
	popq 104(%r15)
	popq 112(%r15)
	popq 120(%r15)
	popq 128(%r15)
	popq 136(%r15)
	popq 144(%r15)
	popq 152(%r15)
	popq 160(%r15)
	movq -1696(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c244:
	mov -1448(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007c248:
	mov -960(%RBP),%RSP
	add $-2176, %RSP
uuid_000000000007c439:
	mov -520(%RBP),%RSP
	add $-2176, %RSP
	jmp uuid_000000000007c43c
uuid_000000000007c43a:
	movq -400(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c43c:
	mov -232(%RBP),%RSP
	add $-512, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c43d
uuid_000000000007c43f:
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString:
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007c458:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007c459
	jmp uuid_000000000007c45a
uuid_000000000007c459:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %AL
	mov $60, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c44f
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %AL
	mov $62, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c44c
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c449
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %AL
	mov $93, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c446
	push %RBP
	jmp uuid_000000000007c443
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c442
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c445
uuid_000000000007c443:
uuid_000000000007c445:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007c448
uuid_000000000007c446:
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007c448:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007c44b
uuid_000000000007c449:
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007c44b:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c44e
uuid_000000000007c44c:
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007c44e:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007c451
uuid_000000000007c44f:
	movq -48(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -48(%rbp)
uuid_000000000007c451:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c455
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007c457
uuid_000000000007c455:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	mov $44, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c452
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007c454
uuid_000000000007c452:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007c454:
	mov -128(%RBP),%RSP
	add $-128, %RSP
uuid_000000000007c457:
	mov -120(%RBP),%RSP
	add $-128, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c458
uuid_000000000007c45a:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_type_SB_single_CL_ArrowTypeString:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007c4b9:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007c4ba
	jmp uuid_000000000007c4bb
uuid_000000000007c4ba:
	push %RBP
	movq -24(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4b6
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %AL
	mov $60, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c48c
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %AL
	mov $62, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c489
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c486
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %AL
	mov $93, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c483
	push %RBP
	jmp uuid_000000000007c480
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c47f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c482
uuid_000000000007c480:
uuid_000000000007c482:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007c485
uuid_000000000007c483:
	movq -24(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007c485:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007c488
uuid_000000000007c486:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007c488:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c48b
uuid_000000000007c489:
	movq -24(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007c48b:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007c48e
uuid_000000000007c48c:
	movq -24(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -24(%rbp)
uuid_000000000007c48e:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -24(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4b3
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	jmp uuid_000000000007c4b5
uuid_000000000007c4b3:
	pushq -32(%rbp)
	push %RBP
	pushq -128(%rbp)
	mov -144(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4b0
	push %RBP
	pushq -128(%rbp)
	mov -160(%RBP), %AL
	mov $60, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4ad
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c4ac
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c4af
uuid_000000000007c4ad:
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c498
	jmp uuid_000000000007c49a
uuid_000000000007c498:
	push %RBP
	mov -208(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c495
	jmp uuid_000000000007c497
uuid_000000000007c495:
	push %RBP
	mov -200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c492
	jmp uuid_000000000007c494
uuid_000000000007c492:
	movb $1, -224(%rbp)
uuid_000000000007c494:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007c497:
	mov -240(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007c49a:
	mov -232(%RBP),%RSP
	add $-296, %RSP
	mov -224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4a9
	push %RBP
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c49e
	jmp uuid_000000000007c4a0
uuid_000000000007c49e:
	push %RBP
	mov -320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c49b
	jmp uuid_000000000007c49d
uuid_000000000007c49b:
	movb $1, -336(%rbp)
uuid_000000000007c49d:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007c4a0:
	mov -344(%RBP),%RSP
	add $-360, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4a6
	push %RBP
	jmp uuid_000000000007c4a3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c4a2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c4a5
uuid_000000000007c4a3:
#call function eprint : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c4a1
	mov %RBX, %RBP
	call eprint_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c4a5:
	mov -368(%RBP),%RSP
	add $-368, %RSP
	jmp uuid_000000000007c4a8
uuid_000000000007c4a6:
	pushq -360(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-comma-sep : Arrow<String,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007c4a8:
	mov -304(%RBP),%RSP
	add $-360, %RSP
	jmp uuid_000000000007c4ab
uuid_000000000007c4a9:
	pushq -296(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-comma-sep : Arrow<String,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_comma_SB_sep_CL_ArrowListTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007c4ab:
	mov -192(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007c4af:
	mov -152(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007c4b2
uuid_000000000007c4b0:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c48f
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007999c
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007c491
uuid_000000000007c48f:
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007999c
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007c491:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007c4b2:
	mov -136(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007c4b5:
	mov -120(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007c4b8
uuid_000000000007c4b6:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c47c
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %AL
	mov $60, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c479
	push %RBP
	pushq -96(%rbp)
	jmp uuid_000000000007c476
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c475
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c478
uuid_000000000007c476:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007c478:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c47b
uuid_000000000007c479:
	movb $60, -32(%rbp)
	movq $1, -24(%rbp)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c472
	jmp uuid_000000000007c474
uuid_000000000007c472:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_0000000000079574
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c46f
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c46c
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007c46e
uuid_000000000007c46c:
	pushq $0
	pushq -144(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c46e:
	mov -160(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007c471
uuid_000000000007c46f:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c471:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007c474:
	mov -136(%RBP),%RSP
	add $-152, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007c47b:
	mov -120(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007c47e
uuid_000000000007c47c:
	movb $91, -32(%rbp)
	movq $1, -24(%rbp)
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c465
	jmp uuid_000000000007c467
uuid_000000000007c465:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_0000000000079574
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c462
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c45f
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007c461
uuid_000000000007c45f:
	pushq $0
	pushq -128(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c461:
	mov -144(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c464
uuid_000000000007c462:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c464:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007c467:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007c47e:
	mov -104(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007c4b8:
	mov -88(%RBP),%RSP
	add $-136, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c4b9
uuid_000000000007c4bb:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4c6
	jmp uuid_000000000007c4c8
uuid_000000000007c4c6:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_0000000000079574
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4c3
	push %RBP
#call function is-variable : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	mov %RBX, %RBP
	call is_SB_variable_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4c0
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<List<Type>+List<Type>+CaseNumber<1>,Array<List<Type>+List<Type>+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	jmp uuid_000000000007c4c2
uuid_000000000007c4c0:
	pushq $0
	pushq -96(%rbp)
	pushq $2
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c4c2:
	mov -112(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007c4c5
uuid_000000000007c4c3:
	pushq $0
	pushq $0
	pushq $3
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
uuid_000000000007c4c5:
	mov -104(%RBP),%RSP
	add $-104, %RSP
uuid_000000000007c4c8:
	mov -88(%RBP),%RSP
	add $-104, %RSP
	subq $24, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_type_CL_ArrowTypeString:
	pushq $0
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4c9
	jmp uuid_000000000007c4cb
uuid_000000000007c4c9:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq $uuid_000000000007975c
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	movb $1, -24(%rbp)
uuid_000000000007c4cb:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
uuid_000000000007c4f2:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007c4f3
	jmp uuid_000000000007c4f4
uuid_000000000007c4f3:
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	push %RBP
	pushq -96(%rbp)
	mov -112(%RBP), %AL
	mov $60, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4d9
	push %RBP
	pushq -96(%rbp)
	mov -128(%RBP), %AL
	mov $62, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4d6
	push %RBP
	pushq -96(%rbp)
	mov -144(%RBP), %AL
	mov $91, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4d3
	push %RBP
	pushq -96(%rbp)
	mov -160(%RBP), %AL
	mov $93, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4d0
	push %RBP
	jmp uuid_000000000007c4cd
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c4cc
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c4cf
uuid_000000000007c4cd:
uuid_000000000007c4cf:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007c4d2
uuid_000000000007c4d0:
	movq -40(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c4d2:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007c4d5
uuid_000000000007c4d3:
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c4d5:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007c4d8
uuid_000000000007c4d6:
	movq -40(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c4d8:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007c4db
uuid_000000000007c4d9:
	movq -40(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007c4db:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	movq -40(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4ef
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007c4f1
uuid_000000000007c4ef:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	mov $43, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4ec
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function clone-rope : Arrow<U8,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %AL, %AL
	push %RAX
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringU8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	jmp uuid_000000000007c4ee
uuid_000000000007c4ec:
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	push %RBP
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4e2
	jmp uuid_000000000007c4e4
uuid_000000000007c4e2:
	push %RBP
	mov -176(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4df
	jmp uuid_000000000007c4e1
uuid_000000000007c4df:
	push %RBP
	mov -168(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4dc
	jmp uuid_000000000007c4de
uuid_000000000007c4dc:
	movb $1, -192(%rbp)
uuid_000000000007c4de:
	mov -256(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c4e1:
	mov -208(%RBP),%RSP
	add $-264, %RSP
uuid_000000000007c4e4:
	mov -200(%RBP),%RSP
	add $-264, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4e9
	push %RBP
	jmp uuid_000000000007c4e6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c4e5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c4e8
uuid_000000000007c4e6:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007c4e8:
	mov -272(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007c4eb
uuid_000000000007c4e9:
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -288(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -72(%rbp)
uuid_000000000007c4eb:
	mov -160(%RBP),%RSP
	add $-288, %RSP
	pushq $0
	pushq $0
	pushq $3
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
uuid_000000000007c4ee:
	mov -128(%RBP),%RSP
	add $-288, %RSP
uuid_000000000007c4f1:
	mov -120(%RBP),%RSP
	add $-288, %RSP
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -8(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c4f2
uuid_000000000007c4f4:
	push %RBP
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c505
	jmp uuid_000000000007c507
uuid_000000000007c505:
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4fb
	jmp uuid_000000000007c4fd
uuid_000000000007c4fb:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -216(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c4f8
	jmp uuid_000000000007c4fa
uuid_000000000007c4f8:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c4f5
	jmp uuid_000000000007c4f7
uuid_000000000007c4f5:
	movb $1, -160(%rbp)
uuid_000000000007c4f7:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007c4fa:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007c4fd:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c502
	push %RBP
	jmp uuid_000000000007c4ff
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c4fe
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c501
uuid_000000000007c4ff:
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007c501:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007c504
uuid_000000000007c502:
#call function parse-type-single : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call parse_SB_type_SB_single_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	movq -256(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -248(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -240(%rbp), %r15
	movq %r15, -72(%rbp)
uuid_000000000007c504:
	mov -128(%RBP),%RSP
	add $-256, %RSP
uuid_000000000007c507:
	mov -96(%RBP),%RSP
	add $-256, %RSP
	push %RBP
	mov -24(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c50c
	jmp uuid_000000000007c50e
uuid_000000000007c50c:
	pushq $uuid_000000000007975c
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
uuid_000000000007c50e:
	mov -264(%RBP),%RSP
	add $-264, %RSP
	subq $24, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
parse_SB_unexpect_CL_ArrowNilConsListTokenString:
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
parse_CL_ArrowNilNil:
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	movq $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %R15
	popq 0(%R15)
	popq 8(%R15)
	popq 16(%R15)
	popq 24(%R15)
	popq 32(%R15)
	popq 40(%R15)
	popq 48(%R15)
	popq 56(%R15)
	popq 64(%R15)
#call function parse-toplevel : Arrow<List<Token>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call parse_SB_toplevel_CL_ArrowASTListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
remove_SB_parens_CL_ArrowListTokenListToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c529
	jmp uuid_000000000007c52b
uuid_000000000007c529:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c526
	jmp uuid_000000000007c528
uuid_000000000007c526:
	push %RBP
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq $0
	push %RBP
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c520
	jmp uuid_000000000007c522
uuid_000000000007c520:
	push %RBP
	jmp uuid_000000000007c51d
	jmp uuid_000000000007c51f
uuid_000000000007c51d:
	push %RBP
	jmp uuid_000000000007c51a
	jmp uuid_000000000007c51c
uuid_000000000007c51a:
	push %RBP
	mov -344(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	pushq $uuid_00000000000793ba
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c517
	jmp uuid_000000000007c519
uuid_000000000007c517:
	movb $1, -400(%rbp)
uuid_000000000007c519:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c51c:
	mov -424(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c51f:
	mov -416(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c522:
	mov -408(%RBP),%RSP
	add $-440, %RSP
	mov -400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c523
	jmp uuid_000000000007c525
uuid_000000000007c523:
	movb $1, -240(%rbp)
uuid_000000000007c525:
	mov -336(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c528:
	mov -256(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007c52b:
	mov -248(%RBP),%RSP
	add $-440, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c557
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c556
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c559
uuid_000000000007c557:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007c553:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c554
	jmp uuid_000000000007c555
uuid_000000000007c554:
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c540
	jmp uuid_000000000007c542
uuid_000000000007c540:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c53d
	jmp uuid_000000000007c53f
uuid_000000000007c53d:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c537
	jmp uuid_000000000007c539
uuid_000000000007c537:
	push %RBP
	jmp uuid_000000000007c534
	jmp uuid_000000000007c536
uuid_000000000007c534:
	push %RBP
	jmp uuid_000000000007c531
	jmp uuid_000000000007c533
uuid_000000000007c531:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -872(%rbp)
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c52e
	jmp uuid_000000000007c530
uuid_000000000007c52e:
	movb $1, -832(%rbp)
uuid_000000000007c530:
	mov -864(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c533:
	mov -856(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c536:
	mov -848(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c539:
	mov -840(%RBP),%RSP
	add $-872, %RSP
	mov -832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c53a
	jmp uuid_000000000007c53c
uuid_000000000007c53a:
	movb $1, -672(%rbp)
uuid_000000000007c53c:
	mov -768(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c53f:
	mov -688(%RBP),%RSP
	add $-872, %RSP
uuid_000000000007c542:
	mov -680(%RBP),%RSP
	add $-872, %RSP
	mov -672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c550
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c549
	jmp uuid_000000000007c54b
uuid_000000000007c549:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c546
	jmp uuid_000000000007c548
uuid_000000000007c546:
	push %RBP
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007c543
	jmp uuid_000000000007c545
uuid_000000000007c543:
	movb $1, -960(%rbp)
uuid_000000000007c545:
	mov -1056(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007c548:
	mov -976(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007c54b:
	mov -968(%RBP),%RSP
	add $-1112, %RSP
	mov -960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c54d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c54c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c54f
uuid_000000000007c54d:
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	movq -1048(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -264(%rbp)
uuid_000000000007c54f:
	mov -880(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007c552
uuid_000000000007c550:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
uuid_000000000007c552:
	mov -592(%RBP),%RSP
	add $-872, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c553
uuid_000000000007c555:
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c559:
	mov -160(%RBP),%RSP
	add $-512, %RSP
	subq $72, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
take_SB_one_SB_expr_CL_ArrowTupleListTokenListTokenListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	pushq $0
uuid_000000000007c5aa:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5ab
	jmp uuid_000000000007c5ac
uuid_000000000007c5ab:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	push %RBP
	mov -384(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c572
	jmp uuid_000000000007c574
uuid_000000000007c572:
	push %RBP
	mov -376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c56f
	jmp uuid_000000000007c571
uuid_000000000007c56f:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c569
	jmp uuid_000000000007c56b
uuid_000000000007c569:
	push %RBP
	jmp uuid_000000000007c566
	jmp uuid_000000000007c568
uuid_000000000007c566:
	push %RBP
	jmp uuid_000000000007c563
	jmp uuid_000000000007c565
uuid_000000000007c563:
	push %RBP
	mov -496(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_00000000000795d3
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c560
	jmp uuid_000000000007c562
uuid_000000000007c560:
	movb $1, -552(%rbp)
uuid_000000000007c562:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c565:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c568:
	mov -568(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c56b:
	mov -560(%RBP),%RSP
	add $-592, %RSP
	mov -552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c56c
	jmp uuid_000000000007c56e
uuid_000000000007c56c:
	movb $1, -392(%rbp)
uuid_000000000007c56e:
	mov -488(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c571:
	mov -408(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c574:
	mov -400(%RBP),%RSP
	add $-592, %RSP
	mov -392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5a7
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c57e
	jmp uuid_000000000007c580
uuid_000000000007c57e:
	push %RBP
	mov -664(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c57b
	jmp uuid_000000000007c57d
uuid_000000000007c57b:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	jmp uuid_000000000007c578
	jmp uuid_000000000007c57a
uuid_000000000007c578:
	movb $1, -680(%rbp)
uuid_000000000007c57a:
	mov -776(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007c57d:
	mov -696(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007c580:
	mov -688(%RBP),%RSP
	add $-832, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5a4
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c5a3
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c5a6
uuid_000000000007c5a4:
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	push %RBP
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c58a
	jmp uuid_000000000007c58c
uuid_000000000007c58a:
	push %RBP
	jmp uuid_000000000007c587
	jmp uuid_000000000007c589
uuid_000000000007c587:
	push %RBP
	jmp uuid_000000000007c584
	jmp uuid_000000000007c586
uuid_000000000007c584:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq $uuid_00000000000793ba
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c581
	jmp uuid_000000000007c583
uuid_000000000007c581:
	movb $1, -960(%rbp)
uuid_000000000007c583:
	mov -992(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007c586:
	mov -984(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007c589:
	mov -976(%RBP),%RSP
	add $-1000, %RSP
uuid_000000000007c58c:
	mov -968(%RBP),%RSP
	add $-1000, %RSP
	mov -960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5a0
	push %RBP
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c596
	jmp uuid_000000000007c598
uuid_000000000007c596:
	push %RBP
	jmp uuid_000000000007c593
	jmp uuid_000000000007c595
uuid_000000000007c593:
	push %RBP
	jmp uuid_000000000007c590
	jmp uuid_000000000007c592
uuid_000000000007c590:
	push %RBP
	mov -1016(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $uuid_00000000000793bc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c58d
	jmp uuid_000000000007c58f
uuid_000000000007c58d:
	movb $1, -1072(%rbp)
uuid_000000000007c58f:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007c592:
	mov -1096(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007c595:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007c598:
	mov -1080(%RBP),%RSP
	add $-1112, %RSP
	mov -1072(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c59d
	push %RBP
	jmp uuid_000000000007c59a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c599
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c59c
uuid_000000000007c59a:
uuid_000000000007c59c:
	mov -1120(%RBP),%RSP
	add $-1120, %RSP
	jmp uuid_000000000007c59f
uuid_000000000007c59d:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -232(%rbp)
uuid_000000000007c59f:
	mov -1008(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007c5a2
uuid_000000000007c5a0:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -232(%rbp)
uuid_000000000007c5a2:
	mov -896(%RBP),%RSP
	add $-1000, %RSP
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -768(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007c5a6:
	mov -600(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007c5a9
uuid_000000000007c5a7:
	push %RBP
#call function == : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq $0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c575
#call function cons : Arrow<Cons<Token,List<Token>>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function head : Arrow<List<Token>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call head_CL_ArrowTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTokenConsListTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	push -160(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -480(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -480(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -472(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -464(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -456(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -448(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -440(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -432(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -424(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -416(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007c577
uuid_000000000007c575:
	movq -72(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -64(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -56(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -48(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -40(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -32(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -24(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -16(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -8(%rbp), %r15
	movq %r15, -160(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c577:
	mov -600(%RBP),%RSP
	add $-600, %RSP
uuid_000000000007c5a9:
	mov -312(%RBP),%RSP
	add $-600, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c5aa
uuid_000000000007c5ac:
#call function remove-parens : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function reverse : Arrow<List<Token>,List<Token>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call remove_SB_parens_CL_ArrowListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext:
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	subq %R14, %RAX
	movq %RAX, %RAX
	movq $8, %R14
	subq %R14, %RAX
	push %RAX
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -352(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a46
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a48
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a49
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a47
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $uuid_000000000007c5ad
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
	popq -648(%RBP)
	popq -640(%RBP)
	popq -632(%RBP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq $uuid_0000000000079a4a
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -336(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	subq $152, %rsp
	pushq -880(%rbp)
	pushq -872(%rbp)
	pushq -864(%rbp)
	pushq -856(%rbp)
	pushq -848(%rbp)
	pushq -840(%rbp)
	pushq -832(%rbp)
	pushq -824(%rbp)
	pushq -816(%rbp)
	pushq -808(%rbp)
	pushq -800(%rbp)
	pushq -792(%rbp)
	pushq -784(%rbp)
	pushq -776(%rbp)
	pushq -768(%rbp)
	pushq -760(%rbp)
	pushq -752(%rbp)
	pushq -744(%rbp)
	pushq -736(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $344, %rsp
	ret
compile_SB_declare_SB_cstring_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %r15
	pushq 0(%r15)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5c9
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $uuid_0000000000079496
uuid_000000000007c5c1:
#call function non-zero : Arrow<StringStringList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64StringStringList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5c2
	jmp uuid_000000000007c5c3
uuid_000000000007c5c2:
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq $0
	push %RBP
	mov -288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5b7
	jmp uuid_000000000007c5b9
uuid_000000000007c5b7:
	push %RBP
	mov -280(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c5b4
	jmp uuid_000000000007c5b6
uuid_000000000007c5b4:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c5b1
	jmp uuid_000000000007c5b3
uuid_000000000007c5b1:
	push %RBP
	mov -264(%RBP), %RAX
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c5ae
	jmp uuid_000000000007c5b0
uuid_000000000007c5ae:
	movb $1, -296(%rbp)
uuid_000000000007c5b0:
	mov -344(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007c5b3:
	mov -328(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007c5b6:
	mov -312(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007c5b9:
	mov -304(%RBP),%RSP
	add $-376, %RSP
	mov -296(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5be
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c5bd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c5c0
uuid_000000000007c5be:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -8(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5ba
	movq -376(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -184(%rbp)
	jmp uuid_000000000007c5bc
uuid_000000000007c5ba:
	movq -320(%rbp), %r15
	movq %r15, -216(%rbp)
	mov -320(%rbp), %r15
	mov %r15, -216(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007c5bc:
	mov -384(%RBP),%RSP
	add $-384, %RSP
uuid_000000000007c5c0:
	mov -256(%RBP),%RSP
	add $-384, %RSP
	add $32, %rsp
	add $32, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %rsp
	add $32, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c5c1
uuid_000000000007c5c3:
	push %RBP
#call function head-string : Arrow<String,U8>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	mov %RBX, %RBP
	call head_SB_string_CL_ArrowU8String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %AL
	jne uuid_000000000007c5c6
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -216(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -216(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c5c4
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function escape-literal : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call escape_SB_literal_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c5c5
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<StringStringList,Array<StringStringList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_StringStringListStringStringList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8(%rbp)
	pushq -216(%rbp)
	pushq $0
	mov $cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	jmp uuid_000000000007c5c8
uuid_000000000007c5c6:
uuid_000000000007c5c8:
	mov -224(%RBP),%RSP
	add $-224, %RSP
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007b846
	pushq $0
	pushq -216(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	jmp uuid_000000000007c5cb
uuid_000000000007c5c9:
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007b846
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
uuid_000000000007c5cb:
	mov -176(%RBP),%RSP
	add $-176, %RSP
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5fc
	jmp uuid_000000000007c5fe
uuid_000000000007c5fc:
	push %RBP
	mov -456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5f3
	jmp uuid_000000000007c5f5
uuid_000000000007c5f3:
	push %RBP
	mov -552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -656(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5e1
	jmp uuid_000000000007c5e3
uuid_000000000007c5e1:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5cf
	jmp uuid_000000000007c5d1
uuid_000000000007c5cf:
	push %RBP
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007c5cc
	jmp uuid_000000000007c5ce
uuid_000000000007c5cc:
	movb $1, -760(%rbp)
uuid_000000000007c5ce:
	mov -776(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c5d1:
	mov -768(%RBP),%RSP
	add $-800, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5de
	jmp uuid_000000000007c5e0
uuid_000000000007c5de:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5d8
	jmp uuid_000000000007c5da
uuid_000000000007c5d8:
	push %RBP
	jmp uuid_000000000007c5d5
	jmp uuid_000000000007c5d7
uuid_000000000007c5d5:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c5d2
	jmp uuid_000000000007c5d4
uuid_000000000007c5d2:
	movb $1, -888(%rbp)
uuid_000000000007c5d4:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007c5d7:
	mov -904(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007c5da:
	mov -896(%RBP),%RSP
	add $-920, %RSP
	mov -888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5db
	jmp uuid_000000000007c5dd
uuid_000000000007c5db:
	movb $1, -664(%rbp)
uuid_000000000007c5dd:
	mov -808(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007c5e0:
	mov -680(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007c5e3:
	mov -672(%RBP),%RSP
	add $-920, %RSP
	mov -664(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5f0
	jmp uuid_000000000007c5f2
uuid_000000000007c5f0:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5ea
	jmp uuid_000000000007c5ec
uuid_000000000007c5ea:
	push %RBP
	jmp uuid_000000000007c5e7
	jmp uuid_000000000007c5e9
uuid_000000000007c5e7:
	push %RBP
	mov -936(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5e4
	jmp uuid_000000000007c5e6
uuid_000000000007c5e4:
	movb $1, -1008(%rbp)
uuid_000000000007c5e6:
	mov -1032(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007c5e9:
	mov -1024(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007c5ec:
	mov -1016(%RBP),%RSP
	add $-1040, %RSP
	mov -1008(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5ed
	jmp uuid_000000000007c5ef
uuid_000000000007c5ed:
	movb $1, -568(%rbp)
uuid_000000000007c5ef:
	mov -928(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007c5f2:
	mov -584(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007c5f5:
	mov -576(%RBP),%RSP
	add $-1040, %RSP
	mov -568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c5f9
	jmp uuid_000000000007c5fb
uuid_000000000007c5f9:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c5f6
	jmp uuid_000000000007c5f8
uuid_000000000007c5f6:
	movb $1, -472(%rbp)
uuid_000000000007c5f8:
	mov -1048(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007c5fb:
	mov -488(%RBP),%RSP
	add $-1120, %RSP
uuid_000000000007c5fe:
	mov -480(%RBP),%RSP
	add $-1120, %RSP
	mov -472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c633
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -1200(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c629
	jmp uuid_000000000007c62b
uuid_000000000007c629:
	push %RBP
	mov -1192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c617
	jmp uuid_000000000007c619
uuid_000000000007c617:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c605
	jmp uuid_000000000007c607
uuid_000000000007c605:
	push %RBP
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	jmp uuid_000000000007c602
	jmp uuid_000000000007c604
uuid_000000000007c602:
	movb $1, -1400(%rbp)
uuid_000000000007c604:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007c607:
	mov -1408(%RBP),%RSP
	add $-1440, %RSP
	mov -1400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c614
	jmp uuid_000000000007c616
uuid_000000000007c614:
	push %RBP
	mov -1280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c60e
	jmp uuid_000000000007c610
uuid_000000000007c60e:
	push %RBP
	jmp uuid_000000000007c60b
	jmp uuid_000000000007c60d
uuid_000000000007c60b:
	push %RBP
	mov -1456(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c608
	jmp uuid_000000000007c60a
uuid_000000000007c608:
	movb $1, -1528(%rbp)
uuid_000000000007c60a:
	mov -1552(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007c60d:
	mov -1544(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007c610:
	mov -1536(%RBP),%RSP
	add $-1560, %RSP
	mov -1528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c611
	jmp uuid_000000000007c613
uuid_000000000007c611:
	movb $1, -1304(%rbp)
uuid_000000000007c613:
	mov -1448(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007c616:
	mov -1320(%RBP),%RSP
	add $-1560, %RSP
uuid_000000000007c619:
	mov -1312(%RBP),%RSP
	add $-1560, %RSP
	mov -1304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c626
	jmp uuid_000000000007c628
uuid_000000000007c626:
	push %RBP
	mov -1184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c620
	jmp uuid_000000000007c622
uuid_000000000007c620:
	push %RBP
	jmp uuid_000000000007c61d
	jmp uuid_000000000007c61f
uuid_000000000007c61d:
	push %RBP
	mov -1576(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c61a
	jmp uuid_000000000007c61c
uuid_000000000007c61a:
	movb $1, -1648(%rbp)
uuid_000000000007c61c:
	mov -1672(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007c61f:
	mov -1664(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007c622:
	mov -1656(%RBP),%RSP
	add $-1680, %RSP
	mov -1648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c623
	jmp uuid_000000000007c625
uuid_000000000007c623:
	movb $1, -1208(%rbp)
uuid_000000000007c625:
	mov -1568(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007c628:
	mov -1224(%RBP),%RSP
	add $-1680, %RSP
uuid_000000000007c62b:
	mov -1216(%RBP),%RSP
	add $-1680, %RSP
	mov -1208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c630
	push %RBP
	jmp uuid_000000000007c62d
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c62c
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c62f
uuid_000000000007c62d:
uuid_000000000007c62f:
	mov -1688(%RBP),%RSP
	add $-1688, %RSP
	jmp uuid_000000000007c632
uuid_000000000007c630:
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079eab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -1688(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -1560(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007c632:
	mov -1128(%RBP),%RSP
	add $-1696, %RSP
	jmp uuid_000000000007c635
uuid_000000000007c633:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c5ff
	jmp uuid_000000000007c601
uuid_000000000007c5ff:
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function compile-destructure-args : Arrow<Cons<Cons<Cons<Type,FContext>,AST>,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -1160(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079eab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -920(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
uuid_000000000007c601:
	mov -1128(%RBP),%RSP
	add $-1184, %RSP
uuid_000000000007c635:
	mov -392(%RBP),%RSP
	add $-1184, %RSP
	subq $200, %rsp
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
compile_SB_expr_SB_direct_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c898
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	mov -680(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c895
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -760(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c63c
	jmp uuid_000000000007c63e
uuid_000000000007c63c:
	push %RBP
	jmp uuid_000000000007c639
	jmp uuid_000000000007c63b
uuid_000000000007c639:
	push %RBP
	mov -696(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c636
	jmp uuid_000000000007c638
uuid_000000000007c636:
	movb $1, -768(%rbp)
uuid_000000000007c638:
	mov -792(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c63b:
	mov -784(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c63e:
	mov -776(%RBP),%RSP
	add $-800, %RSP
	mov -768(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c892
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c645
	jmp uuid_000000000007c647
uuid_000000000007c645:
	push %RBP
	jmp uuid_000000000007c642
	jmp uuid_000000000007c644
uuid_000000000007c642:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c63f
	jmp uuid_000000000007c641
uuid_000000000007c63f:
	movb $1, -888(%rbp)
uuid_000000000007c641:
	mov -912(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007c644:
	mov -904(%RBP),%RSP
	add $-920, %RSP
uuid_000000000007c647:
	mov -896(%RBP),%RSP
	add $-920, %RSP
	mov -888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c88f
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1000(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6ad
	jmp uuid_000000000007c6af
uuid_000000000007c6ad:
	push %RBP
	mov -992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1096(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c69b
	jmp uuid_000000000007c69d
uuid_000000000007c69b:
	push %RBP
	mov -1088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1192(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c692
	jmp uuid_000000000007c694
uuid_000000000007c692:
	push %RBP
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	jmp uuid_000000000007c68f
	jmp uuid_000000000007c691
uuid_000000000007c68f:
	movb $1, -1200(%rbp)
uuid_000000000007c691:
	mov -1216(%RBP),%RSP
	add $-1240, %RSP
uuid_000000000007c694:
	mov -1208(%RBP),%RSP
	add $-1240, %RSP
	mov -1200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c698
	jmp uuid_000000000007c69a
uuid_000000000007c698:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c695
	jmp uuid_000000000007c697
uuid_000000000007c695:
	movb $1, -1104(%rbp)
uuid_000000000007c697:
	mov -1248(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007c69a:
	mov -1120(%RBP),%RSP
	add $-1320, %RSP
uuid_000000000007c69d:
	mov -1112(%RBP),%RSP
	add $-1320, %RSP
	mov -1104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6aa
	jmp uuid_000000000007c6ac
uuid_000000000007c6aa:
	push %RBP
	mov -984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6a4
	jmp uuid_000000000007c6a6
uuid_000000000007c6a4:
	push %RBP
	jmp uuid_000000000007c6a1
	jmp uuid_000000000007c6a3
uuid_000000000007c6a1:
	push %RBP
	mov -1336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c69e
	jmp uuid_000000000007c6a0
uuid_000000000007c69e:
	movb $1, -1408(%rbp)
uuid_000000000007c6a0:
	mov -1432(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007c6a3:
	mov -1424(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007c6a6:
	mov -1416(%RBP),%RSP
	add $-1440, %RSP
	mov -1408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6a7
	jmp uuid_000000000007c6a9
uuid_000000000007c6a7:
	movb $1, -1008(%rbp)
uuid_000000000007c6a9:
	mov -1328(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007c6ac:
	mov -1024(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007c6af:
	mov -1016(%RBP),%RSP
	add $-1440, %RSP
	mov -1008(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c88c
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1520(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6c8
	jmp uuid_000000000007c6ca
uuid_000000000007c6c8:
	push %RBP
	mov -1512(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6b6
	jmp uuid_000000000007c6b8
uuid_000000000007c6b6:
	push %RBP
	jmp uuid_000000000007c6b3
	jmp uuid_000000000007c6b5
uuid_000000000007c6b3:
	push %RBP
	mov -1552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c6b0
	jmp uuid_000000000007c6b2
uuid_000000000007c6b0:
	movb $1, -1624(%rbp)
uuid_000000000007c6b2:
	mov -1648(%RBP),%RSP
	add $-1656, %RSP
uuid_000000000007c6b5:
	mov -1640(%RBP),%RSP
	add $-1656, %RSP
uuid_000000000007c6b8:
	mov -1632(%RBP),%RSP
	add $-1656, %RSP
	mov -1624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6c5
	jmp uuid_000000000007c6c7
uuid_000000000007c6c5:
	push %RBP
	mov -1504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6bf
	jmp uuid_000000000007c6c1
uuid_000000000007c6bf:
	push %RBP
	jmp uuid_000000000007c6bc
	jmp uuid_000000000007c6be
uuid_000000000007c6bc:
	push %RBP
	mov -1672(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1776(%rbp)
	pushq $uuid_00000000000798a9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c6b9
	jmp uuid_000000000007c6bb
uuid_000000000007c6b9:
	movb $1, -1744(%rbp)
uuid_000000000007c6bb:
	mov -1768(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c6be:
	mov -1760(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c6c1:
	mov -1752(%RBP),%RSP
	add $-1776, %RSP
	mov -1744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6c2
	jmp uuid_000000000007c6c4
uuid_000000000007c6c2:
	movb $1, -1528(%rbp)
uuid_000000000007c6c4:
	mov -1664(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c6c7:
	mov -1544(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007c6ca:
	mov -1536(%RBP),%RSP
	add $-1776, %RSP
	mov -1528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c889
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -1856(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6e3
	jmp uuid_000000000007c6e5
uuid_000000000007c6e3:
	push %RBP
	mov -1848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1952(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6d1
	jmp uuid_000000000007c6d3
uuid_000000000007c6d1:
	push %RBP
	jmp uuid_000000000007c6ce
	jmp uuid_000000000007c6d0
uuid_000000000007c6ce:
	push %RBP
	mov -1888(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c6cb
	jmp uuid_000000000007c6cd
uuid_000000000007c6cb:
	movb $1, -1960(%rbp)
uuid_000000000007c6cd:
	mov -1984(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007c6d0:
	mov -1976(%RBP),%RSP
	add $-1992, %RSP
uuid_000000000007c6d3:
	mov -1968(%RBP),%RSP
	add $-1992, %RSP
	mov -1960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6e0
	jmp uuid_000000000007c6e2
uuid_000000000007c6e0:
	push %RBP
	mov -1840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2072(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6da
	jmp uuid_000000000007c6dc
uuid_000000000007c6da:
	push %RBP
	jmp uuid_000000000007c6d7
	jmp uuid_000000000007c6d9
uuid_000000000007c6d7:
	push %RBP
	mov -2008(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $uuid_00000000000798c6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c6d4
	jmp uuid_000000000007c6d6
uuid_000000000007c6d4:
	movb $1, -2080(%rbp)
uuid_000000000007c6d6:
	mov -2104(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007c6d9:
	mov -2096(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007c6dc:
	mov -2088(%RBP),%RSP
	add $-2112, %RSP
	mov -2080(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6dd
	jmp uuid_000000000007c6df
uuid_000000000007c6dd:
	movb $1, -1864(%rbp)
uuid_000000000007c6df:
	mov -2000(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007c6e2:
	mov -1880(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007c6e5:
	mov -1872(%RBP),%RSP
	add $-2112, %RSP
	mov -1864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c886
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6f5
	jmp uuid_000000000007c6f7
uuid_000000000007c6f5:
	push %RBP
	mov -2184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c6f2
	jmp uuid_000000000007c6f4
uuid_000000000007c6f2:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6ec
	jmp uuid_000000000007c6ee
uuid_000000000007c6ec:
	push %RBP
	jmp uuid_000000000007c6e9
	jmp uuid_000000000007c6eb
uuid_000000000007c6e9:
	push %RBP
	mov -2304(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2408(%rbp)
	pushq $uuid_0000000000079976
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c6e6
	jmp uuid_000000000007c6e8
uuid_000000000007c6e6:
	movb $1, -2376(%rbp)
uuid_000000000007c6e8:
	mov -2400(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007c6eb:
	mov -2392(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007c6ee:
	mov -2384(%RBP),%RSP
	add $-2408, %RSP
	mov -2376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6ef
	jmp uuid_000000000007c6f1
uuid_000000000007c6ef:
	movb $1, -2200(%rbp)
uuid_000000000007c6f1:
	mov -2296(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007c6f4:
	mov -2216(%RBP),%RSP
	add $-2408, %RSP
uuid_000000000007c6f7:
	mov -2208(%RBP),%RSP
	add $-2408, %RSP
	mov -2200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c883
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c707
	jmp uuid_000000000007c709
uuid_000000000007c707:
	push %RBP
	mov -2480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c704
	jmp uuid_000000000007c706
uuid_000000000007c704:
	push %RBP
	mov -2472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2664(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c6fe
	jmp uuid_000000000007c700
uuid_000000000007c6fe:
	push %RBP
	jmp uuid_000000000007c6fb
	jmp uuid_000000000007c6fd
uuid_000000000007c6fb:
	push %RBP
	mov -2600(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2704(%rbp)
	pushq $uuid_0000000000079989
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c6f8
	jmp uuid_000000000007c6fa
uuid_000000000007c6f8:
	movb $1, -2672(%rbp)
uuid_000000000007c6fa:
	mov -2696(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007c6fd:
	mov -2688(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007c700:
	mov -2680(%RBP),%RSP
	add $-2704, %RSP
	mov -2672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c701
	jmp uuid_000000000007c703
uuid_000000000007c701:
	movb $1, -2496(%rbp)
uuid_000000000007c703:
	mov -2592(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007c706:
	mov -2512(%RBP),%RSP
	add $-2704, %RSP
uuid_000000000007c709:
	mov -2504(%RBP),%RSP
	add $-2704, %RSP
	mov -2496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c880
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c75f
	jmp uuid_000000000007c761
uuid_000000000007c75f:
	push %RBP
	mov -2776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2880(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c74d
	jmp uuid_000000000007c74f
uuid_000000000007c74d:
	push %RBP
	pushq -2856(%RBP)
	pushq -2864(%RBP)
	pushq -2872(%RBP)
	jmp uuid_000000000007c74a
	jmp uuid_000000000007c74c
uuid_000000000007c74a:
	movb $1, -2888(%rbp)
uuid_000000000007c74c:
	mov -2904(%RBP),%RSP
	add $-2928, %RSP
uuid_000000000007c74f:
	mov -2896(%RBP),%RSP
	add $-2928, %RSP
	mov -2888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c75c
	jmp uuid_000000000007c75e
uuid_000000000007c75c:
	push %RBP
	mov -2768(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3008(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c756
	jmp uuid_000000000007c758
uuid_000000000007c756:
	push %RBP
	jmp uuid_000000000007c753
	jmp uuid_000000000007c755
uuid_000000000007c753:
	push %RBP
	mov -2944(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3048(%rbp)
	pushq $uuid_0000000000079955
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c750
	jmp uuid_000000000007c752
uuid_000000000007c750:
	movb $1, -3016(%rbp)
uuid_000000000007c752:
	mov -3040(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007c755:
	mov -3032(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007c758:
	mov -3024(%RBP),%RSP
	add $-3048, %RSP
	mov -3016(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c759
	jmp uuid_000000000007c75b
uuid_000000000007c759:
	movb $1, -2792(%rbp)
uuid_000000000007c75b:
	mov -2936(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007c75e:
	mov -2808(%RBP),%RSP
	add $-3048, %RSP
uuid_000000000007c761:
	mov -2800(%RBP),%RSP
	add $-3048, %RSP
	mov -2792(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c87d
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -3128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c780
	jmp uuid_000000000007c782
uuid_000000000007c780:
	push %RBP
	mov -3120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3224(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c76e
	jmp uuid_000000000007c770
uuid_000000000007c76e:
	push %RBP
	mov -3216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c765
	jmp uuid_000000000007c767
uuid_000000000007c765:
	push %RBP
	pushq -3296(%RBP)
	pushq -3304(%RBP)
	pushq -3312(%RBP)
	jmp uuid_000000000007c762
	jmp uuid_000000000007c764
uuid_000000000007c762:
	movb $1, -3328(%rbp)
uuid_000000000007c764:
	mov -3344(%RBP),%RSP
	add $-3368, %RSP
uuid_000000000007c767:
	mov -3336(%RBP),%RSP
	add $-3368, %RSP
	mov -3328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c76b
	jmp uuid_000000000007c76d
uuid_000000000007c76b:
	push %RBP
	mov -3208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c768
	jmp uuid_000000000007c76a
uuid_000000000007c768:
	movb $1, -3232(%rbp)
uuid_000000000007c76a:
	mov -3376(%RBP),%RSP
	add $-3448, %RSP
uuid_000000000007c76d:
	mov -3248(%RBP),%RSP
	add $-3448, %RSP
uuid_000000000007c770:
	mov -3240(%RBP),%RSP
	add $-3448, %RSP
	mov -3232(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c77d
	jmp uuid_000000000007c77f
uuid_000000000007c77d:
	push %RBP
	mov -3112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3528(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c777
	jmp uuid_000000000007c779
uuid_000000000007c777:
	push %RBP
	jmp uuid_000000000007c774
	jmp uuid_000000000007c776
uuid_000000000007c774:
	push %RBP
	mov -3464(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3568(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c771
	jmp uuid_000000000007c773
uuid_000000000007c771:
	movb $1, -3536(%rbp)
uuid_000000000007c773:
	mov -3560(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007c776:
	mov -3552(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007c779:
	mov -3544(%RBP),%RSP
	add $-3568, %RSP
	mov -3536(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c77a
	jmp uuid_000000000007c77c
uuid_000000000007c77a:
	movb $1, -3136(%rbp)
uuid_000000000007c77c:
	mov -3456(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007c77f:
	mov -3152(%RBP),%RSP
	add $-3568, %RSP
uuid_000000000007c782:
	mov -3144(%RBP),%RSP
	add $-3568, %RSP
	mov -3136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c87a
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -3648(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7a4
	jmp uuid_000000000007c7a6
uuid_000000000007c7a4:
	push %RBP
	mov -3640(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7a1
	jmp uuid_000000000007c7a3
uuid_000000000007c7a1:
	push %RBP
	mov -3632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3824(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c79b
	jmp uuid_000000000007c79d
uuid_000000000007c79b:
	push %RBP
	mov -3816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c798
	jmp uuid_000000000007c79a
uuid_000000000007c798:
	push %RBP
	mov -3808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4000(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c792
	jmp uuid_000000000007c794
uuid_000000000007c792:
	push %RBP
	mov -3992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c78f
	jmp uuid_000000000007c791
uuid_000000000007c78f:
	push %RBP
	mov -3984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4176(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c789
	jmp uuid_000000000007c78b
uuid_000000000007c789:
	push %RBP
	jmp uuid_000000000007c786
	jmp uuid_000000000007c788
uuid_000000000007c786:
	push %RBP
	mov -4112(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4216(%rbp)
	pushq $uuid_00000000000798d9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c783
	jmp uuid_000000000007c785
uuid_000000000007c783:
	movb $1, -4184(%rbp)
uuid_000000000007c785:
	mov -4208(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007c788:
	mov -4200(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007c78b:
	mov -4192(%RBP),%RSP
	add $-4216, %RSP
	mov -4184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c78c
	jmp uuid_000000000007c78e
uuid_000000000007c78c:
	movb $1, -4008(%rbp)
uuid_000000000007c78e:
	mov -4104(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007c791:
	mov -4024(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007c794:
	mov -4016(%RBP),%RSP
	add $-4216, %RSP
	mov -4008(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c795
	jmp uuid_000000000007c797
uuid_000000000007c795:
	movb $1, -3832(%rbp)
uuid_000000000007c797:
	mov -3928(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007c79a:
	mov -3848(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007c79d:
	mov -3840(%RBP),%RSP
	add $-4216, %RSP
	mov -3832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c79e
	jmp uuid_000000000007c7a0
uuid_000000000007c79e:
	movb $1, -3656(%rbp)
uuid_000000000007c7a0:
	mov -3752(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007c7a3:
	mov -3672(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007c7a6:
	mov -3664(%RBP),%RSP
	add $-4216, %RSP
	mov -3656(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c877
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -4296(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7cc
	jmp uuid_000000000007c7ce
uuid_000000000007c7cc:
	push %RBP
	mov -4288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7c9
	jmp uuid_000000000007c7cb
uuid_000000000007c7c9:
	push %RBP
	mov -4280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7c3
	jmp uuid_000000000007c7c5
uuid_000000000007c7c3:
	push %RBP
	pushq -4448(%RBP)
	pushq -4456(%RBP)
	pushq -4464(%RBP)
	jmp uuid_000000000007c7c0
	jmp uuid_000000000007c7c2
uuid_000000000007c7c0:
	push %RBP
	mov -4440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4600(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7bd
	jmp uuid_000000000007c7bf
uuid_000000000007c7bd:
	push %RBP
	mov -4432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq $0
	push %RBP
	mov -4752(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7b7
	jmp uuid_000000000007c7b9
uuid_000000000007c7b7:
	push %RBP
	jmp uuid_000000000007c7b4
	jmp uuid_000000000007c7b6
uuid_000000000007c7b4:
	push %RBP
	mov -4688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c7b1
	jmp uuid_000000000007c7b3
uuid_000000000007c7b1:
	movb $1, -4760(%rbp)
uuid_000000000007c7b3:
	mov -4784(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007c7b6:
	mov -4776(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007c7b9:
	mov -4768(%RBP),%RSP
	add $-4792, %RSP
	mov -4760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7ba
	jmp uuid_000000000007c7bc
uuid_000000000007c7ba:
	movb $1, -4480(%rbp)
uuid_000000000007c7bc:
	mov -4608(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007c7bf:
	mov -4528(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007c7c2:
	mov -4496(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007c7c5:
	mov -4488(%RBP),%RSP
	add $-4792, %RSP
	mov -4480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7c6
	jmp uuid_000000000007c7c8
uuid_000000000007c7c6:
	movb $1, -4304(%rbp)
uuid_000000000007c7c8:
	mov -4400(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007c7cb:
	mov -4320(%RBP),%RSP
	add $-4792, %RSP
uuid_000000000007c7ce:
	mov -4312(%RBP),%RSP
	add $-4792, %RSP
	mov -4304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c874
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -4872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7f4
	jmp uuid_000000000007c7f6
uuid_000000000007c7f4:
	push %RBP
	mov -4864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7f1
	jmp uuid_000000000007c7f3
uuid_000000000007c7f1:
	push %RBP
	mov -4856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7ee
	jmp uuid_000000000007c7f0
uuid_000000000007c7ee:
	movb $1, -4880(%rbp)
uuid_000000000007c7f0:
	mov -4976(%RBP),%RSP
	add $-5048, %RSP
uuid_000000000007c7f3:
	mov -4896(%RBP),%RSP
	add $-5048, %RSP
uuid_000000000007c7f6:
	mov -4888(%RBP),%RSP
	add $-5048, %RSP
	mov -4880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c871
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c870
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c873
uuid_000000000007c871:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c86d
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -288(%rbp)
	pushq $3
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c86a
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -280(%rbp)
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -5184(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov -5152(%RBP), %RAX
	push %RAX
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007c86c
uuid_000000000007c86a:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -280(%rbp)
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -5184(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov -5152(%RBP), %RAX
	push %RAX
	pushq $3
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c86c:
	mov -5064(%RBP),%RSP
	add $-5368, %RSP
	jmp uuid_000000000007c86f
uuid_000000000007c86d:
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5208(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7fd
	jmp uuid_000000000007c7ff
uuid_000000000007c7fd:
	push %RBP
	jmp uuid_000000000007c7fa
	jmp uuid_000000000007c7fc
uuid_000000000007c7fa:
	push %RBP
	mov -5144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c7f7
	jmp uuid_000000000007c7f9
uuid_000000000007c7f7:
	movb $1, -5216(%rbp)
uuid_000000000007c7f9:
	mov -5240(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007c7fc:
	mov -5232(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007c7ff:
	mov -5224(%RBP),%RSP
	add $-5248, %RSP
	mov -5216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c867
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5328(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c827
	jmp uuid_000000000007c829
uuid_000000000007c827:
	push %RBP
	mov -5320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5424(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c815
	jmp uuid_000000000007c817
uuid_000000000007c815:
	push %RBP
	mov -5416(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5520(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c803
	jmp uuid_000000000007c805
uuid_000000000007c803:
	push %RBP
	pushq -5496(%RBP)
	pushq -5504(%RBP)
	pushq -5512(%RBP)
	jmp uuid_000000000007c800
	jmp uuid_000000000007c802
uuid_000000000007c800:
	movb $1, -5528(%rbp)
uuid_000000000007c802:
	mov -5544(%RBP),%RSP
	add $-5568, %RSP
uuid_000000000007c805:
	mov -5536(%RBP),%RSP
	add $-5568, %RSP
	mov -5528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c812
	jmp uuid_000000000007c814
uuid_000000000007c812:
	push %RBP
	mov -5408(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5648(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c80c
	jmp uuid_000000000007c80e
uuid_000000000007c80c:
	push %RBP
	jmp uuid_000000000007c809
	jmp uuid_000000000007c80b
uuid_000000000007c809:
	push %RBP
	mov -5584(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c806
	jmp uuid_000000000007c808
uuid_000000000007c806:
	movb $1, -5656(%rbp)
uuid_000000000007c808:
	mov -5680(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007c80b:
	mov -5672(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007c80e:
	mov -5664(%RBP),%RSP
	add $-5688, %RSP
	mov -5656(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c80f
	jmp uuid_000000000007c811
uuid_000000000007c80f:
	movb $1, -5432(%rbp)
uuid_000000000007c811:
	mov -5576(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007c814:
	mov -5448(%RBP),%RSP
	add $-5688, %RSP
uuid_000000000007c817:
	mov -5440(%RBP),%RSP
	add $-5688, %RSP
	mov -5432(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c824
	jmp uuid_000000000007c826
uuid_000000000007c824:
	push %RBP
	mov -5312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5768(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c81e
	jmp uuid_000000000007c820
uuid_000000000007c81e:
	push %RBP
	jmp uuid_000000000007c81b
	jmp uuid_000000000007c81d
uuid_000000000007c81b:
	push %RBP
	mov -5704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5808(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c818
	jmp uuid_000000000007c81a
uuid_000000000007c818:
	movb $1, -5776(%rbp)
uuid_000000000007c81a:
	mov -5800(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007c81d:
	mov -5792(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007c820:
	mov -5784(%RBP),%RSP
	add $-5808, %RSP
	mov -5776(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c821
	jmp uuid_000000000007c823
uuid_000000000007c821:
	movb $1, -5336(%rbp)
uuid_000000000007c823:
	mov -5696(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007c826:
	mov -5352(%RBP),%RSP
	add $-5808, %RSP
uuid_000000000007c829:
	mov -5344(%RBP),%RSP
	add $-5808, %RSP
	mov -5336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c864
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -5888(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c830
	jmp uuid_000000000007c832
uuid_000000000007c830:
	push %RBP
	jmp uuid_000000000007c82d
	jmp uuid_000000000007c82f
uuid_000000000007c82d:
	push %RBP
	mov -5824(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c82a
	jmp uuid_000000000007c82c
uuid_000000000007c82a:
	movb $1, -5896(%rbp)
uuid_000000000007c82c:
	mov -5920(%RBP),%RSP
	add $-5928, %RSP
uuid_000000000007c82f:
	mov -5912(%RBP),%RSP
	add $-5928, %RSP
uuid_000000000007c832:
	mov -5904(%RBP),%RSP
	add $-5928, %RSP
	mov -5896(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c861
	push %RBP
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq $0
	push %RBP
	mov -6008(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c85a
	jmp uuid_000000000007c85c
uuid_000000000007c85a:
	push %RBP
	mov -6000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6104(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c848
	jmp uuid_000000000007c84a
uuid_000000000007c848:
	push %RBP
	mov -6096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6200(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c836
	jmp uuid_000000000007c838
uuid_000000000007c836:
	push %RBP
	pushq -6176(%RBP)
	pushq -6184(%RBP)
	pushq -6192(%RBP)
	jmp uuid_000000000007c833
	jmp uuid_000000000007c835
uuid_000000000007c833:
	movb $1, -6208(%rbp)
uuid_000000000007c835:
	mov -6224(%RBP),%RSP
	add $-6248, %RSP
uuid_000000000007c838:
	mov -6216(%RBP),%RSP
	add $-6248, %RSP
	mov -6208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c845
	jmp uuid_000000000007c847
uuid_000000000007c845:
	push %RBP
	mov -6088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6328(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c83f
	jmp uuid_000000000007c841
uuid_000000000007c83f:
	push %RBP
	jmp uuid_000000000007c83c
	jmp uuid_000000000007c83e
uuid_000000000007c83c:
	push %RBP
	mov -6264(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c839
	jmp uuid_000000000007c83b
uuid_000000000007c839:
	movb $1, -6336(%rbp)
uuid_000000000007c83b:
	mov -6360(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007c83e:
	mov -6352(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007c841:
	mov -6344(%RBP),%RSP
	add $-6368, %RSP
	mov -6336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c842
	jmp uuid_000000000007c844
uuid_000000000007c842:
	movb $1, -6112(%rbp)
uuid_000000000007c844:
	mov -6256(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007c847:
	mov -6128(%RBP),%RSP
	add $-6368, %RSP
uuid_000000000007c84a:
	mov -6120(%RBP),%RSP
	add $-6368, %RSP
	mov -6112(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c857
	jmp uuid_000000000007c859
uuid_000000000007c857:
	push %RBP
	mov -5992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6448(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c851
	jmp uuid_000000000007c853
uuid_000000000007c851:
	push %RBP
	jmp uuid_000000000007c84e
	jmp uuid_000000000007c850
uuid_000000000007c84e:
	push %RBP
	mov -6384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6488(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c84b
	jmp uuid_000000000007c84d
uuid_000000000007c84b:
	movb $1, -6456(%rbp)
uuid_000000000007c84d:
	mov -6480(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007c850:
	mov -6472(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007c853:
	mov -6464(%RBP),%RSP
	add $-6488, %RSP
	mov -6456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c854
	jmp uuid_000000000007c856
uuid_000000000007c854:
	movb $1, -6016(%rbp)
uuid_000000000007c856:
	mov -6376(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007c859:
	mov -6032(%RBP),%RSP
	add $-6488, %RSP
uuid_000000000007c85c:
	mov -6024(%RBP),%RSP
	add $-6488, %RSP
	mov -6016(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c85e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c85d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c860
uuid_000000000007c85e:
#call function compile-constructor : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,Type>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -6368(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c860:
	mov -5936(%RBP),%RSP
	add $-6488, %RSP
	jmp uuid_000000000007c863
uuid_000000000007c861:
#call function compile-constructor : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,Type>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5928(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_constructor_CL_ArrowFragmentConsI64ConsASTConsTypeConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	push -368(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c863:
	mov -5816(%RBP),%RSP
	add $-5928, %RSP
	jmp uuid_000000000007c866
uuid_000000000007c864:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c866:
	mov -5256(%RBP),%RSP
	add $-5808, %RSP
	jmp uuid_000000000007c869
uuid_000000000007c867:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -5248(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c869:
	mov -5136(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007c86f:
	mov -5056(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007c873:
	mov -4800(%RBP),%RSP
	add $-5248, %RSP
	jmp uuid_000000000007c876
uuid_000000000007c874:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function compile-push-rvalue : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -4824(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $3
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
#call function fragment::local-variable : Arrow<Cons<I64,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4832(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -4864(%rbp)
	pushq -4872(%rbp)
	pushq -4880(%rbp)
	pushq -4888(%rbp)
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq $0
	push %RBP
	mov -5008(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7e1
	jmp uuid_000000000007c7e3
uuid_000000000007c7e1:
	push %RBP
	jmp uuid_000000000007c7de
	jmp uuid_000000000007c7e0
uuid_000000000007c7de:
	push %RBP
	mov -4992(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7d8
	jmp uuid_000000000007c7da
uuid_000000000007c7d8:
	push %RBP
	jmp uuid_000000000007c7d5
	jmp uuid_000000000007c7d7
uuid_000000000007c7d5:
	push %RBP
	jmp uuid_000000000007c7d2
	jmp uuid_000000000007c7d4
uuid_000000000007c7d2:
	push %RBP
	mov -5072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c7cf
	jmp uuid_000000000007c7d1
uuid_000000000007c7cf:
	movb $1, -5120(%rbp)
uuid_000000000007c7d1:
	mov -5152(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007c7d4:
	mov -5144(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007c7d7:
	mov -5136(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007c7da:
	mov -5128(%RBP),%RSP
	add $-5224, %RSP
	mov -5120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7db
	jmp uuid_000000000007c7dd
uuid_000000000007c7db:
	movb $1, -5016(%rbp)
uuid_000000000007c7dd:
	mov -5040(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007c7e0:
	mov -5032(%RBP),%RSP
	add $-5224, %RSP
uuid_000000000007c7e3:
	mov -5024(%RBP),%RSP
	add $-5224, %RSP
	mov -5016(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7e8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c7e7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c7ea
uuid_000000000007c7e8:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000079a21
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -5320(%RBP)
	pushq -5328(%RBP)
	pushq -5336(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5384(%rbp)
	pushq -5392(%rbp)
	pushq -5400(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c7e4
	jmp uuid_000000000007c7e6
uuid_000000000007c7e4:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000079a21
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq $uuid_000000000007a006
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -4856(%RBP)
	popq -4848(%RBP)
	popq -4840(%RBP)
uuid_000000000007c7e6:
	mov -5408(%RBP),%RSP
	add $-5560, %RSP
uuid_000000000007c7ea:
	mov -4936(%RBP),%RSP
	add $-5560, %RSP
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_0000000000079a21
	pushq -4840(%rbp)
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007c7eb
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007c7eb
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c7ec
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4824(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c7ed
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -4832(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c876:
	mov -4224(%RBP),%RSP
	add $-5560, %RSP
	jmp uuid_000000000007c879
uuid_000000000007c877:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq $-8
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c7a7
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4224(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4344(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov -4312(%RBP), %RAX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -4464(%RBP), %RAX
	push %RAX
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4496(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4464(%RBP), %RAX
	push %RAX
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -4528(%RBP)
	popq -4520(%RBP)
	popq -4512(%RBP)
	popq -4504(%RBP)
	popq -4496(%RBP)
	popq -4488(%RBP)
	popq -4480(%RBP)
	popq -4472(%RBP)
	popq -4464(%RBP)
	popq -4456(%RBP)
	popq -4448(%RBP)
	popq -4440(%RBP)
	popq -4432(%RBP)
	popq -4424(%RBP)
	popq -4416(%RBP)
	popq -4408(%RBP)
	popq -4400(%RBP)
	popq -4392(%RBP)
	popq -4384(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4528(%RBP)
	popq -4520(%RBP)
	popq -4512(%RBP)
	popq -4504(%RBP)
	popq -4496(%RBP)
	popq -4488(%RBP)
	popq -4480(%RBP)
	popq -4472(%RBP)
	popq -4464(%RBP)
	popq -4456(%RBP)
	popq -4448(%RBP)
	popq -4440(%RBP)
	popq -4432(%RBP)
	popq -4424(%RBP)
	popq -4416(%RBP)
	popq -4408(%RBP)
	popq -4400(%RBP)
	popq -4392(%RBP)
	popq -4384(%RBP)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4344(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov -4312(%RBP), %RAX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov -4656(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4624(%RBP), %RAX
	push %RAX
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -4688(%RBP)
	popq -4680(%RBP)
	popq -4672(%RBP)
	popq -4664(%RBP)
	popq -4656(%RBP)
	popq -4648(%RBP)
	popq -4640(%RBP)
	popq -4632(%RBP)
	popq -4624(%RBP)
	popq -4616(%RBP)
	popq -4608(%RBP)
	popq -4600(%RBP)
	popq -4592(%RBP)
	popq -4584(%RBP)
	popq -4576(%RBP)
	popq -4568(%RBP)
	popq -4560(%RBP)
	popq -4552(%RBP)
	popq -4544(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4688(%RBP)
	popq -4680(%RBP)
	popq -4672(%RBP)
	popq -4664(%RBP)
	popq -4656(%RBP)
	popq -4648(%RBP)
	popq -4640(%RBP)
	popq -4632(%RBP)
	popq -4624(%RBP)
	popq -4616(%RBP)
	popq -4608(%RBP)
	popq -4600(%RBP)
	popq -4592(%RBP)
	popq -4584(%RBP)
	popq -4576(%RBP)
	popq -4568(%RBP)
	popq -4560(%RBP)
	popq -4552(%RBP)
	popq -4544(%RBP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007c7a8
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4224(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007c7a9
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	pushq $uuid_000000000007c7aa
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c7ab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -4840(%RBP)
	popq -4832(%RBP)
	popq -4824(%RBP)
	popq -4816(%RBP)
	popq -4808(%RBP)
	popq -4800(%RBP)
	popq -4792(%RBP)
	popq -4784(%RBP)
	popq -4776(%RBP)
	popq -4768(%RBP)
	popq -4760(%RBP)
	popq -4752(%RBP)
	popq -4744(%RBP)
	popq -4736(%RBP)
	popq -4728(%RBP)
	popq -4720(%RBP)
	popq -4712(%RBP)
	popq -4704(%RBP)
	popq -4696(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c7ac
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c7ab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -4696(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	pushq -4776(%rbp)
	pushq -4784(%rbp)
	pushq -4792(%rbp)
	pushq -4800(%rbp)
	pushq -4808(%rbp)
	pushq -4816(%rbp)
	pushq -4824(%rbp)
	pushq -4832(%rbp)
	pushq -4840(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007945e
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bd74
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -4232(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c3df
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000079461
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c7ab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007bd74
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c7ad
	pushq -4848(%rbp)
	pushq -4856(%rbp)
	pushq -4864(%rbp)
	pushq -280(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov -4496(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -4536(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	push %RBP
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c7ae
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007c7b0
uuid_000000000007c7ae:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c7b0:
	mov -4872(%RBP),%RSP
	add $-4872, %RSP
uuid_000000000007c879:
	mov -3576(%RBP),%RSP
	add $-4872, %RSP
	jmp uuid_000000000007c87c
uuid_000000000007c87a:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -3384(%rbp)
	pushq -3392(%rbp)
	pushq -3400(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	pushq -3424(%rbp)
	pushq -3432(%rbp)
	pushq -3440(%rbp)
	pushq -3448(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c87c:
	mov -3056(%RBP),%RSP
	add $-3568, %RSP
	jmp uuid_000000000007c87f
uuid_000000000007c87d:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3056(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007a9c0
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079e45
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079968
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Type,Array<Type,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t2 : Arrow<Cons<String,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a48
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007945a
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call t2_CL_ArrowTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_TypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -3064(%rbp)
	pushq -3072(%rbp)
	pushq -3080(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c87f:
	mov -2712(%RBP),%RSP
	add $-3080, %RSP
	jmp uuid_000000000007c882
uuid_000000000007c880:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq $0
	push %RBP
	mov -2784(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c722
	jmp uuid_000000000007c724
uuid_000000000007c722:
	push %RBP
	mov -2776(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2848(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c719
	jmp uuid_000000000007c71b
uuid_000000000007c719:
	push %RBP
	mov -2840(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2912(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c710
	jmp uuid_000000000007c712
uuid_000000000007c710:
	push %RBP
	mov -2904(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -2976(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c70d
	jmp uuid_000000000007c70f
uuid_000000000007c70d:
	push %RBP
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	mov -3008(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c70a
	jmp uuid_000000000007c70c
uuid_000000000007c70a:
	movb $1, -2920(%rbp)
uuid_000000000007c70c:
	mov -2984(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007c70f:
	mov -2936(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007c712:
	mov -2928(%RBP),%RSP
	add $-3008, %RSP
	mov -2920(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c716
	jmp uuid_000000000007c718
uuid_000000000007c716:
	push %RBP
	jmp uuid_000000000007c713
	jmp uuid_000000000007c715
uuid_000000000007c713:
	movb $1, -2856(%rbp)
uuid_000000000007c715:
	mov -3016(%RBP),%RSP
	add $-3016, %RSP
uuid_000000000007c718:
	mov -2872(%RBP),%RSP
	add $-3016, %RSP
uuid_000000000007c71b:
	mov -2864(%RBP),%RSP
	add $-3016, %RSP
	mov -2856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c71f
	jmp uuid_000000000007c721
uuid_000000000007c71f:
	push %RBP
	mov -2768(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3032(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c71c
	jmp uuid_000000000007c71e
uuid_000000000007c71c:
	movb $1, -2792(%rbp)
uuid_000000000007c71e:
	mov -3024(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007c721:
	mov -2808(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007c724:
	mov -2800(%RBP),%RSP
	add $-3032, %RSP
	mov -2792(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c747
	push %RBP
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq $0
	push %RBP
	mov -3064(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c73d
	jmp uuid_000000000007c73f
uuid_000000000007c73d:
	push %RBP
	mov -3056(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c734
	jmp uuid_000000000007c736
uuid_000000000007c734:
	push %RBP
	mov -3120(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c72b
	jmp uuid_000000000007c72d
uuid_000000000007c72b:
	push %RBP
	mov -3184(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c728
	jmp uuid_000000000007c72a
uuid_000000000007c728:
	push %RBP
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	jmp uuid_000000000007c725
	jmp uuid_000000000007c727
uuid_000000000007c725:
	movb $1, -3200(%rbp)
uuid_000000000007c727:
	mov -3264(%RBP),%RSP
	add $-3288, %RSP
uuid_000000000007c72a:
	mov -3216(%RBP),%RSP
	add $-3288, %RSP
uuid_000000000007c72d:
	mov -3208(%RBP),%RSP
	add $-3288, %RSP
	mov -3200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c731
	jmp uuid_000000000007c733
uuid_000000000007c731:
	push %RBP
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	mov -3320(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c72e
	jmp uuid_000000000007c730
uuid_000000000007c72e:
	movb $1, -3136(%rbp)
uuid_000000000007c730:
	mov -3296(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007c733:
	mov -3152(%RBP),%RSP
	add $-3320, %RSP
uuid_000000000007c736:
	mov -3144(%RBP),%RSP
	add $-3320, %RSP
	mov -3136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c73a
	jmp uuid_000000000007c73c
uuid_000000000007c73a:
	push %RBP
	mov -3048(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3336(%rbp)
	pushq $uuid_000000000007999c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c737
	jmp uuid_000000000007c739
uuid_000000000007c737:
	movb $1, -3072(%rbp)
uuid_000000000007c739:
	mov -3328(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007c73c:
	mov -3088(%RBP),%RSP
	add $-3336, %RSP
uuid_000000000007c73f:
	mov -3080(%RBP),%RSP
	add $-3336, %RSP
	mov -3072(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c744
	push %RBP
	jmp uuid_000000000007c741
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c740
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c743
uuid_000000000007c741:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c743:
	mov -3344(%RBP),%RSP
	add $-3344, %RSP
	jmp uuid_000000000007c746
uuid_000000000007c744:
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_00000000000799d3
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3272(%rbp)
	pushq -3280(%rbp)
	pushq -3288(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -3344(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c746:
	mov -3040(%RBP),%RSP
	add $-3344, %RSP
	jmp uuid_000000000007c749
uuid_000000000007c747:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2520(%rbp)
	pushq -2528(%rbp)
	pushq -2536(%rbp)
	pushq -2544(%rbp)
	pushq -2552(%rbp)
	pushq -2560(%rbp)
	pushq -2568(%rbp)
	pushq -2576(%rbp)
	pushq -2584(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c749:
	mov -2760(%RBP),%RSP
	add $-3032, %RSP
uuid_000000000007c882:
	mov -2416(%RBP),%RSP
	add $-3032, %RSP
	jmp uuid_000000000007c885
uuid_000000000007c883:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -280(%rbp)
	pushq $2
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c885:
	mov -2120(%RBP),%RSP
	add $-2408, %RSP
	jmp uuid_000000000007c888
uuid_000000000007c886:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1992(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000798bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq $uuid_000000000007b846
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007964d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007a006
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c888:
	mov -1784(%RBP),%RSP
	add $-2288, %RSP
	jmp uuid_000000000007c88b
uuid_000000000007c889:
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1656(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000798bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
#call function fragment::label : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_label_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c88b:
	mov -1448(%RBP),%RSP
	add $-1776, %RSP
	jmp uuid_000000000007c88e
uuid_000000000007c88c:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c88e:
	mov -928(%RBP),%RSP
	add $-1440, %RSP
	jmp uuid_000000000007c891
uuid_000000000007c88f:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function is-string : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_string_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c68c
	pushq $0
	push %RBP
#call function is-reg8 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg8_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c648
	jmp uuid_000000000007c64a
uuid_000000000007c648:
	movb $1, -960(%rbp)
uuid_000000000007c64a:
	mov -968(%RBP),%RSP
	add $-968, %RSP
	push %RBP
#call function is-reg16 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg16_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c64b
	jmp uuid_000000000007c64d
uuid_000000000007c64b:
	movb $1, -960(%rbp)
uuid_000000000007c64d:
	mov -976(%RBP),%RSP
	add $-976, %RSP
	push %RBP
#call function is-reg32 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg32_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c64e
	jmp uuid_000000000007c650
uuid_000000000007c64e:
	movb $1, -960(%rbp)
uuid_000000000007c650:
	mov -984(%RBP),%RSP
	add $-984, %RSP
	push %RBP
#call function is-reg64 : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call is_SB_reg64_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c651
	jmp uuid_000000000007c653
uuid_000000000007c651:
	movb $1, -960(%rbp)
uuid_000000000007c653:
	mov -992(%RBP),%RSP
	add $-992, %RSP
	push %RBP
	mov -960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c689
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function class-of-tag : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call class_SB_of_SB_tag_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c686
	pushq -920(%rbp)
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1032(%rbp)
	pushq $uuid_000000000007c654
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c683
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1048(%rbp)
	pushq $uuid_000000000007c655
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c680
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1064(%rbp)
	pushq $uuid_000000000007c656
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c67d
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq $uuid_0000000000079600
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c67a
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq $uuid_000000000007c658
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c677
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq $uuid_000000000007c65a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c674
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1128(%rbp)
	pushq $uuid_000000000007c65c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c671
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq $uuid_000000000007c65e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c66e
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq $uuid_000000000007c660
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c66b
	push %RBP
	pushq -1016(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1176(%rbp)
	pushq $uuid_000000000007c662
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c668
	push %RBP
	jmp uuid_000000000007c665
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c664
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c667
uuid_000000000007c665:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c667:
	mov -1184(%RBP),%RSP
	add $-1184, %RSP
	jmp uuid_000000000007c66a
uuid_000000000007c668:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c663
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c66a:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
	jmp uuid_000000000007c66d
uuid_000000000007c66b:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c661
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c66d:
	mov -1152(%RBP),%RSP
	add $-1160, %RSP
	jmp uuid_000000000007c670
uuid_000000000007c66e:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c65f
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c670:
	mov -1136(%RBP),%RSP
	add $-1144, %RSP
	jmp uuid_000000000007c673
uuid_000000000007c671:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c65d
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c673:
	mov -1120(%RBP),%RSP
	add $-1128, %RSP
	jmp uuid_000000000007c676
uuid_000000000007c674:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c65b
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c676:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
	jmp uuid_000000000007c679
uuid_000000000007c677:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c659
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c679:
	mov -1088(%RBP),%RSP
	add $-1096, %RSP
	jmp uuid_000000000007c67c
uuid_000000000007c67a:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c657
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c67c:
	mov -1072(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007c67f
uuid_000000000007c67d:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007945b
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c67f:
	mov -1056(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007c682
uuid_000000000007c680:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007941a
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c682:
	mov -1040(%RBP),%RSP
	add $-1048, %RSP
	jmp uuid_000000000007c685
uuid_000000000007c683:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079453
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c685:
	mov -1024(%RBP),%RSP
	add $-1032, %RSP
	jmp uuid_000000000007c688
uuid_000000000007c686:
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1016(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007a006
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c688:
	mov -1008(%RBP),%RSP
	add $-1016, %RSP
	jmp uuid_000000000007c68b
uuid_000000000007c689:
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c68b:
	mov -1000(%RBP),%RSP
	add $-1000, %RSP
	jmp uuid_000000000007c68e
uuid_000000000007c68c:
#call function compile-declare-cstring : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -920(%rbp)
	mov %RBX, %RBP
	call compile_SB_declare_SB_cstring_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c68e:
	mov -952(%RBP),%RSP
	add $-952, %RSP
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c891:
	mov -808(%RBP),%RSP
	add $-952, %RSP
	jmp uuid_000000000007c894
uuid_000000000007c892:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -800(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c894:
	mov -688(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007c897
uuid_000000000007c895:
uuid_000000000007c897:
	mov -608(%RBP),%RSP
	add $-680, %RSP
	jmp uuid_000000000007c89a
uuid_000000000007c898:
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c89a:
	mov -528(%RBP),%RSP
	add $-600, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -288(%rbp)
	push %RBP
	pushq -456(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c89f
	push %RBP
	jmp uuid_000000000007c89c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c89b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c89e
uuid_000000000007c89c:
#call function compile-expr-direct : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_expr_SB_direct_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c89e:
	mov -480(%RBP),%RSP
	add $-480, %RSP
	jmp uuid_000000000007c8a1
uuid_000000000007c89f:
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_0000000000079a8a
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c8a1:
	mov -464(%RBP),%RSP
	add $-472, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_fragment_SB_args_CL_ArrowFragmentListConsI64ConsASTConsTypeFContext:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq $0
	push %RBP
	mov -536(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8ba
	jmp uuid_000000000007c8bc
uuid_000000000007c8ba:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -600(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8b1
	jmp uuid_000000000007c8b3
uuid_000000000007c8b1:
	push %RBP
	mov -592(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8a8
	jmp uuid_000000000007c8aa
uuid_000000000007c8a8:
	push %RBP
	mov -656(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8a5
	jmp uuid_000000000007c8a7
uuid_000000000007c8a5:
	push %RBP
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	jmp uuid_000000000007c8a2
	jmp uuid_000000000007c8a4
uuid_000000000007c8a2:
	movb $1, -672(%rbp)
uuid_000000000007c8a4:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007c8a7:
	mov -688(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007c8aa:
	mov -680(%RBP),%RSP
	add $-760, %RSP
	mov -672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8ae
	jmp uuid_000000000007c8b0
uuid_000000000007c8ae:
	push %RBP
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	jmp uuid_000000000007c8ab
	jmp uuid_000000000007c8ad
uuid_000000000007c8ab:
	movb $1, -608(%rbp)
uuid_000000000007c8ad:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007c8b0:
	mov -624(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007c8b3:
	mov -616(%RBP),%RSP
	add $-792, %RSP
	mov -608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8b7
	jmp uuid_000000000007c8b9
uuid_000000000007c8b7:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -808(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8b4
	jmp uuid_000000000007c8b6
uuid_000000000007c8b4:
	movb $1, -544(%rbp)
uuid_000000000007c8b6:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007c8b9:
	mov -560(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007c8bc:
	mov -552(%RBP),%RSP
	add $-808, %RSP
	mov -544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8da
	push %RBP
	jmp uuid_000000000007c8d7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c8d6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c8d9
uuid_000000000007c8d7:
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8d3
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	jmp uuid_000000000007c8d5
uuid_000000000007c8d3:
uuid_000000000007c8d5:
	mov -976(%RBP),%RSP
	add $-976, %RSP
#call function close : Arrow<FragmentList+CaseNumber<1>,Array<FragmentList+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListCaseNumber1FragmentListCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007c8d9:
	mov -816(%RBP),%RSP
	add $-976, %RSP
	jmp uuid_000000000007c8dc
uuid_000000000007c8da:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	push %RBP
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8c3
	jmp uuid_000000000007c8c5
uuid_000000000007c8c3:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8c0
	jmp uuid_000000000007c8c2
uuid_000000000007c8c0:
	push %RBP
	mov -944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8bd
	jmp uuid_000000000007c8bf
uuid_000000000007c8bd:
	movb $1, -968(%rbp)
uuid_000000000007c8bf:
	mov -1064(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007c8c2:
	mov -984(%RBP),%RSP
	add $-1136, %RSP
uuid_000000000007c8c5:
	mov -976(%RBP),%RSP
	add $-1136, %RSP
	mov -968(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8d0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c8cf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c8d2
uuid_000000000007c8d0:
#call function compile-fragment-args : Arrow<Cons<Cons<Cons<FContext,Type>,AST>,I64>,FragmentList>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call compile_SB_fragment_SB_args_CL_ArrowFragmentListConsI64ConsASTConsTypeFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Cons<Type,String>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007a06c
	pushq $uuid_000000000007bd16
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8c6
	jmp uuid_000000000007c8c8
uuid_000000000007c8c6:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -304(%rbp)
uuid_000000000007c8c8:
	mov -1312(%RBP),%RSP
	add $-1312, %RSP
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Cons<Type,String>,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call cons_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq $uuid_000000000007a06c
	pushq $uuid_000000000007bd16
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8c9
	jmp uuid_000000000007c8cb
uuid_000000000007c8c9:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-tail : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function cons-head : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call cons_SB_head_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call cons_SB_tail_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -304(%rbp)
uuid_000000000007c8cb:
	mov -1320(%RBP),%RSP
	add $-1320, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -304(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8cc
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
	popq -1368(%RBP)
	popq -1360(%RBP)
	popq -1352(%RBP)
	popq -1344(%RBP)
	popq -1336(%RBP)
	popq -1328(%RBP)
	jmp uuid_000000000007c8ce
uuid_000000000007c8cc:
uuid_000000000007c8ce:
	mov -1480(%RBP),%RSP
	add $-1480, %RSP
#call function close : Arrow<FragmentList,Array<FragmentList,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentListFragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq $0
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
uuid_000000000007c8d2:
	mov -888(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007c8dc:
	mov -512(%RBP),%RSP
	add $-1480, %RSP
	subq $168, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
compile_SB_global_CL_ArrowNilConsASTConsStringFContext:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -464(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8e6
	jmp uuid_000000000007c8e8
uuid_000000000007c8e6:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007c8e3
	jmp uuid_000000000007c8e5
uuid_000000000007c8e3:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8e0
	jmp uuid_000000000007c8e2
uuid_000000000007c8e0:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c8dd
	jmp uuid_000000000007c8df
uuid_000000000007c8dd:
	movb $1, -472(%rbp)
uuid_000000000007c8df:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007c8e2:
	mov -520(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007c8e5:
	mov -488(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007c8e8:
	mov -480(%RBP),%RSP
	add $-672, %RSP
	mov -472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c92e
	push %RBP
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c926
	jmp uuid_000000000007c928
uuid_000000000007c926:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c914
	jmp uuid_000000000007c916
uuid_000000000007c914:
	push %RBP
	mov -840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -944(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c90b
	jmp uuid_000000000007c90d
uuid_000000000007c90b:
	push %RBP
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	jmp uuid_000000000007c908
	jmp uuid_000000000007c90a
uuid_000000000007c908:
	movb $1, -952(%rbp)
uuid_000000000007c90a:
	mov -968(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007c90d:
	mov -960(%RBP),%RSP
	add $-992, %RSP
	mov -952(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c911
	jmp uuid_000000000007c913
uuid_000000000007c911:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c90e
	jmp uuid_000000000007c910
uuid_000000000007c90e:
	movb $1, -856(%rbp)
uuid_000000000007c910:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007c913:
	mov -872(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007c916:
	mov -864(%RBP),%RSP
	add $-1072, %RSP
	mov -856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c923
	jmp uuid_000000000007c925
uuid_000000000007c923:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c91d
	jmp uuid_000000000007c91f
uuid_000000000007c91d:
	push %RBP
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	jmp uuid_000000000007c91a
	jmp uuid_000000000007c91c
uuid_000000000007c91a:
	push %RBP
	mov -1088(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1248(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c917
	jmp uuid_000000000007c919
uuid_000000000007c917:
	movb $1, -1160(%rbp)
uuid_000000000007c919:
	mov -1240(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007c91c:
	mov -1176(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007c91f:
	mov -1168(%RBP),%RSP
	add $-1248, %RSP
	mov -1160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c920
	jmp uuid_000000000007c922
uuid_000000000007c920:
	movb $1, -760(%rbp)
uuid_000000000007c922:
	mov -1080(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007c925:
	mov -776(%RBP),%RSP
	add $-1248, %RSP
uuid_000000000007c928:
	mov -768(%RBP),%RSP
	add $-1248, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c92b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c92a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c92d
uuid_000000000007c92b:
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -1280(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c929
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_00000000000793e3
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	pushq -208(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq $7
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
#call function ascript-normal : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981c
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_SB_normal_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile-stack-calls : Arrow<Cons<Cons<Cons<Cons<Cons<FContext,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007981d
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079800
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq $-8
	pushq $4
	mov %RBX, %RBP
	call compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq $uuid_000000000007a006
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_init_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
uuid_000000000007c92d:
	mov -680(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007c930
uuid_000000000007c92e:
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $uuid_000000000007af39
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c905
#call function domain : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call domain_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function compile-destructure-args : Arrow<Cons<Cons<Cons<Type,FContext>,AST>,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq $0
	mov %RBX, %RBP
	call compile_SB_destructure_SB_args_CL_ArrowFContextConsI64ConsASTConsFContextType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $uuid_000000000007c8e9
	pushq $0
	pushq $0
	pushq $3
#call function fragment::expression : Arrow<String,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq $0
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq $8
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -720(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -720(%rbp)
	pushq -712(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -720(%rbp)
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -720(%rbp)
	pushq $1
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq $0
	pushq $0
	pushq $3
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007b875
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c8f1
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	jmp uuid_000000000007c8f3
uuid_000000000007c8f1:
	mov $main_SB_with_CL_U8, %r15
	movb $1, 0(%r15)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	push %RBP
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	mov -1056(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8ee
	push %RBP
	jmp uuid_000000000007c8eb
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c8ea
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c8ed
uuid_000000000007c8eb:
	mov $main_SB_with_SB_argv_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007c8ed:
	mov -1064(%RBP),%RSP
	add $-1064, %RSP
	jmp uuid_000000000007c8f0
uuid_000000000007c8ee:
uuid_000000000007c8f0:
	mov -984(%RBP),%RSP
	add $-1056, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b875
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
uuid_000000000007c8f3:
	mov -904(%RBP),%RSP
	add $-1056, %RSP
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007964d
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	push %RBP
	mov $config_SB_profile_SB_invocations_CL_U8, %RAX
	mov 0(%RAX), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c8ff
	jmp uuid_000000000007c901
uuid_000000000007c8ff:
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	pushq $0
	pushq $uuid_000000000007c8f4
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007c8f5
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007c8f6
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007c8f7
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov $assemble_SB_data_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c8f8
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007c8f9
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007c8fa
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c8f8
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007c8f9
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007c8fb
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c8fc
	pushq $2
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq $0
	pushq $uuid_000000000007c8fd
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	pushq $0
	pushq $uuid_000000000007c8fe
	pushq $2
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov $assemble_SB_profile_SB_onexit_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
uuid_000000000007c901:
	mov -1064(%RBP),%RSP
	add $-1088, %RSP
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $uuid_000000000007c902
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $uuid_000000000007a006
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007b797
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c903
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	movq -712(%RBP), %RAX
	movq $8, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c7ed
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007c904
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov $assemble_SB_text_SB_section_CL_SSCaseNumber3, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	jmp uuid_000000000007c907
uuid_000000000007c905:
uuid_000000000007c907:
	mov -680(%RBP),%RSP
	add $-680, %RSP
uuid_000000000007c930:
	mov -392(%RBP),%RSP
	add $-680, %RSP
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext:
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c931
	movq -384(%rbp), %r15
	movq %r15, -488(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -480(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -472(%rbp)
	jmp uuid_000000000007c933
uuid_000000000007c931:
uuid_000000000007c933:
	mov -496(%RBP),%RSP
	add $-496, %RSP
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c93a
	jmp uuid_000000000007c93c
uuid_000000000007c93a:
	push %RBP
	jmp uuid_000000000007c937
	jmp uuid_000000000007c939
uuid_000000000007c937:
	push %RBP
	mov -536(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c934
	jmp uuid_000000000007c936
uuid_000000000007c934:
	movb $1, -560(%rbp)
uuid_000000000007c936:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c939:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007c93c:
	mov -568(%RBP),%RSP
	add $-592, %RSP
	mov -560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c941
	push %RBP
	jmp uuid_000000000007c93e
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c93d
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c940
uuid_000000000007c93e:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_000000000007c5ad
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	popq -704(%RBP)
	popq -696(%RBP)
	popq -688(%RBP)
	popq -680(%RBP)
	popq -672(%RBP)
	popq -664(%RBP)
	popq -656(%RBP)
	popq -648(%RBP)
	popq -640(%RBP)
	popq -632(%RBP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq $uuid_0000000000079a4a
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -208(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function and : Arrow<Cons<Type,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000799d4
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call and_CL_ArrowTypeConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -808(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
uuid_000000000007c940:
	mov -600(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007c943
uuid_000000000007c941:
uuid_000000000007c943:
	mov -528(%RBP),%RSP
	add $-592, %RSP
	subq $152, %rsp
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $464, %rsp
	ret
compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext:
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq $0
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	push %RBP
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c95c
	jmp uuid_000000000007c95e
uuid_000000000007c95c:
	push %RBP
	mov -496(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -568(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c953
	jmp uuid_000000000007c955
uuid_000000000007c953:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c94a
	jmp uuid_000000000007c94c
uuid_000000000007c94a:
	push %RBP
	mov -624(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c947
	jmp uuid_000000000007c949
uuid_000000000007c947:
	push %RBP
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	jmp uuid_000000000007c944
	jmp uuid_000000000007c946
uuid_000000000007c944:
	movb $1, -640(%rbp)
uuid_000000000007c946:
	mov -704(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007c949:
	mov -656(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007c94c:
	mov -648(%RBP),%RSP
	add $-728, %RSP
	mov -640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c950
	jmp uuid_000000000007c952
uuid_000000000007c950:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007c94d
	jmp uuid_000000000007c94f
uuid_000000000007c94d:
	movb $1, -576(%rbp)
uuid_000000000007c94f:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007c952:
	mov -592(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007c955:
	mov -584(%RBP),%RSP
	add $-760, %RSP
	mov -576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c959
	jmp uuid_000000000007c95b
uuid_000000000007c959:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq $uuid_000000000007981e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c956
	jmp uuid_000000000007c958
uuid_000000000007c956:
	movb $1, -512(%rbp)
uuid_000000000007c958:
	mov -768(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007c95b:
	mov -528(%RBP),%RSP
	add $-776, %RSP
uuid_000000000007c95e:
	mov -520(%RBP),%RSP
	add $-776, %RSP
	mov -512(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c97f
	push %RBP
	jmp uuid_000000000007c97c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c97b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c97e
uuid_000000000007c97c:
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
	movq -792(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c978
	push %RBP
	movq -288(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c975
	jmp uuid_000000000007c977
uuid_000000000007c975:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq $uuid_0000000000079a37
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c972
	jmp uuid_000000000007c974
uuid_000000000007c972:
	pushq $uuid_0000000000079a38
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a38
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $7
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a89
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c974:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007c977:
	mov -808(%RBP),%RSP
	add $-912, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -384(%RBP), %RAX
	push %RAX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -792(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007c97a
uuid_000000000007c978:
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $uuid_000000000007a006
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S+CaseNumber<3>,Array<S+CaseNumber<3>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $3
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c97a:
	mov -800(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007c97e:
	mov -784(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007c981
uuid_000000000007c97f:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq $0
	push %RBP
	mov -928(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c965
	jmp uuid_000000000007c967
uuid_000000000007c965:
	push %RBP
	mov -920(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c962
	jmp uuid_000000000007c964
uuid_000000000007c962:
	push %RBP
	mov -912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c95f
	jmp uuid_000000000007c961
uuid_000000000007c95f:
	movb $1, -936(%rbp)
uuid_000000000007c961:
	mov -1032(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c964:
	mov -952(%RBP),%RSP
	add $-1104, %RSP
uuid_000000000007c967:
	mov -944(%RBP),%RSP
	add $-1104, %RSP
	mov -936(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c96f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c96e
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c971
uuid_000000000007c96f:
#call function compile-push-rvalue : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,U64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsU64ConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
	movq -288(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c96b
	jmp uuid_000000000007c96d
uuid_000000000007c96b:
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $uuid_0000000000079a37
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c968
	jmp uuid_000000000007c96a
uuid_000000000007c968:
	pushq $uuid_0000000000079a38
#call function token::new : Arrow<String,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a38
	mov %RBX, %RBP
	call token_CL__CL_new_CL_ArrowTokenString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $7
#call function guess-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function without-representation : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call without_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call guess_SB_representation_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1288(%RBP)
	popq -1280(%RBP)
	popq -1272(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079a89
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -1024(%RBP)
	popq -1016(%RBP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
#call function ascript : Arrow<Cons<AST,Type>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	mov %RBX, %RBP
	call ascript_CL_ArrowNilConsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007c96a:
	mov -1296(%RBP),%RSP
	add $-1368, %RSP
uuid_000000000007c96d:
	mov -1264(%RBP),%RSP
	add $-1368, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov -1192(%RBP), %RAX
	push %RAX
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function compile-maybe-push-stack : Arrow<Cons<Cons<Cons<Cons<FContext,I64>,Fragment>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov -1456(%RBP), %RAX
	push %RAX
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call compile_SB_maybe_SB_push_SB_stack_CL_ArrowFragmentConsASTConsTypeConsFragmentConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	push -488(%RSP)
	popq -1520(%RBP)
	popq -1512(%RBP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	popq -1480(%RBP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -1520(%RBP)
	popq -1512(%RBP)
	popq -1504(%RBP)
	popq -1496(%RBP)
	popq -1488(%RBP)
	popq -1480(%RBP)
	popq -1472(%RBP)
	popq -1464(%RBP)
	popq -1456(%RBP)
	popq -1448(%RBP)
	popq -1440(%RBP)
	popq -1432(%RBP)
	popq -1424(%RBP)
	popq -1416(%RBP)
	popq -1408(%RBP)
	popq -1400(%RBP)
	popq -1392(%RBP)
	popq -1384(%RBP)
	popq -1376(%RBP)
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007c971:
	mov -856(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007c981:
	mov -480(%RBP),%RSP
	add $-1528, %RSP
	subq $152, %rsp
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
compile_SB_stack_SB_call_SB_push_SB_args_CL_ArrowFragmentConsI64ConsASTFContext:
#call function compile-push-rvalue : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call compile_SB_push_SB_rvalue_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	subq $152, %rsp
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $288, %rsp
	ret
compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function slot : Arrow<Cons<Type,String>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq $uuid_000000000007af39
	mov %RBX, %RBP
	call slot_CL_ArrowTypeConsStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -64(%RSP)
	push -64(%RSP)
	push -64(%RSP)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c996
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $2
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c982
	jmp uuid_000000000007c984
uuid_000000000007c982:
	pushq $4
	popq -472(%RBP)
uuid_000000000007c984:
	mov -872(%RBP),%RSP
	add $-872, %RSP
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $0
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c985
	jmp uuid_000000000007c987
uuid_000000000007c985:
	pushq $4
	popq -472(%RBP)
uuid_000000000007c987:
	mov -880(%RBP),%RSP
	add $-880, %RSP
#call function compile-stack-call-push-args : Arrow<Cons<Cons<FContext,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_SB_push_SB_args_CL_ArrowFragmentConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
	push -312(%RSP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c988
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1032(%RBP)
	popq -1024(%RBP)
	popq -1016(%RBP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	pushq $0
	pushq $0
	pushq $3
#call function mangle-identifier : Arrow<Cons<String,Type>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	mov %RBX, %RBP
	call mangle_SB_identifier_CL_ArrowStringConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007c989
	pushq $0
	pushq -1064(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007c98a
	pushq $0
	pushq -360(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007c98b
	pushq $0
#call function to-string : Arrow<Type,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -296(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007c989
	pushq $0
	pushq -1064(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007c7aa
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007c98c
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function sizeof-type : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call sizeof_SB_type_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq $uuid_000000000007c98d
	pushq $0
#call function to-string : Arrow<IsUsed,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringIsUsed
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c7ab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c7ac
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c7ab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c98e
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-blob : Arrow<Cons<Cons<Cons<Cons<FContext,String>,Type>,I64>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c98f
#call function t3 : Arrow<Cons<Cons<String,Type>,Type>,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007981e
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c7ab
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	mov %RBX, %RBP
	call t3_CL_ArrowTypeConsTypeConsTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq -464(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	push -344(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	push %RBP
	movq -1072(%RBP), %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c993
	jmp uuid_000000000007c995
uuid_000000000007c993:
	push %RBP
#call function is : Arrow<Cons<Sized<8>,Sized<8>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -472(%rbp)
	pushq $4
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized8Sized8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c990
	jmp uuid_000000000007c992
uuid_000000000007c990:
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -464(%rbp)
	pushq -1072(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
uuid_000000000007c992:
	mov -1264(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c995:
	mov -1256(%RBP),%RSP
	add $-1264, %RSP
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
#call function denormalize : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call denormalize_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
	jmp uuid_000000000007c998
uuid_000000000007c996:
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -360(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
	popq -816(%RBP)
	popq -808(%RBP)
	popq -800(%RBP)
	popq -792(%RBP)
	popq -784(%RBP)
	popq -776(%RBP)
	popq -768(%RBP)
	popq -760(%RBP)
	popq -752(%RBP)
	popq -744(%RBP)
	popq -736(%RBP)
	popq -728(%RBP)
	popq -720(%RBP)
	popq -712(%RBP)
uuid_000000000007c998:
	mov -864(%RBP),%RSP
	add $-864, %RSP
	subq $152, %rsp
	pushq -856(%rbp)
	pushq -848(%rbp)
	pushq -840(%rbp)
	pushq -832(%rbp)
	pushq -824(%rbp)
	pushq -816(%rbp)
	pushq -808(%rbp)
	pushq -800(%rbp)
	pushq -792(%rbp)
	pushq -784(%rbp)
	pushq -776(%rbp)
	pushq -768(%rbp)
	pushq -760(%rbp)
	pushq -752(%rbp)
	pushq -744(%rbp)
	pushq -736(%rbp)
	pushq -728(%rbp)
	pushq -720(%rbp)
	pushq -712(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	popq -632(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $480, %rsp
	ret
compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<Cons<FContext,Fragment>,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	subq $152, %rsp
	pushq 152(%rsp)
	pushq 168(%rsp)
	pushq 184(%rsp)
	pushq 200(%rsp)
	pushq 216(%rsp)
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
compile_SB_stack_SB_calls_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringFContext:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
#call function fragment-context::lookups : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,List<Fragment>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookups_CL_ArrowListFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used168
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
uuid_000000000007c9a6:
#call function non-zero : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9a7
	jmp uuid_000000000007c9a8
uuid_000000000007c9a7:
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	push %RBP
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq $0
	push %RBP
	mov -1160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c99f
	jmp uuid_000000000007c9a1
uuid_000000000007c99f:
	push %RBP
	mov -1152(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c99c
	jmp uuid_000000000007c99e
uuid_000000000007c99c:
	push %RBP
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	jmp uuid_000000000007c999
	jmp uuid_000000000007c99b
uuid_000000000007c999:
	movb $1, -1168(%rbp)
uuid_000000000007c99b:
	mov -1360(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007c99e:
	mov -1184(%RBP),%RSP
	add $-1512, %RSP
uuid_000000000007c9a1:
	mov -1176(%RBP),%RSP
	add $-1512, %RSP
	mov -1168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9a3
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c9a2
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9a5
uuid_000000000007c9a3:
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
#call function compile-stack-call : Arrow<Cons<Cons<Cons<Cons<Cons<Cons<FContext,Fragment>,String>,Type>,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call compile_SB_stack_SB_call_CL_ArrowFragmentConsIsUsedConsI64ConsASTConsTypeConsStringConsFragmentFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	push -504(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	movq -1352(%rbp), %r15
	movq %r15, -816(%rbp)
	movq -1344(%rbp), %r15
	movq %r15, -808(%rbp)
	movq -1336(%rbp), %r15
	movq %r15, -800(%rbp)
	movq -1328(%rbp), %r15
	movq %r15, -792(%rbp)
	movq -1320(%rbp), %r15
	movq %r15, -784(%rbp)
	movq -1312(%rbp), %r15
	movq %r15, -776(%rbp)
	movq -1304(%rbp), %r15
	movq %r15, -768(%rbp)
	movq -1296(%rbp), %r15
	movq %r15, -760(%rbp)
	movq -1288(%rbp), %r15
	movq %r15, -752(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -744(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -736(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -728(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -720(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -712(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -704(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -696(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -688(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -680(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -672(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -664(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -656(%rbp)
uuid_000000000007c9a5:
	mov -992(%RBP),%RSP
	add $-1512, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $168, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007c9a6
uuid_000000000007c9a8:
	subq $152, %rsp
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
translate_SB_local_SB_variables_CL_ArrowFContextConsI64FContext:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov -624(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9d3
	push %RBP
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq $0
	push %RBP
	mov -832(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9b5
	jmp uuid_000000000007c9b7
uuid_000000000007c9b5:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	jmp uuid_000000000007c9b2
	jmp uuid_000000000007c9b4
uuid_000000000007c9b2:
	push %RBP
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	jmp uuid_000000000007c9af
	jmp uuid_000000000007c9b1
uuid_000000000007c9af:
	push %RBP
	mov -648(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c9ac
	jmp uuid_000000000007c9ae
uuid_000000000007c9ac:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9a9
	jmp uuid_000000000007c9ab
uuid_000000000007c9a9:
	movb $1, -840(%rbp)
uuid_000000000007c9ab:
	mov -1064(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c9ae:
	mov -1048(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c9b1:
	mov -1016(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c9b4:
	mov -856(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007c9b7:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
	mov -840(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9d0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c9cf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9d2
uuid_000000000007c9d0:
#call function translate-local-variables : Arrow<Cons<FContext,I64>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call translate_SB_local_SB_variables_CL_ArrowFContextConsI64FContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	push -240(%RSP)
	popq -1264(%RBP)
	popq -1256(%RBP)
	popq -1248(%RBP)
	popq -1240(%RBP)
	popq -1232(%RBP)
	popq -1224(%RBP)
	popq -1216(%RBP)
	popq -1208(%RBP)
	popq -1200(%RBP)
	popq -1192(%RBP)
	popq -1184(%RBP)
	popq -1176(%RBP)
	popq -1168(%RBP)
	popq -1160(%RBP)
	popq -1152(%RBP)
	popq -1144(%RBP)
	popq -1136(%RBP)
	popq -1128(%RBP)
	popq -1120(%RBP)
	popq -1112(%RBP)
	popq -1104(%RBP)
	popq -1096(%RBP)
	popq -1088(%RBP)
	popq -1080(%RBP)
	popq -1072(%RBP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007b7df
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq $0
	push %RBP
	mov -1320(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9bb
	jmp uuid_000000000007c9bd
uuid_000000000007c9bb:
	push %RBP
	mov -1312(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1352(%rbp)
	pushq $uuid_0000000000079eab
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9b8
	jmp uuid_000000000007c9ba
uuid_000000000007c9b8:
	movb $1, -1328(%rbp)
uuid_000000000007c9ba:
	mov -1344(%RBP),%RSP
	add $-1352, %RSP
uuid_000000000007c9bd:
	mov -1336(%RBP),%RSP
	add $-1352, %RSP
	mov -1328(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9cc
	push %RBP
	jmp uuid_000000000007c9c9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c9c8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9cb
uuid_000000000007c9c9:
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1056(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c9cb:
	mov -1360(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007c9ce
uuid_000000000007c9cc:
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007b846
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push %RBP
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq $0
	push %RBP
	mov -1408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9c1
	jmp uuid_000000000007c9c3
uuid_000000000007c9c1:
	push %RBP
	mov -1400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007c9be
	jmp uuid_000000000007c9c0
uuid_000000000007c9be:
	movb $1, -1416(%rbp)
uuid_000000000007c9c0:
	mov -1432(%RBP),%RSP
	add $-1440, %RSP
uuid_000000000007c9c3:
	mov -1424(%RBP),%RSP
	add $-1440, %RSP
	mov -1416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9c5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c9c4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9c7
uuid_000000000007c9c5:
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1440(%rbp)
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1448(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $uuid_000000000007b846
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1456(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -1008(%RBP)
	popq -1000(%RBP)
	popq -992(%RBP)
	popq -984(%RBP)
	popq -976(%RBP)
	popq -968(%RBP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
	popq -888(%RBP)
	popq -880(%RBP)
	popq -872(%RBP)
	popq -864(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1056(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007c9c7:
	mov -1384(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c9ce:
	mov -1296(%RBP),%RSP
	add $-1456, %RSP
uuid_000000000007c9d2:
	mov -632(%RBP),%RSP
	add $-1456, %RSP
	jmp uuid_000000000007c9d5
uuid_000000000007c9d3:
uuid_000000000007c9d5:
	mov -424(%RBP),%RSP
	add $-624, %RSP
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $216, %rsp
	ret
cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	push %RBP
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9df
	jmp uuid_000000000007c9e1
uuid_000000000007c9df:
	push %RBP
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007c9dc
	jmp uuid_000000000007c9de
uuid_000000000007c9dc:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9d9
	jmp uuid_000000000007c9db
uuid_000000000007c9d9:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9d6
	jmp uuid_000000000007c9d8
uuid_000000000007c9d6:
	movb $1, -760(%rbp)
uuid_000000000007c9d8:
	mov -888(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007c9db:
	mov -808(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007c9de:
	mov -776(%RBP),%RSP
	add $-960, %RSP
uuid_000000000007c9e1:
	mov -768(%RBP),%RSP
	add $-960, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9e7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c9e6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9e9
uuid_000000000007c9e7:
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $global_SB_ctx_CL_FContextFContextCaseNumber1, %r15
	pushq 192(%r15)
	pushq 184(%r15)
	pushq 176(%r15)
	pushq 168(%r15)
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	mov -968(%RBP), %RAX
	movq %RAX, -288(%rbp)
	pushq -976(%RBP)
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	pushq -1008(%RBP)
	pushq -1016(%RBP)
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	pushq -1064(%RBP)
	pushq -1072(%RBP)
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	pushq -1104(%RBP)
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	pushq -1136(%RBP)
	pushq -1144(%RBP)
	pushq -1152(%RBP)
	pushq -1160(%RBP)
	pushq -1168(%RBP)
	pushq -1176(%RBP)
	pushq -1184(%RBP)
	pushq -1192(%RBP)
	pushq -1200(%RBP)
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_0000000000079a8a
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007c9e3
	jmp uuid_000000000007c9e5
uuid_000000000007c9e3:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007c8e9
	pushq $0
	pushq $0
	pushq $3
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq $uuid_000000000007c8e9
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c9e2
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -1992(%RBP)
	popq -1984(%RBP)
	popq -1976(%RBP)
	popq -1968(%RBP)
	popq -1960(%RBP)
	popq -1952(%RBP)
	popq -1944(%RBP)
	popq -1936(%RBP)
	popq -1928(%RBP)
	popq -1920(%RBP)
	popq -1912(%RBP)
	popq -1904(%RBP)
	popq -1896(%RBP)
	popq -1888(%RBP)
	popq -1880(%RBP)
	popq -1872(%RBP)
	popq -1864(%RBP)
	popq -1856(%RBP)
	popq -1848(%RBP)
	popq -1840(%RBP)
	popq -1832(%RBP)
	popq -1824(%RBP)
	popq -1816(%RBP)
	popq -1808(%RBP)
	popq -1800(%RBP)
uuid_000000000007c9e5:
	mov -2000(%RBP),%RSP
	add $-2152, %RSP
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	pushq -304(%RBP)
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
#call function range : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call range_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
uuid_000000000007c9e9:
	mov -680(%RBP),%RSP
	add $-2224, %RSP
	subq $152, %rsp
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
cc_SB_blob_CL_ArrowFragmentConsASTConsI64ConsTypeConsStringFContext:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	push %RBP
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq $0
	push %RBP
	mov -776(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9f3
	jmp uuid_000000000007c9f5
uuid_000000000007c9f3:
	push %RBP
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	jmp uuid_000000000007c9f0
	jmp uuid_000000000007c9f2
uuid_000000000007c9f0:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9ed
	jmp uuid_000000000007c9ef
uuid_000000000007c9ed:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007c9ea
	jmp uuid_000000000007c9ec
uuid_000000000007c9ea:
	movb $1, -784(%rbp)
uuid_000000000007c9ec:
	mov -912(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007c9ef:
	mov -832(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007c9f2:
	mov -800(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007c9f5:
	mov -792(%RBP),%RSP
	add $-984, %RSP
	mov -784(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9f7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007c9f6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007c9f9
uuid_000000000007c9f7:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
#call function range : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call range_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -624(%RBP)
	popq -616(%RBP)
	popq -608(%RBP)
	popq -600(%RBP)
	popq -592(%RBP)
	popq -584(%RBP)
	popq -576(%RBP)
	popq -568(%RBP)
	popq -560(%RBP)
	popq -552(%RBP)
	popq -544(%RBP)
	popq -536(%RBP)
	popq -528(%RBP)
	popq -520(%RBP)
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
uuid_000000000007c9f9:
	mov -704(%RBP),%RSP
	add $-1056, %RSP
	subq $152, %rsp
	pushq -624(%rbp)
	pushq -616(%rbp)
	pushq -608(%rbp)
	pushq -600(%rbp)
	pushq -592(%rbp)
	pushq -584(%rbp)
	pushq -576(%rbp)
	pushq -568(%rbp)
	pushq -560(%rbp)
	pushq -552(%rbp)
	pushq -544(%rbp)
	pushq -536(%rbp)
	pushq -528(%rbp)
	pushq -520(%rbp)
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $320, %rsp
	ret
cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext:
	pushq -552(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca2a
	jmp uuid_000000000007ca2c
uuid_000000000007ca2a:
	push %RBP
	mov -712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -816(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca21
	jmp uuid_000000000007ca23
uuid_000000000007ca21:
	push %RBP
	mov -808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -912(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca0f
	jmp uuid_000000000007ca11
uuid_000000000007ca0f:
	push %RBP
	mov -904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1008(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007c9fd
	jmp uuid_000000000007c9ff
uuid_000000000007c9fd:
	push %RBP
	pushq -984(%RBP)
	pushq -992(%RBP)
	pushq -1000(%RBP)
	jmp uuid_000000000007c9fa
	jmp uuid_000000000007c9fc
uuid_000000000007c9fa:
	movb $1, -1016(%rbp)
uuid_000000000007c9fc:
	mov -1032(%RBP),%RSP
	add $-1056, %RSP
uuid_000000000007c9ff:
	mov -1024(%RBP),%RSP
	add $-1056, %RSP
	mov -1016(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca0c
	jmp uuid_000000000007ca0e
uuid_000000000007ca0c:
	push %RBP
	mov -896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1136(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca06
	jmp uuid_000000000007ca08
uuid_000000000007ca06:
	push %RBP
	jmp uuid_000000000007ca03
	jmp uuid_000000000007ca05
uuid_000000000007ca03:
	push %RBP
	mov -1072(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca00
	jmp uuid_000000000007ca02
uuid_000000000007ca00:
	movb $1, -1144(%rbp)
uuid_000000000007ca02:
	mov -1168(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007ca05:
	mov -1160(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007ca08:
	mov -1152(%RBP),%RSP
	add $-1176, %RSP
	mov -1144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca09
	jmp uuid_000000000007ca0b
uuid_000000000007ca09:
	movb $1, -920(%rbp)
uuid_000000000007ca0b:
	mov -1064(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007ca0e:
	mov -936(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007ca11:
	mov -928(%RBP),%RSP
	add $-1176, %RSP
	mov -920(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca1e
	jmp uuid_000000000007ca20
uuid_000000000007ca1e:
	push %RBP
	mov -800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca18
	jmp uuid_000000000007ca1a
uuid_000000000007ca18:
	push %RBP
	jmp uuid_000000000007ca15
	jmp uuid_000000000007ca17
uuid_000000000007ca15:
	push %RBP
	mov -1192(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca12
	jmp uuid_000000000007ca14
uuid_000000000007ca12:
	movb $1, -1264(%rbp)
uuid_000000000007ca14:
	mov -1288(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007ca17:
	mov -1280(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007ca1a:
	mov -1272(%RBP),%RSP
	add $-1296, %RSP
	mov -1264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca1b
	jmp uuid_000000000007ca1d
uuid_000000000007ca1b:
	movb $1, -824(%rbp)
uuid_000000000007ca1d:
	mov -1184(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007ca20:
	mov -840(%RBP),%RSP
	add $-1296, %RSP
uuid_000000000007ca23:
	mov -832(%RBP),%RSP
	add $-1296, %RSP
	mov -824(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca27
	jmp uuid_000000000007ca29
uuid_000000000007ca27:
	push %RBP
	mov -704(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca24
	jmp uuid_000000000007ca26
uuid_000000000007ca24:
	movb $1, -728(%rbp)
uuid_000000000007ca26:
	mov -1304(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007ca29:
	mov -744(%RBP),%RSP
	add $-1376, %RSP
uuid_000000000007ca2c:
	mov -736(%RBP),%RSP
	add $-1376, %RSP
	mov -728(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cabb
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq $0
	push %RBP
	mov -1456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca8e
	jmp uuid_000000000007ca90
uuid_000000000007ca8e:
	push %RBP
	mov -1448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca7c
	jmp uuid_000000000007ca7e
uuid_000000000007ca7c:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1648(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca6a
	jmp uuid_000000000007ca6c
uuid_000000000007ca6a:
	push %RBP
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	jmp uuid_000000000007ca67
	jmp uuid_000000000007ca69
uuid_000000000007ca67:
	movb $1, -1656(%rbp)
uuid_000000000007ca69:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007ca6c:
	mov -1664(%RBP),%RSP
	add $-1696, %RSP
	mov -1656(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca79
	jmp uuid_000000000007ca7b
uuid_000000000007ca79:
	push %RBP
	mov -1536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1776(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca73
	jmp uuid_000000000007ca75
uuid_000000000007ca73:
	push %RBP
	jmp uuid_000000000007ca70
	jmp uuid_000000000007ca72
uuid_000000000007ca70:
	push %RBP
	mov -1712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ca6d
	jmp uuid_000000000007ca6f
uuid_000000000007ca6d:
	movb $1, -1784(%rbp)
uuid_000000000007ca6f:
	mov -1808(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ca72:
	mov -1800(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ca75:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
	mov -1784(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca76
	jmp uuid_000000000007ca78
uuid_000000000007ca76:
	movb $1, -1560(%rbp)
uuid_000000000007ca78:
	mov -1704(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ca7b:
	mov -1576(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ca7e:
	mov -1568(%RBP),%RSP
	add $-1816, %RSP
	mov -1560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca8b
	jmp uuid_000000000007ca8d
uuid_000000000007ca8b:
	push %RBP
	mov -1440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca85
	jmp uuid_000000000007ca87
uuid_000000000007ca85:
	push %RBP
	jmp uuid_000000000007ca82
	jmp uuid_000000000007ca84
uuid_000000000007ca82:
	push %RBP
	mov -1832(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1936(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca7f
	jmp uuid_000000000007ca81
uuid_000000000007ca7f:
	movb $1, -1904(%rbp)
uuid_000000000007ca81:
	mov -1928(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007ca84:
	mov -1920(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007ca87:
	mov -1912(%RBP),%RSP
	add $-1936, %RSP
	mov -1904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca88
	jmp uuid_000000000007ca8a
uuid_000000000007ca88:
	movb $1, -1464(%rbp)
uuid_000000000007ca8a:
	mov -1824(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007ca8d:
	mov -1480(%RBP),%RSP
	add $-1936, %RSP
uuid_000000000007ca90:
	mov -1472(%RBP),%RSP
	add $-1936, %RSP
	mov -1464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cab8
	push %RBP
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	mov -2016(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cab5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007cab4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cab7
uuid_000000000007cab5:
uuid_000000000007cab7:
	mov -1944(%RBP),%RSP
	add $-2016, %RSP
	jmp uuid_000000000007caba
uuid_000000000007cab8:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cab1
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007caae
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007caa8
	jmp uuid_000000000007caaa
uuid_000000000007caa8:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007caaa:
	mov -1960(%RBP),%RSP
	add $-1960, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007caab
	jmp uuid_000000000007caad
uuid_000000000007caab:
	mov -2048(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007caad:
	mov -2120(%RBP),%RSP
	add $-2120, %RSP
	mov -2080(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007cab0
uuid_000000000007caae:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1696(%RBP)
	popq -1688(%RBP)
	popq -1680(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007caa5
	jmp uuid_000000000007caa7
uuid_000000000007caa5:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007caa7:
	mov -1960(%RBP),%RSP
	add $-1960, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -2080(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cab0:
	mov -1952(%RBP),%RSP
	add $-2112, %RSP
	jmp uuid_000000000007cab3
uuid_000000000007cab1:
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	push %RBP
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq $0
	push %RBP
	mov -2096(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca97
	jmp uuid_000000000007ca99
uuid_000000000007ca97:
	push %RBP
	mov -2088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca94
	jmp uuid_000000000007ca96
uuid_000000000007ca94:
	push %RBP
	mov -2080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca91
	jmp uuid_000000000007ca93
uuid_000000000007ca91:
	movb $1, -2104(%rbp)
uuid_000000000007ca93:
	mov -2200(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007ca96:
	mov -2120(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007ca99:
	mov -2112(%RBP),%RSP
	add $-2272, %RSP
	mov -2104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007caa2
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007caa1
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007caa4
uuid_000000000007caa2:
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca9e
#call function print : Arrow<Type,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call print_CL_ArrowNilType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007ca9d
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007caa0
uuid_000000000007ca9e:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1696(%RBP)
	popq -1688(%RBP)
	popq -1680(%RBP)
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca9a
	jmp uuid_000000000007ca9c
uuid_000000000007ca9a:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca9c:
	mov -2288(%RBP),%RSP
	add $-2288, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	mov -2408(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1816(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	pushq -2768(%RBP)
	pushq -2776(%RBP)
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	pushq -2840(%RBP)
	pushq -2848(%RBP)
	pushq -2856(%RBP)
	pushq -2872(%RBP)
	pushq -2880(%RBP)
	pushq -2888(%RBP)
	pushq -2896(%RBP)
	pushq -2904(%RBP)
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq -3056(%RBP)
	pushq -3064(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -3072(%RBP)
	pushq -3080(%RBP)
	pushq -3088(%RBP)
	pushq -3096(%RBP)
	pushq -3104(%RBP)
	pushq -3112(%RBP)
	pushq -3120(%RBP)
	pushq -3128(%RBP)
	pushq -3136(%RBP)
	pushq -3144(%RBP)
	pushq -3152(%RBP)
	pushq -3160(%RBP)
	pushq -3168(%RBP)
	pushq -3176(%RBP)
	pushq -3184(%RBP)
	pushq -3192(%RBP)
	pushq -3200(%RBP)
	pushq -3208(%RBP)
	pushq -3216(%RBP)
	pushq -3224(%RBP)
	pushq -3232(%RBP)
	pushq -3240(%RBP)
	pushq -3248(%RBP)
	pushq -3256(%RBP)
	pushq -3264(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -2448(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007caa0:
	mov -2280(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007caa4:
	mov -2024(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007cab3:
	mov -1944(%RBP),%RSP
	add $-3272, %RSP
uuid_000000000007caba:
	mov -1384(%RBP),%RSP
	add $-3272, %RSP
	jmp uuid_000000000007cabd
uuid_000000000007cabb:
	push %RBP
#call function is-cons : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_cons_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca61
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca5e
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca58
	jmp uuid_000000000007ca5a
uuid_000000000007ca58:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca5a:
	mov -1400(%RBP),%RSP
	add $-1400, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca5b
	jmp uuid_000000000007ca5d
uuid_000000000007ca5b:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007ca5d:
	mov -1560(%RBP),%RSP
	add $-1560, %RSP
	mov -1520(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007ca60
uuid_000000000007ca5e:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1056(%RBP)
	popq -1048(%RBP)
	popq -1040(%RBP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca55
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq -1464(%RBP)
	pushq -1472(%RBP)
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	pushq -1640(%RBP)
	pushq -1648(%RBP)
	pushq -1656(%RBP)
	pushq -1664(%RBP)
	pushq -1672(%RBP)
	pushq -1680(%RBP)
	pushq -1688(%RBP)
	pushq -1696(%RBP)
	pushq -1704(%RBP)
	pushq -1712(%RBP)
	pushq -1720(%RBP)
	pushq -1728(%RBP)
	pushq -1736(%RBP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1408(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007ca57
uuid_000000000007ca55:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca4f
	jmp uuid_000000000007ca51
uuid_000000000007ca4f:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca51:
	mov -1408(%RBP),%RSP
	add $-1408, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca52
	jmp uuid_000000000007ca54
uuid_000000000007ca52:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007ca54:
	mov -1568(%RBP),%RSP
	add $-1568, %RSP
	mov -1528(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca57:
	mov -1400(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007ca60:
	mov -1392(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007ca63
uuid_000000000007ca61:
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	push %RBP
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq $0
	push %RBP
	mov -1536(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca33
	jmp uuid_000000000007ca35
uuid_000000000007ca33:
	push %RBP
	mov -1528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca30
	jmp uuid_000000000007ca32
uuid_000000000007ca30:
	push %RBP
	mov -1520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ca2d
	jmp uuid_000000000007ca2f
uuid_000000000007ca2d:
	movb $1, -1544(%rbp)
uuid_000000000007ca2f:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007ca32:
	mov -1560(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007ca35:
	mov -1552(%RBP),%RSP
	add $-1712, %RSP
	mov -1544(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ca4c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ca4b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ca4e
uuid_000000000007ca4c:
	push %RBP
#call function is-vararg : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_vararg_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca48
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca3f
	jmp uuid_000000000007ca41
uuid_000000000007ca3f:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca41:
	mov -1728(%RBP),%RSP
	add $-1728, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-impure-offset : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_impure_SB_offset_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca42
	jmp uuid_000000000007ca44
uuid_000000000007ca42:
	mov -1816(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007ca44:
	mov -1888(%RBP),%RSP
	add $-1888, %RSP
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca45
	jmp uuid_000000000007ca47
uuid_000000000007ca45:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007ca47:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
	mov -1848(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1904(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007ca4a
uuid_000000000007ca48:
#call function get-vararg-inner : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call get_SB_vararg_SB_inner_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	popq -1056(%RBP)
	popq -1048(%RBP)
	popq -1040(%RBP)
	push %RBP
#call function can-unify : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call can_SB_unify_CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca3c
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1744(%RBP)
	pushq -1752(%RBP)
	pushq -1760(%RBP)
	pushq -1768(%RBP)
	pushq -1776(%RBP)
	pushq -1784(%RBP)
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2320(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1736(%RBP), %RAX
	movq %RAX, -552(%rbp)
	jmp uuid_000000000007ca3e
uuid_000000000007ca3c:
	push %RBP
#call function is-open : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_open_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca36
	jmp uuid_000000000007ca38
uuid_000000000007ca36:
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007ca38:
	mov -1736(%RBP),%RSP
	add $-1736, %RSP
#call function compile-expr : Arrow<Cons<Cons<Cons<FContext,AST>,I64>,IsUsed>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -552(%rbp)
	pushq $4
	mov %RBX, %RBP
	call compile_SB_expr_CL_ArrowFragmentConsIsUsedConsI64ConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca39
	jmp uuid_000000000007ca3b
uuid_000000000007ca39:
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
#call function sizeof-aligned : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call sizeof_SB_aligned_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -552(%rbp)
uuid_000000000007ca3b:
	mov -1896(%RBP),%RSP
	add $-1896, %RSP
	mov -1856(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
#call function bind-vararg : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1176(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	mov %RBX, %RBP
	call bind_SB_vararg_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function cc-args : Arrow<Cons<Cons<Cons<Cons<FContext,FContext>,AST>,AST>,I64>,Tuple<I64,Tuple<FContext,FContext>>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -552(%rbp)
	mov %RBX, %RBP
	call cc_SB_args_CL_ArrowTupleTupleFContextFContextI64ConsI64ConsASTConsASTConsFContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used424
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	push -584(%RSP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	pushq -2016(%RBP)
	pushq -2024(%RBP)
	pushq -2032(%RBP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	pushq -2096(%RBP)
	pushq -2104(%RBP)
	pushq -2112(%RBP)
	pushq -2120(%RBP)
	pushq -2128(%RBP)
	pushq -2136(%RBP)
	pushq -2144(%RBP)
	pushq -2152(%RBP)
	pushq -2160(%RBP)
	pushq -2168(%RBP)
	pushq -2176(%RBP)
	pushq -2184(%RBP)
	pushq -2192(%RBP)
	pushq -2200(%RBP)
	pushq -2208(%RBP)
	pushq -2216(%RBP)
	pushq -2224(%RBP)
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	pushq -2288(%RBP)
	pushq -2296(%RBP)
	pushq -2304(%RBP)
	pushq -2312(%RBP)
	pushq -2328(%RBP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	pushq -2400(%RBP)
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq -2560(%RBP)
	pushq -2568(%RBP)
	pushq -2576(%RBP)
	pushq -2584(%RBP)
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	mov -1904(%RBP), %RAX
	movq %RAX, -552(%rbp)
uuid_000000000007ca3e:
	mov -1728(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007ca4a:
	mov -1720(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007ca4e:
	mov -1464(%RBP),%RSP
	add $-2728, %RSP
uuid_000000000007ca63:
	mov -1384(%RBP),%RSP
	add $-2728, %RSP
	push %RBP
#call function is-onto-stack : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	mov %RBX, %RBP
	call is_SB_onto_SB_stack_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ca64
	jmp uuid_000000000007ca66
uuid_000000000007ca64:
	movq -568(%rbp), %r15
	movq %r15, -552(%rbp)
	mov -568(%rbp), %r15
	mov %r15, -552(%rbp)
uuid_000000000007ca66:
	mov -2736(%RBP),%RSP
	add $-2736, %RSP
uuid_000000000007cabd:
	mov -648(%RBP),%RSP
	add $-2736, %RSP
	pushq -552(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq $0
	pushq $0
	subq $424, %rsp
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	pushq 504(%rsp)
	pushq 520(%rsp)
	pushq 536(%rsp)
	pushq 552(%rsp)
	pushq 568(%rsp)
	pushq 584(%rsp)
	pushq 600(%rsp)
	pushq 616(%rsp)
	pushq 632(%rsp)
	pushq 648(%rsp)
	pushq 664(%rsp)
	pushq 680(%rsp)
	pushq 696(%rsp)
	pushq 712(%rsp)
	pushq 728(%rsp)
	pushq 744(%rsp)
	pushq 760(%rsp)
	pushq 776(%rsp)
	pushq 792(%rsp)
	pushq 808(%rsp)
	pushq 824(%rsp)
	pushq 840(%rsp)
	pushq 856(%rsp)
	pushq 872(%rsp)
	pushq 888(%rsp)
	pushq 904(%rsp)
	pushq 920(%rsp)
	pushq 936(%rsp)
	pushq 952(%rsp)
	pushq 968(%rsp)
	pushq 984(%rsp)
	pushq 1000(%rsp)
	pushq 1016(%rsp)
	pushq 1032(%rsp)
	pushq 1048(%rsp)
	pushq 1064(%rsp)
	pushq 1080(%rsp)
	pushq 1096(%rsp)
	pushq 1112(%rsp)
	pushq 1128(%rsp)
	pushq 1144(%rsp)
	pushq 1160(%rsp)
	pushq 1176(%rsp)
	pushq 1192(%rsp)
	pushq 1208(%rsp)
	pushq 1224(%rsp)
	pushq 1240(%rsp)
	pushq 1256(%rsp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	popq -632(%rbp)
	popq -640(%rbp)
	popq -648(%rbp)
	popq -656(%rbp)
	popq -664(%rbp)
	popq -672(%rbp)
	popq -680(%rbp)
	popq -688(%rbp)
	popq -696(%rbp)
	popq -704(%rbp)
	popq -712(%rbp)
	popq -720(%rbp)
	popq -728(%rbp)
	popq -736(%rbp)
	popq -744(%rbp)
	popq -752(%rbp)
	popq -760(%rbp)
	popq -768(%rbp)
	popq -776(%rbp)
	popq -784(%rbp)
	popq -792(%rbp)
	popq -800(%rbp)
	popq -808(%rbp)
	popq -816(%rbp)
	popq -824(%rbp)
	popq -832(%rbp)
	popq -840(%rbp)
	popq -848(%rbp)
	popq -856(%rbp)
	popq -864(%rbp)
	popq -872(%rbp)
	popq -880(%rbp)
	popq -888(%rbp)
	popq -896(%rbp)
	popq -904(%rbp)
	popq -912(%rbp)
	popq -920(%rbp)
	popq -928(%rbp)
	popq -936(%rbp)
	popq -944(%rbp)
	popq -952(%rbp)
	popq -960(%rbp)
	popq -968(%rbp)
	popq -976(%rbp)
	popq -984(%rbp)
	addq $424, %rsp
	mov %rbp, %rsp
	sub $560, %rsp
	ret
blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext:
	pushq $0
	pushq $0
	pushq $3
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov -472(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdd4
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdd1
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cac4
	jmp uuid_000000000007cac6
uuid_000000000007cac4:
	push %RBP
	jmp uuid_000000000007cac1
	jmp uuid_000000000007cac3
uuid_000000000007cac1:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cabe
	jmp uuid_000000000007cac0
uuid_000000000007cabe:
	movb $1, -640(%rbp)
uuid_000000000007cac0:
	mov -664(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cac3:
	mov -656(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cac6:
	mov -648(%RBP),%RSP
	add $-672, %RSP
	mov -640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdce
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cacd
	jmp uuid_000000000007cacf
uuid_000000000007cacd:
	push %RBP
	jmp uuid_000000000007caca
	jmp uuid_000000000007cacc
uuid_000000000007caca:
	push %RBP
	mov -688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cac7
	jmp uuid_000000000007cac9
uuid_000000000007cac7:
	movb $1, -760(%rbp)
uuid_000000000007cac9:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007cacc:
	mov -776(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007cacf:
	mov -768(%RBP),%RSP
	add $-792, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdcb
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007caee
	jmp uuid_000000000007caf0
uuid_000000000007caee:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cadc
	jmp uuid_000000000007cade
uuid_000000000007cadc:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1064(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cad3
	jmp uuid_000000000007cad5
uuid_000000000007cad3:
	push %RBP
	pushq -1040(%RBP)
	pushq -1048(%RBP)
	pushq -1056(%RBP)
	jmp uuid_000000000007cad0
	jmp uuid_000000000007cad2
uuid_000000000007cad0:
	movb $1, -1072(%rbp)
uuid_000000000007cad2:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007cad5:
	mov -1080(%RBP),%RSP
	add $-1112, %RSP
	mov -1072(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cad9
	jmp uuid_000000000007cadb
uuid_000000000007cad9:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cad6
	jmp uuid_000000000007cad8
uuid_000000000007cad6:
	movb $1, -976(%rbp)
uuid_000000000007cad8:
	mov -1120(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007cadb:
	mov -992(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007cade:
	mov -984(%RBP),%RSP
	add $-1192, %RSP
	mov -976(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007caeb
	jmp uuid_000000000007caed
uuid_000000000007caeb:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cae5
	jmp uuid_000000000007cae7
uuid_000000000007cae5:
	push %RBP
	jmp uuid_000000000007cae2
	jmp uuid_000000000007cae4
uuid_000000000007cae2:
	push %RBP
	mov -1208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1312(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cadf
	jmp uuid_000000000007cae1
uuid_000000000007cadf:
	movb $1, -1280(%rbp)
uuid_000000000007cae1:
	mov -1304(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007cae4:
	mov -1296(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007cae7:
	mov -1288(%RBP),%RSP
	add $-1312, %RSP
	mov -1280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cae8
	jmp uuid_000000000007caea
uuid_000000000007cae8:
	movb $1, -880(%rbp)
uuid_000000000007caea:
	mov -1200(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007caed:
	mov -896(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007caf0:
	mov -888(%RBP),%RSP
	add $-1312, %RSP
	mov -880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdc8
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb0f
	jmp uuid_000000000007cb11
uuid_000000000007cb0f:
	push %RBP
	mov -1384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cafd
	jmp uuid_000000000007caff
uuid_000000000007cafd:
	push %RBP
	mov -1480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1584(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007caf4
	jmp uuid_000000000007caf6
uuid_000000000007caf4:
	push %RBP
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	jmp uuid_000000000007caf1
	jmp uuid_000000000007caf3
uuid_000000000007caf1:
	movb $1, -1592(%rbp)
uuid_000000000007caf3:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007caf6:
	mov -1600(%RBP),%RSP
	add $-1632, %RSP
	mov -1592(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cafa
	jmp uuid_000000000007cafc
uuid_000000000007cafa:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007caf7
	jmp uuid_000000000007caf9
uuid_000000000007caf7:
	movb $1, -1496(%rbp)
uuid_000000000007caf9:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007cafc:
	mov -1512(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007caff:
	mov -1504(%RBP),%RSP
	add $-1712, %RSP
	mov -1496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb0c
	jmp uuid_000000000007cb0e
uuid_000000000007cb0c:
	push %RBP
	mov -1376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb06
	jmp uuid_000000000007cb08
uuid_000000000007cb06:
	push %RBP
	jmp uuid_000000000007cb03
	jmp uuid_000000000007cb05
uuid_000000000007cb03:
	push %RBP
	mov -1728(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1832(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb00
	jmp uuid_000000000007cb02
uuid_000000000007cb00:
	movb $1, -1800(%rbp)
uuid_000000000007cb02:
	mov -1824(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007cb05:
	mov -1816(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007cb08:
	mov -1808(%RBP),%RSP
	add $-1832, %RSP
	mov -1800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb09
	jmp uuid_000000000007cb0b
uuid_000000000007cb09:
	movb $1, -1400(%rbp)
uuid_000000000007cb0b:
	mov -1720(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007cb0e:
	mov -1416(%RBP),%RSP
	add $-1832, %RSP
uuid_000000000007cb11:
	mov -1408(%RBP),%RSP
	add $-1832, %RSP
	mov -1400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdc5
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -1912(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb21
	jmp uuid_000000000007cb23
uuid_000000000007cb21:
	push %RBP
	mov -1904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb1e
	jmp uuid_000000000007cb20
uuid_000000000007cb1e:
	push %RBP
	mov -1896(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2088(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb18
	jmp uuid_000000000007cb1a
uuid_000000000007cb18:
	push %RBP
	jmp uuid_000000000007cb15
	jmp uuid_000000000007cb17
uuid_000000000007cb15:
	push %RBP
	mov -2024(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2128(%rbp)
	pushq $uuid_0000000000079976
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb12
	jmp uuid_000000000007cb14
uuid_000000000007cb12:
	movb $1, -2096(%rbp)
uuid_000000000007cb14:
	mov -2120(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007cb17:
	mov -2112(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007cb1a:
	mov -2104(%RBP),%RSP
	add $-2128, %RSP
	mov -2096(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb1b
	jmp uuid_000000000007cb1d
uuid_000000000007cb1b:
	movb $1, -1920(%rbp)
uuid_000000000007cb1d:
	mov -2016(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007cb20:
	mov -1936(%RBP),%RSP
	add $-2128, %RSP
uuid_000000000007cb23:
	mov -1928(%RBP),%RSP
	add $-2128, %RSP
	mov -1920(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdc2
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -2208(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb98
	jmp uuid_000000000007cb9a
uuid_000000000007cb98:
	push %RBP
	mov -2200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb64
	jmp uuid_000000000007cb66
uuid_000000000007cb64:
	push %RBP
	mov -2296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb61
	jmp uuid_000000000007cb63
uuid_000000000007cb61:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb5b
	jmp uuid_000000000007cb5d
uuid_000000000007cb5b:
	push %RBP
	mov -2472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2576(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb3d
	jmp uuid_000000000007cb3f
uuid_000000000007cb3d:
	push %RBP
	mov -2568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2672(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb2a
	jmp uuid_000000000007cb2c
uuid_000000000007cb2a:
	push %RBP
	jmp uuid_000000000007cb27
	jmp uuid_000000000007cb29
uuid_000000000007cb27:
	push %RBP
	mov -2608(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cb24
	jmp uuid_000000000007cb26
uuid_000000000007cb24:
	movb $1, -2680(%rbp)
uuid_000000000007cb26:
	mov -2704(%RBP),%RSP
	add $-2712, %RSP
uuid_000000000007cb29:
	mov -2696(%RBP),%RSP
	add $-2712, %RSP
uuid_000000000007cb2c:
	mov -2688(%RBP),%RSP
	add $-2712, %RSP
	mov -2680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb3a
	jmp uuid_000000000007cb3c
uuid_000000000007cb3a:
	push %RBP
	mov -2560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2792(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb34
	jmp uuid_000000000007cb36
uuid_000000000007cb34:
	push %RBP
	jmp uuid_000000000007cb31
	jmp uuid_000000000007cb33
uuid_000000000007cb31:
	push %RBP
	mov -2728(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2832(%rbp)
	pushq $uuid_000000000007cb2d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb2e
	jmp uuid_000000000007cb30
uuid_000000000007cb2e:
	movb $1, -2800(%rbp)
uuid_000000000007cb30:
	mov -2824(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007cb33:
	mov -2816(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007cb36:
	mov -2808(%RBP),%RSP
	add $-2832, %RSP
	mov -2800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb37
	jmp uuid_000000000007cb39
uuid_000000000007cb37:
	movb $1, -2584(%rbp)
uuid_000000000007cb39:
	mov -2720(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007cb3c:
	mov -2600(%RBP),%RSP
	add $-2832, %RSP
uuid_000000000007cb3f:
	mov -2592(%RBP),%RSP
	add $-2832, %RSP
	mov -2584(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb58
	jmp uuid_000000000007cb5a
uuid_000000000007cb58:
	push %RBP
	mov -2464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2912(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb52
	jmp uuid_000000000007cb54
uuid_000000000007cb52:
	push %RBP
	jmp uuid_000000000007cb4f
	jmp uuid_000000000007cb51
uuid_000000000007cb4f:
	push %RBP
	mov -2880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -3016(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb4c
	jmp uuid_000000000007cb4e
uuid_000000000007cb4c:
	push %RBP
	mov -2872(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3096(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb46
	jmp uuid_000000000007cb48
uuid_000000000007cb46:
	push %RBP
	jmp uuid_000000000007cb43
	jmp uuid_000000000007cb45
uuid_000000000007cb43:
	push %RBP
	mov -3032(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cb40
	jmp uuid_000000000007cb42
uuid_000000000007cb40:
	movb $1, -3104(%rbp)
uuid_000000000007cb42:
	mov -3128(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb45:
	mov -3120(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb48:
	mov -3112(%RBP),%RSP
	add $-3136, %RSP
	mov -3104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb49
	jmp uuid_000000000007cb4b
uuid_000000000007cb49:
	movb $1, -2920(%rbp)
uuid_000000000007cb4b:
	mov -3024(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb4e:
	mov -2944(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb51:
	mov -2936(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb54:
	mov -2928(%RBP),%RSP
	add $-3136, %RSP
	mov -2920(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb55
	jmp uuid_000000000007cb57
uuid_000000000007cb55:
	movb $1, -2488(%rbp)
uuid_000000000007cb57:
	mov -2840(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb5a:
	mov -2504(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb5d:
	mov -2496(%RBP),%RSP
	add $-3136, %RSP
	mov -2488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb5e
	jmp uuid_000000000007cb60
uuid_000000000007cb5e:
	movb $1, -2312(%rbp)
uuid_000000000007cb60:
	mov -2408(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb63:
	mov -2328(%RBP),%RSP
	add $-3136, %RSP
uuid_000000000007cb66:
	mov -2320(%RBP),%RSP
	add $-3136, %RSP
	mov -2312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb95
	jmp uuid_000000000007cb97
uuid_000000000007cb95:
	push %RBP
	mov -2192(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3216(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb8f
	jmp uuid_000000000007cb91
uuid_000000000007cb8f:
	push %RBP
	mov -3208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3312(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb7d
	jmp uuid_000000000007cb7f
uuid_000000000007cb7d:
	push %RBP
	mov -3304(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3408(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb6a
	jmp uuid_000000000007cb6c
uuid_000000000007cb6a:
	push %RBP
	jmp uuid_000000000007cb67
	jmp uuid_000000000007cb69
uuid_000000000007cb67:
	movb $1, -3416(%rbp)
uuid_000000000007cb69:
	mov -3432(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007cb6c:
	mov -3424(%RBP),%RSP
	add $-3432, %RSP
	mov -3416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb7a
	jmp uuid_000000000007cb7c
uuid_000000000007cb7a:
	push %RBP
	mov -3296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3512(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb74
	jmp uuid_000000000007cb76
uuid_000000000007cb74:
	push %RBP
	jmp uuid_000000000007cb71
	jmp uuid_000000000007cb73
uuid_000000000007cb71:
	push %RBP
	mov -3448(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3552(%rbp)
	pushq $uuid_000000000007cb6d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb6e
	jmp uuid_000000000007cb70
uuid_000000000007cb6e:
	movb $1, -3520(%rbp)
uuid_000000000007cb70:
	mov -3544(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007cb73:
	mov -3536(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007cb76:
	mov -3528(%RBP),%RSP
	add $-3552, %RSP
	mov -3520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb77
	jmp uuid_000000000007cb79
uuid_000000000007cb77:
	movb $1, -3320(%rbp)
uuid_000000000007cb79:
	mov -3440(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007cb7c:
	mov -3336(%RBP),%RSP
	add $-3552, %RSP
uuid_000000000007cb7f:
	mov -3328(%RBP),%RSP
	add $-3552, %RSP
	mov -3320(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb8c
	jmp uuid_000000000007cb8e
uuid_000000000007cb8c:
	push %RBP
	mov -3200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3632(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb86
	jmp uuid_000000000007cb88
uuid_000000000007cb86:
	push %RBP
	jmp uuid_000000000007cb83
	jmp uuid_000000000007cb85
uuid_000000000007cb83:
	push %RBP
	mov -3568(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3672(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cb80
	jmp uuid_000000000007cb82
uuid_000000000007cb80:
	movb $1, -3640(%rbp)
uuid_000000000007cb82:
	mov -3664(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007cb85:
	mov -3656(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007cb88:
	mov -3648(%RBP),%RSP
	add $-3672, %RSP
	mov -3640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb89
	jmp uuid_000000000007cb8b
uuid_000000000007cb89:
	movb $1, -3224(%rbp)
uuid_000000000007cb8b:
	mov -3560(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007cb8e:
	mov -3240(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007cb91:
	mov -3232(%RBP),%RSP
	add $-3672, %RSP
	mov -3224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cb92
	jmp uuid_000000000007cb94
uuid_000000000007cb92:
	movb $1, -2216(%rbp)
uuid_000000000007cb94:
	mov -3144(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007cb97:
	mov -2232(%RBP),%RSP
	add $-3672, %RSP
uuid_000000000007cb9a:
	mov -2224(%RBP),%RSP
	add $-3672, %RSP
	mov -2216(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdbf
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -3752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc03
	jmp uuid_000000000007cc05
uuid_000000000007cc03:
	push %RBP
	mov -3744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbcf
	jmp uuid_000000000007cbd1
uuid_000000000007cbcf:
	push %RBP
	mov -3840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cbcc
	jmp uuid_000000000007cbce
uuid_000000000007cbcc:
	push %RBP
	mov -3832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4024(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbc6
	jmp uuid_000000000007cbc8
uuid_000000000007cbc6:
	push %RBP
	mov -4016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cbc3
	jmp uuid_000000000007cbc5
uuid_000000000007cbc3:
	push %RBP
	mov -4008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4200(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbbd
	jmp uuid_000000000007cbbf
uuid_000000000007cbbd:
	push %RBP
	jmp uuid_000000000007cbba
	jmp uuid_000000000007cbbc
uuid_000000000007cbba:
	push %RBP
	mov -4168(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -4304(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbb7
	jmp uuid_000000000007cbb9
uuid_000000000007cbb7:
	push %RBP
	mov -4160(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbb1
	jmp uuid_000000000007cbb3
uuid_000000000007cbb1:
	push %RBP
	jmp uuid_000000000007cbae
	jmp uuid_000000000007cbb0
uuid_000000000007cbae:
	push %RBP
	mov -4320(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cbab
	jmp uuid_000000000007cbad
uuid_000000000007cbab:
	movb $1, -4392(%rbp)
uuid_000000000007cbad:
	mov -4416(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbb0:
	mov -4408(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbb3:
	mov -4400(%RBP),%RSP
	add $-4424, %RSP
	mov -4392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbb4
	jmp uuid_000000000007cbb6
uuid_000000000007cbb4:
	movb $1, -4208(%rbp)
uuid_000000000007cbb6:
	mov -4312(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbb9:
	mov -4232(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbbc:
	mov -4224(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbbf:
	mov -4216(%RBP),%RSP
	add $-4424, %RSP
	mov -4208(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbc0
	jmp uuid_000000000007cbc2
uuid_000000000007cbc0:
	movb $1, -4032(%rbp)
uuid_000000000007cbc2:
	mov -4128(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbc5:
	mov -4048(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbc8:
	mov -4040(%RBP),%RSP
	add $-4424, %RSP
	mov -4032(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbc9
	jmp uuid_000000000007cbcb
uuid_000000000007cbc9:
	movb $1, -3856(%rbp)
uuid_000000000007cbcb:
	mov -3952(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbce:
	mov -3872(%RBP),%RSP
	add $-4424, %RSP
uuid_000000000007cbd1:
	mov -3864(%RBP),%RSP
	add $-4424, %RSP
	mov -3856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc00
	jmp uuid_000000000007cc02
uuid_000000000007cc00:
	push %RBP
	mov -3736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4504(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbfa
	jmp uuid_000000000007cbfc
uuid_000000000007cbfa:
	push %RBP
	mov -4496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbe8
	jmp uuid_000000000007cbea
uuid_000000000007cbe8:
	push %RBP
	mov -4592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4696(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbd5
	jmp uuid_000000000007cbd7
uuid_000000000007cbd5:
	push %RBP
	jmp uuid_000000000007cbd2
	jmp uuid_000000000007cbd4
uuid_000000000007cbd2:
	movb $1, -4704(%rbp)
uuid_000000000007cbd4:
	mov -4720(%RBP),%RSP
	add $-4720, %RSP
uuid_000000000007cbd7:
	mov -4712(%RBP),%RSP
	add $-4720, %RSP
	mov -4704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbe5
	jmp uuid_000000000007cbe7
uuid_000000000007cbe5:
	push %RBP
	mov -4584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4800(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbdf
	jmp uuid_000000000007cbe1
uuid_000000000007cbdf:
	push %RBP
	jmp uuid_000000000007cbdc
	jmp uuid_000000000007cbde
uuid_000000000007cbdc:
	push %RBP
	mov -4736(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4840(%rbp)
	pushq $uuid_000000000007cbd8
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbd9
	jmp uuid_000000000007cbdb
uuid_000000000007cbd9:
	movb $1, -4808(%rbp)
uuid_000000000007cbdb:
	mov -4832(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007cbde:
	mov -4824(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007cbe1:
	mov -4816(%RBP),%RSP
	add $-4840, %RSP
	mov -4808(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbe2
	jmp uuid_000000000007cbe4
uuid_000000000007cbe2:
	movb $1, -4608(%rbp)
uuid_000000000007cbe4:
	mov -4728(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007cbe7:
	mov -4624(%RBP),%RSP
	add $-4840, %RSP
uuid_000000000007cbea:
	mov -4616(%RBP),%RSP
	add $-4840, %RSP
	mov -4608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbf7
	jmp uuid_000000000007cbf9
uuid_000000000007cbf7:
	push %RBP
	mov -4488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4920(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbf1
	jmp uuid_000000000007cbf3
uuid_000000000007cbf1:
	push %RBP
	jmp uuid_000000000007cbee
	jmp uuid_000000000007cbf0
uuid_000000000007cbee:
	push %RBP
	mov -4856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cbeb
	jmp uuid_000000000007cbed
uuid_000000000007cbeb:
	movb $1, -4928(%rbp)
uuid_000000000007cbed:
	mov -4952(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007cbf0:
	mov -4944(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007cbf3:
	mov -4936(%RBP),%RSP
	add $-4960, %RSP
	mov -4928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbf4
	jmp uuid_000000000007cbf6
uuid_000000000007cbf4:
	movb $1, -4512(%rbp)
uuid_000000000007cbf6:
	mov -4848(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007cbf9:
	mov -4528(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007cbfc:
	mov -4520(%RBP),%RSP
	add $-4960, %RSP
	mov -4512(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cbfd
	jmp uuid_000000000007cbff
uuid_000000000007cbfd:
	movb $1, -3760(%rbp)
uuid_000000000007cbff:
	mov -4432(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007cc02:
	mov -3776(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007cc05:
	mov -3768(%RBP),%RSP
	add $-4960, %RSP
	mov -3760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdbc
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5040(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc32
	jmp uuid_000000000007cc34
uuid_000000000007cc32:
	push %RBP
	mov -5032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5136(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc1f
	jmp uuid_000000000007cc21
uuid_000000000007cc1f:
	push %RBP
	mov -5128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc1c
	jmp uuid_000000000007cc1e
uuid_000000000007cc1c:
	push %RBP
	mov -5120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc19
	jmp uuid_000000000007cc1b
uuid_000000000007cc19:
	movb $1, -5144(%rbp)
uuid_000000000007cc1b:
	mov -5240(%RBP),%RSP
	add $-5312, %RSP
uuid_000000000007cc1e:
	mov -5160(%RBP),%RSP
	add $-5312, %RSP
uuid_000000000007cc21:
	mov -5152(%RBP),%RSP
	add $-5312, %RSP
	mov -5144(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc2f
	jmp uuid_000000000007cc31
uuid_000000000007cc2f:
	push %RBP
	mov -5024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc29
	jmp uuid_000000000007cc2b
uuid_000000000007cc29:
	push %RBP
	jmp uuid_000000000007cc26
	jmp uuid_000000000007cc28
uuid_000000000007cc26:
	push %RBP
	mov -5328(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5432(%rbp)
	pushq $uuid_000000000007cc22
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc23
	jmp uuid_000000000007cc25
uuid_000000000007cc23:
	movb $1, -5400(%rbp)
uuid_000000000007cc25:
	mov -5424(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007cc28:
	mov -5416(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007cc2b:
	mov -5408(%RBP),%RSP
	add $-5432, %RSP
	mov -5400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc2c
	jmp uuid_000000000007cc2e
uuid_000000000007cc2c:
	movb $1, -5048(%rbp)
uuid_000000000007cc2e:
	mov -5320(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007cc31:
	mov -5064(%RBP),%RSP
	add $-5432, %RSP
uuid_000000000007cc34:
	mov -5056(%RBP),%RSP
	add $-5432, %RSP
	mov -5048(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdb9
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc48
	jmp uuid_000000000007cc4a
uuid_000000000007cc48:
	push %RBP
	jmp uuid_000000000007cc45
	jmp uuid_000000000007cc47
uuid_000000000007cc45:
	push %RBP
	mov -5496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc3f
	jmp uuid_000000000007cc41
uuid_000000000007cc3f:
	push %RBP
	jmp uuid_000000000007cc3c
	jmp uuid_000000000007cc3e
uuid_000000000007cc3c:
	push %RBP
	mov -5552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5656(%rbp)
	pushq $uuid_000000000007cc38
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc39
	jmp uuid_000000000007cc3b
uuid_000000000007cc39:
	movb $1, -5624(%rbp)
uuid_000000000007cc3b:
	mov -5648(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007cc3e:
	mov -5640(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007cc41:
	mov -5632(%RBP),%RSP
	add $-5656, %RSP
	mov -5624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc42
	jmp uuid_000000000007cc44
uuid_000000000007cc42:
	movb $1, -5520(%rbp)
uuid_000000000007cc44:
	mov -5544(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007cc47:
	mov -5536(%RBP),%RSP
	add $-5656, %RSP
uuid_000000000007cc4a:
	mov -5528(%RBP),%RSP
	add $-5656, %RSP
	mov -5520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdb6
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -5736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc5b
	jmp uuid_000000000007cc5d
uuid_000000000007cc5b:
	push %RBP
	mov -5728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc58
	jmp uuid_000000000007cc5a
uuid_000000000007cc58:
	push %RBP
	mov -5720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5912(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc52
	jmp uuid_000000000007cc54
uuid_000000000007cc52:
	push %RBP
	jmp uuid_000000000007cc4f
	jmp uuid_000000000007cc51
uuid_000000000007cc4f:
	push %RBP
	mov -5848(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq $uuid_000000000007cc4b
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc4c
	jmp uuid_000000000007cc4e
uuid_000000000007cc4c:
	movb $1, -5920(%rbp)
uuid_000000000007cc4e:
	mov -5944(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007cc51:
	mov -5936(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007cc54:
	mov -5928(%RBP),%RSP
	add $-5952, %RSP
	mov -5920(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc55
	jmp uuid_000000000007cc57
uuid_000000000007cc55:
	movb $1, -5744(%rbp)
uuid_000000000007cc57:
	mov -5840(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007cc5a:
	mov -5760(%RBP),%RSP
	add $-5952, %RSP
uuid_000000000007cc5d:
	mov -5752(%RBP),%RSP
	add $-5952, %RSP
	mov -5744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdb3
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc77
	jmp uuid_000000000007cc79
uuid_000000000007cc77:
	push %RBP
	mov -6024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc64
	jmp uuid_000000000007cc66
uuid_000000000007cc64:
	push %RBP
	mov -6120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc61
	jmp uuid_000000000007cc63
uuid_000000000007cc61:
	push %RBP
	mov -6112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc5e
	jmp uuid_000000000007cc60
uuid_000000000007cc5e:
	movb $1, -6136(%rbp)
uuid_000000000007cc60:
	mov -6232(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007cc63:
	mov -6152(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007cc66:
	mov -6144(%RBP),%RSP
	add $-6304, %RSP
	mov -6136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc74
	jmp uuid_000000000007cc76
uuid_000000000007cc74:
	push %RBP
	mov -6016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6384(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc6e
	jmp uuid_000000000007cc70
uuid_000000000007cc6e:
	push %RBP
	jmp uuid_000000000007cc6b
	jmp uuid_000000000007cc6d
uuid_000000000007cc6b:
	push %RBP
	mov -6320(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6424(%rbp)
	pushq $uuid_000000000007cc67
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc68
	jmp uuid_000000000007cc6a
uuid_000000000007cc68:
	movb $1, -6392(%rbp)
uuid_000000000007cc6a:
	mov -6416(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007cc6d:
	mov -6408(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007cc70:
	mov -6400(%RBP),%RSP
	add $-6424, %RSP
	mov -6392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc71
	jmp uuid_000000000007cc73
uuid_000000000007cc71:
	movb $1, -6040(%rbp)
uuid_000000000007cc73:
	mov -6312(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007cc76:
	mov -6056(%RBP),%RSP
	add $-6424, %RSP
uuid_000000000007cc79:
	mov -6048(%RBP),%RSP
	add $-6424, %RSP
	mov -6040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdb0
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6504(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc95
	jmp uuid_000000000007cc97
uuid_000000000007cc95:
	push %RBP
	mov -6496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc83
	jmp uuid_000000000007cc85
uuid_000000000007cc83:
	push %RBP
	mov -6592(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc80
	jmp uuid_000000000007cc82
uuid_000000000007cc80:
	push %RBP
	mov -6584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc7d
	jmp uuid_000000000007cc7f
uuid_000000000007cc7d:
	movb $1, -6608(%rbp)
uuid_000000000007cc7f:
	mov -6704(%RBP),%RSP
	add $-6776, %RSP
uuid_000000000007cc82:
	mov -6624(%RBP),%RSP
	add $-6776, %RSP
uuid_000000000007cc85:
	mov -6616(%RBP),%RSP
	add $-6776, %RSP
	mov -6608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc92
	jmp uuid_000000000007cc94
uuid_000000000007cc92:
	push %RBP
	mov -6488(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6856(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc8c
	jmp uuid_000000000007cc8e
uuid_000000000007cc8c:
	push %RBP
	jmp uuid_000000000007cc89
	jmp uuid_000000000007cc8b
uuid_000000000007cc89:
	push %RBP
	mov -6792(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6896(%rbp)
	pushq $uuid_0000000000079770
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc86
	jmp uuid_000000000007cc88
uuid_000000000007cc86:
	movb $1, -6864(%rbp)
uuid_000000000007cc88:
	mov -6888(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007cc8b:
	mov -6880(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007cc8e:
	mov -6872(%RBP),%RSP
	add $-6896, %RSP
	mov -6864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc8f
	jmp uuid_000000000007cc91
uuid_000000000007cc8f:
	movb $1, -6512(%rbp)
uuid_000000000007cc91:
	mov -6784(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007cc94:
	mov -6528(%RBP),%RSP
	add $-6896, %RSP
uuid_000000000007cc97:
	mov -6520(%RBP),%RSP
	add $-6896, %RSP
	mov -6512(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdad
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -6976(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccb4
	jmp uuid_000000000007ccb6
uuid_000000000007ccb4:
	push %RBP
	mov -6968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cca1
	jmp uuid_000000000007cca3
uuid_000000000007cca1:
	push %RBP
	mov -7064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc9e
	jmp uuid_000000000007cca0
uuid_000000000007cc9e:
	push %RBP
	mov -7056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc9b
	jmp uuid_000000000007cc9d
uuid_000000000007cc9b:
	movb $1, -7080(%rbp)
uuid_000000000007cc9d:
	mov -7176(%RBP),%RSP
	add $-7248, %RSP
uuid_000000000007cca0:
	mov -7096(%RBP),%RSP
	add $-7248, %RSP
uuid_000000000007cca3:
	mov -7088(%RBP),%RSP
	add $-7248, %RSP
	mov -7080(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccb1
	jmp uuid_000000000007ccb3
uuid_000000000007ccb1:
	push %RBP
	mov -6960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7328(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccab
	jmp uuid_000000000007ccad
uuid_000000000007ccab:
	push %RBP
	jmp uuid_000000000007cca8
	jmp uuid_000000000007ccaa
uuid_000000000007cca8:
	push %RBP
	mov -7264(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7368(%rbp)
	pushq $uuid_000000000007cca4
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cca5
	jmp uuid_000000000007cca7
uuid_000000000007cca5:
	movb $1, -7336(%rbp)
uuid_000000000007cca7:
	mov -7360(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007ccaa:
	mov -7352(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007ccad:
	mov -7344(%RBP),%RSP
	add $-7368, %RSP
	mov -7336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccae
	jmp uuid_000000000007ccb0
uuid_000000000007ccae:
	movb $1, -6984(%rbp)
uuid_000000000007ccb0:
	mov -7256(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007ccb3:
	mov -7000(%RBP),%RSP
	add $-7368, %RSP
uuid_000000000007ccb6:
	mov -6992(%RBP),%RSP
	add $-7368, %RSP
	mov -6984(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdaa
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -7448(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccd0
	jmp uuid_000000000007ccd2
uuid_000000000007ccd0:
	push %RBP
	mov -7440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7544(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccbd
	jmp uuid_000000000007ccbf
uuid_000000000007ccbd:
	push %RBP
	mov -7536(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccba
	jmp uuid_000000000007ccbc
uuid_000000000007ccba:
	push %RBP
	mov -7528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccb7
	jmp uuid_000000000007ccb9
uuid_000000000007ccb7:
	movb $1, -7552(%rbp)
uuid_000000000007ccb9:
	mov -7648(%RBP),%RSP
	add $-7720, %RSP
uuid_000000000007ccbc:
	mov -7568(%RBP),%RSP
	add $-7720, %RSP
uuid_000000000007ccbf:
	mov -7560(%RBP),%RSP
	add $-7720, %RSP
	mov -7552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cccd
	jmp uuid_000000000007cccf
uuid_000000000007cccd:
	push %RBP
	mov -7432(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7800(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccc7
	jmp uuid_000000000007ccc9
uuid_000000000007ccc7:
	push %RBP
	jmp uuid_000000000007ccc4
	jmp uuid_000000000007ccc6
uuid_000000000007ccc4:
	push %RBP
	mov -7736(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7840(%rbp)
	pushq $uuid_000000000007ccc0
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ccc1
	jmp uuid_000000000007ccc3
uuid_000000000007ccc1:
	movb $1, -7808(%rbp)
uuid_000000000007ccc3:
	mov -7832(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007ccc6:
	mov -7824(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007ccc9:
	mov -7816(%RBP),%RSP
	add $-7840, %RSP
	mov -7808(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccca
	jmp uuid_000000000007cccc
uuid_000000000007ccca:
	movb $1, -7456(%rbp)
uuid_000000000007cccc:
	mov -7728(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007cccf:
	mov -7472(%RBP),%RSP
	add $-7840, %RSP
uuid_000000000007ccd2:
	mov -7464(%RBP),%RSP
	add $-7840, %RSP
	mov -7456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cda7
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -7920(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccec
	jmp uuid_000000000007ccee
uuid_000000000007ccec:
	push %RBP
	mov -7912(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8016(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccd9
	jmp uuid_000000000007ccdb
uuid_000000000007ccd9:
	push %RBP
	mov -8008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccd6
	jmp uuid_000000000007ccd8
uuid_000000000007ccd6:
	push %RBP
	mov -8000(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccd3
	jmp uuid_000000000007ccd5
uuid_000000000007ccd3:
	movb $1, -8024(%rbp)
uuid_000000000007ccd5:
	mov -8120(%RBP),%RSP
	add $-8192, %RSP
uuid_000000000007ccd8:
	mov -8040(%RBP),%RSP
	add $-8192, %RSP
uuid_000000000007ccdb:
	mov -8032(%RBP),%RSP
	add $-8192, %RSP
	mov -8024(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cce9
	jmp uuid_000000000007cceb
uuid_000000000007cce9:
	push %RBP
	mov -7904(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8272(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cce3
	jmp uuid_000000000007cce5
uuid_000000000007cce3:
	push %RBP
	jmp uuid_000000000007cce0
	jmp uuid_000000000007cce2
uuid_000000000007cce0:
	push %RBP
	mov -8208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8312(%rbp)
	pushq $uuid_000000000007ccdc
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ccdd
	jmp uuid_000000000007ccdf
uuid_000000000007ccdd:
	movb $1, -8280(%rbp)
uuid_000000000007ccdf:
	mov -8304(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007cce2:
	mov -8296(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007cce5:
	mov -8288(%RBP),%RSP
	add $-8312, %RSP
	mov -8280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cce6
	jmp uuid_000000000007cce8
uuid_000000000007cce6:
	movb $1, -7928(%rbp)
uuid_000000000007cce8:
	mov -8200(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007cceb:
	mov -7944(%RBP),%RSP
	add $-8312, %RSP
uuid_000000000007ccee:
	mov -7936(%RBP),%RSP
	add $-8312, %RSP
	mov -7928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cda4
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -8392(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd07
	jmp uuid_000000000007cd09
uuid_000000000007cd07:
	push %RBP
	mov -8384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccf5
	jmp uuid_000000000007ccf7
uuid_000000000007ccf5:
	push %RBP
	mov -8480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccf2
	jmp uuid_000000000007ccf4
uuid_000000000007ccf2:
	push %RBP
	mov -8472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ccef
	jmp uuid_000000000007ccf1
uuid_000000000007ccef:
	movb $1, -8496(%rbp)
uuid_000000000007ccf1:
	mov -8592(%RBP),%RSP
	add $-8664, %RSP
uuid_000000000007ccf4:
	mov -8512(%RBP),%RSP
	add $-8664, %RSP
uuid_000000000007ccf7:
	mov -8504(%RBP),%RSP
	add $-8664, %RSP
	mov -8496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd04
	jmp uuid_000000000007cd06
uuid_000000000007cd04:
	push %RBP
	mov -8376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8744(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ccfe
	jmp uuid_000000000007cd00
uuid_000000000007ccfe:
	push %RBP
	jmp uuid_000000000007ccfb
	jmp uuid_000000000007ccfd
uuid_000000000007ccfb:
	push %RBP
	mov -8680(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8784(%rbp)
	pushq $uuid_0000000000079749
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ccf8
	jmp uuid_000000000007ccfa
uuid_000000000007ccf8:
	movb $1, -8752(%rbp)
uuid_000000000007ccfa:
	mov -8776(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007ccfd:
	mov -8768(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007cd00:
	mov -8760(%RBP),%RSP
	add $-8784, %RSP
	mov -8752(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd01
	jmp uuid_000000000007cd03
uuid_000000000007cd01:
	movb $1, -8400(%rbp)
uuid_000000000007cd03:
	mov -8672(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007cd06:
	mov -8416(%RBP),%RSP
	add $-8784, %RSP
uuid_000000000007cd09:
	mov -8408(%RBP),%RSP
	add $-8784, %RSP
	mov -8400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cda1
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -8864(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd22
	jmp uuid_000000000007cd24
uuid_000000000007cd22:
	push %RBP
	mov -8856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8960(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd10
	jmp uuid_000000000007cd12
uuid_000000000007cd10:
	push %RBP
	mov -8952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd0d
	jmp uuid_000000000007cd0f
uuid_000000000007cd0d:
	push %RBP
	mov -8944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd0a
	jmp uuid_000000000007cd0c
uuid_000000000007cd0a:
	movb $1, -8968(%rbp)
uuid_000000000007cd0c:
	mov -9064(%RBP),%RSP
	add $-9136, %RSP
uuid_000000000007cd0f:
	mov -8984(%RBP),%RSP
	add $-9136, %RSP
uuid_000000000007cd12:
	mov -8976(%RBP),%RSP
	add $-9136, %RSP
	mov -8968(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd1f
	jmp uuid_000000000007cd21
uuid_000000000007cd1f:
	push %RBP
	mov -8848(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9216(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd19
	jmp uuid_000000000007cd1b
uuid_000000000007cd19:
	push %RBP
	jmp uuid_000000000007cd16
	jmp uuid_000000000007cd18
uuid_000000000007cd16:
	push %RBP
	mov -9152(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9256(%rbp)
	pushq $uuid_000000000007941e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd13
	jmp uuid_000000000007cd15
uuid_000000000007cd13:
	movb $1, -9224(%rbp)
uuid_000000000007cd15:
	mov -9248(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007cd18:
	mov -9240(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007cd1b:
	mov -9232(%RBP),%RSP
	add $-9256, %RSP
	mov -9224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd1c
	jmp uuid_000000000007cd1e
uuid_000000000007cd1c:
	movb $1, -8872(%rbp)
uuid_000000000007cd1e:
	mov -9144(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007cd21:
	mov -8888(%RBP),%RSP
	add $-9256, %RSP
uuid_000000000007cd24:
	mov -8880(%RBP),%RSP
	add $-9256, %RSP
	mov -8872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd9e
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -9336(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd46
	jmp uuid_000000000007cd48
uuid_000000000007cd46:
	push %RBP
	mov -9328(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd43
	jmp uuid_000000000007cd45
uuid_000000000007cd43:
	push %RBP
	mov -9320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd3d
	jmp uuid_000000000007cd3f
uuid_000000000007cd3d:
	push %RBP
	mov -9504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd3a
	jmp uuid_000000000007cd3c
uuid_000000000007cd3a:
	push %RBP
	mov -9496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd34
	jmp uuid_000000000007cd36
uuid_000000000007cd34:
	push %RBP
	mov -9680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd31
	jmp uuid_000000000007cd33
uuid_000000000007cd31:
	push %RBP
	mov -9672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9864(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd2b
	jmp uuid_000000000007cd2d
uuid_000000000007cd2b:
	push %RBP
	jmp uuid_000000000007cd28
	jmp uuid_000000000007cd2a
uuid_000000000007cd28:
	push %RBP
	mov -9800(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9904(%rbp)
	pushq $uuid_00000000000798d9
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd25
	jmp uuid_000000000007cd27
uuid_000000000007cd25:
	movb $1, -9872(%rbp)
uuid_000000000007cd27:
	mov -9896(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007cd2a:
	mov -9888(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007cd2d:
	mov -9880(%RBP),%RSP
	add $-9904, %RSP
	mov -9872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd2e
	jmp uuid_000000000007cd30
uuid_000000000007cd2e:
	movb $1, -9696(%rbp)
uuid_000000000007cd30:
	mov -9792(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007cd33:
	mov -9712(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007cd36:
	mov -9704(%RBP),%RSP
	add $-9904, %RSP
	mov -9696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd37
	jmp uuid_000000000007cd39
uuid_000000000007cd37:
	movb $1, -9520(%rbp)
uuid_000000000007cd39:
	mov -9616(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007cd3c:
	mov -9536(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007cd3f:
	mov -9528(%RBP),%RSP
	add $-9904, %RSP
	mov -9520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd40
	jmp uuid_000000000007cd42
uuid_000000000007cd40:
	movb $1, -9344(%rbp)
uuid_000000000007cd42:
	mov -9440(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007cd45:
	mov -9360(%RBP),%RSP
	add $-9904, %RSP
uuid_000000000007cd48:
	mov -9352(%RBP),%RSP
	add $-9904, %RSP
	mov -9344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd9b
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -9984(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd71
	jmp uuid_000000000007cd73
uuid_000000000007cd71:
	push %RBP
	mov -9976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd6e
	jmp uuid_000000000007cd70
uuid_000000000007cd6e:
	push %RBP
	mov -9968(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -10160(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd68
	jmp uuid_000000000007cd6a
uuid_000000000007cd68:
	push %RBP
	pushq -10136(%RBP)
	pushq -10144(%RBP)
	pushq -10152(%RBP)
	jmp uuid_000000000007cd65
	jmp uuid_000000000007cd67
uuid_000000000007cd65:
	push %RBP
	mov -10128(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -10288(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd62
	jmp uuid_000000000007cd64
uuid_000000000007cd62:
	push %RBP
	mov -10120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -10368(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd5c
	jmp uuid_000000000007cd5e
uuid_000000000007cd5c:
	push %RBP
	jmp uuid_000000000007cd59
	jmp uuid_000000000007cd5b
uuid_000000000007cd59:
	push %RBP
	mov -10304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd56
	jmp uuid_000000000007cd58
uuid_000000000007cd56:
	movb $1, -10376(%rbp)
uuid_000000000007cd58:
	mov -10400(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007cd5b:
	mov -10392(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007cd5e:
	mov -10384(%RBP),%RSP
	add $-10408, %RSP
	mov -10376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd5f
	jmp uuid_000000000007cd61
uuid_000000000007cd5f:
	movb $1, -10168(%rbp)
uuid_000000000007cd61:
	mov -10296(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007cd64:
	mov -10216(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007cd67:
	mov -10184(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007cd6a:
	mov -10176(%RBP),%RSP
	add $-10408, %RSP
	mov -10168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd6b
	jmp uuid_000000000007cd6d
uuid_000000000007cd6b:
	movb $1, -9992(%rbp)
uuid_000000000007cd6d:
	mov -10088(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007cd70:
	mov -10008(%RBP),%RSP
	add $-10408, %RSP
uuid_000000000007cd73:
	mov -10000(%RBP),%RSP
	add $-10408, %RSP
	mov -9992(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd98
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq $0
	push %RBP
	mov -10488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd7a
	jmp uuid_000000000007cd7c
uuid_000000000007cd7a:
	push %RBP
	mov -10480(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd77
	jmp uuid_000000000007cd79
uuid_000000000007cd77:
	push %RBP
	mov -10472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cd74
	jmp uuid_000000000007cd76
uuid_000000000007cd74:
	movb $1, -10496(%rbp)
uuid_000000000007cd76:
	mov -10592(%RBP),%RSP
	add $-10664, %RSP
uuid_000000000007cd79:
	mov -10512(%RBP),%RSP
	add $-10664, %RSP
uuid_000000000007cd7c:
	mov -10504(%RBP),%RSP
	add $-10664, %RSP
	mov -10496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd95
	push %RBP
	jmp uuid_000000000007cd92
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007cd91
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd94
uuid_000000000007cd92:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cd90
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cd94:
	mov -10672(%RBP),%RSP
	add $-10672, %RSP
	jmp uuid_000000000007cd97
uuid_000000000007cd95:
	push %RBP
#call function is-arrow : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call is_SB_arrow_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd8d
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10680(%RBP)
	pushq -10688(%RBP)
	pushq -10696(%RBP)
	pushq -10704(%RBP)
	pushq -10712(%RBP)
	pushq -10720(%RBP)
	pushq -10728(%RBP)
	pushq -10736(%RBP)
	pushq -10744(%RBP)
	pushq -10752(%RBP)
	pushq -10760(%RBP)
	pushq -10768(%RBP)
	pushq -10776(%RBP)
	pushq -10784(%RBP)
	pushq -10792(%RBP)
	pushq -10800(%RBP)
	pushq -10808(%RBP)
	pushq -10816(%RBP)
	pushq -10824(%RBP)
	pushq -10832(%RBP)
	pushq -10840(%RBP)
	pushq -10848(%RBP)
	pushq -10856(%RBP)
	pushq -10864(%RBP)
	pushq -10872(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10912(%RBP)
	pushq -10920(%RBP)
	pushq -10928(%RBP)
	pushq -10936(%RBP)
	pushq -10944(%RBP)
	pushq -10952(%RBP)
	pushq -10960(%RBP)
	pushq -10968(%RBP)
	pushq -10976(%RBP)
	pushq -10984(%RBP)
	pushq -10992(%RBP)
	pushq -11000(%RBP)
	pushq -11008(%RBP)
	pushq -11016(%RBP)
	pushq -11024(%RBP)
	pushq -11032(%RBP)
	pushq -11040(%RBP)
	pushq -11048(%RBP)
	pushq -11056(%RBP)
	pushq -11064(%RBP)
	pushq -11072(%RBP)
	pushq -11080(%RBP)
	pushq -11088(%RBP)
	pushq -11096(%RBP)
	pushq -11104(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	pushq -10880(%RBP)
	pushq -10888(%RBP)
	pushq -10896(%RBP)
	pushq -11112(%RBP)
	pushq -11120(%RBP)
	pushq -11128(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -11144(%rbp)
	pushq -11152(%rbp)
	pushq -11160(%rbp)
	pushq -11168(%rbp)
	pushq -11176(%rbp)
	pushq -11184(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007cd8f
uuid_000000000007cd8d:
	pushq -10600(%rbp)
	pushq -10608(%rbp)
	pushq -10616(%rbp)
	pushq -10624(%rbp)
	pushq -10632(%rbp)
	pushq -10640(%rbp)
	pushq -10648(%rbp)
	pushq -10656(%rbp)
	pushq -10664(%rbp)
	push %RBP
	pushq -10680(%rbp)
	pushq -10688(%rbp)
	pushq -10696(%rbp)
	pushq -10704(%rbp)
	pushq -10712(%rbp)
	pushq -10720(%rbp)
	pushq -10728(%rbp)
	pushq -10736(%rbp)
	pushq -10744(%rbp)
	pushq $0
	push %RBP
	mov -10824(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd83
	jmp uuid_000000000007cd85
uuid_000000000007cd83:
	push %RBP
	jmp uuid_000000000007cd80
	jmp uuid_000000000007cd82
uuid_000000000007cd80:
	push %RBP
	mov -10760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cd7d
	jmp uuid_000000000007cd7f
uuid_000000000007cd7d:
	movb $1, -10832(%rbp)
uuid_000000000007cd7f:
	mov -10856(%RBP),%RSP
	add $-10864, %RSP
uuid_000000000007cd82:
	mov -10848(%RBP),%RSP
	add $-10864, %RSP
uuid_000000000007cd85:
	mov -10840(%RBP),%RSP
	add $-10864, %RSP
	mov -10832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd8a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007cd89
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd8c
uuid_000000000007cd8a:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10864(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd86
#call function cc-blob : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -10864(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call cc_SB_blob_CL_ArrowFragmentConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10880(%rbp)
	pushq -10888(%rbp)
	pushq -10896(%rbp)
	pushq -10904(%rbp)
	pushq -10912(%rbp)
	pushq -10920(%rbp)
	pushq -10928(%rbp)
	pushq -10936(%rbp)
	pushq -10944(%rbp)
	pushq -10952(%rbp)
	pushq -10960(%rbp)
	pushq -10968(%rbp)
	pushq -10976(%rbp)
	pushq -10984(%rbp)
	pushq -10992(%rbp)
	pushq -11000(%rbp)
	pushq -11008(%rbp)
	pushq -11016(%rbp)
	pushq -11024(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007cd88
uuid_000000000007cd86:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10864(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -10568(%rbp)
	pushq -10576(%rbp)
	pushq -10584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -11080(%RBP)
	pushq -11088(%RBP)
	pushq -11096(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cd88:
	mov -10872(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007cd8c:
	mov -10752(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007cd8f:
	mov -10672(%RBP),%RSP
	add $-11104, %RSP
uuid_000000000007cd97:
	mov -10416(%RBP),%RSP
	add $-11104, %RSP
	jmp uuid_000000000007cd9a
uuid_000000000007cd98:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -10016(%rbp)
	pushq -10024(%rbp)
	pushq -10032(%rbp)
	pushq -10040(%rbp)
	pushq -10048(%rbp)
	pushq -10056(%rbp)
	pushq -10064(%rbp)
	pushq -10072(%rbp)
	pushq -10080(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10768(%RBP)
	pushq -10776(%RBP)
	pushq -10784(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq -208(%rbp)
	pushq -10800(%rbp)
	pushq -10808(%rbp)
	pushq -10816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -10560(%RBP)
	popq -10552(%RBP)
	popq -10544(%RBP)
	popq -10536(%RBP)
	popq -10528(%RBP)
	popq -10520(%RBP)
	popq -10512(%RBP)
	popq -10504(%RBP)
	popq -10496(%RBP)
	popq -10488(%RBP)
	popq -10480(%RBP)
	popq -10472(%RBP)
	popq -10464(%RBP)
	popq -10456(%RBP)
	popq -10448(%RBP)
	popq -10440(%RBP)
	popq -10432(%RBP)
	popq -10424(%RBP)
	popq -10416(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	pushq $uuid_000000000007b846
	pushq -10800(%rbp)
	pushq -10808(%rbp)
	pushq -10816(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -10560(%RBP)
	popq -10552(%RBP)
	popq -10544(%RBP)
	popq -10536(%RBP)
	popq -10528(%RBP)
	popq -10520(%RBP)
	popq -10512(%RBP)
	popq -10504(%RBP)
	popq -10496(%RBP)
	popq -10488(%RBP)
	popq -10480(%RBP)
	popq -10472(%RBP)
	popq -10464(%RBP)
	popq -10456(%RBP)
	popq -10448(%RBP)
	popq -10440(%RBP)
	popq -10432(%RBP)
	popq -10424(%RBP)
	popq -10416(%RBP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -10408(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10016(%rbp)
	pushq -10024(%rbp)
	pushq -10032(%rbp)
	pushq -10040(%rbp)
	pushq -10048(%rbp)
	pushq -10056(%rbp)
	pushq -10064(%rbp)
	pushq -10072(%rbp)
	pushq -10080(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -10416(%rbp)
	pushq -10424(%rbp)
	pushq -10432(%rbp)
	pushq -10440(%rbp)
	pushq -10448(%rbp)
	pushq -10456(%rbp)
	pushq -10464(%rbp)
	pushq -10472(%rbp)
	pushq -10480(%rbp)
	pushq -10488(%rbp)
	pushq -10496(%rbp)
	pushq -10504(%rbp)
	pushq -10512(%rbp)
	pushq -10520(%rbp)
	pushq -10528(%rbp)
	pushq -10536(%rbp)
	pushq -10544(%rbp)
	pushq -10552(%rbp)
	pushq -10560(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cd9a:
	mov -9912(%RBP),%RSP
	add $-10816, %RSP
	jmp uuid_000000000007cd9d
uuid_000000000007cd9b:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9720(%rbp)
	pushq -9728(%rbp)
	pushq -9736(%rbp)
	pushq -9744(%rbp)
	pushq -9752(%rbp)
	pushq -9760(%rbp)
	pushq -9768(%rbp)
	pushq -9776(%rbp)
	pushq -9784(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10112(%RBP)
	pushq -10120(%RBP)
	pushq -10128(%RBP)
	pushq -10144(%rbp)
	pushq -10152(%rbp)
	pushq -10160(%rbp)
	push %RBP
	pushq -10168(%rbp)
	pushq -10176(%rbp)
	pushq -10184(%rbp)
	pushq $0
	push %RBP
	mov -10216(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd4c
	jmp uuid_000000000007cd4e
uuid_000000000007cd4c:
	push %RBP
	mov -10208(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -10248(%rbp)
	pushq $uuid_0000000000079453
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cd49
	jmp uuid_000000000007cd4b
uuid_000000000007cd49:
	movb $1, -10224(%rbp)
uuid_000000000007cd4b:
	mov -10240(%RBP),%RSP
	add $-10248, %RSP
uuid_000000000007cd4e:
	mov -10232(%RBP),%RSP
	add $-10248, %RSP
	mov -10224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cd53
	push %RBP
	jmp uuid_000000000007cd50
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007cd4f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cd52
uuid_000000000007cd50:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9368(%rbp)
	pushq -9376(%rbp)
	pushq -9384(%rbp)
	pushq -9392(%rbp)
	pushq -9400(%rbp)
	pushq -9408(%rbp)
	pushq -9416(%rbp)
	pushq -9424(%rbp)
	pushq -9432(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10464(%RBP)
	pushq -10472(%RBP)
	pushq -10480(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cd52:
	mov -10256(%RBP),%RSP
	add $-10488, %RSP
	jmp uuid_000000000007cd55
uuid_000000000007cd53:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9544(%rbp)
	pushq -9552(%rbp)
	pushq -9560(%rbp)
	pushq -9568(%rbp)
	pushq -9576(%rbp)
	pushq -9584(%rbp)
	pushq -9592(%rbp)
	pushq -9600(%rbp)
	pushq -9608(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -10456(%RBP)
	pushq -10464(%RBP)
	pushq -10472(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cd55:
	mov -10192(%RBP),%RSP
	add $-10480, %RSP
uuid_000000000007cd9d:
	mov -9264(%RBP),%RSP
	add $-10480, %RSP
	jmp uuid_000000000007cda0
uuid_000000000007cd9e:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -9072(%rbp)
	pushq -9080(%rbp)
	pushq -9088(%rbp)
	pushq -9096(%rbp)
	pushq -9104(%rbp)
	pushq -9112(%rbp)
	pushq -9120(%rbp)
	pushq -9128(%rbp)
	pushq -9136(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9464(%RBP)
	pushq -9472(%RBP)
	pushq -9480(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8992(%rbp)
	pushq -9000(%rbp)
	pushq -9008(%rbp)
	pushq -9016(%rbp)
	pushq -9024(%rbp)
	pushq -9032(%rbp)
	pushq -9040(%rbp)
	pushq -9048(%rbp)
	pushq -9056(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9720(%RBP)
	pushq -9728(%RBP)
	pushq -9736(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9496(%rbp)
	pushq -9504(%rbp)
	pushq -9512(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9752(%rbp)
	pushq -9760(%rbp)
	pushq -9768(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9776(%rbp)
	pushq -9784(%rbp)
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cda0:
	mov -8792(%RBP),%RSP
	add $-9784, %RSP
	jmp uuid_000000000007cda3
uuid_000000000007cda1:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -8648(%rbp)
	pushq -8656(%rbp)
	pushq -8664(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8992(%RBP)
	pushq -9000(%RBP)
	pushq -9008(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8520(%rbp)
	pushq -8528(%rbp)
	pushq -8536(%rbp)
	pushq -8544(%rbp)
	pushq -8552(%rbp)
	pushq -8560(%rbp)
	pushq -8568(%rbp)
	pushq -8576(%rbp)
	pushq -8584(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -9248(%RBP)
	pushq -9256(%RBP)
	pushq -9264(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9024(%rbp)
	pushq -9032(%rbp)
	pushq -9040(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9280(%rbp)
	pushq -9288(%rbp)
	pushq -9296(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function + : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9304(%rbp)
	pushq -9312(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cda3:
	mov -8320(%RBP),%RSP
	add $-9312, %RSP
	jmp uuid_000000000007cda6
uuid_000000000007cda4:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8128(%rbp)
	pushq -8136(%rbp)
	pushq -8144(%rbp)
	pushq -8152(%rbp)
	pushq -8160(%rbp)
	pushq -8168(%rbp)
	pushq -8176(%rbp)
	pushq -8184(%rbp)
	pushq -8192(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8520(%RBP)
	pushq -8528(%RBP)
	pushq -8536(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -8048(%rbp)
	pushq -8056(%rbp)
	pushq -8064(%rbp)
	pushq -8072(%rbp)
	pushq -8080(%rbp)
	pushq -8088(%rbp)
	pushq -8096(%rbp)
	pushq -8104(%rbp)
	pushq -8112(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8776(%RBP)
	pushq -8784(%RBP)
	pushq -8792(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8552(%rbp)
	pushq -8560(%rbp)
	pushq -8568(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8808(%rbp)
	pushq -8816(%rbp)
	pushq -8824(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function % : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8832(%rbp)
	pushq -8840(%rbp)
	mov %RBX, %RBP
	call _MD__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cda6:
	mov -7848(%RBP),%RSP
	add $-8840, %RSP
	jmp uuid_000000000007cda9
uuid_000000000007cda7:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7656(%rbp)
	pushq -7664(%rbp)
	pushq -7672(%rbp)
	pushq -7680(%rbp)
	pushq -7688(%rbp)
	pushq -7696(%rbp)
	pushq -7704(%rbp)
	pushq -7712(%rbp)
	pushq -7720(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8048(%RBP)
	pushq -8056(%RBP)
	pushq -8064(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7576(%rbp)
	pushq -7584(%rbp)
	pushq -7592(%rbp)
	pushq -7600(%rbp)
	pushq -7608(%rbp)
	pushq -7616(%rbp)
	pushq -7624(%rbp)
	pushq -7632(%rbp)
	pushq -7640(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -8304(%RBP)
	pushq -8312(%RBP)
	pushq -8320(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8080(%rbp)
	pushq -8088(%rbp)
	pushq -8096(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8336(%rbp)
	pushq -8344(%rbp)
	pushq -8352(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function * : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8360(%rbp)
	pushq -8368(%rbp)
	mov %RBX, %RBP
	call _ML__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cda9:
	mov -7376(%RBP),%RSP
	add $-8368, %RSP
	jmp uuid_000000000007cdac
uuid_000000000007cdaa:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7184(%rbp)
	pushq -7192(%rbp)
	pushq -7200(%rbp)
	pushq -7208(%rbp)
	pushq -7216(%rbp)
	pushq -7224(%rbp)
	pushq -7232(%rbp)
	pushq -7240(%rbp)
	pushq -7248(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7576(%RBP)
	pushq -7584(%RBP)
	pushq -7592(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -7104(%rbp)
	pushq -7112(%rbp)
	pushq -7120(%rbp)
	pushq -7128(%rbp)
	pushq -7136(%rbp)
	pushq -7144(%rbp)
	pushq -7152(%rbp)
	pushq -7160(%rbp)
	pushq -7168(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7832(%RBP)
	pushq -7840(%RBP)
	pushq -7848(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7608(%rbp)
	pushq -7616(%rbp)
	pushq -7624(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7864(%rbp)
	pushq -7872(%rbp)
	pushq -7880(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function / : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7888(%rbp)
	pushq -7896(%rbp)
	mov %RBX, %RBP
	call _DV__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cdac:
	mov -6904(%RBP),%RSP
	add $-7896, %RSP
	jmp uuid_000000000007cdaf
uuid_000000000007cdad:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6712(%rbp)
	pushq -6720(%rbp)
	pushq -6728(%rbp)
	pushq -6736(%rbp)
	pushq -6744(%rbp)
	pushq -6752(%rbp)
	pushq -6760(%rbp)
	pushq -6768(%rbp)
	pushq -6776(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7104(%RBP)
	pushq -7112(%RBP)
	pushq -7120(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6632(%rbp)
	pushq -6640(%rbp)
	pushq -6648(%rbp)
	pushq -6656(%rbp)
	pushq -6664(%rbp)
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6688(%rbp)
	pushq -6696(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -7360(%RBP)
	pushq -7368(%RBP)
	pushq -7376(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7136(%rbp)
	pushq -7144(%rbp)
	pushq -7152(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7392(%rbp)
	pushq -7400(%rbp)
	pushq -7408(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	push %RBP
#call function > : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7416(%rbp)
	pushq -7424(%rbp)
	mov %RBX, %RBP
	call _GT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc98
	pushq $0
	pushq $uuid_000000000007941a
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007cc9a
uuid_000000000007cc98:
	pushq $0
	pushq $uuid_0000000000079453
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cc9a:
	mov -7432(%RBP),%RSP
	add $-7432, %RSP
uuid_000000000007cdaf:
	mov -6432(%RBP),%RSP
	add $-7432, %RSP
	jmp uuid_000000000007cdb2
uuid_000000000007cdb0:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6240(%rbp)
	pushq -6248(%rbp)
	pushq -6256(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	pushq -6280(%rbp)
	pushq -6288(%rbp)
	pushq -6296(%rbp)
	pushq -6304(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6632(%RBP)
	pushq -6640(%RBP)
	pushq -6648(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -6160(%rbp)
	pushq -6168(%rbp)
	pushq -6176(%rbp)
	pushq -6184(%rbp)
	pushq -6192(%rbp)
	pushq -6200(%rbp)
	pushq -6208(%rbp)
	pushq -6216(%rbp)
	pushq -6224(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6888(%RBP)
	pushq -6896(%RBP)
	pushq -6904(%RBP)
	push %RBP
#call function == : Arrow<Cons<S,S>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6664(%rbp)
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6920(%rbp)
	pushq -6928(%rbp)
	pushq -6936(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc7a
	pushq $0
	pushq $uuid_000000000007941a
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007cc7c
uuid_000000000007cc7a:
	pushq $0
	pushq $uuid_0000000000079453
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cc7c:
	mov -6944(%RBP),%RSP
	add $-6944, %RSP
uuid_000000000007cdb2:
	mov -5960(%RBP),%RSP
	add $-6944, %RSP
	jmp uuid_000000000007cdb5
uuid_000000000007cdb3:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5768(%rbp)
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -6160(%RBP)
	pushq -6168(%RBP)
	pushq -6176(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6192(%rbp)
	pushq -6200(%rbp)
	pushq -6208(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function align : Arrow<I64,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6216(%rbp)
	mov %RBX, %RBP
	call align_CL_ArrowI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cdb5:
	mov -5664(%RBP),%RSP
	add $-6216, %RSP
	jmp uuid_000000000007cdb8
uuid_000000000007cdb6:
	pushq $0
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cdb8:
	mov -5440(%RBP),%RSP
	add $-5656, %RSP
	jmp uuid_000000000007cdbb
uuid_000000000007cdb9:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5640(%RBP)
	pushq -5648(%RBP)
	pushq -5656(%RBP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5896(%RBP)
	pushq -5904(%RBP)
	pushq -5912(%RBP)
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5672(%rbp)
	pushq -5680(%rbp)
	pushq -5688(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function to-i64 : Arrow<String,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5928(%rbp)
	pushq -5936(%rbp)
	pushq -5944(%rbp)
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_i64_CL_ArrowI64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007cc35:
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc36
	jmp uuid_000000000007cc37
uuid_000000000007cc36:
#call function - : Arrow<Cons<I64,I64>,I64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	pushq $1
	mov %RBX, %RBP
	call _SB__CL_ArrowI64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -5960(%rbp)
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	jmp uuid_000000000007cc35
uuid_000000000007cc37:
uuid_000000000007cdbb:
	mov -4968(%RBP),%RSP
	add $-5960, %RSP
	jmp uuid_000000000007cdbe
uuid_000000000007cdbc:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5168(%RBP)
	pushq -5176(%RBP)
	pushq -5184(%RBP)
uuid_000000000007cc16:
#call function non-zero : Arrow<S,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64S
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cc17
	jmp uuid_000000000007cc18
uuid_000000000007cc17:
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	push %RBP
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq $0
	push %RBP
	mov -5272(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc0c
	jmp uuid_000000000007cc0e
uuid_000000000007cc0c:
	push %RBP
	mov -5264(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc09
	jmp uuid_000000000007cc0b
uuid_000000000007cc09:
	push %RBP
	mov -5256(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cc06
	jmp uuid_000000000007cc08
uuid_000000000007cc06:
	movb $1, -5280(%rbp)
uuid_000000000007cc08:
	mov -5328(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007cc0b:
	mov -5296(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007cc0e:
	mov -5288(%RBP),%RSP
	add $-5352, %RSP
	mov -5280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cc13
	push %RBP
	jmp uuid_000000000007cc10
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007cc0f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cc12
uuid_000000000007cc10:
	pushq $0
	pushq $0
	pushq $3
	popq -5216(%RBP)
	popq -5208(%RBP)
	popq -5200(%RBP)
uuid_000000000007cc12:
	mov -5360(%RBP),%RSP
	add $-5360, %RSP
	jmp uuid_000000000007cc15
uuid_000000000007cc13:
#call function fragment::expression : Arrow<S,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5336(%rbp)
	pushq -5344(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_expression_CL_ArrowFragmentS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -4424(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007c9e2
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq -5360(%rbp)
	pushq -5368(%rbp)
	pushq -5376(%rbp)
	pushq -5384(%rbp)
	pushq -5392(%rbp)
	pushq -5400(%rbp)
	pushq -5408(%rbp)
	pushq -5416(%rbp)
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	pushq -5480(%rbp)
	pushq -5488(%rbp)
	pushq -5496(%rbp)
	pushq -5504(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5512(%rbp)
	pushq -5520(%rbp)
	pushq -5528(%rbp)
	pushq -5536(%rbp)
	pushq -5544(%rbp)
	pushq -5552(%rbp)
	pushq -5560(%rbp)
	pushq -5568(%rbp)
	pushq -5576(%rbp)
	pushq -5584(%rbp)
	pushq -5592(%rbp)
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	pushq -5672(%rbp)
	pushq -5680(%rbp)
	pushq -5688(%rbp)
	pushq -5696(%rbp)
	pushq -5704(%rbp)
	pushq -208(%rbp)
	pushq -3880(%rbp)
	pushq -3888(%rbp)
	pushq -3896(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	pushq -3928(%rbp)
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -5912(%RBP)
	pushq -5920(%RBP)
	pushq -5928(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -5944(%rbp)
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	movq -5320(%rbp), %r15
	movq %r15, -5216(%rbp)
	movq -5312(%rbp), %r15
	movq %r15, -5208(%rbp)
	movq -5304(%rbp), %r15
	movq %r15, -5200(%rbp)
uuid_000000000007cc15:
	mov -5248(%RBP),%RSP
	add $-5960, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $152, %rsp
	add $200, %rsp
	add $232, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007cc16
uuid_000000000007cc18:
uuid_000000000007cdbe:
	mov -3680(%RBP),%RSP
	add $-5216, %RSP
	jmp uuid_000000000007cdc1
uuid_000000000007cdbf:
#call function fragment-context::lookup-soft : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -2712(%rbp)
	pushq $0
	pushq $0
	pushq $3
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_SB_soft_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	pushq -3800(%RBP)
	pushq -3808(%RBP)
	pushq -3816(%RBP)
uuid_000000000007cba8:
#call function non-zero : Arrow<List<Array<Fragment,?>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cba9
	jmp uuid_000000000007cbaa
uuid_000000000007cba9:
	pushq -3832(%rbp)
	pushq -3840(%rbp)
	pushq -3848(%rbp)
	push %RBP
	pushq -3856(%rbp)
	pushq -3864(%rbp)
	pushq -3872(%rbp)
	pushq $0
	push %RBP
	mov -3904(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cba1
	jmp uuid_000000000007cba3
uuid_000000000007cba1:
	push %RBP
	mov -3896(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb9e
	jmp uuid_000000000007cba0
uuid_000000000007cb9e:
	push %RBP
	mov -3888(%RBP), %RAX
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cb9b
	jmp uuid_000000000007cb9d
uuid_000000000007cb9b:
	movb $1, -3912(%rbp)
uuid_000000000007cb9d:
	mov -3960(%RBP),%RSP
	add $-4112, %RSP
uuid_000000000007cba0:
	mov -3928(%RBP),%RSP
	add $-4112, %RSP
uuid_000000000007cba3:
	mov -3920(%RBP),%RSP
	add $-4112, %RSP
	mov -3912(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cba5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007cba4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cba7
uuid_000000000007cba5:
#call function fragment-context::bind : Arrow<Cons<Cons<Cons<FContext,String>,Type>,Fragment>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -3136(%rbp)
	pushq -3768(%RBP)
	pushq -3776(%RBP)
	pushq -3784(%RBP)
	pushq -3968(%rbp)
	pushq -3976(%rbp)
	pushq -3984(%rbp)
	pushq -3992(%rbp)
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	pushq -4056(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_bind_CL_ArrowFContextConsFragmentConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
	push -416(%RSP)
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	pushq -4136(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	pushq -4216(%rbp)
	pushq -4224(%rbp)
	pushq -4232(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -4312(%rbp)
	pushq -208(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -4520(%RBP)
	pushq -4528(%RBP)
	pushq -4536(%RBP)
#call function + : Arrow<Cons<S,S>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4568(%rbp)
	mov %RBX, %RBP
	call _AD__CL_ArrowSConsSS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	movq -3952(%rbp), %r15
	movq %r15, -3848(%rbp)
	movq -3944(%rbp), %r15
	movq %r15, -3840(%rbp)
	movq -3936(%rbp), %r15
	movq %r15, -3832(%rbp)
uuid_000000000007cba7:
	mov -3880(%RBP),%RSP
	add $-4568, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %rsp
	add $24, %rsp
	add $152, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $200, %rsp
	add $232, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007cba8
uuid_000000000007cbaa:
uuid_000000000007cdc1:
	mov -2136(%RBP),%RSP
	add $-3848, %RSP
	jmp uuid_000000000007cdc4
uuid_000000000007cdc2:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -2336(%RBP)
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cdc4:
	mov -1840(%RBP),%RSP
	add $-2360, %RSP
	jmp uuid_000000000007cdc7
uuid_000000000007cdc5:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cdc7:
	mov -1320(%RBP),%RSP
	add $-2064, %RSP
	jmp uuid_000000000007cdca
uuid_000000000007cdc8:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -288(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cdca:
	mov -800(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007cdcd
uuid_000000000007cdcb:
	pushq $0
	pushq -792(%rbp)
	pushq $2
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cdcd:
	mov -680(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007cdd0
uuid_000000000007cdce:
#call function fragment-context::lookup : Arrow<Cons<Cons<Cons<FContext,String>,Type>,AST>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -672(%rbp)
#call function typeof : Arrow<AST,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call typeof_CL_ArrowTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_lookup_CL_ArrowFragmentConsASTConsTypeConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
uuid_000000000007cdd0:
	mov -560(%RBP),%RSP
	add $-824, %RSP
	jmp uuid_000000000007cdd3
uuid_000000000007cdd1:
uuid_000000000007cdd3:
	mov -480(%RBP),%RSP
	add $-552, %RSP
	jmp uuid_000000000007cdd6
uuid_000000000007cdd4:
uuid_000000000007cdd6:
	mov -400(%RBP),%RSP
	add $-472, %RSP
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	subq $232, %rsp
	pushq 232(%rsp)
	pushq 248(%rsp)
	pushq 264(%rsp)
	pushq 280(%rsp)
	pushq 296(%rsp)
	pushq 312(%rsp)
	pushq 328(%rsp)
	pushq 344(%rsp)
	pushq 360(%rsp)
	pushq 376(%rsp)
	pushq 392(%rsp)
	pushq 408(%rsp)
	pushq 424(%rsp)
	pushq 440(%rsp)
	pushq 456(%rsp)
	pushq 472(%rsp)
	pushq 488(%rsp)
	pushq 504(%rsp)
	pushq 520(%rsp)
	pushq 536(%rsp)
	pushq 552(%rsp)
	pushq 568(%rsp)
	pushq 584(%rsp)
	pushq 600(%rsp)
	pushq 616(%rsp)
	pushq 632(%rsp)
	pushq 648(%rsp)
	pushq 664(%rsp)
	pushq 680(%rsp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	addq $232, %rsp
	mov %rbp, %rsp
	sub $296, %rsp
	ret
blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdf5
	jmp uuid_000000000007cdf7
uuid_000000000007cdf5:
	push %RBP
	mov -584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cde3
	jmp uuid_000000000007cde5
uuid_000000000007cde3:
	push %RBP
	mov -680(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -784(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdda
	jmp uuid_000000000007cddc
uuid_000000000007cdda:
	push %RBP
	jmp uuid_000000000007cdd7
	jmp uuid_000000000007cdd9
uuid_000000000007cdd7:
	movb $1, -792(%rbp)
uuid_000000000007cdd9:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007cddc:
	mov -800(%RBP),%RSP
	add $-808, %RSP
	mov -792(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cde0
	jmp uuid_000000000007cde2
uuid_000000000007cde0:
	push %RBP
	mov -672(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cddd
	jmp uuid_000000000007cddf
uuid_000000000007cddd:
	movb $1, -696(%rbp)
uuid_000000000007cddf:
	mov -816(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007cde2:
	mov -712(%RBP),%RSP
	add $-888, %RSP
uuid_000000000007cde5:
	mov -704(%RBP),%RSP
	add $-888, %RSP
	mov -696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdf2
	jmp uuid_000000000007cdf4
uuid_000000000007cdf2:
	push %RBP
	mov -576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdec
	jmp uuid_000000000007cdee
uuid_000000000007cdec:
	push %RBP
	jmp uuid_000000000007cde9
	jmp uuid_000000000007cdeb
uuid_000000000007cde9:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cde6
	jmp uuid_000000000007cde8
uuid_000000000007cde6:
	movb $1, -976(%rbp)
uuid_000000000007cde8:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007cdeb:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007cdee:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
	mov -976(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdef
	jmp uuid_000000000007cdf1
uuid_000000000007cdef:
	movb $1, -600(%rbp)
uuid_000000000007cdf1:
	mov -896(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007cdf4:
	mov -616(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007cdf7:
	mov -608(%RBP),%RSP
	add $-1008, %RSP
	mov -600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce35
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -1088(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce07
	jmp uuid_000000000007ce09
uuid_000000000007ce07:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce04
	jmp uuid_000000000007ce06
uuid_000000000007ce04:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cdfe
	jmp uuid_000000000007ce00
uuid_000000000007cdfe:
	push %RBP
	jmp uuid_000000000007cdfb
	jmp uuid_000000000007cdfd
uuid_000000000007cdfb:
	push %RBP
	mov -1200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cdf8
	jmp uuid_000000000007cdfa
uuid_000000000007cdf8:
	movb $1, -1272(%rbp)
uuid_000000000007cdfa:
	mov -1296(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007cdfd:
	mov -1288(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007ce00:
	mov -1280(%RBP),%RSP
	add $-1304, %RSP
	mov -1272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce01
	jmp uuid_000000000007ce03
uuid_000000000007ce01:
	movb $1, -1096(%rbp)
uuid_000000000007ce03:
	mov -1192(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007ce06:
	mov -1112(%RBP),%RSP
	add $-1304, %RSP
uuid_000000000007ce09:
	mov -1104(%RBP),%RSP
	add $-1304, %RSP
	mov -1096(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce32
	push %RBP
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -1384(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce25
	jmp uuid_000000000007ce27
uuid_000000000007ce25:
	push %RBP
	mov -1376(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce1c
	jmp uuid_000000000007ce1e
uuid_000000000007ce1c:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce19
	jmp uuid_000000000007ce1b
uuid_000000000007ce19:
	push %RBP
	mov -1464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce13
	jmp uuid_000000000007ce15
uuid_000000000007ce13:
	push %RBP
	jmp uuid_000000000007ce10
	jmp uuid_000000000007ce12
uuid_000000000007ce10:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce0d
	jmp uuid_000000000007ce0f
uuid_000000000007ce0d:
	movb $1, -1664(%rbp)
uuid_000000000007ce0f:
	mov -1688(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007ce12:
	mov -1680(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007ce15:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
	mov -1664(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce16
	jmp uuid_000000000007ce18
uuid_000000000007ce16:
	movb $1, -1488(%rbp)
uuid_000000000007ce18:
	mov -1584(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007ce1b:
	mov -1504(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007ce1e:
	mov -1496(%RBP),%RSP
	add $-1696, %RSP
	mov -1488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce22
	jmp uuid_000000000007ce24
uuid_000000000007ce22:
	push %RBP
	mov -1368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce1f
	jmp uuid_000000000007ce21
uuid_000000000007ce1f:
	movb $1, -1392(%rbp)
uuid_000000000007ce21:
	mov -1704(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007ce24:
	mov -1408(%RBP),%RSP
	add $-1776, %RSP
uuid_000000000007ce27:
	mov -1400(%RBP),%RSP
	add $-1776, %RSP
	mov -1392(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce2f
	push %RBP
	jmp uuid_000000000007ce2c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ce2b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ce2e
uuid_000000000007ce2c:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007b846
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007b846
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007ce2e:
	mov -1784(%RBP),%RSP
	add $-2040, %RSP
	jmp uuid_000000000007ce31
uuid_000000000007ce2f:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1744(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ce28
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007b846
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007b846
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	jmp uuid_000000000007ce2a
uuid_000000000007ce28:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1696(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007ce2a:
	mov -1784(%RBP),%RSP
	add $-2040, %RSP
uuid_000000000007ce31:
	mov -1312(%RBP),%RSP
	add $-2040, %RSP
	jmp uuid_000000000007ce34
uuid_000000000007ce32:
	push %RBP
#call function has-prefix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call has_SB_prefix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ce0a
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq $uuid_000000000007b846
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $uuid_000000000007b846
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	jmp uuid_000000000007ce0c
uuid_000000000007ce0a:
#call function blob-render-simple : Arrow<Cons<Cons<Cons<FContext,String>,AST>,I64>,Tuple<FContext,S>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_SB_simple_CL_ArrowTupleSFContextConsI64ConsASTConsStringFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used232
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	push -320(%RSP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
#call function tail-string : Arrow<String,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	mov %RBX, %RBP
	call tail_SB_string_CL_ArrowStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007ce0c:
	mov -1312(%RBP),%RSP
	add $-1568, %RSP
uuid_000000000007ce34:
	mov -1016(%RBP),%RSP
	add $-1568, %RSP
	jmp uuid_000000000007ce37
uuid_000000000007ce35:
#call function blob-render : Arrow<Cons<Cons<Cons<FContext,AST>,Fragment>,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	mov %RBX, %RBP
	call blob_SB_render_CL_ArrowFragmentConsI64ConsFragmentConsASTFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	push -464(%RSP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
uuid_000000000007ce37:
	mov -520(%RBP),%RSP
	add $-1008, %RSP
	subq $152, %rsp
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $440, %rsp
	ret
extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce50
	jmp uuid_000000000007ce52
uuid_000000000007ce50:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce3e
	jmp uuid_000000000007ce40
uuid_000000000007ce3e:
	push %RBP
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	jmp uuid_000000000007ce3b
	jmp uuid_000000000007ce3d
uuid_000000000007ce3b:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce38
	jmp uuid_000000000007ce3a
uuid_000000000007ce38:
	movb $1, -560(%rbp)
uuid_000000000007ce3a:
	mov -640(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007ce3d:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007ce40:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce4d
	jmp uuid_000000000007ce4f
uuid_000000000007ce4d:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -728(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce47
	jmp uuid_000000000007ce49
uuid_000000000007ce47:
	push %RBP
	jmp uuid_000000000007ce44
	jmp uuid_000000000007ce46
uuid_000000000007ce44:
	push %RBP
	mov -664(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -768(%rbp)
	pushq $uuid_000000000007cc38
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ce41
	jmp uuid_000000000007ce43
uuid_000000000007ce41:
	movb $1, -736(%rbp)
uuid_000000000007ce43:
	mov -760(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007ce46:
	mov -752(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007ce49:
	mov -744(%RBP),%RSP
	add $-768, %RSP
	mov -736(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce4a
	jmp uuid_000000000007ce4c
uuid_000000000007ce4a:
	movb $1, -464(%rbp)
uuid_000000000007ce4c:
	mov -656(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007ce4f:
	mov -480(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007ce52:
	mov -472(%RBP),%RSP
	add $-768, %RSP
	mov -464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceba
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce59
	jmp uuid_000000000007ce5b
uuid_000000000007ce59:
	push %RBP
	mov -840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce56
	jmp uuid_000000000007ce58
uuid_000000000007ce56:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce53
	jmp uuid_000000000007ce55
uuid_000000000007ce53:
	movb $1, -856(%rbp)
uuid_000000000007ce55:
	mov -952(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007ce58:
	mov -872(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007ce5b:
	mov -864(%RBP),%RSP
	add $-1024, %RSP
	mov -856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceb7
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1104(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce65
	jmp uuid_000000000007ce67
uuid_000000000007ce65:
	push %RBP
	pushq -1080(%RBP)
	pushq -1088(%RBP)
	pushq -1096(%RBP)
	jmp uuid_000000000007ce62
	jmp uuid_000000000007ce64
uuid_000000000007ce62:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce5f
	jmp uuid_000000000007ce61
uuid_000000000007ce5f:
	push %RBP
	mov -1064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce5c
	jmp uuid_000000000007ce5e
uuid_000000000007ce5c:
	movb $1, -1112(%rbp)
uuid_000000000007ce5e:
	mov -1240(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ce61:
	mov -1160(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ce64:
	mov -1128(%RBP),%RSP
	add $-1312, %RSP
uuid_000000000007ce67:
	mov -1120(%RBP),%RSP
	add $-1312, %RSP
	mov -1112(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceb4
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov -1392(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceb1
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	mov -1472(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceae
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1552(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce6b
	jmp uuid_000000000007ce6d
uuid_000000000007ce6b:
	push %RBP
	jmp uuid_000000000007ce68
	jmp uuid_000000000007ce6a
uuid_000000000007ce68:
	movb $1, -1560(%rbp)
uuid_000000000007ce6a:
	mov -1576(%RBP),%RSP
	add $-1576, %RSP
uuid_000000000007ce6d:
	mov -1568(%RBP),%RSP
	add $-1576, %RSP
	mov -1560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceab
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce74
	jmp uuid_000000000007ce76
uuid_000000000007ce74:
	push %RBP
	jmp uuid_000000000007ce71
	jmp uuid_000000000007ce73
uuid_000000000007ce71:
	push %RBP
	mov -1592(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce6e
	jmp uuid_000000000007ce70
uuid_000000000007ce6e:
	movb $1, -1664(%rbp)
uuid_000000000007ce70:
	mov -1688(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007ce73:
	mov -1680(%RBP),%RSP
	add $-1696, %RSP
uuid_000000000007ce76:
	mov -1672(%RBP),%RSP
	add $-1696, %RSP
	mov -1664(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cea8
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1776(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce7d
	jmp uuid_000000000007ce7f
uuid_000000000007ce7d:
	push %RBP
	jmp uuid_000000000007ce7a
	jmp uuid_000000000007ce7c
uuid_000000000007ce7a:
	push %RBP
	mov -1712(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007ce77
	jmp uuid_000000000007ce79
uuid_000000000007ce77:
	movb $1, -1784(%rbp)
uuid_000000000007ce79:
	mov -1808(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ce7c:
	mov -1800(%RBP),%RSP
	add $-1816, %RSP
uuid_000000000007ce7f:
	mov -1792(%RBP),%RSP
	add $-1816, %RSP
	mov -1784(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cea5
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -1896(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce86
	jmp uuid_000000000007ce88
uuid_000000000007ce86:
	push %RBP
	mov -1888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce83
	jmp uuid_000000000007ce85
uuid_000000000007ce83:
	push %RBP
	mov -1880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce80
	jmp uuid_000000000007ce82
uuid_000000000007ce80:
	movb $1, -1904(%rbp)
uuid_000000000007ce82:
	mov -2000(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007ce85:
	mov -1920(%RBP),%RSP
	add $-2072, %RSP
uuid_000000000007ce88:
	mov -1912(%RBP),%RSP
	add $-2072, %RSP
	mov -1904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cea2
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce8f
	jmp uuid_000000000007ce91
uuid_000000000007ce8f:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce8c
	jmp uuid_000000000007ce8e
uuid_000000000007ce8c:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce89
	jmp uuid_000000000007ce8b
uuid_000000000007ce89:
	movb $1, -2160(%rbp)
uuid_000000000007ce8b:
	mov -2256(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007ce8e:
	mov -2176(%RBP),%RSP
	add $-2328, %RSP
uuid_000000000007ce91:
	mov -2168(%RBP),%RSP
	add $-2328, %RSP
	mov -2160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce9f
	push %RBP
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq $0
	push %RBP
	mov -2408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce98
	jmp uuid_000000000007ce9a
uuid_000000000007ce98:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007ce95
	jmp uuid_000000000007ce97
uuid_000000000007ce95:
	push %RBP
	pushq -2344(%RBP)
	pushq -2352(%RBP)
	pushq -2360(%RBP)
	pushq -2368(%RBP)
	pushq -2376(%RBP)
	pushq -2384(%RBP)
	pushq -2392(%RBP)
	jmp uuid_000000000007ce92
	jmp uuid_000000000007ce94
uuid_000000000007ce92:
	movb $1, -2416(%rbp)
uuid_000000000007ce94:
	mov -2512(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007ce97:
	mov -2432(%RBP),%RSP
	add $-2568, %RSP
uuid_000000000007ce9a:
	mov -2424(%RBP),%RSP
	add $-2568, %RSP
	mov -2416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ce9c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ce9b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007ce9e
uuid_000000000007ce9c:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	pushq -2488(%rbp)
	pushq -2496(%rbp)
	pushq -2504(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2664(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2656(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2648(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2640(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2632(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2624(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2616(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2608(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2600(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2592(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2584(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2576(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007ce9e:
	mov -2336(%RBP),%RSP
	add $-2664, %RSP
	jmp uuid_000000000007cea1
uuid_000000000007ce9f:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	pushq -2296(%rbp)
	pushq -2304(%rbp)
	pushq -2312(%rbp)
	pushq -2320(%rbp)
	pushq -2328(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2520(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2512(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2504(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2496(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2488(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2480(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2472(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2464(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2456(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2448(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2440(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2432(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007cea1:
	mov -2080(%RBP),%RSP
	add $-2520, %RSP
	jmp uuid_000000000007cea4
uuid_000000000007cea2:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	pushq -2032(%rbp)
	pushq -2040(%rbp)
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -2264(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -2256(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -2248(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -2240(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -2216(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -2208(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -2200(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -2192(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -2184(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -2176(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007cea4:
	mov -1824(%RBP),%RSP
	add $-2264, %RSP
	jmp uuid_000000000007cea7
uuid_000000000007cea5:
uuid_000000000007cea7:
	mov -1704(%RBP),%RSP
	add $-1816, %RSP
	jmp uuid_000000000007ceaa
uuid_000000000007cea8:
uuid_000000000007ceaa:
	mov -1584(%RBP),%RSP
	add $-1696, %RSP
	jmp uuid_000000000007cead
uuid_000000000007ceab:
uuid_000000000007cead:
	mov -1480(%RBP),%RSP
	add $-1576, %RSP
	jmp uuid_000000000007ceb0
uuid_000000000007ceae:
uuid_000000000007ceb0:
	mov -1400(%RBP),%RSP
	add $-1472, %RSP
	jmp uuid_000000000007ceb3
uuid_000000000007ceb1:
uuid_000000000007ceb3:
	mov -1320(%RBP),%RSP
	add $-1392, %RSP
	jmp uuid_000000000007ceb6
uuid_000000000007ceb4:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -1504(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1496(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1488(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1480(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1472(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1464(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1456(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1448(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1440(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1432(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1424(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1416(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007ceb6:
	mov -1032(%RBP),%RSP
	add $-1504, %RSP
	jmp uuid_000000000007ceb9
uuid_000000000007ceb7:
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	movq -1216(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007ceb9:
	mov -776(%RBP),%RSP
	add $-1216, %RSP
	jmp uuid_000000000007cebc
uuid_000000000007ceba:
#call function uuid : Arrow<Nil,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call uuid_CL_ArrowStringNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -648(%rbp)
	pushq -776(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	pushq $0
	movq -872(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -856(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -848(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -840(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -832(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -824(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -816(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -808(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -800(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -792(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -784(%rbp), %r15
	movq %r15, -216(%rbp)
uuid_000000000007cebc:
	mov -384(%RBP),%RSP
	add $-872, %RSP
	subq $96, %rsp
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $208, %rsp
	ret
index_SB_typedefs_CL_ArrowNilAST:
uuid_000000000007cee2:
#call function non-zero : Arrow<AST,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cee3
	jmp uuid_000000000007cee4
uuid_000000000007cee3:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cecc
	jmp uuid_000000000007cece
uuid_000000000007cecc:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -328(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cec3
	jmp uuid_000000000007cec5
uuid_000000000007cec3:
	push %RBP
	mov -320(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cec0
	jmp uuid_000000000007cec2
uuid_000000000007cec0:
	push %RBP
	mov -312(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cebd
	jmp uuid_000000000007cebf
uuid_000000000007cebd:
	movb $1, -336(%rbp)
uuid_000000000007cebf:
	mov -432(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cec2:
	mov -352(%RBP),%RSP
	add $-504, %RSP
uuid_000000000007cec5:
	mov -344(%RBP),%RSP
	add $-504, %RSP
	mov -336(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cec9
	jmp uuid_000000000007cecb
uuid_000000000007cec9:
	push %RBP
	mov -216(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cec6
	jmp uuid_000000000007cec8
uuid_000000000007cec6:
	movb $1, -240(%rbp)
uuid_000000000007cec8:
	mov -512(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007cecb:
	mov -256(%RBP),%RSP
	add $-584, %RSP
uuid_000000000007cece:
	mov -248(%RBP),%RSP
	add $-584, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cedf
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $0
	push %RBP
	mov -664(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ced5
	jmp uuid_000000000007ced7
uuid_000000000007ced5:
	push %RBP
	jmp uuid_000000000007ced2
	jmp uuid_000000000007ced4
uuid_000000000007ced2:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cecf
	jmp uuid_000000000007ced1
uuid_000000000007cecf:
	movb $1, -672(%rbp)
uuid_000000000007ced1:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007ced4:
	mov -688(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007ced7:
	mov -680(%RBP),%RSP
	add $-768, %RSP
	mov -672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cedc
	push %RBP
	jmp uuid_000000000007ced9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007ced8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cedb
uuid_000000000007ced9:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007cedb:
	mov -776(%RBP),%RSP
	add $-776, %RSP
	jmp uuid_000000000007cede
uuid_000000000007cedc:
	movq -768(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -760(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -752(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -744(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -736(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -728(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -720(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cede:
	mov -592(%RBP),%RSP
	add $-768, %RSP
	jmp uuid_000000000007cee1
uuid_000000000007cedf:
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq $0
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -584(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -552(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -544(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -536(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -528(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -520(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007cee1:
	mov -160(%RBP),%RSP
	add $-584, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007cee2
uuid_000000000007cee4:
	mov %rbp, %rsp
	sub $80, %rsp
	ret
index_SB_typedefs_CL_ArrowNilConsU64AST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf06
	jmp uuid_000000000007cf08
uuid_000000000007cf06:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -336(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007ceeb
	jmp uuid_000000000007ceed
uuid_000000000007ceeb:
	push %RBP
	jmp uuid_000000000007cee8
	jmp uuid_000000000007ceea
uuid_000000000007cee8:
	push %RBP
	mov -272(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cee5
	jmp uuid_000000000007cee7
uuid_000000000007cee5:
	movb $1, -344(%rbp)
uuid_000000000007cee7:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007ceea:
	mov -360(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007ceed:
	mov -352(%RBP),%RSP
	add $-376, %RSP
	mov -344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf03
	jmp uuid_000000000007cf05
uuid_000000000007cf03:
	push %RBP
	mov -224(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cefd
	jmp uuid_000000000007ceff
uuid_000000000007cefd:
	push %RBP
	mov -448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cef4
	jmp uuid_000000000007cef6
uuid_000000000007cef4:
	push %RBP
	jmp uuid_000000000007cef1
	jmp uuid_000000000007cef3
uuid_000000000007cef1:
	push %RBP
	mov -488(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -592(%rbp)
	pushq $uuid_000000000007afbf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007ceee
	jmp uuid_000000000007cef0
uuid_000000000007ceee:
	movb $1, -560(%rbp)
uuid_000000000007cef0:
	mov -584(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007cef3:
	mov -576(%RBP),%RSP
	add $-592, %RSP
uuid_000000000007cef6:
	mov -568(%RBP),%RSP
	add $-592, %RSP
	mov -560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cefa
	jmp uuid_000000000007cefc
uuid_000000000007cefa:
	push %RBP
	mov -440(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cef7
	jmp uuid_000000000007cef9
uuid_000000000007cef7:
	movb $1, -464(%rbp)
uuid_000000000007cef9:
	mov -600(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cefc:
	mov -480(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007ceff:
	mov -472(%RBP),%RSP
	add $-672, %RSP
	mov -464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf00
	jmp uuid_000000000007cf02
uuid_000000000007cf00:
	movb $1, -248(%rbp)
uuid_000000000007cf02:
	mov -384(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cf05:
	mov -264(%RBP),%RSP
	add $-672, %RSP
uuid_000000000007cf08:
	mov -256(%RBP),%RSP
	add $-672, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf62
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf33
	jmp uuid_000000000007cf35
uuid_000000000007cf33:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -848(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf18
	jmp uuid_000000000007cf1a
uuid_000000000007cf18:
	push %RBP
	jmp uuid_000000000007cf15
	jmp uuid_000000000007cf17
uuid_000000000007cf15:
	push %RBP
	mov -832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf0f
	jmp uuid_000000000007cf11
uuid_000000000007cf0f:
	push %RBP
	jmp uuid_000000000007cf0c
	jmp uuid_000000000007cf0e
uuid_000000000007cf0c:
	push %RBP
	mov -888(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cf09
	jmp uuid_000000000007cf0b
uuid_000000000007cf09:
	movb $1, -960(%rbp)
uuid_000000000007cf0b:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007cf0e:
	mov -976(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007cf11:
	mov -968(%RBP),%RSP
	add $-992, %RSP
	mov -960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf12
	jmp uuid_000000000007cf14
uuid_000000000007cf12:
	movb $1, -856(%rbp)
uuid_000000000007cf14:
	mov -880(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007cf17:
	mov -872(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007cf1a:
	mov -864(%RBP),%RSP
	add $-992, %RSP
	mov -856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf30
	jmp uuid_000000000007cf32
uuid_000000000007cf30:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf2a
	jmp uuid_000000000007cf2c
uuid_000000000007cf2a:
	push %RBP
	mov -1064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1168(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf21
	jmp uuid_000000000007cf23
uuid_000000000007cf21:
	push %RBP
	jmp uuid_000000000007cf1e
	jmp uuid_000000000007cf20
uuid_000000000007cf1e:
	push %RBP
	mov -1104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1208(%rbp)
	pushq $uuid_000000000007afbf
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cf1b
	jmp uuid_000000000007cf1d
uuid_000000000007cf1b:
	movb $1, -1176(%rbp)
uuid_000000000007cf1d:
	mov -1200(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007cf20:
	mov -1192(%RBP),%RSP
	add $-1208, %RSP
uuid_000000000007cf23:
	mov -1184(%RBP),%RSP
	add $-1208, %RSP
	mov -1176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf27
	jmp uuid_000000000007cf29
uuid_000000000007cf27:
	push %RBP
	mov -1056(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf24
	jmp uuid_000000000007cf26
uuid_000000000007cf24:
	movb $1, -1080(%rbp)
uuid_000000000007cf26:
	mov -1216(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007cf29:
	mov -1096(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007cf2c:
	mov -1088(%RBP),%RSP
	add $-1288, %RSP
	mov -1080(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf2d
	jmp uuid_000000000007cf2f
uuid_000000000007cf2d:
	movb $1, -760(%rbp)
uuid_000000000007cf2f:
	mov -1000(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007cf32:
	mov -776(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007cf35:
	mov -768(%RBP),%RSP
	add $-1288, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf5f
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -1368(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf3c
	jmp uuid_000000000007cf3e
uuid_000000000007cf3c:
	push %RBP
	jmp uuid_000000000007cf39
	jmp uuid_000000000007cf3b
uuid_000000000007cf39:
	push %RBP
	mov -1304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cf36
	jmp uuid_000000000007cf38
uuid_000000000007cf36:
	movb $1, -1376(%rbp)
uuid_000000000007cf38:
	mov -1400(%RBP),%RSP
	add $-1408, %RSP
uuid_000000000007cf3b:
	mov -1392(%RBP),%RSP
	add $-1408, %RSP
uuid_000000000007cf3e:
	mov -1384(%RBP),%RSP
	add $-1408, %RSP
	mov -1376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf5c
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -1488(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf4e
	jmp uuid_000000000007cf50
uuid_000000000007cf4e:
	push %RBP
	jmp uuid_000000000007cf4b
	jmp uuid_000000000007cf4d
uuid_000000000007cf4b:
	push %RBP
	mov -1472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1592(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf45
	jmp uuid_000000000007cf47
uuid_000000000007cf45:
	push %RBP
	jmp uuid_000000000007cf42
	jmp uuid_000000000007cf44
uuid_000000000007cf42:
	push %RBP
	mov -1528(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cf3f
	jmp uuid_000000000007cf41
uuid_000000000007cf3f:
	movb $1, -1600(%rbp)
uuid_000000000007cf41:
	mov -1624(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007cf44:
	mov -1616(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007cf47:
	mov -1608(%RBP),%RSP
	add $-1632, %RSP
	mov -1600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf48
	jmp uuid_000000000007cf4a
uuid_000000000007cf48:
	movb $1, -1496(%rbp)
uuid_000000000007cf4a:
	mov -1520(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007cf4d:
	mov -1512(%RBP),%RSP
	add $-1632, %RSP
uuid_000000000007cf50:
	mov -1504(%RBP),%RSP
	add $-1632, %RSP
	mov -1496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf59
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	mov -1712(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf56
	push %RBP
	jmp uuid_000000000007cf53
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007cf52
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cf55
uuid_000000000007cf53:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cf51
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cf55:
	mov -1720(%RBP),%RSP
	add $-1720, %RSP
	jmp uuid_000000000007cf58
uuid_000000000007cf56:
uuid_000000000007cf58:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
	jmp uuid_000000000007cf5b
uuid_000000000007cf59:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1632(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cf5b:
	mov -1416(%RBP),%RSP
	add $-1632, %RSP
	jmp uuid_000000000007cf5e
uuid_000000000007cf5c:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-lone-tag : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1408(%rbp)
	mov %RBX, %RBP
	call index_SB_lone_SB_tag_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cf5e:
	mov -1296(%RBP),%RSP
	add $-1408, %RSP
	jmp uuid_000000000007cf61
uuid_000000000007cf5f:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cf61:
	mov -680(%RBP),%RSP
	add $-1288, %RSP
	jmp uuid_000000000007cf64
uuid_000000000007cf62:
#call function index-index-of-tag : Arrow<Cons<String,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call index_SB_index_SB_of_SB_tag_CL_ArrowNilConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-lone-tag : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -376(%rbp)
	mov %RBX, %RBP
	call index_SB_lone_SB_tag_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function index-typedefs : Arrow<Cons<AST,U64>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	movq -80(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	push %RAX
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilConsU64AST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cf64:
	mov -168(%RBP),%RSP
	add $-672, %RSP
	mov %rbp, %rsp
	sub $88, %rsp
	ret
is_SB_macro_SB_head_CL_ArrowU64ConsU64String:
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
uuid_000000000007cfd9:
#call function non-zero : Arrow<MacroList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64MacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007cfda
	jmp uuid_000000000007cfdb
uuid_000000000007cfda:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf86
	jmp uuid_000000000007cf88
uuid_000000000007cf86:
	push %RBP
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq $0
	push %RBP
	mov -720(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf7d
	jmp uuid_000000000007cf7f
uuid_000000000007cf7d:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	jmp uuid_000000000007cf7a
	jmp uuid_000000000007cf7c
uuid_000000000007cf7a:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq $0
	push %RBP
	mov -896(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf74
	jmp uuid_000000000007cf76
uuid_000000000007cf74:
	push %RBP
	mov -888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf71
	jmp uuid_000000000007cf73
uuid_000000000007cf71:
	push %RBP
	mov -880(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1072(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf6b
	jmp uuid_000000000007cf6d
uuid_000000000007cf6b:
	push %RBP
	jmp uuid_000000000007cf68
	jmp uuid_000000000007cf6a
uuid_000000000007cf68:
	push %RBP
	mov -1008(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cf65
	jmp uuid_000000000007cf67
uuid_000000000007cf65:
	movb $1, -1080(%rbp)
uuid_000000000007cf67:
	mov -1104(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007cf6a:
	mov -1096(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007cf6d:
	mov -1088(%RBP),%RSP
	add $-1112, %RSP
	mov -1080(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf6e
	jmp uuid_000000000007cf70
uuid_000000000007cf6e:
	movb $1, -904(%rbp)
uuid_000000000007cf70:
	mov -1000(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007cf73:
	mov -920(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007cf76:
	mov -912(%RBP),%RSP
	add $-1112, %RSP
	mov -904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf77
	jmp uuid_000000000007cf79
uuid_000000000007cf77:
	movb $1, -728(%rbp)
uuid_000000000007cf79:
	mov -824(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007cf7c:
	mov -744(%RBP),%RSP
	add $-1112, %RSP
uuid_000000000007cf7f:
	mov -736(%RBP),%RSP
	add $-1112, %RSP
	mov -728(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf83
	jmp uuid_000000000007cf85
uuid_000000000007cf83:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf80
	jmp uuid_000000000007cf82
uuid_000000000007cf80:
	movb $1, -552(%rbp)
uuid_000000000007cf82:
	mov -1120(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007cf85:
	mov -568(%RBP),%RSP
	add $-1288, %RSP
uuid_000000000007cf88:
	mov -560(%RBP),%RSP
	add $-1288, %RSP
	mov -552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfd6
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -1464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfb6
	jmp uuid_000000000007cfb8
uuid_000000000007cfb6:
	push %RBP
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	pushq -1360(%RBP)
	pushq -1368(%RBP)
	pushq -1376(%RBP)
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	pushq -1448(%RBP)
	pushq -1456(%RBP)
	pushq $0
	push %RBP
	mov -1640(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfad
	jmp uuid_000000000007cfaf
uuid_000000000007cfad:
	push %RBP
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	pushq -1616(%RBP)
	pushq -1624(%RBP)
	pushq -1632(%RBP)
	jmp uuid_000000000007cfaa
	jmp uuid_000000000007cfac
uuid_000000000007cfaa:
	push %RBP
	pushq -1496(%RBP)
	pushq -1504(%RBP)
	pushq -1512(%RBP)
	pushq -1520(%RBP)
	pushq -1528(%RBP)
	pushq -1536(%RBP)
	pushq -1544(%RBP)
	pushq -1552(%RBP)
	pushq -1560(%RBP)
	pushq $0
	push %RBP
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfa4
	jmp uuid_000000000007cfa6
uuid_000000000007cfa4:
	push %RBP
	mov -1808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cfa1
	jmp uuid_000000000007cfa3
uuid_000000000007cfa1:
	push %RBP
	mov -1800(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1992(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf9b
	jmp uuid_000000000007cf9d
uuid_000000000007cf9b:
	push %RBP
	mov -1984(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cf98
	jmp uuid_000000000007cf9a
uuid_000000000007cf98:
	push %RBP
	mov -1976(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf92
	jmp uuid_000000000007cf94
uuid_000000000007cf92:
	push %RBP
	jmp uuid_000000000007cf8f
	jmp uuid_000000000007cf91
uuid_000000000007cf8f:
	push %RBP
	mov -2104(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cf8c
	jmp uuid_000000000007cf8e
uuid_000000000007cf8c:
	movb $1, -2176(%rbp)
uuid_000000000007cf8e:
	mov -2200(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007cf91:
	mov -2192(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007cf94:
	mov -2184(%RBP),%RSP
	add $-2208, %RSP
	mov -2176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf95
	jmp uuid_000000000007cf97
uuid_000000000007cf95:
	movb $1, -2000(%rbp)
uuid_000000000007cf97:
	mov -2096(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007cf9a:
	mov -2016(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007cf9d:
	mov -2008(%RBP),%RSP
	add $-2208, %RSP
	mov -2000(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf9e
	jmp uuid_000000000007cfa0
uuid_000000000007cf9e:
	movb $1, -1824(%rbp)
uuid_000000000007cfa0:
	mov -1920(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007cfa3:
	mov -1840(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007cfa6:
	mov -1832(%RBP),%RSP
	add $-2208, %RSP
	mov -1824(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfa7
	jmp uuid_000000000007cfa9
uuid_000000000007cfa7:
	movb $1, -1648(%rbp)
uuid_000000000007cfa9:
	mov -1744(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007cfac:
	mov -1664(%RBP),%RSP
	add $-2208, %RSP
uuid_000000000007cfaf:
	mov -1656(%RBP),%RSP
	add $-2208, %RSP
	mov -1648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfb3
	jmp uuid_000000000007cfb5
uuid_000000000007cfb3:
	push %RBP
	mov -1304(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cfb0
	jmp uuid_000000000007cfb2
uuid_000000000007cfb0:
	movb $1, -1472(%rbp)
uuid_000000000007cfb2:
	mov -2216(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007cfb5:
	mov -1488(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007cfb8:
	mov -1480(%RBP),%RSP
	add $-2384, %RSP
	mov -1472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfd3
	push %RBP
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfcb
	jmp uuid_000000000007cfcd
uuid_000000000007cfcb:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	pushq -2464(%RBP)
	pushq -2472(%RBP)
	pushq -2480(%RBP)
	pushq -2488(%RBP)
	pushq -2496(%RBP)
	pushq -2504(%RBP)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfc2
	jmp uuid_000000000007cfc4
uuid_000000000007cfc2:
	push %RBP
	pushq -2664(%RBP)
	pushq -2672(%RBP)
	pushq -2680(%RBP)
	pushq -2688(%RBP)
	pushq -2696(%RBP)
	pushq -2704(%RBP)
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	jmp uuid_000000000007cfbf
	jmp uuid_000000000007cfc1
uuid_000000000007cfbf:
	push %RBP
	pushq -2592(%RBP)
	pushq -2600(%RBP)
	pushq -2608(%RBP)
	pushq -2616(%RBP)
	pushq -2624(%RBP)
	pushq -2632(%RBP)
	pushq -2640(%RBP)
	pushq -2648(%RBP)
	pushq -2656(%RBP)
	jmp uuid_000000000007cfbc
	jmp uuid_000000000007cfbe
uuid_000000000007cfbc:
	movb $1, -2744(%rbp)
uuid_000000000007cfbe:
	mov -2840(%RBP),%RSP
	add $-2912, %RSP
uuid_000000000007cfc1:
	mov -2760(%RBP),%RSP
	add $-2912, %RSP
uuid_000000000007cfc4:
	mov -2752(%RBP),%RSP
	add $-2912, %RSP
	mov -2744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfc8
	jmp uuid_000000000007cfca
uuid_000000000007cfc8:
	push %RBP
	mov -2400(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cfc5
	jmp uuid_000000000007cfc7
uuid_000000000007cfc5:
	movb $1, -2568(%rbp)
uuid_000000000007cfc7:
	mov -2920(%RBP),%RSP
	add $-3088, %RSP
uuid_000000000007cfca:
	mov -2584(%RBP),%RSP
	add $-3088, %RSP
uuid_000000000007cfcd:
	mov -2576(%RBP),%RSP
	add $-3088, %RSP
	mov -2568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfd0
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007cfcf
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007cfd2
uuid_000000000007cfd0:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007cfce
	pushq -2848(%rbp)
	pushq -2856(%rbp)
	pushq -2864(%rbp)
	pushq -2872(%rbp)
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007cfd2:
	mov -2392(%RBP),%RSP
	add $-3088, %RSP
	jmp uuid_000000000007cfd5
uuid_000000000007cfd3:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -2208(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfb9
	jmp uuid_000000000007cfbb
uuid_000000000007cfb9:
	movq $1, -200(%rbp)
uuid_000000000007cfbb:
	mov -2392(%RBP),%RSP
	add $-2392, %RSP
	movq -2384(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -2376(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -2368(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -2360(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -2352(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -2344(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -2272(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -2264(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -2256(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -2248(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -2240(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -2232(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -2224(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007cfd5:
	mov -1296(%RBP),%RSP
	add $-2392, %RSP
	jmp uuid_000000000007cfd8
uuid_000000000007cfd6:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
	movq -16(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cf89
	jmp uuid_000000000007cf8b
uuid_000000000007cf89:
	movq $1, -200(%rbp)
uuid_000000000007cf8b:
	mov -1296(%RBP),%RSP
	add $-1296, %RSP
	movq -1288(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1280(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1272(%rbp), %r15
	movq %r15, -176(%rbp)
	movq -1264(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1256(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1248(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1240(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -1232(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -1224(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -1216(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007cfd8:
	mov -376(%RBP),%RSP
	add $-1296, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007cfd9
uuid_000000000007cfdb:
	mov -200(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String:
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov $preprocess_SB_macros_CL_MacroListMacroListCaseNumber1, %r15
	pushq 160(%r15)
	pushq 152(%r15)
	pushq 144(%r15)
	pushq 136(%r15)
	pushq 128(%r15)
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	pushq $0
uuid_000000000007d03c:
#call function non-zero : Arrow<MacroList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64MacroList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d03d
	jmp uuid_000000000007d03e
uuid_000000000007d03d:
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	push %RBP
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq $0
	push %RBP
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfeb
	jmp uuid_000000000007cfed
uuid_000000000007cfeb:
	push %RBP
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfe2
	jmp uuid_000000000007cfe4
uuid_000000000007cfe2:
	push %RBP
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	jmp uuid_000000000007cfdf
	jmp uuid_000000000007cfe1
uuid_000000000007cfdf:
	push %RBP
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	pushq -752(%RBP)
	pushq -760(%RBP)
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	jmp uuid_000000000007cfdc
	jmp uuid_000000000007cfde
uuid_000000000007cfdc:
	movb $1, -872(%rbp)
uuid_000000000007cfde:
	mov -968(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007cfe1:
	mov -888(%RBP),%RSP
	add $-1040, %RSP
uuid_000000000007cfe4:
	mov -880(%RBP),%RSP
	add $-1040, %RSP
	mov -872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cfe8
	jmp uuid_000000000007cfea
uuid_000000000007cfe8:
	push %RBP
	mov -528(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007cfe5
	jmp uuid_000000000007cfe7
uuid_000000000007cfe5:
	movb $1, -696(%rbp)
uuid_000000000007cfe7:
	mov -1048(%RBP),%RSP
	add $-1216, %RSP
uuid_000000000007cfea:
	mov -712(%RBP),%RSP
	add $-1216, %RSP
uuid_000000000007cfed:
	mov -704(%RBP),%RSP
	add $-1216, %RSP
	mov -696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d039
	push %RBP
	jmp uuid_000000000007d036
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d035
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d038
uuid_000000000007d036:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
uuid_000000000007d038:
	mov -1224(%RBP),%RSP
	add $-1224, %RSP
	jmp uuid_000000000007d03b
uuid_000000000007d039:
	movq -1216(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -176(%rbp)
	pushq $0
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	push %RBP
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq $0
	push %RBP
	mov -1376(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cffd
	jmp uuid_000000000007cfff
uuid_000000000007cffd:
	push %RBP
	jmp uuid_000000000007cffa
	jmp uuid_000000000007cffc
uuid_000000000007cffa:
	push %RBP
	mov -1360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1480(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cff4
	jmp uuid_000000000007cff6
uuid_000000000007cff4:
	push %RBP
	jmp uuid_000000000007cff1
	jmp uuid_000000000007cff3
uuid_000000000007cff1:
	push %RBP
	mov -1416(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007cfee
	jmp uuid_000000000007cff0
uuid_000000000007cfee:
	movb $1, -1488(%rbp)
uuid_000000000007cff0:
	mov -1512(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007cff3:
	mov -1504(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007cff6:
	mov -1496(%RBP),%RSP
	add $-1520, %RSP
	mov -1488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007cff7
	jmp uuid_000000000007cff9
uuid_000000000007cff7:
	movb $1, -1384(%rbp)
uuid_000000000007cff9:
	mov -1408(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007cffc:
	mov -1400(%RBP),%RSP
	add $-1520, %RSP
uuid_000000000007cfff:
	mov -1392(%RBP),%RSP
	add $-1520, %RSP
	mov -1384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d025
	push %RBP
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq $0
	push %RBP
	mov -1600(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d01b
	jmp uuid_000000000007d01d
uuid_000000000007d01b:
	push %RBP
	jmp uuid_000000000007d018
	jmp uuid_000000000007d01a
uuid_000000000007d018:
	push %RBP
	mov -1584(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1704(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d012
	jmp uuid_000000000007d014
uuid_000000000007d012:
	push %RBP
	jmp uuid_000000000007d00f
	jmp uuid_000000000007d011
uuid_000000000007d00f:
	push %RBP
	mov -1688(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1808(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d009
	jmp uuid_000000000007d00b
uuid_000000000007d009:
	push %RBP
	jmp uuid_000000000007d006
	jmp uuid_000000000007d008
uuid_000000000007d006:
	push %RBP
	mov -1744(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d003
	jmp uuid_000000000007d005
uuid_000000000007d003:
	movb $1, -1816(%rbp)
uuid_000000000007d005:
	mov -1840(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007d008:
	mov -1832(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007d00b:
	mov -1824(%RBP),%RSP
	add $-1848, %RSP
	mov -1816(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d00c
	jmp uuid_000000000007d00e
uuid_000000000007d00c:
	movb $1, -1712(%rbp)
uuid_000000000007d00e:
	mov -1736(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007d011:
	mov -1728(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007d014:
	mov -1720(%RBP),%RSP
	add $-1848, %RSP
	mov -1712(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d015
	jmp uuid_000000000007d017
uuid_000000000007d015:
	movb $1, -1608(%rbp)
uuid_000000000007d017:
	mov -1632(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007d01a:
	mov -1624(%RBP),%RSP
	add $-1848, %RSP
uuid_000000000007d01d:
	mov -1616(%RBP),%RSP
	add $-1848, %RSP
	mov -1608(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d022
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d021
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d024
uuid_000000000007d022:
	push %RBP
	movq -16(%RBP), %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1848(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d01e
	jmp uuid_000000000007d020
uuid_000000000007d01e:
	movb $1, -1224(%rbp)
uuid_000000000007d020:
	mov -1856(%RBP),%RSP
	add $-1856, %RSP
uuid_000000000007d024:
	mov -1528(%RBP),%RSP
	add $-1856, %RSP
	jmp uuid_000000000007d027
uuid_000000000007d025:
	push %RBP
	movq -16(%RBP), %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	pushq %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -1520(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	andq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d000
	jmp uuid_000000000007d002
uuid_000000000007d000:
	movb $1, -1224(%rbp)
uuid_000000000007d002:
	mov -1528(%RBP),%RSP
	add $-1528, %RSP
uuid_000000000007d027:
	mov -1304(%RBP),%RSP
	add $-1528, %RSP
	push %RBP
	mov -1224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d032
	jmp uuid_000000000007d034
uuid_000000000007d032:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	mov -1736(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d02f
	push %RBP
	pushq -1544(%rbp)
	pushq -1552(%rbp)
	pushq -1560(%rbp)
	pushq -1568(%rbp)
	pushq -1576(%rbp)
	pushq -1584(%rbp)
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	jmp uuid_000000000007d02c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d02b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d02e
uuid_000000000007d02c:
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -960(%RBP)
	popq -952(%RBP)
	popq -944(%RBP)
	popq -936(%RBP)
	popq -928(%RBP)
	popq -920(%RBP)
	popq -912(%RBP)
	popq -904(%RBP)
	popq -896(%RBP)
#call function apply : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call apply_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
#call function extract-uuids : Arrow<Cons<Cons<SourceLocation,Context>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call extract_SB_uuids_CL_ArrowContextConsASTConsContextSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push -232(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d028
	jmp uuid_000000000007d02a
uuid_000000000007d028:
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	popq -1912(%RBP)
	popq -1904(%RBP)
	popq -1896(%RBP)
	popq -1888(%RBP)
	popq -1880(%RBP)
	popq -1872(%RBP)
	popq -1864(%RBP)
	popq -1856(%RBP)
	popq -1848(%RBP)
uuid_000000000007d02a:
	mov -2016(%RBP),%RSP
	add $-2016, %RSP
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	movb $1, -344(%rbp)
uuid_000000000007d02e:
	mov -1744(%RBP),%RSP
	add $-2016, %RSP
	jmp uuid_000000000007d031
uuid_000000000007d02f:
	movq -1216(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1208(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1200(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1192(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1184(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1176(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1168(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -256(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -1120(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -1112(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -1104(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -1096(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -176(%rbp)
uuid_000000000007d031:
	mov -1640(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007d034:
	mov -1536(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007d03b:
	mov -520(%RBP),%RSP
	add $-1736, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d03c
uuid_000000000007d03e:
	push %RBP
#call function not : Arrow<U8,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	mov %RBX, %RBP
	call not_CL_ArrowU64U8
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d040
	jmp uuid_000000000007d042
uuid_000000000007d040:
#call function exit-error : Arrow<Cons<String,AST>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d03f
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call exit_SB_error_CL_ArrowNilConsASTString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d042:
	mov -352(%RBP),%RSP
	add $-352, %RSP
	subq $72, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $96, %rsp
	ret
preprocess_SB_apply_SB_literals_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d064
	jmp uuid_000000000007d066
uuid_000000000007d064:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d049
	jmp uuid_000000000007d04b
uuid_000000000007d049:
	push %RBP
	jmp uuid_000000000007d046
	jmp uuid_000000000007d048
uuid_000000000007d046:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d043
	jmp uuid_000000000007d045
uuid_000000000007d043:
	movb $1, -408(%rbp)
uuid_000000000007d045:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d048:
	mov -424(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d04b:
	mov -416(%RBP),%RSP
	add $-440, %RSP
	mov -408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d061
	jmp uuid_000000000007d063
uuid_000000000007d061:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -520(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d05b
	jmp uuid_000000000007d05d
uuid_000000000007d05b:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d058
	jmp uuid_000000000007d05a
uuid_000000000007d058:
	push %RBP
	mov -504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d052
	jmp uuid_000000000007d054
uuid_000000000007d052:
	push %RBP
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007d04f
	jmp uuid_000000000007d051
uuid_000000000007d04f:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -792(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d04c
	jmp uuid_000000000007d04e
uuid_000000000007d04c:
	movb $1, -704(%rbp)
uuid_000000000007d04e:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d051:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d054:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d055
	jmp uuid_000000000007d057
uuid_000000000007d055:
	movb $1, -528(%rbp)
uuid_000000000007d057:
	mov -624(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d05a:
	mov -544(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d05d:
	mov -536(%RBP),%RSP
	add $-792, %RSP
	mov -528(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d05e
	jmp uuid_000000000007d060
uuid_000000000007d05e:
	movb $1, -312(%rbp)
uuid_000000000007d060:
	mov -448(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d063:
	mov -328(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d066:
	mov -320(%RBP),%RSP
	add $-792, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0f3
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d088
	jmp uuid_000000000007d08a
uuid_000000000007d088:
	push %RBP
	mov -864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -968(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d06d
	jmp uuid_000000000007d06f
uuid_000000000007d06d:
	push %RBP
	jmp uuid_000000000007d06a
	jmp uuid_000000000007d06c
uuid_000000000007d06a:
	push %RBP
	mov -904(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d067
	jmp uuid_000000000007d069
uuid_000000000007d067:
	movb $1, -976(%rbp)
uuid_000000000007d069:
	mov -1000(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007d06c:
	mov -992(%RBP),%RSP
	add $-1008, %RSP
uuid_000000000007d06f:
	mov -984(%RBP),%RSP
	add $-1008, %RSP
	mov -976(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d085
	jmp uuid_000000000007d087
uuid_000000000007d085:
	push %RBP
	mov -856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1088(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d07f
	jmp uuid_000000000007d081
uuid_000000000007d07f:
	push %RBP
	mov -1080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d07c
	jmp uuid_000000000007d07e
uuid_000000000007d07c:
	push %RBP
	mov -1072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d076
	jmp uuid_000000000007d078
uuid_000000000007d076:
	push %RBP
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	jmp uuid_000000000007d073
	jmp uuid_000000000007d075
uuid_000000000007d073:
	push %RBP
	mov -1200(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1360(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d070
	jmp uuid_000000000007d072
uuid_000000000007d070:
	movb $1, -1272(%rbp)
uuid_000000000007d072:
	mov -1352(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007d075:
	mov -1288(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007d078:
	mov -1280(%RBP),%RSP
	add $-1360, %RSP
	mov -1272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d079
	jmp uuid_000000000007d07b
uuid_000000000007d079:
	movb $1, -1096(%rbp)
uuid_000000000007d07b:
	mov -1192(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007d07e:
	mov -1112(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007d081:
	mov -1104(%RBP),%RSP
	add $-1360, %RSP
	mov -1096(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d082
	jmp uuid_000000000007d084
uuid_000000000007d082:
	movb $1, -880(%rbp)
uuid_000000000007d084:
	mov -1016(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007d087:
	mov -896(%RBP),%RSP
	add $-1360, %RSP
uuid_000000000007d08a:
	mov -888(%RBP),%RSP
	add $-1360, %RSP
	mov -880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0f0
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1440(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d091
	jmp uuid_000000000007d093
uuid_000000000007d091:
	push %RBP
	pushq -1384(%RBP)
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	jmp uuid_000000000007d08e
	jmp uuid_000000000007d090
uuid_000000000007d08e:
	push %RBP
	mov -1376(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d08b
	jmp uuid_000000000007d08d
uuid_000000000007d08b:
	movb $1, -1448(%rbp)
uuid_000000000007d08d:
	mov -1528(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007d090:
	mov -1464(%RBP),%RSP
	add $-1536, %RSP
uuid_000000000007d093:
	mov -1456(%RBP),%RSP
	add $-1536, %RSP
	mov -1448(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0ed
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0a1
	jmp uuid_000000000007d0a3
uuid_000000000007d0a1:
	push %RBP
	pushq -1560(%RBP)
	pushq -1568(%RBP)
	pushq -1576(%RBP)
	pushq -1584(%RBP)
	pushq -1592(%RBP)
	pushq -1600(%RBP)
	pushq -1608(%RBP)
	jmp uuid_000000000007d09e
	jmp uuid_000000000007d0a0
uuid_000000000007d09e:
	push %RBP
	mov -1552(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d09b
	jmp uuid_000000000007d09d
uuid_000000000007d09b:
	movb $1, -1624(%rbp)
uuid_000000000007d09d:
	mov -1704(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007d0a0:
	mov -1640(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007d0a3:
	mov -1632(%RBP),%RSP
	add $-1712, %RSP
	mov -1624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0ea
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1792(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0ad
	jmp uuid_000000000007d0af
uuid_000000000007d0ad:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0aa
	jmp uuid_000000000007d0ac
uuid_000000000007d0aa:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0a7
	jmp uuid_000000000007d0a9
uuid_000000000007d0a7:
	movb $1, -1800(%rbp)
uuid_000000000007d0a9:
	mov -1896(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007d0ac:
	mov -1816(%RBP),%RSP
	add $-1968, %RSP
uuid_000000000007d0af:
	mov -1808(%RBP),%RSP
	add $-1968, %RSP
	mov -1800(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0e7
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2048(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0b6
	jmp uuid_000000000007d0b8
uuid_000000000007d0b6:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0b3
	jmp uuid_000000000007d0b5
uuid_000000000007d0b3:
	push %RBP
	mov -2032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0b0
	jmp uuid_000000000007d0b2
uuid_000000000007d0b0:
	movb $1, -2056(%rbp)
uuid_000000000007d0b2:
	mov -2152(%RBP),%RSP
	add $-2224, %RSP
uuid_000000000007d0b5:
	mov -2072(%RBP),%RSP
	add $-2224, %RSP
uuid_000000000007d0b8:
	mov -2064(%RBP),%RSP
	add $-2224, %RSP
	mov -2056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0e4
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0bf
	jmp uuid_000000000007d0c1
uuid_000000000007d0bf:
	push %RBP
	mov -2296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0bc
	jmp uuid_000000000007d0be
uuid_000000000007d0bc:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0b9
	jmp uuid_000000000007d0bb
uuid_000000000007d0b9:
	movb $1, -2312(%rbp)
uuid_000000000007d0bb:
	mov -2408(%RBP),%RSP
	add $-2480, %RSP
uuid_000000000007d0be:
	mov -2328(%RBP),%RSP
	add $-2480, %RSP
uuid_000000000007d0c1:
	mov -2320(%RBP),%RSP
	add $-2480, %RSP
	mov -2312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0e1
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0cb
	jmp uuid_000000000007d0cd
uuid_000000000007d0cb:
	push %RBP
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	jmp uuid_000000000007d0c8
	jmp uuid_000000000007d0ca
uuid_000000000007d0c8:
	push %RBP
	mov -2528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0c5
	jmp uuid_000000000007d0c7
uuid_000000000007d0c5:
	push %RBP
	mov -2520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0c2
	jmp uuid_000000000007d0c4
uuid_000000000007d0c2:
	movb $1, -2568(%rbp)
uuid_000000000007d0c4:
	mov -2696(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007d0c7:
	mov -2616(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007d0ca:
	mov -2584(%RBP),%RSP
	add $-2768, %RSP
uuid_000000000007d0cd:
	mov -2576(%RBP),%RSP
	add $-2768, %RSP
	mov -2568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0de
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2848(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0d4
	jmp uuid_000000000007d0d6
uuid_000000000007d0d4:
	push %RBP
	mov -2840(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d0d1
	jmp uuid_000000000007d0d3
uuid_000000000007d0d1:
	push %RBP
	pushq -2784(%RBP)
	pushq -2792(%RBP)
	pushq -2800(%RBP)
	pushq -2808(%RBP)
	pushq -2816(%RBP)
	pushq -2824(%RBP)
	pushq -2832(%RBP)
	jmp uuid_000000000007d0ce
	jmp uuid_000000000007d0d0
uuid_000000000007d0ce:
	movb $1, -2856(%rbp)
uuid_000000000007d0d0:
	mov -2952(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007d0d3:
	mov -2872(%RBP),%RSP
	add $-3008, %RSP
uuid_000000000007d0d6:
	mov -2864(%RBP),%RSP
	add $-3008, %RSP
	mov -2856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0db
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007d0d8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d0d7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d0da
uuid_000000000007d0d8:
	movq -3088(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -3080(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -3072(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -3064(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -3056(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -3048(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -3040(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -3032(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -3024(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007d0da:
	mov -3016(%RBP),%RSP
	add $-3088, %RSP
	jmp uuid_000000000007d0dd
uuid_000000000007d0db:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2960(%rbp)
	pushq -2968(%rbp)
	pushq -2976(%rbp)
	pushq -2984(%rbp)
	pushq -2992(%rbp)
	pushq -3000(%rbp)
	pushq -3008(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2880(%rbp)
	pushq -2888(%rbp)
	pushq -2896(%rbp)
	pushq -2904(%rbp)
	pushq -2912(%rbp)
	pushq -2920(%rbp)
	pushq -2928(%rbp)
	pushq -2936(%rbp)
	pushq -2944(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0dd:
	mov -2776(%RBP),%RSP
	add $-3008, %RSP
	jmp uuid_000000000007d0e0
uuid_000000000007d0de:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2704(%rbp)
	pushq -2712(%rbp)
	pushq -2720(%rbp)
	pushq -2728(%rbp)
	pushq -2736(%rbp)
	pushq -2744(%rbp)
	pushq -2752(%rbp)
	pushq -2760(%rbp)
	pushq -2768(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	pushq -2648(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0e0:
	mov -2488(%RBP),%RSP
	add $-2768, %RSP
	jmp uuid_000000000007d0e3
uuid_000000000007d0e1:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
	pushq -2464(%rbp)
	pushq -2472(%rbp)
	pushq -2480(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	pushq -2400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0e3:
	mov -2232(%RBP),%RSP
	add $-2480, %RSP
	jmp uuid_000000000007d0e6
uuid_000000000007d0e4:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0e6:
	mov -1976(%RBP),%RSP
	add $-2224, %RSP
	jmp uuid_000000000007d0e9
uuid_000000000007d0e7:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0e9:
	mov -1720(%RBP),%RSP
	add $-1968, %RSP
	jmp uuid_000000000007d0ec
uuid_000000000007d0ea:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $uuid_000000000007d094
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0a4
	jmp uuid_000000000007d0a6
uuid_000000000007d0a4:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1712(%rbp)
	pushq $uuid_000000000007d094
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d095
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007d095
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1728(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1728(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d097
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007d097
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d097
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	pushq -1664(%rbp)
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq $uuid_000000000007d097
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0a6:
	mov -1720(%RBP),%RSP
	add $-1728, %RSP
uuid_000000000007d0ec:
	mov -1544(%RBP),%RSP
	add $-1728, %RSP
	jmp uuid_000000000007d0ef
uuid_000000000007d0ed:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq $uuid_000000000007d094
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d098
	jmp uuid_000000000007d09a
uuid_000000000007d098:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1536(%rbp)
	pushq $uuid_000000000007d094
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d095
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007d095
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1552(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1552(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d096
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d097
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007d097
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d097
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq $uuid_000000000007d097
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d09a:
	mov -1544(%RBP),%RSP
	add $-1552, %RSP
uuid_000000000007d0ef:
	mov -1368(%RBP),%RSP
	add $-1552, %RSP
	jmp uuid_000000000007d0f2
uuid_000000000007d0f0:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1008(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0f2:
	mov -800(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007d0f5
uuid_000000000007d0f3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d0f5:
	mov -232(%RBP),%RSP
	add $-792, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_apply_SB_locations_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d110
	jmp uuid_000000000007d112
uuid_000000000007d110:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d0fd
	jmp uuid_000000000007d0ff
uuid_000000000007d0fd:
	push %RBP
	pushq -344(%RBP)
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	jmp uuid_000000000007d0fa
	jmp uuid_000000000007d0fc
uuid_000000000007d0fa:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -496(%rbp)
	pushq $uuid_000000000007d0f6
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d0f7
	jmp uuid_000000000007d0f9
uuid_000000000007d0f7:
	movb $1, -408(%rbp)
uuid_000000000007d0f9:
	mov -488(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007d0fc:
	mov -424(%RBP),%RSP
	add $-496, %RSP
uuid_000000000007d0ff:
	mov -416(%RBP),%RSP
	add $-496, %RSP
	mov -408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d10d
	jmp uuid_000000000007d10f
uuid_000000000007d10d:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d107
	jmp uuid_000000000007d109
uuid_000000000007d107:
	push %RBP
	jmp uuid_000000000007d104
	jmp uuid_000000000007d106
uuid_000000000007d104:
	push %RBP
	mov -512(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -616(%rbp)
	pushq $uuid_000000000007d100
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d101
	jmp uuid_000000000007d103
uuid_000000000007d101:
	movb $1, -584(%rbp)
uuid_000000000007d103:
	mov -608(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d106:
	mov -600(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d109:
	mov -592(%RBP),%RSP
	add $-616, %RSP
	mov -584(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d10a
	jmp uuid_000000000007d10c
uuid_000000000007d10a:
	movb $1, -312(%rbp)
uuid_000000000007d10c:
	mov -504(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d10f:
	mov -328(%RBP),%RSP
	add $-616, %RSP
uuid_000000000007d112:
	mov -320(%RBP),%RSP
	add $-616, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d182
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d12d
	jmp uuid_000000000007d12f
uuid_000000000007d12d:
	push %RBP
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	pushq -688(%RBP)
	jmp uuid_000000000007d12a
	jmp uuid_000000000007d12c
uuid_000000000007d12a:
	push %RBP
	mov -632(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d127
	jmp uuid_000000000007d129
uuid_000000000007d127:
	movb $1, -704(%rbp)
uuid_000000000007d129:
	mov -784(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d12c:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007d12f:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d17f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -872(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d136
	jmp uuid_000000000007d138
uuid_000000000007d136:
	push %RBP
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	jmp uuid_000000000007d133
	jmp uuid_000000000007d135
uuid_000000000007d133:
	push %RBP
	mov -808(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d130
	jmp uuid_000000000007d132
uuid_000000000007d130:
	movb $1, -880(%rbp)
uuid_000000000007d132:
	mov -960(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007d135:
	mov -896(%RBP),%RSP
	add $-968, %RSP
uuid_000000000007d138:
	mov -888(%RBP),%RSP
	add $-968, %RSP
	mov -880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d17c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d13f
	jmp uuid_000000000007d141
uuid_000000000007d13f:
	push %RBP
	mov -1040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d13c
	jmp uuid_000000000007d13e
uuid_000000000007d13c:
	push %RBP
	mov -1032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d139
	jmp uuid_000000000007d13b
uuid_000000000007d139:
	movb $1, -1056(%rbp)
uuid_000000000007d13b:
	mov -1152(%RBP),%RSP
	add $-1224, %RSP
uuid_000000000007d13e:
	mov -1072(%RBP),%RSP
	add $-1224, %RSP
uuid_000000000007d141:
	mov -1064(%RBP),%RSP
	add $-1224, %RSP
	mov -1056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d179
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1304(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d148
	jmp uuid_000000000007d14a
uuid_000000000007d148:
	push %RBP
	mov -1296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d145
	jmp uuid_000000000007d147
uuid_000000000007d145:
	push %RBP
	mov -1288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d142
	jmp uuid_000000000007d144
uuid_000000000007d142:
	movb $1, -1312(%rbp)
uuid_000000000007d144:
	mov -1408(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d147:
	mov -1328(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d14a:
	mov -1320(%RBP),%RSP
	add $-1480, %RSP
	mov -1312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d176
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d151
	jmp uuid_000000000007d153
uuid_000000000007d151:
	push %RBP
	mov -1552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d14e
	jmp uuid_000000000007d150
uuid_000000000007d14e:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d14b
	jmp uuid_000000000007d14d
uuid_000000000007d14b:
	movb $1, -1568(%rbp)
uuid_000000000007d14d:
	mov -1664(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007d150:
	mov -1584(%RBP),%RSP
	add $-1736, %RSP
uuid_000000000007d153:
	mov -1576(%RBP),%RSP
	add $-1736, %RSP
	mov -1568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d173
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1816(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d15d
	jmp uuid_000000000007d15f
uuid_000000000007d15d:
	push %RBP
	pushq -1792(%RBP)
	pushq -1800(%RBP)
	pushq -1808(%RBP)
	jmp uuid_000000000007d15a
	jmp uuid_000000000007d15c
uuid_000000000007d15a:
	push %RBP
	mov -1784(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d157
	jmp uuid_000000000007d159
uuid_000000000007d157:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d154
	jmp uuid_000000000007d156
uuid_000000000007d154:
	movb $1, -1824(%rbp)
uuid_000000000007d156:
	mov -1952(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007d159:
	mov -1872(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007d15c:
	mov -1840(%RBP),%RSP
	add $-2024, %RSP
uuid_000000000007d15f:
	mov -1832(%RBP),%RSP
	add $-2024, %RSP
	mov -1824(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d170
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2104(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d166
	jmp uuid_000000000007d168
uuid_000000000007d166:
	push %RBP
	mov -2096(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d163
	jmp uuid_000000000007d165
uuid_000000000007d163:
	push %RBP
	pushq -2040(%RBP)
	pushq -2048(%RBP)
	pushq -2056(%RBP)
	pushq -2064(%RBP)
	pushq -2072(%RBP)
	pushq -2080(%RBP)
	pushq -2088(%RBP)
	jmp uuid_000000000007d160
	jmp uuid_000000000007d162
uuid_000000000007d160:
	movb $1, -2112(%rbp)
uuid_000000000007d162:
	mov -2208(%RBP),%RSP
	add $-2264, %RSP
uuid_000000000007d165:
	mov -2128(%RBP),%RSP
	add $-2264, %RSP
uuid_000000000007d168:
	mov -2120(%RBP),%RSP
	add $-2264, %RSP
	mov -2112(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d16d
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007d16a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d169
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d16c
uuid_000000000007d16a:
	movq -2344(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -2336(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -2328(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -2320(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -2312(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -2304(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -2296(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -2288(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -2280(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007d16c:
	mov -2272(%RBP),%RSP
	add $-2344, %RSP
	jmp uuid_000000000007d16f
uuid_000000000007d16d:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2216(%rbp)
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2136(%rbp)
	pushq -2144(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d16f:
	mov -2032(%RBP),%RSP
	add $-2264, %RSP
	jmp uuid_000000000007d172
uuid_000000000007d170:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1960(%rbp)
	pushq -1968(%rbp)
	pushq -1976(%rbp)
	pushq -1984(%rbp)
	pushq -1992(%rbp)
	pushq -2000(%rbp)
	pushq -2008(%rbp)
	pushq -2016(%rbp)
	pushq -2024(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d172:
	mov -1744(%RBP),%RSP
	add $-2024, %RSP
	jmp uuid_000000000007d175
uuid_000000000007d173:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1672(%rbp)
	pushq -1680(%rbp)
	pushq -1688(%rbp)
	pushq -1696(%rbp)
	pushq -1704(%rbp)
	pushq -1712(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1592(%rbp)
	pushq -1600(%rbp)
	pushq -1608(%rbp)
	pushq -1616(%rbp)
	pushq -1624(%rbp)
	pushq -1632(%rbp)
	pushq -1640(%rbp)
	pushq -1648(%rbp)
	pushq -1656(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d175:
	mov -1488(%RBP),%RSP
	add $-1736, %RSP
	jmp uuid_000000000007d178
uuid_000000000007d176:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	pushq -1376(%rbp)
	pushq -1384(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d178:
	mov -1232(%RBP),%RSP
	add $-1480, %RSP
	jmp uuid_000000000007d17b
uuid_000000000007d179:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d17b:
	mov -976(%RBP),%RSP
	add $-1224, %RSP
	jmp uuid_000000000007d17e
uuid_000000000007d17c:
	pushq -968(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d17e:
	mov -800(%RBP),%RSP
	add $-968, %RSP
	jmp uuid_000000000007d181
uuid_000000000007d17f:
	pushq -792(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d181:
	mov -624(%RBP),%RSP
	add $-792, %RSP
	jmp uuid_000000000007d184
uuid_000000000007d182:
	pushq $uuid_000000000007d113
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	push %RBP
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d11d
	jmp uuid_000000000007d11f
uuid_000000000007d11d:
	push %RBP
	mov -688(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d11a
	jmp uuid_000000000007d11c
uuid_000000000007d11a:
	push %RBP
	mov -680(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d117
	jmp uuid_000000000007d119
uuid_000000000007d117:
	push %RBP
	mov -672(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d114
	jmp uuid_000000000007d116
uuid_000000000007d114:
	movb $1, -704(%rbp)
uuid_000000000007d116:
	mov -752(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007d119:
	mov -736(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007d11c:
	mov -720(%RBP),%RSP
	add $-760, %RSP
uuid_000000000007d11f:
	mov -712(%RBP),%RSP
	add $-760, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d124
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d123
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d126
uuid_000000000007d124:
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d120
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -760(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d121
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -744(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d122
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, -624(%rbp)
uuid_000000000007d126:
	mov -664(%RBP),%RSP
	add $-760, %RSP
	pushq -624(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d184:
	mov -232(%RBP),%RSP
	add $-760, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_apply_CL_ArrowASTAST:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1ac
	jmp uuid_000000000007d1ae
uuid_000000000007d1ac:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1a9
	jmp uuid_000000000007d1ab
uuid_000000000007d1a9:
	push %RBP
	mov -288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1a3
	jmp uuid_000000000007d1a5
uuid_000000000007d1a3:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -576(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d191
	jmp uuid_000000000007d193
uuid_000000000007d191:
	push %RBP
	mov -568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d188
	jmp uuid_000000000007d18a
uuid_000000000007d188:
	push %RBP
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007d185
	jmp uuid_000000000007d187
uuid_000000000007d185:
	movb $1, -680(%rbp)
uuid_000000000007d187:
	mov -696(%RBP),%RSP
	add $-720, %RSP
uuid_000000000007d18a:
	mov -688(%RBP),%RSP
	add $-720, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d18e
	jmp uuid_000000000007d190
uuid_000000000007d18e:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d18b
	jmp uuid_000000000007d18d
uuid_000000000007d18b:
	movb $1, -584(%rbp)
uuid_000000000007d18d:
	mov -728(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d190:
	mov -600(%RBP),%RSP
	add $-800, %RSP
uuid_000000000007d193:
	mov -592(%RBP),%RSP
	add $-800, %RSP
	mov -584(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1a0
	jmp uuid_000000000007d1a2
uuid_000000000007d1a0:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -880(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d19a
	jmp uuid_000000000007d19c
uuid_000000000007d19a:
	push %RBP
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	jmp uuid_000000000007d197
	jmp uuid_000000000007d199
uuid_000000000007d197:
	push %RBP
	mov -816(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -976(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d194
	jmp uuid_000000000007d196
uuid_000000000007d194:
	movb $1, -888(%rbp)
uuid_000000000007d196:
	mov -968(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007d199:
	mov -904(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007d19c:
	mov -896(%RBP),%RSP
	add $-976, %RSP
	mov -888(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d19d
	jmp uuid_000000000007d19f
uuid_000000000007d19d:
	movb $1, -488(%rbp)
uuid_000000000007d19f:
	mov -808(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007d1a2:
	mov -504(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007d1a5:
	mov -496(%RBP),%RSP
	add $-976, %RSP
	mov -488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1a6
	jmp uuid_000000000007d1a8
uuid_000000000007d1a6:
	movb $1, -312(%rbp)
uuid_000000000007d1a8:
	mov -408(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007d1ab:
	mov -328(%RBP),%RSP
	add $-976, %RSP
uuid_000000000007d1ae:
	mov -320(%RBP),%RSP
	add $-976, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d368
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1056(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1d0
	jmp uuid_000000000007d1d2
uuid_000000000007d1d0:
	push %RBP
	mov -1048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1152(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1b5
	jmp uuid_000000000007d1b7
uuid_000000000007d1b5:
	push %RBP
	jmp uuid_000000000007d1b2
	jmp uuid_000000000007d1b4
uuid_000000000007d1b2:
	push %RBP
	mov -1088(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d1af
	jmp uuid_000000000007d1b1
uuid_000000000007d1af:
	movb $1, -1160(%rbp)
uuid_000000000007d1b1:
	mov -1184(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007d1b4:
	mov -1176(%RBP),%RSP
	add $-1192, %RSP
uuid_000000000007d1b7:
	mov -1168(%RBP),%RSP
	add $-1192, %RSP
	mov -1160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1cd
	jmp uuid_000000000007d1cf
uuid_000000000007d1cd:
	push %RBP
	mov -1040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1272(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1c7
	jmp uuid_000000000007d1c9
uuid_000000000007d1c7:
	push %RBP
	mov -1264(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1c4
	jmp uuid_000000000007d1c6
uuid_000000000007d1c4:
	push %RBP
	mov -1256(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1be
	jmp uuid_000000000007d1c0
uuid_000000000007d1be:
	push %RBP
	pushq -1392(%RBP)
	pushq -1400(%RBP)
	pushq -1408(%RBP)
	pushq -1416(%RBP)
	pushq -1424(%RBP)
	pushq -1432(%RBP)
	pushq -1440(%RBP)
	jmp uuid_000000000007d1bb
	jmp uuid_000000000007d1bd
uuid_000000000007d1bb:
	push %RBP
	mov -1384(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1544(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d1b8
	jmp uuid_000000000007d1ba
uuid_000000000007d1b8:
	movb $1, -1456(%rbp)
uuid_000000000007d1ba:
	mov -1536(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007d1bd:
	mov -1472(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007d1c0:
	mov -1464(%RBP),%RSP
	add $-1544, %RSP
	mov -1456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1c1
	jmp uuid_000000000007d1c3
uuid_000000000007d1c1:
	movb $1, -1280(%rbp)
uuid_000000000007d1c3:
	mov -1376(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007d1c6:
	mov -1296(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007d1c9:
	mov -1288(%RBP),%RSP
	add $-1544, %RSP
	mov -1280(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1ca
	jmp uuid_000000000007d1cc
uuid_000000000007d1ca:
	movb $1, -1064(%rbp)
uuid_000000000007d1cc:
	mov -1200(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007d1cf:
	mov -1080(%RBP),%RSP
	add $-1544, %RSP
uuid_000000000007d1d2:
	mov -1072(%RBP),%RSP
	add $-1544, %RSP
	mov -1064(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d365
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -1624(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1f4
	jmp uuid_000000000007d1f6
uuid_000000000007d1f4:
	push %RBP
	mov -1616(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1720(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1d9
	jmp uuid_000000000007d1db
uuid_000000000007d1d9:
	push %RBP
	jmp uuid_000000000007d1d6
	jmp uuid_000000000007d1d8
uuid_000000000007d1d6:
	push %RBP
	mov -1656(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d1d3
	jmp uuid_000000000007d1d5
uuid_000000000007d1d3:
	movb $1, -1728(%rbp)
uuid_000000000007d1d5:
	mov -1752(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007d1d8:
	mov -1744(%RBP),%RSP
	add $-1760, %RSP
uuid_000000000007d1db:
	mov -1736(%RBP),%RSP
	add $-1760, %RSP
	mov -1728(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1f1
	jmp uuid_000000000007d1f3
uuid_000000000007d1f1:
	push %RBP
	mov -1608(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1840(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1eb
	jmp uuid_000000000007d1ed
uuid_000000000007d1eb:
	push %RBP
	mov -1832(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1e8
	jmp uuid_000000000007d1ea
uuid_000000000007d1e8:
	push %RBP
	mov -1824(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2016(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1e2
	jmp uuid_000000000007d1e4
uuid_000000000007d1e2:
	push %RBP
	pushq -1960(%RBP)
	pushq -1968(%RBP)
	pushq -1976(%RBP)
	pushq -1984(%RBP)
	pushq -1992(%RBP)
	pushq -2000(%RBP)
	pushq -2008(%RBP)
	jmp uuid_000000000007d1df
	jmp uuid_000000000007d1e1
uuid_000000000007d1df:
	push %RBP
	mov -1952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2112(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d1dc
	jmp uuid_000000000007d1de
uuid_000000000007d1dc:
	movb $1, -2024(%rbp)
uuid_000000000007d1de:
	mov -2104(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d1e1:
	mov -2040(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d1e4:
	mov -2032(%RBP),%RSP
	add $-2112, %RSP
	mov -2024(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1e5
	jmp uuid_000000000007d1e7
uuid_000000000007d1e5:
	movb $1, -1848(%rbp)
uuid_000000000007d1e7:
	mov -1944(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d1ea:
	mov -1864(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d1ed:
	mov -1856(%RBP),%RSP
	add $-2112, %RSP
	mov -1848(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1ee
	jmp uuid_000000000007d1f0
uuid_000000000007d1ee:
	movb $1, -1632(%rbp)
uuid_000000000007d1f0:
	mov -1768(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d1f3:
	mov -1648(%RBP),%RSP
	add $-2112, %RSP
uuid_000000000007d1f6:
	mov -1640(%RBP),%RSP
	add $-2112, %RSP
	mov -1632(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d362
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2192(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d21e
	jmp uuid_000000000007d220
uuid_000000000007d21e:
	push %RBP
	mov -2184(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d21b
	jmp uuid_000000000007d21d
uuid_000000000007d21b:
	push %RBP
	mov -2176(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2368(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d215
	jmp uuid_000000000007d217
uuid_000000000007d215:
	push %RBP
	mov -2360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2464(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d203
	jmp uuid_000000000007d205
uuid_000000000007d203:
	push %RBP
	mov -2456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2560(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d1fa
	jmp uuid_000000000007d1fc
uuid_000000000007d1fa:
	push %RBP
	pushq -2536(%RBP)
	pushq -2544(%RBP)
	pushq -2552(%RBP)
	jmp uuid_000000000007d1f7
	jmp uuid_000000000007d1f9
uuid_000000000007d1f7:
	movb $1, -2568(%rbp)
uuid_000000000007d1f9:
	mov -2584(%RBP),%RSP
	add $-2608, %RSP
uuid_000000000007d1fc:
	mov -2576(%RBP),%RSP
	add $-2608, %RSP
	mov -2568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d200
	jmp uuid_000000000007d202
uuid_000000000007d200:
	push %RBP
	mov -2448(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d1fd
	jmp uuid_000000000007d1ff
uuid_000000000007d1fd:
	movb $1, -2472(%rbp)
uuid_000000000007d1ff:
	mov -2616(%RBP),%RSP
	add $-2688, %RSP
uuid_000000000007d202:
	mov -2488(%RBP),%RSP
	add $-2688, %RSP
uuid_000000000007d205:
	mov -2480(%RBP),%RSP
	add $-2688, %RSP
	mov -2472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d212
	jmp uuid_000000000007d214
uuid_000000000007d212:
	push %RBP
	mov -2352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d20c
	jmp uuid_000000000007d20e
uuid_000000000007d20c:
	push %RBP
	pushq -2712(%RBP)
	pushq -2720(%RBP)
	pushq -2728(%RBP)
	pushq -2736(%RBP)
	pushq -2744(%RBP)
	pushq -2752(%RBP)
	pushq -2760(%RBP)
	jmp uuid_000000000007d209
	jmp uuid_000000000007d20b
uuid_000000000007d209:
	push %RBP
	mov -2704(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2864(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d206
	jmp uuid_000000000007d208
uuid_000000000007d206:
	movb $1, -2776(%rbp)
uuid_000000000007d208:
	mov -2856(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007d20b:
	mov -2792(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007d20e:
	mov -2784(%RBP),%RSP
	add $-2864, %RSP
	mov -2776(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d20f
	jmp uuid_000000000007d211
uuid_000000000007d20f:
	movb $1, -2376(%rbp)
uuid_000000000007d211:
	mov -2696(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007d214:
	mov -2392(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007d217:
	mov -2384(%RBP),%RSP
	add $-2864, %RSP
	mov -2376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d218
	jmp uuid_000000000007d21a
uuid_000000000007d218:
	movb $1, -2200(%rbp)
uuid_000000000007d21a:
	mov -2296(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007d21d:
	mov -2216(%RBP),%RSP
	add $-2864, %RSP
uuid_000000000007d220:
	mov -2208(%RBP),%RSP
	add $-2864, %RSP
	mov -2200(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d35f
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -2944(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d242
	jmp uuid_000000000007d244
uuid_000000000007d242:
	push %RBP
	mov -2936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3040(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d227
	jmp uuid_000000000007d229
uuid_000000000007d227:
	push %RBP
	jmp uuid_000000000007d224
	jmp uuid_000000000007d226
uuid_000000000007d224:
	push %RBP
	mov -2976(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d221
	jmp uuid_000000000007d223
uuid_000000000007d221:
	movb $1, -3048(%rbp)
uuid_000000000007d223:
	mov -3072(%RBP),%RSP
	add $-3080, %RSP
uuid_000000000007d226:
	mov -3064(%RBP),%RSP
	add $-3080, %RSP
uuid_000000000007d229:
	mov -3056(%RBP),%RSP
	add $-3080, %RSP
	mov -3048(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d23f
	jmp uuid_000000000007d241
uuid_000000000007d23f:
	push %RBP
	mov -2928(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3160(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d239
	jmp uuid_000000000007d23b
uuid_000000000007d239:
	push %RBP
	mov -3152(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d236
	jmp uuid_000000000007d238
uuid_000000000007d236:
	push %RBP
	mov -3144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3336(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d230
	jmp uuid_000000000007d232
uuid_000000000007d230:
	push %RBP
	pushq -3280(%RBP)
	pushq -3288(%RBP)
	pushq -3296(%RBP)
	pushq -3304(%RBP)
	pushq -3312(%RBP)
	pushq -3320(%RBP)
	pushq -3328(%RBP)
	jmp uuid_000000000007d22d
	jmp uuid_000000000007d22f
uuid_000000000007d22d:
	push %RBP
	mov -3272(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3432(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d22a
	jmp uuid_000000000007d22c
uuid_000000000007d22a:
	movb $1, -3344(%rbp)
uuid_000000000007d22c:
	mov -3424(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007d22f:
	mov -3360(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007d232:
	mov -3352(%RBP),%RSP
	add $-3432, %RSP
	mov -3344(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d233
	jmp uuid_000000000007d235
uuid_000000000007d233:
	movb $1, -3168(%rbp)
uuid_000000000007d235:
	mov -3264(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007d238:
	mov -3184(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007d23b:
	mov -3176(%RBP),%RSP
	add $-3432, %RSP
	mov -3168(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d23c
	jmp uuid_000000000007d23e
uuid_000000000007d23c:
	movb $1, -2952(%rbp)
uuid_000000000007d23e:
	mov -3088(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007d241:
	mov -2968(%RBP),%RSP
	add $-3432, %RSP
uuid_000000000007d244:
	mov -2960(%RBP),%RSP
	add $-3432, %RSP
	mov -2952(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d35c
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -3512(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d266
	jmp uuid_000000000007d268
uuid_000000000007d266:
	push %RBP
	mov -3504(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3608(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d24b
	jmp uuid_000000000007d24d
uuid_000000000007d24b:
	push %RBP
	jmp uuid_000000000007d248
	jmp uuid_000000000007d24a
uuid_000000000007d248:
	push %RBP
	mov -3544(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d245
	jmp uuid_000000000007d247
uuid_000000000007d245:
	movb $1, -3616(%rbp)
uuid_000000000007d247:
	mov -3640(%RBP),%RSP
	add $-3648, %RSP
uuid_000000000007d24a:
	mov -3632(%RBP),%RSP
	add $-3648, %RSP
uuid_000000000007d24d:
	mov -3624(%RBP),%RSP
	add $-3648, %RSP
	mov -3616(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d263
	jmp uuid_000000000007d265
uuid_000000000007d263:
	push %RBP
	mov -3496(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3728(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d25d
	jmp uuid_000000000007d25f
uuid_000000000007d25d:
	push %RBP
	mov -3720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d25a
	jmp uuid_000000000007d25c
uuid_000000000007d25a:
	push %RBP
	mov -3712(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3904(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d254
	jmp uuid_000000000007d256
uuid_000000000007d254:
	push %RBP
	pushq -3848(%RBP)
	pushq -3856(%RBP)
	pushq -3864(%RBP)
	pushq -3872(%RBP)
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	jmp uuid_000000000007d251
	jmp uuid_000000000007d253
uuid_000000000007d251:
	push %RBP
	mov -3840(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4000(%rbp)
	pushq $uuid_0000000000079639
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d24e
	jmp uuid_000000000007d250
uuid_000000000007d24e:
	movb $1, -3912(%rbp)
uuid_000000000007d250:
	mov -3992(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007d253:
	mov -3928(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007d256:
	mov -3920(%RBP),%RSP
	add $-4000, %RSP
	mov -3912(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d257
	jmp uuid_000000000007d259
uuid_000000000007d257:
	movb $1, -3736(%rbp)
uuid_000000000007d259:
	mov -3832(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007d25c:
	mov -3752(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007d25f:
	mov -3744(%RBP),%RSP
	add $-4000, %RSP
	mov -3736(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d260
	jmp uuid_000000000007d262
uuid_000000000007d260:
	movb $1, -3520(%rbp)
uuid_000000000007d262:
	mov -3656(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007d265:
	mov -3536(%RBP),%RSP
	add $-4000, %RSP
uuid_000000000007d268:
	mov -3528(%RBP),%RSP
	add $-4000, %RSP
	mov -3520(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d359
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4080(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d281
	jmp uuid_000000000007d283
uuid_000000000007d281:
	push %RBP
	mov -4072(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4176(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d26f
	jmp uuid_000000000007d271
uuid_000000000007d26f:
	push %RBP
	jmp uuid_000000000007d26c
	jmp uuid_000000000007d26e
uuid_000000000007d26c:
	push %RBP
	mov -4112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d269
	jmp uuid_000000000007d26b
uuid_000000000007d269:
	movb $1, -4184(%rbp)
uuid_000000000007d26b:
	mov -4208(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d26e:
	mov -4200(%RBP),%RSP
	add $-4216, %RSP
uuid_000000000007d271:
	mov -4192(%RBP),%RSP
	add $-4216, %RSP
	mov -4184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d27e
	jmp uuid_000000000007d280
uuid_000000000007d27e:
	push %RBP
	mov -4064(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4296(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d278
	jmp uuid_000000000007d27a
uuid_000000000007d278:
	push %RBP
	pushq -4240(%RBP)
	pushq -4248(%RBP)
	pushq -4256(%RBP)
	pushq -4264(%RBP)
	pushq -4272(%RBP)
	pushq -4280(%RBP)
	pushq -4288(%RBP)
	jmp uuid_000000000007d275
	jmp uuid_000000000007d277
uuid_000000000007d275:
	push %RBP
	mov -4232(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4392(%rbp)
	pushq $uuid_0000000000079955
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d272
	jmp uuid_000000000007d274
uuid_000000000007d272:
	movb $1, -4304(%rbp)
uuid_000000000007d274:
	mov -4384(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007d277:
	mov -4320(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007d27a:
	mov -4312(%RBP),%RSP
	add $-4392, %RSP
	mov -4304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d27b
	jmp uuid_000000000007d27d
uuid_000000000007d27b:
	movb $1, -4088(%rbp)
uuid_000000000007d27d:
	mov -4224(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007d280:
	mov -4104(%RBP),%RSP
	add $-4392, %RSP
uuid_000000000007d283:
	mov -4096(%RBP),%RSP
	add $-4392, %RSP
	mov -4088(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d356
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4472(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d29c
	jmp uuid_000000000007d29e
uuid_000000000007d29c:
	push %RBP
	mov -4464(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4568(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d28a
	jmp uuid_000000000007d28c
uuid_000000000007d28a:
	push %RBP
	jmp uuid_000000000007d287
	jmp uuid_000000000007d289
uuid_000000000007d287:
	push %RBP
	mov -4504(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d284
	jmp uuid_000000000007d286
uuid_000000000007d284:
	movb $1, -4576(%rbp)
uuid_000000000007d286:
	mov -4600(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007d289:
	mov -4592(%RBP),%RSP
	add $-4608, %RSP
uuid_000000000007d28c:
	mov -4584(%RBP),%RSP
	add $-4608, %RSP
	mov -4576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d299
	jmp uuid_000000000007d29b
uuid_000000000007d299:
	push %RBP
	mov -4456(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -4688(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d293
	jmp uuid_000000000007d295
uuid_000000000007d293:
	push %RBP
	pushq -4632(%RBP)
	pushq -4640(%RBP)
	pushq -4648(%RBP)
	pushq -4656(%RBP)
	pushq -4664(%RBP)
	pushq -4672(%RBP)
	pushq -4680(%RBP)
	jmp uuid_000000000007d290
	jmp uuid_000000000007d292
uuid_000000000007d290:
	push %RBP
	mov -4624(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4784(%rbp)
	pushq $uuid_0000000000079955
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d28d
	jmp uuid_000000000007d28f
uuid_000000000007d28d:
	movb $1, -4696(%rbp)
uuid_000000000007d28f:
	mov -4776(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007d292:
	mov -4712(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007d295:
	mov -4704(%RBP),%RSP
	add $-4784, %RSP
	mov -4696(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d296
	jmp uuid_000000000007d298
uuid_000000000007d296:
	movb $1, -4480(%rbp)
uuid_000000000007d298:
	mov -4616(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007d29b:
	mov -4496(%RBP),%RSP
	add $-4784, %RSP
uuid_000000000007d29e:
	mov -4488(%RBP),%RSP
	add $-4784, %RSP
	mov -4480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d353
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -4864(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2a5
	jmp uuid_000000000007d2a7
uuid_000000000007d2a5:
	push %RBP
	pushq -4808(%RBP)
	pushq -4816(%RBP)
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq -4840(%RBP)
	pushq -4848(%RBP)
	pushq -4856(%RBP)
	jmp uuid_000000000007d2a2
	jmp uuid_000000000007d2a4
uuid_000000000007d2a2:
	push %RBP
	mov -4800(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d29f
	jmp uuid_000000000007d2a1
uuid_000000000007d29f:
	movb $1, -4872(%rbp)
uuid_000000000007d2a1:
	mov -4952(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007d2a4:
	mov -4888(%RBP),%RSP
	add $-4960, %RSP
uuid_000000000007d2a7:
	mov -4880(%RBP),%RSP
	add $-4960, %RSP
	mov -4872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d350
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5040(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2c4
	jmp uuid_000000000007d2c6
uuid_000000000007d2c4:
	push %RBP
	pushq -4984(%RBP)
	pushq -4992(%RBP)
	pushq -5000(%RBP)
	pushq -5008(%RBP)
	pushq -5016(%RBP)
	pushq -5024(%RBP)
	pushq -5032(%RBP)
	jmp uuid_000000000007d2c1
	jmp uuid_000000000007d2c3
uuid_000000000007d2c1:
	push %RBP
	mov -4976(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d2be
	jmp uuid_000000000007d2c0
uuid_000000000007d2be:
	movb $1, -5048(%rbp)
uuid_000000000007d2c0:
	mov -5128(%RBP),%RSP
	add $-5136, %RSP
uuid_000000000007d2c3:
	mov -5064(%RBP),%RSP
	add $-5136, %RSP
uuid_000000000007d2c6:
	mov -5056(%RBP),%RSP
	add $-5136, %RSP
	mov -5048(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d34d
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5216(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2ec
	jmp uuid_000000000007d2ee
uuid_000000000007d2ec:
	push %RBP
	mov -5208(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2e9
	jmp uuid_000000000007d2eb
uuid_000000000007d2e9:
	push %RBP
	mov -5200(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5392(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2e3
	jmp uuid_000000000007d2e5
uuid_000000000007d2e3:
	push %RBP
	pushq -5336(%RBP)
	pushq -5344(%RBP)
	pushq -5352(%RBP)
	pushq -5360(%RBP)
	pushq -5368(%RBP)
	pushq -5376(%RBP)
	pushq -5384(%RBP)
	jmp uuid_000000000007d2e0
	jmp uuid_000000000007d2e2
uuid_000000000007d2e0:
	push %RBP
	mov -5328(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d2dd
	jmp uuid_000000000007d2df
uuid_000000000007d2dd:
	movb $1, -5400(%rbp)
uuid_000000000007d2df:
	mov -5480(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007d2e2:
	mov -5416(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007d2e5:
	mov -5408(%RBP),%RSP
	add $-5488, %RSP
	mov -5400(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2e6
	jmp uuid_000000000007d2e8
uuid_000000000007d2e6:
	movb $1, -5224(%rbp)
uuid_000000000007d2e8:
	mov -5320(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007d2eb:
	mov -5240(%RBP),%RSP
	add $-5488, %RSP
uuid_000000000007d2ee:
	mov -5232(%RBP),%RSP
	add $-5488, %RSP
	mov -5224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d34a
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -5568(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d30a
	jmp uuid_000000000007d30c
uuid_000000000007d30a:
	push %RBP
	mov -5560(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d307
	jmp uuid_000000000007d309
uuid_000000000007d307:
	push %RBP
	mov -5552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5744(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d301
	jmp uuid_000000000007d303
uuid_000000000007d301:
	push %RBP
	mov -5736(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2fe
	jmp uuid_000000000007d300
uuid_000000000007d2fe:
	push %RBP
	mov -5728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -5920(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2f8
	jmp uuid_000000000007d2fa
uuid_000000000007d2f8:
	push %RBP
	pushq -5864(%RBP)
	pushq -5872(%RBP)
	pushq -5880(%RBP)
	pushq -5888(%RBP)
	pushq -5896(%RBP)
	pushq -5904(%RBP)
	pushq -5912(%RBP)
	jmp uuid_000000000007d2f5
	jmp uuid_000000000007d2f7
uuid_000000000007d2f5:
	push %RBP
	mov -5856(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d2f2
	jmp uuid_000000000007d2f4
uuid_000000000007d2f2:
	movb $1, -5928(%rbp)
uuid_000000000007d2f4:
	mov -6008(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007d2f7:
	mov -5944(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007d2fa:
	mov -5936(%RBP),%RSP
	add $-6016, %RSP
	mov -5928(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2fb
	jmp uuid_000000000007d2fd
uuid_000000000007d2fb:
	movb $1, -5752(%rbp)
uuid_000000000007d2fd:
	mov -5848(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007d300:
	mov -5768(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007d303:
	mov -5760(%RBP),%RSP
	add $-6016, %RSP
	mov -5752(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d304
	jmp uuid_000000000007d306
uuid_000000000007d304:
	movb $1, -5576(%rbp)
uuid_000000000007d306:
	mov -5672(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007d309:
	mov -5592(%RBP),%RSP
	add $-6016, %RSP
uuid_000000000007d30c:
	mov -5584(%RBP),%RSP
	add $-6016, %RSP
	mov -5576(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d347
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6096(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d316
	jmp uuid_000000000007d318
uuid_000000000007d316:
	push %RBP
	mov -6088(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d313
	jmp uuid_000000000007d315
uuid_000000000007d313:
	push %RBP
	mov -6080(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d310
	jmp uuid_000000000007d312
uuid_000000000007d310:
	movb $1, -6104(%rbp)
uuid_000000000007d312:
	mov -6200(%RBP),%RSP
	add $-6272, %RSP
uuid_000000000007d315:
	mov -6120(%RBP),%RSP
	add $-6272, %RSP
uuid_000000000007d318:
	mov -6112(%RBP),%RSP
	add $-6272, %RSP
	mov -6104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d344
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d31f
	jmp uuid_000000000007d321
uuid_000000000007d31f:
	push %RBP
	mov -6344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d31c
	jmp uuid_000000000007d31e
uuid_000000000007d31c:
	push %RBP
	mov -6336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d319
	jmp uuid_000000000007d31b
uuid_000000000007d319:
	movb $1, -6360(%rbp)
uuid_000000000007d31b:
	mov -6456(%RBP),%RSP
	add $-6528, %RSP
uuid_000000000007d31e:
	mov -6376(%RBP),%RSP
	add $-6528, %RSP
uuid_000000000007d321:
	mov -6368(%RBP),%RSP
	add $-6528, %RSP
	mov -6360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d341
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6608(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d32b
	jmp uuid_000000000007d32d
uuid_000000000007d32b:
	push %RBP
	pushq -6584(%RBP)
	pushq -6592(%RBP)
	pushq -6600(%RBP)
	jmp uuid_000000000007d328
	jmp uuid_000000000007d32a
uuid_000000000007d328:
	push %RBP
	mov -6576(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d325
	jmp uuid_000000000007d327
uuid_000000000007d325:
	push %RBP
	mov -6568(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d322
	jmp uuid_000000000007d324
uuid_000000000007d322:
	movb $1, -6616(%rbp)
uuid_000000000007d324:
	mov -6744(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007d327:
	mov -6664(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007d32a:
	mov -6632(%RBP),%RSP
	add $-6816, %RSP
uuid_000000000007d32d:
	mov -6624(%RBP),%RSP
	add $-6816, %RSP
	mov -6616(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d33e
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -6896(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d334
	jmp uuid_000000000007d336
uuid_000000000007d334:
	push %RBP
	mov -6888(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d331
	jmp uuid_000000000007d333
uuid_000000000007d331:
	push %RBP
	pushq -6832(%RBP)
	pushq -6840(%RBP)
	pushq -6848(%RBP)
	pushq -6856(%RBP)
	pushq -6864(%RBP)
	pushq -6872(%RBP)
	pushq -6880(%RBP)
	jmp uuid_000000000007d32e
	jmp uuid_000000000007d330
uuid_000000000007d32e:
	movb $1, -6904(%rbp)
uuid_000000000007d330:
	mov -7000(%RBP),%RSP
	add $-7056, %RSP
uuid_000000000007d333:
	mov -6920(%RBP),%RSP
	add $-7056, %RSP
uuid_000000000007d336:
	mov -6912(%RBP),%RSP
	add $-7056, %RSP
	mov -6904(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d33b
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	jmp uuid_000000000007d338
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d337
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d33a
uuid_000000000007d338:
	movq -7136(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -7128(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -7120(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -7112(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -7104(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -7096(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -7088(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -7080(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -7072(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007d33a:
	mov -7064(%RBP),%RSP
	add $-7136, %RSP
	jmp uuid_000000000007d33d
uuid_000000000007d33b:
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7008(%rbp)
	pushq -7016(%rbp)
	pushq -7024(%rbp)
	pushq -7032(%rbp)
	pushq -7040(%rbp)
	pushq -7048(%rbp)
	pushq -7056(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6928(%rbp)
	pushq -6936(%rbp)
	pushq -6944(%rbp)
	pushq -6952(%rbp)
	pushq -6960(%rbp)
	pushq -6968(%rbp)
	pushq -6976(%rbp)
	pushq -6984(%rbp)
	pushq -6992(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d33d:
	mov -6824(%RBP),%RSP
	add $-7056, %RSP
	jmp uuid_000000000007d340
uuid_000000000007d33e:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6752(%rbp)
	pushq -6760(%rbp)
	pushq -6768(%rbp)
	pushq -6776(%rbp)
	pushq -6784(%rbp)
	pushq -6792(%rbp)
	pushq -6800(%rbp)
	pushq -6808(%rbp)
	pushq -6816(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6672(%rbp)
	pushq -6680(%rbp)
	pushq -6688(%rbp)
	pushq -6696(%rbp)
	pushq -6704(%rbp)
	pushq -6712(%rbp)
	pushq -6720(%rbp)
	pushq -6728(%rbp)
	pushq -6736(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -6640(%rbp)
	pushq -6648(%rbp)
	pushq -6656(%rbp)
	pushq $5
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d340:
	mov -6536(%RBP),%RSP
	add $-6816, %RSP
	jmp uuid_000000000007d343
uuid_000000000007d341:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6464(%rbp)
	pushq -6472(%rbp)
	pushq -6480(%rbp)
	pushq -6488(%rbp)
	pushq -6496(%rbp)
	pushq -6504(%rbp)
	pushq -6512(%rbp)
	pushq -6520(%rbp)
	pushq -6528(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6384(%rbp)
	pushq -6392(%rbp)
	pushq -6400(%rbp)
	pushq -6408(%rbp)
	pushq -6416(%rbp)
	pushq -6424(%rbp)
	pushq -6432(%rbp)
	pushq -6440(%rbp)
	pushq -6448(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d343:
	mov -6280(%RBP),%RSP
	add $-6528, %RSP
	jmp uuid_000000000007d346
uuid_000000000007d344:
#call function + : Arrow<Cons<AST,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6208(%rbp)
	pushq -6216(%rbp)
	pushq -6224(%rbp)
	pushq -6232(%rbp)
	pushq -6240(%rbp)
	pushq -6248(%rbp)
	pushq -6256(%rbp)
	pushq -6264(%rbp)
	pushq -6272(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6128(%rbp)
	pushq -6136(%rbp)
	pushq -6144(%rbp)
	pushq -6152(%rbp)
	pushq -6160(%rbp)
	pushq -6168(%rbp)
	pushq -6176(%rbp)
	pushq -6184(%rbp)
	pushq -6192(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call _AD__CL_ArrowASTConsASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	push -176(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d346:
	mov -6024(%RBP),%RSP
	add $-6272, %RSP
	jmp uuid_000000000007d349
uuid_000000000007d347:
	push %RBP
#call function is-macro-head : Arrow<Cons<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $2
	mov %RBX, %RBP
	call is_SB_macro_SB_head_CL_ArrowU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d30d
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5952(%rbp)
	pushq -5960(%rbp)
	pushq -5968(%rbp)
	pushq -5976(%rbp)
	pushq -5984(%rbp)
	pushq -5992(%rbp)
	pushq -6000(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5776(%rbp)
	pushq -5784(%rbp)
	pushq -5792(%rbp)
	pushq -5800(%rbp)
	pushq -5808(%rbp)
	pushq -5816(%rbp)
	pushq -5824(%rbp)
	pushq -5832(%rbp)
	pushq -5840(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5600(%rbp)
	pushq -5608(%rbp)
	pushq -5616(%rbp)
	pushq -5624(%rbp)
	pushq -5632(%rbp)
	pushq -5640(%rbp)
	pushq -5648(%rbp)
	pushq -5656(%rbp)
	pushq -5664(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007d30f
uuid_000000000007d30d:
#call function preprocess-apply-hard : Arrow<Cons<Cons<String,U64>,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6016(%rbp)
	pushq $2
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	movq -6096(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -6088(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -6080(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -6072(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -6064(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -6056(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -6048(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -6040(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -6032(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007d30f:
	mov -6024(%RBP),%RSP
	add $-6096, %RSP
uuid_000000000007d349:
	mov -5496(%RBP),%RSP
	add $-6096, %RSP
	jmp uuid_000000000007d34c
uuid_000000000007d34a:
	push %RBP
#call function is-macro-head : Arrow<Cons<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	mov %RBX, %RBP
	call is_SB_macro_SB_head_CL_ArrowU64ConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2ef
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5424(%rbp)
	pushq -5432(%rbp)
	pushq -5440(%rbp)
	pushq -5448(%rbp)
	pushq -5456(%rbp)
	pushq -5464(%rbp)
	pushq -5472(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	pushq -5264(%rbp)
	pushq -5272(%rbp)
	pushq -5280(%rbp)
	pushq -5288(%rbp)
	pushq -5296(%rbp)
	pushq -5304(%rbp)
	pushq -5312(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	jmp uuid_000000000007d2f1
uuid_000000000007d2ef:
#call function preprocess-apply-hard : Arrow<Cons<Cons<String,U64>,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5488(%rbp)
	pushq $1
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_hard_CL_ArrowASTConsASTConsU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	push -120(%RSP)
	movq -5568(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -5560(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -5552(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -5544(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -5536(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -5528(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -5520(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -5512(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -5504(%rbp), %r15
	movq %r15, -88(%rbp)
uuid_000000000007d2f1:
	mov -5496(%RBP),%RSP
	add $-5568, %RSP
uuid_000000000007d34c:
	mov -5144(%RBP),%RSP
	add $-5568, %RSP
	jmp uuid_000000000007d34f
uuid_000000000007d34d:
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007d2da:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2db
	jmp uuid_000000000007d2dc
uuid_000000000007d2db:
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	push %RBP
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq $0
	push %RBP
	mov -5288(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2d0
	jmp uuid_000000000007d2d2
uuid_000000000007d2d0:
	push %RBP
	pushq -5264(%RBP)
	pushq -5272(%RBP)
	pushq -5280(%RBP)
	jmp uuid_000000000007d2cd
	jmp uuid_000000000007d2cf
uuid_000000000007d2cd:
	push %RBP
	mov -5256(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d2ca
	jmp uuid_000000000007d2cc
uuid_000000000007d2ca:
	push %RBP
	mov -5248(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2c7
	jmp uuid_000000000007d2c9
uuid_000000000007d2c7:
	movb $1, -5296(%rbp)
uuid_000000000007d2c9:
	mov -5360(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007d2cc:
	mov -5344(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007d2cf:
	mov -5312(%RBP),%RSP
	add $-5408, %RSP
uuid_000000000007d2d2:
	mov -5304(%RBP),%RSP
	add $-5408, %RSP
	mov -5296(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2d7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d2d6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d2d9
uuid_000000000007d2d7:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5136(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2d3
	movq -5408(%rbp), %r15
	movq %r15, -5184(%rbp)
	movq -5400(%rbp), %r15
	movq %r15, -5176(%rbp)
	movq -5392(%rbp), %r15
	movq %r15, -5168(%rbp)
	movq -5384(%rbp), %r15
	movq %r15, -5160(%rbp)
	movq -5376(%rbp), %r15
	movq %r15, -5152(%rbp)
	movq -5368(%rbp), %r15
	movq %r15, -5144(%rbp)
	jmp uuid_000000000007d2d5
uuid_000000000007d2d3:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5136(%rbp)
	pushq -5352(%rbp)
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5424(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5424(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -5320(%rbp)
	pushq -5328(%rbp)
	pushq -5336(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -5184(%RBP)
	popq -5176(%RBP)
	popq -5168(%RBP)
	popq -5160(%RBP)
	popq -5152(%RBP)
	popq -5144(%RBP)
uuid_000000000007d2d5:
	mov -5416(%RBP),%RSP
	add $-5424, %RSP
uuid_000000000007d2d9:
	mov -5240(%RBP),%RSP
	add $-5424, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d2da
uuid_000000000007d2dc:
uuid_000000000007d34f:
	mov -4968(%RBP),%RSP
	add $-5184, %RSP
	jmp uuid_000000000007d352
uuid_000000000007d350:
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007d2bb:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2bc
	jmp uuid_000000000007d2bd
uuid_000000000007d2bc:
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4984(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	push %RBP
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq $0
	push %RBP
	mov -5112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2b1
	jmp uuid_000000000007d2b3
uuid_000000000007d2b1:
	push %RBP
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	pushq -5104(%RBP)
	jmp uuid_000000000007d2ae
	jmp uuid_000000000007d2b0
uuid_000000000007d2ae:
	push %RBP
	mov -5080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d2ab
	jmp uuid_000000000007d2ad
uuid_000000000007d2ab:
	push %RBP
	mov -5072(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d2a8
	jmp uuid_000000000007d2aa
uuid_000000000007d2a8:
	movb $1, -5120(%rbp)
uuid_000000000007d2aa:
	mov -5184(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007d2ad:
	mov -5168(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007d2b0:
	mov -5136(%RBP),%RSP
	add $-5232, %RSP
uuid_000000000007d2b3:
	mov -5128(%RBP),%RSP
	add $-5232, %RSP
	mov -5120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d2b8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d2b7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d2ba
uuid_000000000007d2b8:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -5176(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d2b4
	movq -5232(%rbp), %r15
	movq %r15, -5008(%rbp)
	movq -5224(%rbp), %r15
	movq %r15, -5000(%rbp)
	movq -5216(%rbp), %r15
	movq %r15, -4992(%rbp)
	movq -5208(%rbp), %r15
	movq %r15, -4984(%rbp)
	movq -5200(%rbp), %r15
	movq %r15, -4976(%rbp)
	movq -5192(%rbp), %r15
	movq %r15, -4968(%rbp)
	jmp uuid_000000000007d2b6
uuid_000000000007d2b4:
#call function remove-suffix : Arrow<Cons<String,String>,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4960(%rbp)
	pushq -5176(%rbp)
	mov %RBX, %RBP
	call remove_SB_suffix_CL_ArrowStringConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5248(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4896(%rbp)
	pushq -4904(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -5248(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5160(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -5008(%RBP)
	popq -5000(%RBP)
	popq -4992(%RBP)
	popq -4984(%RBP)
	popq -4976(%RBP)
	popq -4968(%RBP)
uuid_000000000007d2b6:
	mov -5240(%RBP),%RSP
	add $-5248, %RSP
uuid_000000000007d2ba:
	mov -5064(%RBP),%RSP
	add $-5248, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d2bb
uuid_000000000007d2bd:
uuid_000000000007d352:
	mov -4792(%RBP),%RSP
	add $-5008, %RSP
	jmp uuid_000000000007d355
uuid_000000000007d353:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079955
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4608(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d355:
	mov -4400(%RBP),%RSP
	add $-4784, %RSP
	jmp uuid_000000000007d358
uuid_000000000007d356:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079955
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4216(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d358:
	mov -4008(%RBP),%RSP
	add $-4392, %RSP
	jmp uuid_000000000007d35b
uuid_000000000007d359:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079639
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -3952(%rbp)
	pushq -3960(%rbp)
	pushq -3968(%rbp)
	pushq -3976(%rbp)
	pushq -3984(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3760(%rbp)
	pushq -3768(%rbp)
	pushq -3776(%rbp)
	pushq -3784(%rbp)
	pushq -3792(%rbp)
	pushq -3800(%rbp)
	pushq -3808(%rbp)
	pushq -3816(%rbp)
	pushq -3824(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3648(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d35b:
	mov -3440(%RBP),%RSP
	add $-4000, %RSP
	jmp uuid_000000000007d35e
uuid_000000000007d35c:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079639
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3368(%rbp)
	pushq -3376(%rbp)
	pushq -3384(%rbp)
	pushq -3392(%rbp)
	pushq -3400(%rbp)
	pushq -3408(%rbp)
	pushq -3416(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3192(%rbp)
	pushq -3200(%rbp)
	pushq -3208(%rbp)
	pushq -3216(%rbp)
	pushq -3224(%rbp)
	pushq -3232(%rbp)
	pushq -3240(%rbp)
	pushq -3248(%rbp)
	pushq -3256(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3080(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d35e:
	mov -2872(%RBP),%RSP
	add $-3432, %RSP
	jmp uuid_000000000007d361
uuid_000000000007d35f:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079639
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2800(%rbp)
	pushq -2808(%rbp)
	pushq -2816(%rbp)
	pushq -2824(%rbp)
	pushq -2832(%rbp)
	pushq -2840(%rbp)
	pushq -2848(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $7
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2624(%rbp)
	pushq -2632(%rbp)
	pushq -2640(%rbp)
	pushq -2648(%rbp)
	pushq -2656(%rbp)
	pushq -2664(%rbp)
	pushq -2672(%rbp)
	pushq -2680(%rbp)
	pushq -2688(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -2592(%rbp)
	pushq -2600(%rbp)
	pushq -2608(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2224(%rbp)
	pushq -2232(%rbp)
	pushq -2240(%rbp)
	pushq -2248(%rbp)
	pushq -2256(%rbp)
	pushq -2264(%rbp)
	pushq -2272(%rbp)
	pushq -2280(%rbp)
	pushq -2288(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d361:
	mov -2120(%RBP),%RSP
	add $-2864, %RSP
	jmp uuid_000000000007d364
uuid_000000000007d362:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2048(%rbp)
	pushq -2056(%rbp)
	pushq -2064(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	pushq -1888(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1760(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d364:
	mov -1552(%RBP),%RSP
	add $-2112, %RSP
	jmp uuid_000000000007d367
uuid_000000000007d365:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	pushq -1336(%rbp)
	pushq -1344(%rbp)
	pushq -1352(%rbp)
	pushq -1360(%rbp)
	pushq -1368(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1192(%rbp)
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d367:
	mov -984(%RBP),%RSP
	add $-1544, %RSP
	jmp uuid_000000000007d36a
uuid_000000000007d368:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function unique : Arrow<Token,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
	pushq -952(%rbp)
	pushq -960(%rbp)
	mov %RBX, %RBP
	call unique_CL_ArrowTokenToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	push -88(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
uuid_000000000007d36a:
	mov -232(%RBP),%RSP
	add $-976, %RSP
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
preprocess_SB_is_SB_suffixed_CL_ArrowU64String:
	pushq $0
	mov $parse_SB_suffixes_CL_SfxListSfxListCaseNumber1, %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
uuid_000000000007d37e:
#call function non-zero : Arrow<SfxList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64SfxList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d37f
	jmp uuid_000000000007d380
uuid_000000000007d37f:
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d374
	jmp uuid_000000000007d376
uuid_000000000007d374:
	push %RBP
	pushq -152(%RBP)
	pushq -160(%RBP)
	pushq -168(%RBP)
	jmp uuid_000000000007d371
	jmp uuid_000000000007d373
uuid_000000000007d371:
	push %RBP
	mov -144(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d36e
	jmp uuid_000000000007d370
uuid_000000000007d36e:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d36b
	jmp uuid_000000000007d36d
uuid_000000000007d36b:
	movb $1, -184(%rbp)
uuid_000000000007d36d:
	mov -248(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007d370:
	mov -232(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007d373:
	mov -200(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007d376:
	mov -192(%RBP),%RSP
	add $-296, %RSP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d37b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d37a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d37d
uuid_000000000007d37b:
	push %RBP
#call function has-suffix : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -240(%rbp)
	mov %RBX, %RBP
	call has_SB_suffix_CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d377
	jmp uuid_000000000007d379
uuid_000000000007d377:
	movq $1, -24(%rbp)
uuid_000000000007d379:
	mov -304(%RBP),%RSP
	add $-304, %RSP
	movq -296(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -264(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -256(%rbp), %r15
	movq %r15, -32(%rbp)
uuid_000000000007d37d:
	mov -128(%RBP),%RSP
	add $-304, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d37e
uuid_000000000007d380:
	mov -24(%rbp), %RAX
	mov %rbp, %rsp
	sub $16, %rsp
	ret
preprocess_CL_ArrowNilNil:
#call function index-typedefs : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call index_SB_typedefs_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess-apply-literals : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_literals_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
#call function preprocess-apply : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
#call function preprocess-apply-locations : Arrow<AST,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call preprocess_SB_apply_SB_locations_CL_ArrowASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	popq 0(%r15)
	popq 8(%r15)
	popq 16(%r15)
	popq 24(%r15)
	popq 32(%r15)
	popq 40(%r15)
	popq 48(%r15)
	popq 56(%r15)
	popq 64(%r15)
	mov %rbp, %rsp
	sub $8, %rsp
	ret
substitute_SB_uuids_CL_ArrowASTConsASTContext:
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -400(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d399
	jmp uuid_000000000007d39b
uuid_000000000007d399:
	push %RBP
	mov -392(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d387
	jmp uuid_000000000007d389
uuid_000000000007d387:
	push %RBP
	jmp uuid_000000000007d384
	jmp uuid_000000000007d386
uuid_000000000007d384:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d381
	jmp uuid_000000000007d383
uuid_000000000007d381:
	movb $1, -504(%rbp)
uuid_000000000007d383:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007d386:
	mov -520(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007d389:
	mov -512(%RBP),%RSP
	add $-536, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d396
	jmp uuid_000000000007d398
uuid_000000000007d396:
	push %RBP
	mov -384(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -616(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d390
	jmp uuid_000000000007d392
uuid_000000000007d390:
	push %RBP
	jmp uuid_000000000007d38d
	jmp uuid_000000000007d38f
uuid_000000000007d38d:
	push %RBP
	mov -552(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -656(%rbp)
	pushq $uuid_000000000007cc38
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d38a
	jmp uuid_000000000007d38c
uuid_000000000007d38a:
	movb $1, -624(%rbp)
uuid_000000000007d38c:
	mov -648(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007d38f:
	mov -640(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007d392:
	mov -632(%RBP),%RSP
	add $-656, %RSP
	mov -624(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d393
	jmp uuid_000000000007d395
uuid_000000000007d393:
	movb $1, -408(%rbp)
uuid_000000000007d395:
	mov -544(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007d398:
	mov -424(%RBP),%RSP
	add $-656, %RSP
uuid_000000000007d39b:
	mov -416(%RBP),%RSP
	add $-656, %RSP
	mov -408(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d41c
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3bb
	jmp uuid_000000000007d3bd
uuid_000000000007d3bb:
	push %RBP
	mov -728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3b8
	jmp uuid_000000000007d3ba
uuid_000000000007d3b8:
	push %RBP
	mov -720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3b5
	jmp uuid_000000000007d3b7
uuid_000000000007d3b5:
	movb $1, -744(%rbp)
uuid_000000000007d3b7:
	mov -840(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007d3ba:
	mov -760(%RBP),%RSP
	add $-912, %RSP
uuid_000000000007d3bd:
	mov -752(%RBP),%RSP
	add $-912, %RSP
	mov -744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d419
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3c7
	jmp uuid_000000000007d3c9
uuid_000000000007d3c7:
	push %RBP
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007d3c4
	jmp uuid_000000000007d3c6
uuid_000000000007d3c4:
	push %RBP
	mov -960(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3c1
	jmp uuid_000000000007d3c3
uuid_000000000007d3c1:
	push %RBP
	mov -952(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3be
	jmp uuid_000000000007d3c0
uuid_000000000007d3be:
	movb $1, -1000(%rbp)
uuid_000000000007d3c0:
	mov -1128(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d3c3:
	mov -1048(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d3c6:
	mov -1016(%RBP),%RSP
	add $-1200, %RSP
uuid_000000000007d3c9:
	mov -1008(%RBP),%RSP
	add $-1200, %RSP
	mov -1000(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d416
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -1280(%RBP), %RAX
	movq %RAX, %RAX
	movq $10, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d413
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d410
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1440(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3cd
	jmp uuid_000000000007d3cf
uuid_000000000007d3cd:
	push %RBP
	jmp uuid_000000000007d3ca
	jmp uuid_000000000007d3cc
uuid_000000000007d3ca:
	movb $1, -1448(%rbp)
uuid_000000000007d3cc:
	mov -1464(%RBP),%RSP
	add $-1464, %RSP
uuid_000000000007d3cf:
	mov -1456(%RBP),%RSP
	add $-1464, %RSP
	mov -1448(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d40d
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3d6
	jmp uuid_000000000007d3d8
uuid_000000000007d3d6:
	push %RBP
	jmp uuid_000000000007d3d3
	jmp uuid_000000000007d3d5
uuid_000000000007d3d3:
	push %RBP
	mov -1480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d3d0
	jmp uuid_000000000007d3d2
uuid_000000000007d3d0:
	movb $1, -1552(%rbp)
uuid_000000000007d3d2:
	mov -1576(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007d3d5:
	mov -1568(%RBP),%RSP
	add $-1584, %RSP
uuid_000000000007d3d8:
	mov -1560(%RBP),%RSP
	add $-1584, %RSP
	mov -1552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d40a
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1664(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3df
	jmp uuid_000000000007d3e1
uuid_000000000007d3df:
	push %RBP
	jmp uuid_000000000007d3dc
	jmp uuid_000000000007d3de
uuid_000000000007d3dc:
	push %RBP
	mov -1600(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d3d9
	jmp uuid_000000000007d3db
uuid_000000000007d3d9:
	movb $1, -1672(%rbp)
uuid_000000000007d3db:
	mov -1696(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007d3de:
	mov -1688(%RBP),%RSP
	add $-1704, %RSP
uuid_000000000007d3e1:
	mov -1680(%RBP),%RSP
	add $-1704, %RSP
	mov -1672(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d407
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -1784(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3e8
	jmp uuid_000000000007d3ea
uuid_000000000007d3e8:
	push %RBP
	mov -1776(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3e5
	jmp uuid_000000000007d3e7
uuid_000000000007d3e5:
	push %RBP
	mov -1768(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3e2
	jmp uuid_000000000007d3e4
uuid_000000000007d3e2:
	movb $1, -1792(%rbp)
uuid_000000000007d3e4:
	mov -1888(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007d3e7:
	mov -1808(%RBP),%RSP
	add $-1960, %RSP
uuid_000000000007d3ea:
	mov -1800(%RBP),%RSP
	add $-1960, %RSP
	mov -1792(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d404
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -2040(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3f1
	jmp uuid_000000000007d3f3
uuid_000000000007d3f1:
	push %RBP
	mov -2032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3ee
	jmp uuid_000000000007d3f0
uuid_000000000007d3ee:
	push %RBP
	mov -2024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3eb
	jmp uuid_000000000007d3ed
uuid_000000000007d3eb:
	movb $1, -2048(%rbp)
uuid_000000000007d3ed:
	mov -2144(%RBP),%RSP
	add $-2216, %RSP
uuid_000000000007d3f0:
	mov -2064(%RBP),%RSP
	add $-2216, %RSP
uuid_000000000007d3f3:
	mov -2056(%RBP),%RSP
	add $-2216, %RSP
	mov -2048(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d401
	push %RBP
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq $0
	push %RBP
	mov -2296(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3fa
	jmp uuid_000000000007d3fc
uuid_000000000007d3fa:
	push %RBP
	mov -2288(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d3f7
	jmp uuid_000000000007d3f9
uuid_000000000007d3f7:
	push %RBP
	pushq -2232(%RBP)
	pushq -2240(%RBP)
	pushq -2248(%RBP)
	pushq -2256(%RBP)
	pushq -2264(%RBP)
	pushq -2272(%RBP)
	pushq -2280(%RBP)
	jmp uuid_000000000007d3f4
	jmp uuid_000000000007d3f6
uuid_000000000007d3f4:
	movb $1, -2304(%rbp)
uuid_000000000007d3f6:
	mov -2400(%RBP),%RSP
	add $-2456, %RSP
uuid_000000000007d3f9:
	mov -2320(%RBP),%RSP
	add $-2456, %RSP
uuid_000000000007d3fc:
	mov -2312(%RBP),%RSP
	add $-2456, %RSP
	mov -2304(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3fe
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d3fd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d400
uuid_000000000007d3fe:
	pushq -2408(%rbp)
	pushq -2416(%rbp)
	pushq -2424(%rbp)
	pushq -2432(%rbp)
	pushq -2440(%rbp)
	pushq -2448(%rbp)
	pushq -2456(%rbp)
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2328(%rbp)
	pushq -2336(%rbp)
	pushq -2344(%rbp)
	pushq -2352(%rbp)
	pushq -2360(%rbp)
	pushq -2368(%rbp)
	pushq -2376(%rbp)
	pushq -2384(%rbp)
	pushq -2392(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d400:
	mov -2224(%RBP),%RSP
	add $-2456, %RSP
	jmp uuid_000000000007d403
uuid_000000000007d401:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2152(%rbp)
	pushq -2160(%rbp)
	pushq -2168(%rbp)
	pushq -2176(%rbp)
	pushq -2184(%rbp)
	pushq -2192(%rbp)
	pushq -2200(%rbp)
	pushq -2208(%rbp)
	pushq -2216(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -2072(%rbp)
	pushq -2080(%rbp)
	pushq -2088(%rbp)
	pushq -2096(%rbp)
	pushq -2104(%rbp)
	pushq -2112(%rbp)
	pushq -2120(%rbp)
	pushq -2128(%rbp)
	pushq -2136(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d403:
	mov -1968(%RBP),%RSP
	add $-2216, %RSP
	jmp uuid_000000000007d406
uuid_000000000007d404:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1896(%rbp)
	pushq -1904(%rbp)
	pushq -1912(%rbp)
	pushq -1920(%rbp)
	pushq -1928(%rbp)
	pushq -1936(%rbp)
	pushq -1944(%rbp)
	pushq -1952(%rbp)
	pushq -1960(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	pushq -1872(%rbp)
	pushq -1880(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $3
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d406:
	mov -1712(%RBP),%RSP
	add $-1960, %RSP
	jmp uuid_000000000007d409
uuid_000000000007d407:
uuid_000000000007d409:
	mov -1592(%RBP),%RSP
	add $-1704, %RSP
	jmp uuid_000000000007d40c
uuid_000000000007d40a:
uuid_000000000007d40c:
	mov -1472(%RBP),%RSP
	add $-1584, %RSP
	jmp uuid_000000000007d40f
uuid_000000000007d40d:
uuid_000000000007d40f:
	mov -1368(%RBP),%RSP
	add $-1464, %RSP
	jmp uuid_000000000007d412
uuid_000000000007d410:
uuid_000000000007d412:
	mov -1288(%RBP),%RSP
	add $-1360, %RSP
	jmp uuid_000000000007d415
uuid_000000000007d413:
uuid_000000000007d415:
	mov -1208(%RBP),%RSP
	add $-1280, %RSP
	jmp uuid_000000000007d418
uuid_000000000007d416:
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq $5
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d418:
	mov -920(%RBP),%RSP
	add $-1200, %RSP
	jmp uuid_000000000007d41b
uuid_000000000007d419:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function substitute-uuids : Arrow<Cons<Context,AST>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	mov %RBX, %RBP
	call substitute_SB_uuids_CL_ArrowASTConsASTContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	push -200(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
uuid_000000000007d41b:
	mov -664(%RBP),%RSP
	add $-912, %RSP
	jmp uuid_000000000007d41e
uuid_000000000007d41c:
uuid_000000000007d3b2:
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3b3
	jmp uuid_000000000007d3b4
uuid_000000000007d3b3:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	push %RBP
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq $0
	push %RBP
	mov -856(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3a5
	jmp uuid_000000000007d3a7
uuid_000000000007d3a5:
	push %RBP
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	jmp uuid_000000000007d3a2
	jmp uuid_000000000007d3a4
uuid_000000000007d3a2:
	push %RBP
	mov -776(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d39f
	jmp uuid_000000000007d3a1
uuid_000000000007d39f:
	push %RBP
	mov -768(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d39c
	jmp uuid_000000000007d39e
uuid_000000000007d39c:
	movb $1, -864(%rbp)
uuid_000000000007d39e:
	mov -976(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d3a1:
	mov -960(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d3a4:
	mov -880(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d3a7:
	mov -872(%RBP),%RSP
	add $-1072, %RSP
	mov -864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d3af
	push %RBP
	jmp uuid_000000000007d3ac
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d3ab
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d3ae
uuid_000000000007d3ac:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d3ae:
	mov -1080(%RBP),%RSP
	add $-1080, %RSP
	jmp uuid_000000000007d3b1
uuid_000000000007d3af:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -536(%rbp)
	pushq -968(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d3a8
	movq -1072(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -8(%rbp)
	jmp uuid_000000000007d3aa
uuid_000000000007d3a8:
	movq -952(%rbp), %r15
	movq %r15, -248(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -240(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -232(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -224(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -216(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -208(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -200(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1072(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -1064(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -1056(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -1048(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -1040(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -1032(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -1024(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d3aa:
	mov -1080(%RBP),%RSP
	add $-1080, %RSP
uuid_000000000007d3b1:
	mov -760(%RBP),%RSP
	add $-1080, %RSP
	add $96, %rsp
	add $96, %rsp
	add $8, %rsp
	add $72, %rsp
	add $8, %rsp
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d3b2
uuid_000000000007d3b4:
uuid_000000000007d41e:
	mov -328(%RBP),%RSP
	add $-656, %RSP
	subq $72, %rsp
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $176, %rsp
	ret
try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $2
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d425
	jmp uuid_000000000007d427
uuid_000000000007d425:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	mov -688(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d422
	jmp uuid_000000000007d424
uuid_000000000007d422:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	mov -768(%RBP), %RAX
	movq %RAX, %RAX
	movq $9, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d41f
	jmp uuid_000000000007d421
uuid_000000000007d41f:
	movb $1, -600(%rbp)
uuid_000000000007d421:
	mov -696(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007d424:
	mov -616(%RBP),%RSP
	add $-768, %RSP
uuid_000000000007d427:
	mov -608(%RBP),%RSP
	add $-768, %RSP
	mov -600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6d3
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -928(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d476
	jmp uuid_000000000007d478
uuid_000000000007d476:
	push %RBP
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq $0
	push %RBP
	mov -1024(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d440
	jmp uuid_000000000007d442
uuid_000000000007d440:
	push %RBP
	jmp uuid_000000000007d43d
	jmp uuid_000000000007d43f
uuid_000000000007d43d:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d437
	jmp uuid_000000000007d439
uuid_000000000007d437:
	push %RBP
	jmp uuid_000000000007d434
	jmp uuid_000000000007d436
uuid_000000000007d434:
	push %RBP
	mov -1112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1232(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d42e
	jmp uuid_000000000007d430
uuid_000000000007d42e:
	push %RBP
	jmp uuid_000000000007d42b
	jmp uuid_000000000007d42d
uuid_000000000007d42b:
	push %RBP
	mov -1168(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d428
	jmp uuid_000000000007d42a
uuid_000000000007d428:
	movb $1, -1240(%rbp)
uuid_000000000007d42a:
	mov -1264(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007d42d:
	mov -1256(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007d430:
	mov -1248(%RBP),%RSP
	add $-1272, %RSP
	mov -1240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d431
	jmp uuid_000000000007d433
uuid_000000000007d431:
	movb $1, -1136(%rbp)
uuid_000000000007d433:
	mov -1160(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007d436:
	mov -1152(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007d439:
	mov -1144(%RBP),%RSP
	add $-1272, %RSP
	mov -1136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d43a
	jmp uuid_000000000007d43c
uuid_000000000007d43a:
	movb $1, -1032(%rbp)
uuid_000000000007d43c:
	mov -1056(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007d43f:
	mov -1048(%RBP),%RSP
	add $-1272, %RSP
uuid_000000000007d442:
	mov -1040(%RBP),%RSP
	add $-1272, %RSP
	mov -1032(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d473
	jmp uuid_000000000007d475
uuid_000000000007d473:
	push %RBP
	pushq -784(%RBP)
	pushq -792(%RBP)
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	pushq -824(%RBP)
	pushq -832(%RBP)
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq $0
	push %RBP
	mov -1352(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d46d
	jmp uuid_000000000007d46f
uuid_000000000007d46d:
	push %RBP
	mov -1344(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1448(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d449
	jmp uuid_000000000007d44b
uuid_000000000007d449:
	push %RBP
	jmp uuid_000000000007d446
	jmp uuid_000000000007d448
uuid_000000000007d446:
	push %RBP
	jmp uuid_000000000007d443
	jmp uuid_000000000007d445
uuid_000000000007d443:
	movb $1, -1456(%rbp)
uuid_000000000007d445:
	mov -1480(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d448:
	mov -1472(%RBP),%RSP
	add $-1480, %RSP
uuid_000000000007d44b:
	mov -1464(%RBP),%RSP
	add $-1480, %RSP
	mov -1456(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d46a
	jmp uuid_000000000007d46c
uuid_000000000007d46a:
	push %RBP
	mov -1336(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1560(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d464
	jmp uuid_000000000007d466
uuid_000000000007d464:
	push %RBP
	mov -1552(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1656(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d452
	jmp uuid_000000000007d454
uuid_000000000007d452:
	push %RBP
	jmp uuid_000000000007d44f
	jmp uuid_000000000007d451
uuid_000000000007d44f:
	push %RBP
	jmp uuid_000000000007d44c
	jmp uuid_000000000007d44e
uuid_000000000007d44c:
	movb $1, -1664(%rbp)
uuid_000000000007d44e:
	mov -1688(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007d451:
	mov -1680(%RBP),%RSP
	add $-1688, %RSP
uuid_000000000007d454:
	mov -1672(%RBP),%RSP
	add $-1688, %RSP
	mov -1664(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d461
	jmp uuid_000000000007d463
uuid_000000000007d461:
	push %RBP
	mov -1544(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -1768(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d45b
	jmp uuid_000000000007d45d
uuid_000000000007d45b:
	push %RBP
	jmp uuid_000000000007d458
	jmp uuid_000000000007d45a
uuid_000000000007d458:
	push %RBP
	jmp uuid_000000000007d455
	jmp uuid_000000000007d457
uuid_000000000007d455:
	movb $1, -1776(%rbp)
uuid_000000000007d457:
	mov -1800(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007d45a:
	mov -1792(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007d45d:
	mov -1784(%RBP),%RSP
	add $-1800, %RSP
	mov -1776(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d45e
	jmp uuid_000000000007d460
uuid_000000000007d45e:
	movb $1, -1568(%rbp)
uuid_000000000007d460:
	mov -1696(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007d463:
	mov -1584(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007d466:
	mov -1576(%RBP),%RSP
	add $-1800, %RSP
	mov -1568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d467
	jmp uuid_000000000007d469
uuid_000000000007d467:
	movb $1, -1360(%rbp)
uuid_000000000007d469:
	mov -1488(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007d46c:
	mov -1376(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007d46f:
	mov -1368(%RBP),%RSP
	add $-1800, %RSP
	mov -1360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d470
	jmp uuid_000000000007d472
uuid_000000000007d470:
	movb $1, -936(%rbp)
uuid_000000000007d472:
	mov -1280(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007d475:
	mov -952(%RBP),%RSP
	add $-1800, %RSP
uuid_000000000007d478:
	mov -944(%RBP),%RSP
	add $-1800, %RSP
	mov -936(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6d0
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -1960(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4c5
	jmp uuid_000000000007d4c7
uuid_000000000007d4c5:
	push %RBP
	pushq -1888(%RBP)
	pushq -1896(%RBP)
	pushq -1904(%RBP)
	pushq -1912(%RBP)
	pushq -1920(%RBP)
	pushq -1928(%RBP)
	pushq -1936(%RBP)
	pushq -1944(%RBP)
	pushq -1952(%RBP)
	pushq $0
	push %RBP
	mov -2056(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4a0
	jmp uuid_000000000007d4a2
uuid_000000000007d4a0:
	push %RBP
	mov -2048(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2152(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d48e
	jmp uuid_000000000007d490
uuid_000000000007d48e:
	push %RBP
	mov -2144(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2248(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d47c
	jmp uuid_000000000007d47e
uuid_000000000007d47c:
	push %RBP
	jmp uuid_000000000007d479
	jmp uuid_000000000007d47b
uuid_000000000007d479:
	movb $1, -2256(%rbp)
uuid_000000000007d47b:
	mov -2272(%RBP),%RSP
	add $-2272, %RSP
uuid_000000000007d47e:
	mov -2264(%RBP),%RSP
	add $-2272, %RSP
	mov -2256(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d48b
	jmp uuid_000000000007d48d
uuid_000000000007d48b:
	push %RBP
	mov -2136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2352(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d485
	jmp uuid_000000000007d487
uuid_000000000007d485:
	push %RBP
	jmp uuid_000000000007d482
	jmp uuid_000000000007d484
uuid_000000000007d482:
	push %RBP
	jmp uuid_000000000007d47f
	jmp uuid_000000000007d481
uuid_000000000007d47f:
	movb $1, -2360(%rbp)
uuid_000000000007d481:
	mov -2384(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007d484:
	mov -2376(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007d487:
	mov -2368(%RBP),%RSP
	add $-2384, %RSP
	mov -2360(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d488
	jmp uuid_000000000007d48a
uuid_000000000007d488:
	movb $1, -2160(%rbp)
uuid_000000000007d48a:
	mov -2280(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007d48d:
	mov -2176(%RBP),%RSP
	add $-2384, %RSP
uuid_000000000007d490:
	mov -2168(%RBP),%RSP
	add $-2384, %RSP
	mov -2160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d49d
	jmp uuid_000000000007d49f
uuid_000000000007d49d:
	push %RBP
	mov -2040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2464(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d497
	jmp uuid_000000000007d499
uuid_000000000007d497:
	push %RBP
	pushq -2408(%RBP)
	pushq -2416(%RBP)
	pushq -2424(%RBP)
	pushq -2432(%RBP)
	pushq -2440(%RBP)
	pushq -2448(%RBP)
	pushq -2456(%RBP)
	jmp uuid_000000000007d494
	jmp uuid_000000000007d496
uuid_000000000007d494:
	push %RBP
	mov -2400(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2560(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d491
	jmp uuid_000000000007d493
uuid_000000000007d491:
	movb $1, -2472(%rbp)
uuid_000000000007d493:
	mov -2552(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d496:
	mov -2488(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d499:
	mov -2480(%RBP),%RSP
	add $-2560, %RSP
	mov -2472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d49a
	jmp uuid_000000000007d49c
uuid_000000000007d49a:
	movb $1, -2064(%rbp)
uuid_000000000007d49c:
	mov -2392(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d49f:
	mov -2080(%RBP),%RSP
	add $-2560, %RSP
uuid_000000000007d4a2:
	mov -2072(%RBP),%RSP
	add $-2560, %RSP
	mov -2064(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4c2
	jmp uuid_000000000007d4c4
uuid_000000000007d4c2:
	push %RBP
	pushq -1816(%RBP)
	pushq -1824(%RBP)
	pushq -1832(%RBP)
	pushq -1840(%RBP)
	pushq -1848(%RBP)
	pushq -1856(%RBP)
	pushq -1864(%RBP)
	pushq -1872(%RBP)
	pushq -1880(%RBP)
	pushq $0
	push %RBP
	mov -2640(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4bc
	jmp uuid_000000000007d4be
uuid_000000000007d4bc:
	push %RBP
	mov -2632(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2736(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4a9
	jmp uuid_000000000007d4ab
uuid_000000000007d4a9:
	push %RBP
	jmp uuid_000000000007d4a6
	jmp uuid_000000000007d4a8
uuid_000000000007d4a6:
	push %RBP
	mov -2672(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d4a3
	jmp uuid_000000000007d4a5
uuid_000000000007d4a3:
	movb $1, -2744(%rbp)
uuid_000000000007d4a5:
	mov -2768(%RBP),%RSP
	add $-2776, %RSP
uuid_000000000007d4a8:
	mov -2760(%RBP),%RSP
	add $-2776, %RSP
uuid_000000000007d4ab:
	mov -2752(%RBP),%RSP
	add $-2776, %RSP
	mov -2744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4b9
	jmp uuid_000000000007d4bb
uuid_000000000007d4b9:
	push %RBP
	mov -2624(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -2856(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4b3
	jmp uuid_000000000007d4b5
uuid_000000000007d4b3:
	push %RBP
	jmp uuid_000000000007d4b0
	jmp uuid_000000000007d4b2
uuid_000000000007d4b0:
	push %RBP
	mov -2792(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -2896(%rbp)
	pushq $uuid_000000000007d4ac
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d4ad
	jmp uuid_000000000007d4af
uuid_000000000007d4ad:
	movb $1, -2864(%rbp)
uuid_000000000007d4af:
	mov -2888(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007d4b2:
	mov -2880(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007d4b5:
	mov -2872(%RBP),%RSP
	add $-2896, %RSP
	mov -2864(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4b6
	jmp uuid_000000000007d4b8
uuid_000000000007d4b6:
	movb $1, -2648(%rbp)
uuid_000000000007d4b8:
	mov -2784(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007d4bb:
	mov -2664(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007d4be:
	mov -2656(%RBP),%RSP
	add $-2896, %RSP
	mov -2648(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4bf
	jmp uuid_000000000007d4c1
uuid_000000000007d4bf:
	movb $1, -1968(%rbp)
uuid_000000000007d4c1:
	mov -2568(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007d4c4:
	mov -1984(%RBP),%RSP
	add $-2896, %RSP
uuid_000000000007d4c7:
	mov -1976(%RBP),%RSP
	add $-2896, %RSP
	mov -1968(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6cd
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -3056(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4fb
	jmp uuid_000000000007d4fd
uuid_000000000007d4fb:
	push %RBP
	pushq -2984(%RBP)
	pushq -2992(%RBP)
	pushq -3000(%RBP)
	pushq -3008(%RBP)
	pushq -3016(%RBP)
	pushq -3024(%RBP)
	pushq -3032(%RBP)
	pushq -3040(%RBP)
	pushq -3048(%RBP)
	pushq $0
	push %RBP
	mov -3152(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4d7
	jmp uuid_000000000007d4d9
uuid_000000000007d4d7:
	push %RBP
	jmp uuid_000000000007d4d4
	jmp uuid_000000000007d4d6
uuid_000000000007d4d4:
	push %RBP
	mov -3136(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3256(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4ce
	jmp uuid_000000000007d4d0
uuid_000000000007d4ce:
	push %RBP
	jmp uuid_000000000007d4cb
	jmp uuid_000000000007d4cd
uuid_000000000007d4cb:
	push %RBP
	mov -3192(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d4c8
	jmp uuid_000000000007d4ca
uuid_000000000007d4c8:
	movb $1, -3264(%rbp)
uuid_000000000007d4ca:
	mov -3288(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007d4cd:
	mov -3280(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007d4d0:
	mov -3272(%RBP),%RSP
	add $-3296, %RSP
	mov -3264(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4d1
	jmp uuid_000000000007d4d3
uuid_000000000007d4d1:
	movb $1, -3160(%rbp)
uuid_000000000007d4d3:
	mov -3184(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007d4d6:
	mov -3176(%RBP),%RSP
	add $-3296, %RSP
uuid_000000000007d4d9:
	mov -3168(%RBP),%RSP
	add $-3296, %RSP
	mov -3160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4f8
	jmp uuid_000000000007d4fa
uuid_000000000007d4f8:
	push %RBP
	pushq -2912(%RBP)
	pushq -2920(%RBP)
	pushq -2928(%RBP)
	pushq -2936(%RBP)
	pushq -2944(%RBP)
	pushq -2952(%RBP)
	pushq -2960(%RBP)
	pushq -2968(%RBP)
	pushq -2976(%RBP)
	pushq $0
	push %RBP
	mov -3376(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4f2
	jmp uuid_000000000007d4f4
uuid_000000000007d4f2:
	push %RBP
	mov -3368(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3472(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4e0
	jmp uuid_000000000007d4e2
uuid_000000000007d4e0:
	push %RBP
	jmp uuid_000000000007d4dd
	jmp uuid_000000000007d4df
uuid_000000000007d4dd:
	push %RBP
	jmp uuid_000000000007d4da
	jmp uuid_000000000007d4dc
uuid_000000000007d4da:
	movb $1, -3480(%rbp)
uuid_000000000007d4dc:
	mov -3504(%RBP),%RSP
	add $-3504, %RSP
uuid_000000000007d4df:
	mov -3496(%RBP),%RSP
	add $-3504, %RSP
uuid_000000000007d4e2:
	mov -3488(%RBP),%RSP
	add $-3504, %RSP
	mov -3480(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4ef
	jmp uuid_000000000007d4f1
uuid_000000000007d4ef:
	push %RBP
	mov -3360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -3584(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4e9
	jmp uuid_000000000007d4eb
uuid_000000000007d4e9:
	push %RBP
	jmp uuid_000000000007d4e6
	jmp uuid_000000000007d4e8
uuid_000000000007d4e6:
	push %RBP
	jmp uuid_000000000007d4e3
	jmp uuid_000000000007d4e5
uuid_000000000007d4e3:
	movb $1, -3592(%rbp)
uuid_000000000007d4e5:
	mov -3616(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007d4e8:
	mov -3608(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007d4eb:
	mov -3600(%RBP),%RSP
	add $-3616, %RSP
	mov -3592(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4ec
	jmp uuid_000000000007d4ee
uuid_000000000007d4ec:
	movb $1, -3384(%rbp)
uuid_000000000007d4ee:
	mov -3512(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007d4f1:
	mov -3400(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007d4f4:
	mov -3392(%RBP),%RSP
	add $-3616, %RSP
	mov -3384(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d4f5
	jmp uuid_000000000007d4f7
uuid_000000000007d4f5:
	movb $1, -3064(%rbp)
uuid_000000000007d4f7:
	mov -3304(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007d4fa:
	mov -3080(%RBP),%RSP
	add $-3616, %RSP
uuid_000000000007d4fd:
	mov -3072(%RBP),%RSP
	add $-3616, %RSP
	mov -3064(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6ca
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -3776(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d53e
	jmp uuid_000000000007d540
uuid_000000000007d53e:
	push %RBP
	pushq -3704(%RBP)
	pushq -3712(%RBP)
	pushq -3720(%RBP)
	pushq -3728(%RBP)
	pushq -3736(%RBP)
	pushq -3744(%RBP)
	pushq -3752(%RBP)
	pushq -3760(%RBP)
	pushq -3768(%RBP)
	pushq $0
	push %RBP
	mov -3872(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d52c
	jmp uuid_000000000007d52e
uuid_000000000007d52c:
	push %RBP
	mov -3864(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d529
	jmp uuid_000000000007d52b
uuid_000000000007d529:
	push %RBP
	mov -3856(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d526
	jmp uuid_000000000007d528
uuid_000000000007d526:
	movb $1, -3880(%rbp)
uuid_000000000007d528:
	mov -3976(%RBP),%RSP
	add $-4048, %RSP
uuid_000000000007d52b:
	mov -3896(%RBP),%RSP
	add $-4048, %RSP
uuid_000000000007d52e:
	mov -3888(%RBP),%RSP
	add $-4048, %RSP
	mov -3880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d53b
	jmp uuid_000000000007d53d
uuid_000000000007d53b:
	push %RBP
	pushq -3632(%RBP)
	pushq -3640(%RBP)
	pushq -3648(%RBP)
	pushq -3656(%RBP)
	pushq -3664(%RBP)
	pushq -3672(%RBP)
	pushq -3680(%RBP)
	pushq -3688(%RBP)
	pushq -3696(%RBP)
	pushq $0
	push %RBP
	mov -4128(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d535
	jmp uuid_000000000007d537
uuid_000000000007d535:
	push %RBP
	mov -4120(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d532
	jmp uuid_000000000007d534
uuid_000000000007d532:
	push %RBP
	mov -4112(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d52f
	jmp uuid_000000000007d531
uuid_000000000007d52f:
	movb $1, -4136(%rbp)
uuid_000000000007d531:
	mov -4232(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007d534:
	mov -4152(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007d537:
	mov -4144(%RBP),%RSP
	add $-4304, %RSP
	mov -4136(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d538
	jmp uuid_000000000007d53a
uuid_000000000007d538:
	movb $1, -3784(%rbp)
uuid_000000000007d53a:
	mov -4056(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007d53d:
	mov -3800(%RBP),%RSP
	add $-4304, %RSP
uuid_000000000007d540:
	mov -3792(%RBP),%RSP
	add $-4304, %RSP
	mov -3784(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6c7
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -4464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d565
	jmp uuid_000000000007d567
uuid_000000000007d565:
	push %RBP
	pushq -4392(%RBP)
	pushq -4400(%RBP)
	pushq -4408(%RBP)
	pushq -4416(%RBP)
	pushq -4424(%RBP)
	pushq -4432(%RBP)
	pushq -4440(%RBP)
	pushq -4448(%RBP)
	pushq -4456(%RBP)
	pushq $0
	push %RBP
	mov -4560(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d550
	jmp uuid_000000000007d552
uuid_000000000007d550:
	push %RBP
	pushq -4536(%RBP)
	pushq -4544(%RBP)
	pushq -4552(%RBP)
	jmp uuid_000000000007d54d
	jmp uuid_000000000007d54f
uuid_000000000007d54d:
	push %RBP
	mov -4528(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d54a
	jmp uuid_000000000007d54c
uuid_000000000007d54a:
	push %RBP
	mov -4520(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d547
	jmp uuid_000000000007d549
uuid_000000000007d547:
	movb $1, -4568(%rbp)
uuid_000000000007d549:
	mov -4696(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007d54c:
	mov -4616(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007d54f:
	mov -4584(%RBP),%RSP
	add $-4768, %RSP
uuid_000000000007d552:
	mov -4576(%RBP),%RSP
	add $-4768, %RSP
	mov -4568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d562
	jmp uuid_000000000007d564
uuid_000000000007d562:
	push %RBP
	pushq -4320(%RBP)
	pushq -4328(%RBP)
	pushq -4336(%RBP)
	pushq -4344(%RBP)
	pushq -4352(%RBP)
	pushq -4360(%RBP)
	pushq -4368(%RBP)
	pushq -4376(%RBP)
	pushq -4384(%RBP)
	pushq $0
	push %RBP
	mov -4848(%RBP), %RAX
	movq %RAX, %RAX
	movq $5, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d55c
	jmp uuid_000000000007d55e
uuid_000000000007d55c:
	push %RBP
	pushq -4824(%RBP)
	pushq -4832(%RBP)
	pushq -4840(%RBP)
	jmp uuid_000000000007d559
	jmp uuid_000000000007d55b
uuid_000000000007d559:
	push %RBP
	mov -4816(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d556
	jmp uuid_000000000007d558
uuid_000000000007d556:
	push %RBP
	mov -4808(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d553
	jmp uuid_000000000007d555
uuid_000000000007d553:
	movb $1, -4856(%rbp)
uuid_000000000007d555:
	mov -4984(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007d558:
	mov -4904(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007d55b:
	mov -4872(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007d55e:
	mov -4864(%RBP),%RSP
	add $-5056, %RSP
	mov -4856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d55f
	jmp uuid_000000000007d561
uuid_000000000007d55f:
	movb $1, -4472(%rbp)
uuid_000000000007d561:
	mov -4776(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007d564:
	mov -4488(%RBP),%RSP
	add $-5056, %RSP
uuid_000000000007d567:
	mov -4480(%RBP),%RSP
	add $-5056, %RSP
	mov -4472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6c4
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -5216(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d587
	jmp uuid_000000000007d589
uuid_000000000007d587:
	push %RBP
	pushq -5144(%RBP)
	pushq -5152(%RBP)
	pushq -5160(%RBP)
	pushq -5168(%RBP)
	pushq -5176(%RBP)
	pushq -5184(%RBP)
	pushq -5192(%RBP)
	pushq -5200(%RBP)
	pushq -5208(%RBP)
	pushq $0
	push %RBP
	mov -5312(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d574
	jmp uuid_000000000007d576
uuid_000000000007d574:
	push %RBP
	jmp uuid_000000000007d571
	jmp uuid_000000000007d573
uuid_000000000007d571:
	push %RBP
	mov -5248(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5352(%rbp)
	pushq $uuid_000000000007d097
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d56e
	jmp uuid_000000000007d570
uuid_000000000007d56e:
	movb $1, -5320(%rbp)
uuid_000000000007d570:
	mov -5344(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007d573:
	mov -5336(%RBP),%RSP
	add $-5352, %RSP
uuid_000000000007d576:
	mov -5328(%RBP),%RSP
	add $-5352, %RSP
	mov -5320(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d584
	jmp uuid_000000000007d586
uuid_000000000007d584:
	push %RBP
	pushq -5072(%RBP)
	pushq -5080(%RBP)
	pushq -5088(%RBP)
	pushq -5096(%RBP)
	pushq -5104(%RBP)
	pushq -5112(%RBP)
	pushq -5120(%RBP)
	pushq -5128(%RBP)
	pushq -5136(%RBP)
	pushq $0
	push %RBP
	mov -5432(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d57e
	jmp uuid_000000000007d580
uuid_000000000007d57e:
	push %RBP
	jmp uuid_000000000007d57b
	jmp uuid_000000000007d57d
uuid_000000000007d57b:
	push %RBP
	mov -5368(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5472(%rbp)
	pushq $uuid_000000000007d577
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d578
	jmp uuid_000000000007d57a
uuid_000000000007d578:
	movb $1, -5440(%rbp)
uuid_000000000007d57a:
	mov -5464(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007d57d:
	mov -5456(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007d580:
	mov -5448(%RBP),%RSP
	add $-5472, %RSP
	mov -5440(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d581
	jmp uuid_000000000007d583
uuid_000000000007d581:
	movb $1, -5224(%rbp)
uuid_000000000007d583:
	mov -5360(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007d586:
	mov -5240(%RBP),%RSP
	add $-5472, %RSP
uuid_000000000007d589:
	mov -5232(%RBP),%RSP
	add $-5472, %RSP
	mov -5224(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6c1
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -5632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5a2
	jmp uuid_000000000007d5a4
uuid_000000000007d5a2:
	push %RBP
	pushq -5560(%RBP)
	pushq -5568(%RBP)
	pushq -5576(%RBP)
	pushq -5584(%RBP)
	pushq -5592(%RBP)
	pushq -5600(%RBP)
	pushq -5608(%RBP)
	pushq -5616(%RBP)
	pushq -5624(%RBP)
	pushq $0
	push %RBP
	mov -5728(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d590
	jmp uuid_000000000007d592
uuid_000000000007d590:
	push %RBP
	jmp uuid_000000000007d58d
	jmp uuid_000000000007d58f
uuid_000000000007d58d:
	push %RBP
	mov -5664(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d58a
	jmp uuid_000000000007d58c
uuid_000000000007d58a:
	movb $1, -5736(%rbp)
uuid_000000000007d58c:
	mov -5760(%RBP),%RSP
	add $-5768, %RSP
uuid_000000000007d58f:
	mov -5752(%RBP),%RSP
	add $-5768, %RSP
uuid_000000000007d592:
	mov -5744(%RBP),%RSP
	add $-5768, %RSP
	mov -5736(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d59f
	jmp uuid_000000000007d5a1
uuid_000000000007d59f:
	push %RBP
	pushq -5488(%RBP)
	pushq -5496(%RBP)
	pushq -5504(%RBP)
	pushq -5512(%RBP)
	pushq -5520(%RBP)
	pushq -5528(%RBP)
	pushq -5536(%RBP)
	pushq -5544(%RBP)
	pushq -5552(%RBP)
	pushq $0
	push %RBP
	mov -5848(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d599
	jmp uuid_000000000007d59b
uuid_000000000007d599:
	push %RBP
	jmp uuid_000000000007d596
	jmp uuid_000000000007d598
uuid_000000000007d596:
	push %RBP
	mov -5784(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d593
	jmp uuid_000000000007d595
uuid_000000000007d593:
	movb $1, -5856(%rbp)
uuid_000000000007d595:
	mov -5880(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007d598:
	mov -5872(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007d59b:
	mov -5864(%RBP),%RSP
	add $-5888, %RSP
	mov -5856(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d59c
	jmp uuid_000000000007d59e
uuid_000000000007d59c:
	movb $1, -5640(%rbp)
uuid_000000000007d59e:
	mov -5776(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007d5a1:
	mov -5656(%RBP),%RSP
	add $-5888, %RSP
uuid_000000000007d5a4:
	mov -5648(%RBP),%RSP
	add $-5888, %RSP
	mov -5640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6be
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -6048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5c0
	jmp uuid_000000000007d5c2
uuid_000000000007d5c0:
	push %RBP
	pushq -5976(%RBP)
	pushq -5984(%RBP)
	pushq -5992(%RBP)
	pushq -6000(%RBP)
	pushq -6008(%RBP)
	pushq -6016(%RBP)
	pushq -6024(%RBP)
	pushq -6032(%RBP)
	pushq -6040(%RBP)
	pushq $0
	push %RBP
	mov -6144(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5ae
	jmp uuid_000000000007d5b0
uuid_000000000007d5ae:
	push %RBP
	jmp uuid_000000000007d5ab
	jmp uuid_000000000007d5ad
uuid_000000000007d5ab:
	push %RBP
	mov -6080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d5a8
	jmp uuid_000000000007d5aa
uuid_000000000007d5a8:
	movb $1, -6152(%rbp)
uuid_000000000007d5aa:
	mov -6176(%RBP),%RSP
	add $-6184, %RSP
uuid_000000000007d5ad:
	mov -6168(%RBP),%RSP
	add $-6184, %RSP
uuid_000000000007d5b0:
	mov -6160(%RBP),%RSP
	add $-6184, %RSP
	mov -6152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5bd
	jmp uuid_000000000007d5bf
uuid_000000000007d5bd:
	push %RBP
	pushq -5904(%RBP)
	pushq -5912(%RBP)
	pushq -5920(%RBP)
	pushq -5928(%RBP)
	pushq -5936(%RBP)
	pushq -5944(%RBP)
	pushq -5952(%RBP)
	pushq -5960(%RBP)
	pushq -5968(%RBP)
	pushq $0
	push %RBP
	mov -6264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5b7
	jmp uuid_000000000007d5b9
uuid_000000000007d5b7:
	push %RBP
	jmp uuid_000000000007d5b4
	jmp uuid_000000000007d5b6
uuid_000000000007d5b4:
	push %RBP
	mov -6200(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d5b1
	jmp uuid_000000000007d5b3
uuid_000000000007d5b1:
	movb $1, -6272(%rbp)
uuid_000000000007d5b3:
	mov -6296(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007d5b6:
	mov -6288(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007d5b9:
	mov -6280(%RBP),%RSP
	add $-6304, %RSP
	mov -6272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5ba
	jmp uuid_000000000007d5bc
uuid_000000000007d5ba:
	movb $1, -6056(%rbp)
uuid_000000000007d5bc:
	mov -6192(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007d5bf:
	mov -6072(%RBP),%RSP
	add $-6304, %RSP
uuid_000000000007d5c2:
	mov -6064(%RBP),%RSP
	add $-6304, %RSP
	mov -6056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6bb
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -6464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5f0
	jmp uuid_000000000007d5f2
uuid_000000000007d5f0:
	push %RBP
	pushq -6392(%RBP)
	pushq -6400(%RBP)
	pushq -6408(%RBP)
	pushq -6416(%RBP)
	pushq -6424(%RBP)
	pushq -6432(%RBP)
	pushq -6440(%RBP)
	pushq -6448(%RBP)
	pushq -6456(%RBP)
	pushq $0
	push %RBP
	mov -6560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5cc
	jmp uuid_000000000007d5ce
uuid_000000000007d5cc:
	push %RBP
	pushq -6504(%RBP)
	pushq -6512(%RBP)
	pushq -6520(%RBP)
	pushq -6528(%RBP)
	pushq -6536(%RBP)
	pushq -6544(%RBP)
	pushq -6552(%RBP)
	jmp uuid_000000000007d5c9
	jmp uuid_000000000007d5cb
uuid_000000000007d5c9:
	push %RBP
	mov -6496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d5c6
	jmp uuid_000000000007d5c8
uuid_000000000007d5c6:
	movb $1, -6568(%rbp)
uuid_000000000007d5c8:
	mov -6648(%RBP),%RSP
	add $-6656, %RSP
uuid_000000000007d5cb:
	mov -6584(%RBP),%RSP
	add $-6656, %RSP
uuid_000000000007d5ce:
	mov -6576(%RBP),%RSP
	add $-6656, %RSP
	mov -6568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5ed
	jmp uuid_000000000007d5ef
uuid_000000000007d5ed:
	push %RBP
	pushq -6320(%RBP)
	pushq -6328(%RBP)
	pushq -6336(%RBP)
	pushq -6344(%RBP)
	pushq -6352(%RBP)
	pushq -6360(%RBP)
	pushq -6368(%RBP)
	pushq -6376(%RBP)
	pushq -6384(%RBP)
	pushq $0
	push %RBP
	mov -6736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5e7
	jmp uuid_000000000007d5e9
uuid_000000000007d5e7:
	push %RBP
	mov -6728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6832(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5d5
	jmp uuid_000000000007d5d7
uuid_000000000007d5d5:
	push %RBP
	jmp uuid_000000000007d5d2
	jmp uuid_000000000007d5d4
uuid_000000000007d5d2:
	push %RBP
	mov -6768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d5cf
	jmp uuid_000000000007d5d1
uuid_000000000007d5cf:
	movb $1, -6840(%rbp)
uuid_000000000007d5d1:
	mov -6864(%RBP),%RSP
	add $-6872, %RSP
uuid_000000000007d5d4:
	mov -6856(%RBP),%RSP
	add $-6872, %RSP
uuid_000000000007d5d7:
	mov -6848(%RBP),%RSP
	add $-6872, %RSP
	mov -6840(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5e4
	jmp uuid_000000000007d5e6
uuid_000000000007d5e4:
	push %RBP
	mov -6720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -6952(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5de
	jmp uuid_000000000007d5e0
uuid_000000000007d5de:
	push %RBP
	jmp uuid_000000000007d5db
	jmp uuid_000000000007d5dd
uuid_000000000007d5db:
	push %RBP
	mov -6888(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6992(%rbp)
	pushq $uuid_000000000007d4ac
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5d8
	jmp uuid_000000000007d5da
uuid_000000000007d5d8:
	movb $1, -6960(%rbp)
uuid_000000000007d5da:
	mov -6984(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007d5dd:
	mov -6976(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007d5e0:
	mov -6968(%RBP),%RSP
	add $-6992, %RSP
	mov -6960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5e1
	jmp uuid_000000000007d5e3
uuid_000000000007d5e1:
	movb $1, -6744(%rbp)
uuid_000000000007d5e3:
	mov -6880(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007d5e6:
	mov -6760(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007d5e9:
	mov -6752(%RBP),%RSP
	add $-6992, %RSP
	mov -6744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5ea
	jmp uuid_000000000007d5ec
uuid_000000000007d5ea:
	movb $1, -6472(%rbp)
uuid_000000000007d5ec:
	mov -6664(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007d5ef:
	mov -6488(%RBP),%RSP
	add $-6992, %RSP
uuid_000000000007d5f2:
	mov -6480(%RBP),%RSP
	add $-6992, %RSP
	mov -6472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6b8
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -7152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d621
	jmp uuid_000000000007d623
uuid_000000000007d621:
	push %RBP
	pushq -7080(%RBP)
	pushq -7088(%RBP)
	pushq -7096(%RBP)
	pushq -7104(%RBP)
	pushq -7112(%RBP)
	pushq -7120(%RBP)
	pushq -7128(%RBP)
	pushq -7136(%RBP)
	pushq -7144(%RBP)
	pushq $0
	push %RBP
	mov -7248(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5fc
	jmp uuid_000000000007d5fe
uuid_000000000007d5fc:
	push %RBP
	jmp uuid_000000000007d5f9
	jmp uuid_000000000007d5fb
uuid_000000000007d5f9:
	push %RBP
	mov -7184(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7288(%rbp)
	pushq $uuid_000000000007d097
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5f6
	jmp uuid_000000000007d5f8
uuid_000000000007d5f6:
	movb $1, -7256(%rbp)
uuid_000000000007d5f8:
	mov -7280(%RBP),%RSP
	add $-7288, %RSP
uuid_000000000007d5fb:
	mov -7272(%RBP),%RSP
	add $-7288, %RSP
uuid_000000000007d5fe:
	mov -7264(%RBP),%RSP
	add $-7288, %RSP
	mov -7256(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d61e
	jmp uuid_000000000007d620
uuid_000000000007d61e:
	push %RBP
	pushq -7008(%RBP)
	pushq -7016(%RBP)
	pushq -7024(%RBP)
	pushq -7032(%RBP)
	pushq -7040(%RBP)
	pushq -7048(%RBP)
	pushq -7056(%RBP)
	pushq -7064(%RBP)
	pushq -7072(%RBP)
	pushq $0
	push %RBP
	mov -7368(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d618
	jmp uuid_000000000007d61a
uuid_000000000007d618:
	push %RBP
	mov -7360(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7464(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d605
	jmp uuid_000000000007d607
uuid_000000000007d605:
	push %RBP
	jmp uuid_000000000007d602
	jmp uuid_000000000007d604
uuid_000000000007d602:
	push %RBP
	jmp uuid_000000000007d5ff
	jmp uuid_000000000007d601
uuid_000000000007d5ff:
	movb $1, -7472(%rbp)
uuid_000000000007d601:
	mov -7496(%RBP),%RSP
	add $-7496, %RSP
uuid_000000000007d604:
	mov -7488(%RBP),%RSP
	add $-7496, %RSP
uuid_000000000007d607:
	mov -7480(%RBP),%RSP
	add $-7496, %RSP
	mov -7472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d615
	jmp uuid_000000000007d617
uuid_000000000007d615:
	push %RBP
	mov -7352(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -7576(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d60f
	jmp uuid_000000000007d611
uuid_000000000007d60f:
	push %RBP
	jmp uuid_000000000007d60c
	jmp uuid_000000000007d60e
uuid_000000000007d60c:
	push %RBP
	mov -7512(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -7616(%rbp)
	pushq $uuid_000000000007d608
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d609
	jmp uuid_000000000007d60b
uuid_000000000007d609:
	movb $1, -7584(%rbp)
uuid_000000000007d60b:
	mov -7608(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007d60e:
	mov -7600(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007d611:
	mov -7592(%RBP),%RSP
	add $-7616, %RSP
	mov -7584(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d612
	jmp uuid_000000000007d614
uuid_000000000007d612:
	movb $1, -7376(%rbp)
uuid_000000000007d614:
	mov -7504(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007d617:
	mov -7392(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007d61a:
	mov -7384(%RBP),%RSP
	add $-7616, %RSP
	mov -7376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d61b
	jmp uuid_000000000007d61d
uuid_000000000007d61b:
	movb $1, -7160(%rbp)
uuid_000000000007d61d:
	mov -7296(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007d620:
	mov -7176(%RBP),%RSP
	add $-7616, %RSP
uuid_000000000007d623:
	mov -7168(%RBP),%RSP
	add $-7616, %RSP
	mov -7160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6b5
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -7776(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d64e
	jmp uuid_000000000007d650
uuid_000000000007d64e:
	push %RBP
	pushq -7704(%RBP)
	pushq -7712(%RBP)
	pushq -7720(%RBP)
	pushq -7728(%RBP)
	pushq -7736(%RBP)
	pushq -7744(%RBP)
	pushq -7752(%RBP)
	pushq -7760(%RBP)
	pushq -7768(%RBP)
	pushq $0
	push %RBP
	mov -7872(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d62a
	jmp uuid_000000000007d62c
uuid_000000000007d62a:
	push %RBP
	pushq -7816(%RBP)
	pushq -7824(%RBP)
	pushq -7832(%RBP)
	pushq -7840(%RBP)
	pushq -7848(%RBP)
	pushq -7856(%RBP)
	pushq -7864(%RBP)
	jmp uuid_000000000007d627
	jmp uuid_000000000007d629
uuid_000000000007d627:
	push %RBP
	mov -7808(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d624
	jmp uuid_000000000007d626
uuid_000000000007d624:
	movb $1, -7880(%rbp)
uuid_000000000007d626:
	mov -7960(%RBP),%RSP
	add $-7968, %RSP
uuid_000000000007d629:
	mov -7896(%RBP),%RSP
	add $-7968, %RSP
uuid_000000000007d62c:
	mov -7888(%RBP),%RSP
	add $-7968, %RSP
	mov -7880(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d64b
	jmp uuid_000000000007d64d
uuid_000000000007d64b:
	push %RBP
	pushq -7632(%RBP)
	pushq -7640(%RBP)
	pushq -7648(%RBP)
	pushq -7656(%RBP)
	pushq -7664(%RBP)
	pushq -7672(%RBP)
	pushq -7680(%RBP)
	pushq -7688(%RBP)
	pushq -7696(%RBP)
	pushq $0
	push %RBP
	mov -8048(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d645
	jmp uuid_000000000007d647
uuid_000000000007d645:
	push %RBP
	mov -8040(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8144(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d633
	jmp uuid_000000000007d635
uuid_000000000007d633:
	push %RBP
	jmp uuid_000000000007d630
	jmp uuid_000000000007d632
uuid_000000000007d630:
	push %RBP
	mov -8080(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d62d
	jmp uuid_000000000007d62f
uuid_000000000007d62d:
	movb $1, -8152(%rbp)
uuid_000000000007d62f:
	mov -8176(%RBP),%RSP
	add $-8184, %RSP
uuid_000000000007d632:
	mov -8168(%RBP),%RSP
	add $-8184, %RSP
uuid_000000000007d635:
	mov -8160(%RBP),%RSP
	add $-8184, %RSP
	mov -8152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d642
	jmp uuid_000000000007d644
uuid_000000000007d642:
	push %RBP
	mov -8032(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8264(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d63c
	jmp uuid_000000000007d63e
uuid_000000000007d63c:
	push %RBP
	jmp uuid_000000000007d639
	jmp uuid_000000000007d63b
uuid_000000000007d639:
	push %RBP
	mov -8200(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8304(%rbp)
	pushq $uuid_000000000007d608
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d636
	jmp uuid_000000000007d638
uuid_000000000007d636:
	movb $1, -8272(%rbp)
uuid_000000000007d638:
	mov -8296(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007d63b:
	mov -8288(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007d63e:
	mov -8280(%RBP),%RSP
	add $-8304, %RSP
	mov -8272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d63f
	jmp uuid_000000000007d641
uuid_000000000007d63f:
	movb $1, -8056(%rbp)
uuid_000000000007d641:
	mov -8192(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007d644:
	mov -8072(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007d647:
	mov -8064(%RBP),%RSP
	add $-8304, %RSP
	mov -8056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d648
	jmp uuid_000000000007d64a
uuid_000000000007d648:
	movb $1, -7784(%rbp)
uuid_000000000007d64a:
	mov -7976(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007d64d:
	mov -7800(%RBP),%RSP
	add $-8304, %RSP
uuid_000000000007d650:
	mov -7792(%RBP),%RSP
	add $-8304, %RSP
	mov -7784(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6b2
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -8464(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d68e
	jmp uuid_000000000007d690
uuid_000000000007d68e:
	push %RBP
	pushq -8392(%RBP)
	pushq -8400(%RBP)
	pushq -8408(%RBP)
	pushq -8416(%RBP)
	pushq -8424(%RBP)
	pushq -8432(%RBP)
	pushq -8440(%RBP)
	pushq -8448(%RBP)
	pushq -8456(%RBP)
	pushq $0
	push %RBP
	mov -8560(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d657
	jmp uuid_000000000007d659
uuid_000000000007d657:
	push %RBP
	pushq -8504(%RBP)
	pushq -8512(%RBP)
	pushq -8520(%RBP)
	pushq -8528(%RBP)
	pushq -8536(%RBP)
	pushq -8544(%RBP)
	pushq -8552(%RBP)
	jmp uuid_000000000007d654
	jmp uuid_000000000007d656
uuid_000000000007d654:
	push %RBP
	mov -8496(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d651
	jmp uuid_000000000007d653
uuid_000000000007d651:
	movb $1, -8568(%rbp)
uuid_000000000007d653:
	mov -8648(%RBP),%RSP
	add $-8656, %RSP
uuid_000000000007d656:
	mov -8584(%RBP),%RSP
	add $-8656, %RSP
uuid_000000000007d659:
	mov -8576(%RBP),%RSP
	add $-8656, %RSP
	mov -8568(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d68b
	jmp uuid_000000000007d68d
uuid_000000000007d68b:
	push %RBP
	pushq -8320(%RBP)
	pushq -8328(%RBP)
	pushq -8336(%RBP)
	pushq -8344(%RBP)
	pushq -8352(%RBP)
	pushq -8360(%RBP)
	pushq -8368(%RBP)
	pushq -8376(%RBP)
	pushq -8384(%RBP)
	pushq $0
	push %RBP
	mov -8736(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d685
	jmp uuid_000000000007d687
uuid_000000000007d685:
	push %RBP
	mov -8728(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8832(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d660
	jmp uuid_000000000007d662
uuid_000000000007d660:
	push %RBP
	jmp uuid_000000000007d65d
	jmp uuid_000000000007d65f
uuid_000000000007d65d:
	push %RBP
	mov -8768(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d65a
	jmp uuid_000000000007d65c
uuid_000000000007d65a:
	movb $1, -8840(%rbp)
uuid_000000000007d65c:
	mov -8864(%RBP),%RSP
	add $-8872, %RSP
uuid_000000000007d65f:
	mov -8856(%RBP),%RSP
	add $-8872, %RSP
uuid_000000000007d662:
	mov -8848(%RBP),%RSP
	add $-8872, %RSP
	mov -8840(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d682
	jmp uuid_000000000007d684
uuid_000000000007d682:
	push %RBP
	mov -8720(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -8952(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d67c
	jmp uuid_000000000007d67e
uuid_000000000007d67c:
	push %RBP
	mov -8944(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9048(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d669
	jmp uuid_000000000007d66b
uuid_000000000007d669:
	push %RBP
	jmp uuid_000000000007d666
	jmp uuid_000000000007d668
uuid_000000000007d666:
	push %RBP
	mov -8984(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d663
	jmp uuid_000000000007d665
uuid_000000000007d663:
	movb $1, -9056(%rbp)
uuid_000000000007d665:
	mov -9080(%RBP),%RSP
	add $-9088, %RSP
uuid_000000000007d668:
	mov -9072(%RBP),%RSP
	add $-9088, %RSP
uuid_000000000007d66b:
	mov -9064(%RBP),%RSP
	add $-9088, %RSP
	mov -9056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d679
	jmp uuid_000000000007d67b
uuid_000000000007d679:
	push %RBP
	mov -8936(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -9168(%RBP), %RAX
	movq %RAX, %RAX
	movq $6, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d673
	jmp uuid_000000000007d675
uuid_000000000007d673:
	push %RBP
	jmp uuid_000000000007d670
	jmp uuid_000000000007d672
uuid_000000000007d670:
	push %RBP
	mov -9104(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9208(%rbp)
	pushq $uuid_000000000007d66c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d66d
	jmp uuid_000000000007d66f
uuid_000000000007d66d:
	movb $1, -9176(%rbp)
uuid_000000000007d66f:
	mov -9200(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007d672:
	mov -9192(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007d675:
	mov -9184(%RBP),%RSP
	add $-9208, %RSP
	mov -9176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d676
	jmp uuid_000000000007d678
uuid_000000000007d676:
	movb $1, -8960(%rbp)
uuid_000000000007d678:
	mov -9096(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007d67b:
	mov -8976(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007d67e:
	mov -8968(%RBP),%RSP
	add $-9208, %RSP
	mov -8960(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d67f
	jmp uuid_000000000007d681
uuid_000000000007d67f:
	movb $1, -8744(%rbp)
uuid_000000000007d681:
	mov -8880(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007d684:
	mov -8760(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007d687:
	mov -8752(%RBP),%RSP
	add $-9208, %RSP
	mov -8744(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d688
	jmp uuid_000000000007d68a
uuid_000000000007d688:
	movb $1, -8472(%rbp)
uuid_000000000007d68a:
	mov -8664(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007d68d:
	mov -8488(%RBP),%RSP
	add $-9208, %RSP
uuid_000000000007d690:
	mov -8480(%RBP),%RSP
	add $-9208, %RSP
	mov -8472(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6af
	push %RBP
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq $0
	push %RBP
	mov -9368(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6a5
	jmp uuid_000000000007d6a7
uuid_000000000007d6a5:
	push %RBP
	pushq -9296(%RBP)
	pushq -9304(%RBP)
	pushq -9312(%RBP)
	pushq -9320(%RBP)
	pushq -9328(%RBP)
	pushq -9336(%RBP)
	pushq -9344(%RBP)
	pushq -9352(%RBP)
	pushq -9360(%RBP)
	jmp uuid_000000000007d6a2
	jmp uuid_000000000007d6a4
uuid_000000000007d6a2:
	push %RBP
	pushq -9224(%RBP)
	pushq -9232(%RBP)
	pushq -9240(%RBP)
	pushq -9248(%RBP)
	pushq -9256(%RBP)
	pushq -9264(%RBP)
	pushq -9272(%RBP)
	pushq -9280(%RBP)
	pushq -9288(%RBP)
	pushq $0
	push %RBP
	mov -9544(%RBP), %RAX
	movq %RAX, %RAX
	movq $7, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d69c
	jmp uuid_000000000007d69e
uuid_000000000007d69c:
	push %RBP
	jmp uuid_000000000007d699
	jmp uuid_000000000007d69b
uuid_000000000007d699:
	push %RBP
	mov -9480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d696
	jmp uuid_000000000007d698
uuid_000000000007d696:
	movb $1, -9552(%rbp)
uuid_000000000007d698:
	mov -9576(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007d69b:
	mov -9568(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007d69e:
	mov -9560(%RBP),%RSP
	add $-9584, %RSP
	mov -9552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d69f
	jmp uuid_000000000007d6a1
uuid_000000000007d69f:
	movb $1, -9376(%rbp)
uuid_000000000007d6a1:
	mov -9472(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007d6a4:
	mov -9392(%RBP),%RSP
	add $-9584, %RSP
uuid_000000000007d6a7:
	mov -9384(%RBP),%RSP
	add $-9584, %RSP
	mov -9376(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6ac
	push %RBP
	jmp uuid_000000000007d6a9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d6a8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d6ab
uuid_000000000007d6a9:
uuid_000000000007d6ab:
	mov -9592(%RBP),%RSP
	add $-9592, %RSP
	jmp uuid_000000000007d6ae
uuid_000000000007d6ac:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -9584(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
#call function location-of : Arrow<AST,SourceLocation>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9400(%rbp)
	pushq -9408(%rbp)
	pushq -9416(%rbp)
	pushq -9424(%rbp)
	pushq -9432(%rbp)
	pushq -9440(%rbp)
	pushq -9448(%rbp)
	pushq -9456(%rbp)
	pushq -9464(%rbp)
	mov %RBX, %RBP
	call location_SB_of_CL_ArrowSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used32
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	push -104(%RSP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d6ae:
	mov -9216(%RBP),%RSP
	add $-9584, %RSP
	jmp uuid_000000000007d6b1
uuid_000000000007d6af:
	push %RBP
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $unknown_SB_index_SB_of_SB_tag_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d693
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
#call function to-string : Arrow<U64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -9088(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007983d
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq $uuid_000000000007983d
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -9224(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -9224(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<AST,Array<AST,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
#call function parse-type : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d691
	mov %RBX, %RBP
	call parse_SB_type_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	pushq $4
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ASTAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $8
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
#call function clone-rope : Arrow<S,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_000000000007d692
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -8656(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $uuid_0000000000079770
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call clone_SB_rope_CL_ArrowStringS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<Context,Array<Context,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8872(%rbp)
	pushq -9232(%rbp)
#call function with-key : Arrow<Cons<Token,String>,Token>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8592(%rbp)
	pushq -8600(%rbp)
	pushq -8608(%rbp)
	pushq -8616(%rbp)
	pushq -8624(%rbp)
	pushq -8632(%rbp)
	pushq -8640(%rbp)
	pushq -9232(%rbp)
	mov %RBX, %RBP
	call with_SB_key_CL_ArrowTokenConsStringToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used56
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	pushq $6
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	jmp uuid_000000000007d695
uuid_000000000007d693:
uuid_000000000007d695:
	mov -9216(%RBP),%RSP
	add $-9216, %RSP
uuid_000000000007d6b1:
	mov -8312(%RBP),%RSP
	add $-9216, %RSP
	jmp uuid_000000000007d6b4
uuid_000000000007d6b2:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -8184(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -7920(%RBP)
	pushq -7928(%RBP)
	pushq -7936(%RBP)
	pushq -7944(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d6b4:
	mov -7624(%RBP),%RSP
	add $-8304, %RSP
	jmp uuid_000000000007d6b7
uuid_000000000007d6b5:
uuid_000000000007d6b7:
	mov -7000(%RBP),%RSP
	add $-7616, %RSP
	jmp uuid_000000000007d6ba
uuid_000000000007d6b8:
	push %RBP
#call function index-of-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6656(%rbp)
	mov %RBX, %RBP
	call index_SB_of_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	movq $unknown_SB_index_SB_of_SB_tag_CL_U64, %R14
	movq 0(%R14), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d5f3
	jmp uuid_000000000007d5f5
uuid_000000000007d5f3:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -6872(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -6608(%RBP)
	pushq -6616(%RBP)
	pushq -6624(%RBP)
	pushq -6632(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d5f5:
	mov -7000(%RBP),%RSP
	add $-7000, %RSP
uuid_000000000007d6ba:
	mov -6312(%RBP),%RSP
	add $-7000, %RSP
	jmp uuid_000000000007d6bd
uuid_000000000007d6bb:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -6304(%rbp)
	pushq -6184(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5c3
	jmp uuid_000000000007d5c5
uuid_000000000007d5c3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d5c5:
	mov -6312(%RBP),%RSP
	add $-6312, %RSP
uuid_000000000007d6bd:
	mov -5896(%RBP),%RSP
	add $-6312, %RSP
	jmp uuid_000000000007d6c0
uuid_000000000007d6be:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5888(%rbp)
	pushq -5768(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d5a5
	jmp uuid_000000000007d5a7
uuid_000000000007d5a5:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d5a7:
	mov -5896(%RBP),%RSP
	add $-5896, %RSP
uuid_000000000007d6c0:
	mov -5480(%RBP),%RSP
	add $-5896, %RSP
	jmp uuid_000000000007d6c3
uuid_000000000007d6c1:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d6c3:
	mov -5064(%RBP),%RSP
	add $-5472, %RSP
	jmp uuid_000000000007d6c6
uuid_000000000007d6c4:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4992(%rbp)
	pushq -5000(%rbp)
	pushq -5008(%rbp)
	pushq -5016(%rbp)
	pushq -5024(%rbp)
	pushq -5032(%rbp)
	pushq -5040(%rbp)
	pushq -5048(%rbp)
	pushq -5056(%rbp)
	pushq -4704(%rbp)
	pushq -4712(%rbp)
	pushq -4720(%rbp)
	pushq -4728(%rbp)
	pushq -4736(%rbp)
	pushq -4744(%rbp)
	pushq -4752(%rbp)
	pushq -4760(%rbp)
	pushq -4768(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d56b
	jmp uuid_000000000007d56d
uuid_000000000007d56b:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4912(%rbp)
	pushq -4920(%rbp)
	pushq -4928(%rbp)
	pushq -4936(%rbp)
	pushq -4944(%rbp)
	pushq -4952(%rbp)
	pushq -4960(%rbp)
	pushq -4968(%rbp)
	pushq -4976(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	pushq -4672(%rbp)
	pushq -4680(%rbp)
	pushq -4688(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d568
	jmp uuid_000000000007d56a
uuid_000000000007d568:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -5064(%rbp)
	pushq -5072(%rbp)
	pushq -5080(%rbp)
	pushq -5088(%rbp)
	pushq -5096(%rbp)
	pushq -5104(%rbp)
	pushq -5112(%rbp)
	pushq -5120(%rbp)
	pushq -5128(%rbp)
	pushq -5136(%rbp)
	pushq -5144(%rbp)
	pushq -5152(%rbp)
	pushq -5168(%rbp)
	pushq -5176(%rbp)
	pushq -5184(%rbp)
	pushq -5192(%rbp)
	pushq -5200(%rbp)
	pushq -5208(%rbp)
	pushq -5216(%rbp)
	pushq -5224(%rbp)
	pushq -5232(%rbp)
	pushq -5240(%rbp)
	pushq -5248(%rbp)
	pushq -5256(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d56a:
	mov -5264(%RBP),%RSP
	add $-5264, %RSP
uuid_000000000007d56d:
	mov -5160(%RBP),%RSP
	add $-5264, %RSP
uuid_000000000007d6c6:
	mov -4312(%RBP),%RSP
	add $-5264, %RSP
	jmp uuid_000000000007d6c9
uuid_000000000007d6c7:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4240(%rbp)
	pushq -4248(%rbp)
	pushq -4256(%rbp)
	pushq -4264(%rbp)
	pushq -4272(%rbp)
	pushq -4280(%rbp)
	pushq -4288(%rbp)
	pushq -4296(%rbp)
	pushq -4304(%rbp)
	pushq -3984(%rbp)
	pushq -3992(%rbp)
	pushq -4000(%rbp)
	pushq -4008(%rbp)
	pushq -4016(%rbp)
	pushq -4024(%rbp)
	pushq -4032(%rbp)
	pushq -4040(%rbp)
	pushq -4048(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d544
	jmp uuid_000000000007d546
uuid_000000000007d544:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	pushq -4216(%rbp)
	pushq -4224(%rbp)
	pushq -3904(%rbp)
	pushq -3912(%rbp)
	pushq -3920(%rbp)
	pushq -3928(%rbp)
	pushq -3936(%rbp)
	pushq -3944(%rbp)
	pushq -3952(%rbp)
	pushq -3960(%rbp)
	pushq -3968(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d541
	jmp uuid_000000000007d543
uuid_000000000007d541:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4312(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4392(%rbp)
	pushq -4400(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d543:
	mov -4512(%RBP),%RSP
	add $-4512, %RSP
uuid_000000000007d546:
	mov -4408(%RBP),%RSP
	add $-4512, %RSP
uuid_000000000007d6c9:
	mov -3624(%RBP),%RSP
	add $-4512, %RSP
	jmp uuid_000000000007d6cc
uuid_000000000007d6ca:
	push %RBP
#call function preprocess-is-suffixed : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call preprocess_SB_is_SB_suffixed_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function is-lone-tag : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -3296(%rbp)
	mov %RBX, %RBP
	call is_SB_lone_SB_tag_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	orq %R14, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d523
	jmp uuid_000000000007d525
uuid_000000000007d523:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	push %RBP
	pushq -3632(%rbp)
	pushq -3640(%rbp)
	pushq -3648(%rbp)
	pushq -3656(%rbp)
	pushq -3664(%rbp)
	pushq -3672(%rbp)
	pushq -3680(%rbp)
	pushq -3688(%rbp)
	pushq -3696(%rbp)
	pushq -3704(%rbp)
	pushq -3712(%rbp)
	pushq -3720(%rbp)
	pushq -3728(%rbp)
	pushq -3736(%rbp)
	pushq -3744(%rbp)
	pushq -3752(%rbp)
	pushq -3760(%rbp)
	pushq -3768(%rbp)
	pushq -3776(%rbp)
	pushq $0
	push %RBP
	mov -3936(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d516
	jmp uuid_000000000007d518
uuid_000000000007d516:
	push %RBP
	pushq -3864(%RBP)
	pushq -3872(%RBP)
	pushq -3880(%RBP)
	pushq -3888(%RBP)
	pushq -3896(%RBP)
	pushq -3904(%RBP)
	pushq -3912(%RBP)
	pushq -3920(%RBP)
	pushq -3928(%RBP)
	pushq $0
	push %RBP
	mov -4032(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d504
	jmp uuid_000000000007d506
uuid_000000000007d504:
	push %RBP
	mov -4024(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d501
	jmp uuid_000000000007d503
uuid_000000000007d501:
	push %RBP
	mov -4016(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d4fe
	jmp uuid_000000000007d500
uuid_000000000007d4fe:
	movb $1, -4040(%rbp)
uuid_000000000007d500:
	mov -4136(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007d503:
	mov -4056(%RBP),%RSP
	add $-4208, %RSP
uuid_000000000007d506:
	mov -4048(%RBP),%RSP
	add $-4208, %RSP
	mov -4040(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d513
	jmp uuid_000000000007d515
uuid_000000000007d513:
	push %RBP
	pushq -3792(%RBP)
	pushq -3800(%RBP)
	pushq -3808(%RBP)
	pushq -3816(%RBP)
	pushq -3824(%RBP)
	pushq -3832(%RBP)
	pushq -3840(%RBP)
	pushq -3848(%RBP)
	pushq -3856(%RBP)
	pushq $0
	push %RBP
	mov -4288(%RBP), %RAX
	movq %RAX, %RAX
	movq $8, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d50d
	jmp uuid_000000000007d50f
uuid_000000000007d50d:
	push %RBP
	mov -4280(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d50a
	jmp uuid_000000000007d50c
uuid_000000000007d50a:
	push %RBP
	mov -4272(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d507
	jmp uuid_000000000007d509
uuid_000000000007d507:
	movb $1, -4296(%rbp)
uuid_000000000007d509:
	mov -4392(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d50c:
	mov -4312(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d50f:
	mov -4304(%RBP),%RSP
	add $-4464, %RSP
	mov -4296(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d510
	jmp uuid_000000000007d512
uuid_000000000007d510:
	movb $1, -3944(%rbp)
uuid_000000000007d512:
	mov -4216(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d515:
	mov -3960(%RBP),%RSP
	add $-4464, %RSP
uuid_000000000007d518:
	mov -3952(%RBP),%RSP
	add $-4464, %RSP
	mov -3944(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d520
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d51f
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d522
uuid_000000000007d520:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4400(%rbp)
	pushq -4408(%rbp)
	pushq -4416(%rbp)
	pushq -4424(%rbp)
	pushq -4432(%rbp)
	pushq -4440(%rbp)
	pushq -4448(%rbp)
	pushq -4456(%rbp)
	pushq -4464(%rbp)
	pushq -4144(%rbp)
	pushq -4152(%rbp)
	pushq -4160(%rbp)
	pushq -4168(%rbp)
	pushq -4176(%rbp)
	pushq -4184(%rbp)
	pushq -4192(%rbp)
	pushq -4200(%rbp)
	pushq -4208(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d51c
	jmp uuid_000000000007d51e
uuid_000000000007d51c:
#call function try-destructure-macro : Arrow<Cons<Cons<SourceLocation,AST>,AST>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -4320(%rbp)
	pushq -4328(%rbp)
	pushq -4336(%rbp)
	pushq -4344(%rbp)
	pushq -4352(%rbp)
	pushq -4360(%rbp)
	pushq -4368(%rbp)
	pushq -4376(%rbp)
	pushq -4384(%rbp)
	pushq -4064(%rbp)
	pushq -4072(%rbp)
	pushq -4080(%rbp)
	pushq -4088(%rbp)
	pushq -4096(%rbp)
	pushq -4104(%rbp)
	pushq -4112(%rbp)
	pushq -4120(%rbp)
	pushq -4128(%rbp)
	mov %RBX, %RBP
	call try_SB_destructure_SB_macro_CL_ArrowContextConsASTConsASTSourceLocation
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push %RBP
#call function non-zero : Arrow<Context,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Context
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d519
	jmp uuid_000000000007d51b
uuid_000000000007d519:
#call function union : Arrow<Cons<Context,Context>,Context>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -4472(%rbp)
	pushq -4480(%rbp)
	pushq -4488(%rbp)
	pushq -4496(%rbp)
	pushq -4504(%rbp)
	pushq -4512(%rbp)
	pushq -4520(%rbp)
	pushq -4528(%rbp)
	pushq -4536(%rbp)
	pushq -4544(%rbp)
	pushq -4552(%rbp)
	pushq -4560(%rbp)
	pushq -4576(%rbp)
	pushq -4584(%rbp)
	pushq -4592(%rbp)
	pushq -4600(%rbp)
	pushq -4608(%rbp)
	pushq -4616(%rbp)
	pushq -4624(%rbp)
	pushq -4632(%rbp)
	pushq -4640(%rbp)
	pushq -4648(%rbp)
	pushq -4656(%rbp)
	pushq -4664(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowContextConsContextContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used96
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	push -224(%RSP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d51b:
	mov -4672(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007d51e:
	mov -4568(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007d522:
	mov -3784(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007d525:
	mov -3624(%RBP),%RSP
	add $-4672, %RSP
uuid_000000000007d6cc:
	mov -2904(%RBP),%RSP
	add $-4672, %RSP
	jmp uuid_000000000007d6cf
uuid_000000000007d6cd:
#call function close : Arrow<Context+CaseNumber<1>,Array<Context+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -2776(%rbp)
#call function with-location : Arrow<Cons<AST,SourceLocation>,AST>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -2512(%RBP)
	pushq -2520(%RBP)
	pushq -2528(%RBP)
	pushq -2536(%RBP)
	mov %RBX, %RBP
	call with_SB_location_CL_ArrowASTConsSourceLocationAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used72
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	push -136(%RSP)
	pushq $0
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d6cf:
	mov -1808(%RBP),%RSP
	add $-2896, %RSP
	jmp uuid_000000000007d6d2
uuid_000000000007d6d0:
uuid_000000000007d6d2:
	mov -776(%RBP),%RSP
	add $-1800, %RSP
	jmp uuid_000000000007d6d5
uuid_000000000007d6d3:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
uuid_000000000007d6d5:
	mov -440(%RBP),%RSP
	add $-768, %RSP
	subq $96, %rsp
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	addq $96, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
destructure_SB_lhs_CL_ArrowFContextConsFragmentListConsSConsTypeFContext:
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $0
	push %RBP
	mov -480(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6e8
	jmp uuid_000000000007d6ea
uuid_000000000007d6e8:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6d9
	jmp uuid_000000000007d6db
uuid_000000000007d6d9:
	push %RBP
	mov -520(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d6d6
	jmp uuid_000000000007d6d8
uuid_000000000007d6d6:
	movb $1, -536(%rbp)
uuid_000000000007d6d8:
	mov -552(%RBP),%RSP
	add $-560, %RSP
uuid_000000000007d6db:
	mov -544(%RBP),%RSP
	add $-560, %RSP
	mov -536(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6e5
	jmp uuid_000000000007d6e7
uuid_000000000007d6e5:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -592(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6df
	jmp uuid_000000000007d6e1
uuid_000000000007d6df:
	push %RBP
	mov -584(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -624(%rbp)
	pushq $uuid_0000000000079f13
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d6dc
	jmp uuid_000000000007d6de
uuid_000000000007d6dc:
	movb $1, -600(%rbp)
uuid_000000000007d6de:
	mov -616(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007d6e1:
	mov -608(%RBP),%RSP
	add $-624, %RSP
	mov -600(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6e2
	jmp uuid_000000000007d6e4
uuid_000000000007d6e2:
	movb $1, -488(%rbp)
uuid_000000000007d6e4:
	mov -568(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007d6e7:
	mov -504(%RBP),%RSP
	add $-624, %RSP
uuid_000000000007d6ea:
	mov -496(%RBP),%RSP
	add $-624, %RSP
	mov -488(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d744
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq $0
	push %RBP
	mov -656(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d726
	jmp uuid_000000000007d728
uuid_000000000007d726:
	push %RBP
	mov -648(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -704(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d717
	jmp uuid_000000000007d719
uuid_000000000007d717:
	push %RBP
	mov -696(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -752(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d70e
	jmp uuid_000000000007d710
uuid_000000000007d70e:
	push %RBP
	mov -744(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -800(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6ff
	jmp uuid_000000000007d701
uuid_000000000007d6ff:
	push %RBP
	mov -792(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d6fc
	jmp uuid_000000000007d6fe
uuid_000000000007d6fc:
	movb $1, -808(%rbp)
uuid_000000000007d6fe:
	mov -824(%RBP),%RSP
	add $-832, %RSP
uuid_000000000007d701:
	mov -816(%RBP),%RSP
	add $-832, %RSP
	mov -808(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d70b
	jmp uuid_000000000007d70d
uuid_000000000007d70b:
	push %RBP
	mov -736(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -864(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d705
	jmp uuid_000000000007d707
uuid_000000000007d705:
	push %RBP
	mov -856(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -896(%rbp)
	pushq $uuid_0000000000079f13
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d702
	jmp uuid_000000000007d704
uuid_000000000007d702:
	movb $1, -872(%rbp)
uuid_000000000007d704:
	mov -888(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007d707:
	mov -880(%RBP),%RSP
	add $-896, %RSP
	mov -872(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d708
	jmp uuid_000000000007d70a
uuid_000000000007d708:
	movb $1, -760(%rbp)
uuid_000000000007d70a:
	mov -840(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007d70d:
	mov -776(%RBP),%RSP
	add $-896, %RSP
uuid_000000000007d710:
	mov -768(%RBP),%RSP
	add $-896, %RSP
	mov -760(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d714
	jmp uuid_000000000007d716
uuid_000000000007d714:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d711
	jmp uuid_000000000007d713
uuid_000000000007d711:
	movb $1, -712(%rbp)
uuid_000000000007d713:
	mov -904(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007d716:
	mov -728(%RBP),%RSP
	add $-928, %RSP
uuid_000000000007d719:
	mov -720(%RBP),%RSP
	add $-928, %RSP
	mov -712(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d723
	jmp uuid_000000000007d725
uuid_000000000007d723:
	push %RBP
	mov -640(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -960(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d71d
	jmp uuid_000000000007d71f
uuid_000000000007d71d:
	push %RBP
	mov -952(%RBP), %RAX
	push %RAX
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -992(%rbp)
	pushq $uuid_0000000000079f69
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d71a
	jmp uuid_000000000007d71c
uuid_000000000007d71a:
	movb $1, -968(%rbp)
uuid_000000000007d71c:
	mov -984(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007d71f:
	mov -976(%RBP),%RSP
	add $-992, %RSP
	mov -968(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d720
	jmp uuid_000000000007d722
uuid_000000000007d720:
	movb $1, -664(%rbp)
uuid_000000000007d722:
	mov -936(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007d725:
	mov -680(%RBP),%RSP
	add $-992, %RSP
uuid_000000000007d728:
	mov -672(%RBP),%RSP
	add $-992, %RSP
	mov -664(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d741
	push %RBP
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	mov -1024(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d73e
	push %RBP
	jmp uuid_000000000007d73b
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d73a
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d73d
uuid_000000000007d73b:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d739
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<S,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793e3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d73d:
	mov -1032(%RBP),%RSP
	add $-1032, %RSP
	jmp uuid_000000000007d740
uuid_000000000007d73e:
uuid_000000000007d740:
	mov -1000(%RBP),%RSP
	add $-1024, %RSP
	jmp uuid_000000000007d743
uuid_000000000007d741:
#call function p1 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call p1_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	push %RBP
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	pushq $0
	push %RBP
	mov -1360(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d72f
	jmp uuid_000000000007d731
uuid_000000000007d72f:
	push %RBP
	pushq -1208(%RBP)
	pushq -1216(%RBP)
	pushq -1224(%RBP)
	pushq -1232(%RBP)
	pushq -1240(%RBP)
	pushq -1248(%RBP)
	pushq -1256(%RBP)
	pushq -1264(%RBP)
	pushq -1272(%RBP)
	pushq -1280(%RBP)
	pushq -1288(%RBP)
	pushq -1296(%RBP)
	pushq -1304(%RBP)
	pushq -1312(%RBP)
	pushq -1320(%RBP)
	pushq -1328(%RBP)
	pushq -1336(%RBP)
	pushq -1344(%RBP)
	pushq -1352(%RBP)
	jmp uuid_000000000007d72c
	jmp uuid_000000000007d72e
uuid_000000000007d72c:
	push %RBP
	mov -1200(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d729
	jmp uuid_000000000007d72b
uuid_000000000007d729:
	movb $1, -1368(%rbp)
uuid_000000000007d72b:
	mov -1544(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007d72e:
	mov -1384(%RBP),%RSP
	add $-1712, %RSP
uuid_000000000007d731:
	mov -1376(%RBP),%RSP
	add $-1712, %RSP
	mov -1368(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d736
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d735
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d738
uuid_000000000007d736:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1480(%RBP)
	pushq -1488(%RBP)
	pushq -1496(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d732
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d6f4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d734
uuid_000000000007d732:
uuid_000000000007d734:
	mov -1744(%RBP),%RSP
	add $-1744, %RSP
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1000(%rbp)
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1752(%rbp)
	pushq -1760(%rbp)
	pushq -1768(%rbp)
	pushq -1776(%rbp)
	pushq -1784(%rbp)
	pushq -1792(%rbp)
	pushq -1800(%rbp)
	pushq -1808(%rbp)
	pushq -1816(%rbp)
	pushq -1824(%rbp)
	pushq -1832(%rbp)
	pushq -1840(%rbp)
	pushq -1848(%rbp)
	pushq -1856(%rbp)
	pushq -1864(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -832(%rbp)
	pushq -1720(%rbp)
	pushq -1728(%rbp)
	pushq -1736(%rbp)
	pushq -1392(%rbp)
	pushq -1400(%rbp)
	pushq -1408(%rbp)
	pushq -1416(%rbp)
	pushq -1424(%rbp)
	pushq -1432(%rbp)
	pushq -1440(%rbp)
	pushq -1448(%rbp)
	pushq -1456(%rbp)
	pushq -1464(%rbp)
	pushq -1472(%rbp)
	pushq -1480(%rbp)
	pushq -1488(%rbp)
	pushq -1496(%rbp)
	pushq -1504(%rbp)
	pushq -1512(%rbp)
	pushq -1520(%rbp)
	pushq -1528(%rbp)
	pushq -1536(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	movq -1712(%rbp), %r15
	movq %r15, -416(%rbp)
	movq -1704(%rbp), %r15
	movq %r15, -408(%rbp)
	movq -1696(%rbp), %r15
	movq %r15, -400(%rbp)
	movq -1688(%rbp), %r15
	movq %r15, -392(%rbp)
	movq -1680(%rbp), %r15
	movq %r15, -384(%rbp)
	movq -1672(%rbp), %r15
	movq %r15, -376(%rbp)
	movq -1664(%rbp), %r15
	movq %r15, -368(%rbp)
	movq -1656(%rbp), %r15
	movq %r15, -360(%rbp)
	movq -1648(%rbp), %r15
	movq %r15, -352(%rbp)
	movq -1640(%rbp), %r15
	movq %r15, -344(%rbp)
	movq -1632(%rbp), %r15
	movq %r15, -336(%rbp)
	movq -1624(%rbp), %r15
	movq %r15, -328(%rbp)
	movq -1616(%rbp), %r15
	movq %r15, -320(%rbp)
	movq -1608(%rbp), %r15
	movq %r15, -312(%rbp)
	movq -1600(%rbp), %r15
	movq %r15, -304(%rbp)
	movq -1592(%rbp), %r15
	movq %r15, -296(%rbp)
	movq -1584(%rbp), %r15
	movq %r15, -288(%rbp)
	movq -1576(%rbp), %r15
	movq %r15, -280(%rbp)
	movq -1568(%rbp), %r15
	movq %r15, -272(%rbp)
	movq -1560(%rbp), %r15
	movq %r15, -264(%rbp)
	movq -1552(%rbp), %r15
	movq %r15, -256(%rbp)
uuid_000000000007d738:
	mov -1192(%RBP),%RSP
	add $-1864, %RSP
#call function destructure-lhs : Arrow<Cons<Cons<Cons<FContext,Type>,S>,FragmentList>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
#call function p2 : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	mov %RBX, %RBP
	call p2_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	mov %RBX, %RBP
	call destructure_SB_lhs_CL_ArrowFContextConsFragmentListConsSConsTypeFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	push -448(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d743:
	mov -632(%RBP),%RSP
	add $-1864, %RSP
	jmp uuid_000000000007d746
uuid_000000000007d744:
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	push %RBP
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq $0
	push %RBP
	mov -992(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6f1
	jmp uuid_000000000007d6f3
uuid_000000000007d6f1:
	push %RBP
	pushq -840(%RBP)
	pushq -848(%RBP)
	pushq -856(%RBP)
	pushq -864(%RBP)
	pushq -872(%RBP)
	pushq -880(%RBP)
	pushq -888(%RBP)
	pushq -896(%RBP)
	pushq -904(%RBP)
	pushq -912(%RBP)
	pushq -920(%RBP)
	pushq -928(%RBP)
	pushq -936(%RBP)
	pushq -944(%RBP)
	pushq -952(%RBP)
	pushq -960(%RBP)
	pushq -968(%RBP)
	pushq -976(%RBP)
	pushq -984(%RBP)
	jmp uuid_000000000007d6ee
	jmp uuid_000000000007d6f0
uuid_000000000007d6ee:
	push %RBP
	jmp uuid_000000000007d6eb
	jmp uuid_000000000007d6ed
uuid_000000000007d6eb:
	movb $1, -1000(%rbp)
uuid_000000000007d6ed:
	mov -1176(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007d6f0:
	mov -1016(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007d6f3:
	mov -1008(%RBP),%RSP
	add $-1176, %RSP
	mov -1000(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d6f9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d6f8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d6fb
uuid_000000000007d6f9:
#call function with-size : Arrow<Type,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1112(%RBP)
	pushq -1120(%RBP)
	pushq -1128(%RBP)
	mov %RBX, %RBP
	call with_SB_size_CL_ArrowTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -56(%RSP)
	push -56(%RSP)
	push -56(%RSP)
	push %RBP
#call function non-zero : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d6f5
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d6f4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function print : Arrow<Fragment,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function exit : Arrow<U64,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $1
	mov %RBX, %RBP
	call exit_CL_ArrowNilU64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d6f7
uuid_000000000007d6f5:
uuid_000000000007d6f7:
	mov -1208(%RBP),%RSP
	add $-1208, %RSP
#call function unify : Arrow<Cons<Type,Type>,TContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	mov %RBX, %RBP
	call unify_CL_ArrowTContextConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used120
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
	push -80(%RSP)
#call function union : Arrow<Cons<FContext,TContext>,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
	pushq -1272(%rbp)
	pushq -1280(%rbp)
	pushq -1288(%rbp)
	pushq -1296(%rbp)
	pushq -1304(%rbp)
	pushq -1312(%rbp)
	pushq -1320(%rbp)
	pushq -1328(%rbp)
	mov %RBX, %RBP
	call union_CL_ArrowFContextConsTContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	push -352(%RSP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -560(%rbp)
	pushq -1184(%rbp)
	pushq -1192(%rbp)
	pushq -1200(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
	pushq -1080(%rbp)
	pushq -1088(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
	pushq -1120(%rbp)
	pushq -1128(%rbp)
	pushq -1136(%rbp)
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq $0
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d6fb:
	mov -824(%RBP),%RSP
	add $-1328, %RSP
uuid_000000000007d746:
	mov -456(%RBP),%RSP
	add $-1328, %RSP
	subq $200, %rsp
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	popq -600(%rbp)
	popq -608(%rbp)
	popq -616(%rbp)
	popq -624(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $424, %rsp
	ret
fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment:
#call function fragment::set-context : Arrow<Cons<Fragment,FContext>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -272(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	push -384(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-offset : Arrow<Cons<Fragment,I64>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -240(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007b846
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007b846
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007c902
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007c902
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007c902
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_0000000000079a21
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_0000000000079a21
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_0000000000079a21
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007c7eb
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007c7eb
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007c7eb
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007a006
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq $uuid_000000000007a006
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment::get : Arrow<Cons<Fragment,String>,S>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq $uuid_000000000007a006
	mov %RBX, %RBP
	call fragment_CL__CL_get_CL_ArrowSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -192(%RSP)
	push -192(%RSP)
	push -192(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $312, %rsp
	ret
fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragmentList:
uuid_000000000007d754:
#call function non-zero : Arrow<FragmentList,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentList
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d755
	jmp uuid_000000000007d756
uuid_000000000007d755:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq -480(%rbp)
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq $0
	push %RBP
	mov -672(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d74d
	jmp uuid_000000000007d74f
uuid_000000000007d74d:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	pushq -560(%RBP)
	pushq -568(%RBP)
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	pushq -600(%RBP)
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	pushq -632(%RBP)
	pushq -640(%RBP)
	pushq -648(%RBP)
	pushq -656(%RBP)
	pushq -664(%RBP)
	jmp uuid_000000000007d74a
	jmp uuid_000000000007d74c
uuid_000000000007d74a:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d747
	jmp uuid_000000000007d749
uuid_000000000007d747:
	movb $1, -680(%rbp)
uuid_000000000007d749:
	mov -856(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007d74c:
	mov -696(%RBP),%RSP
	add $-1024, %RSP
uuid_000000000007d74f:
	mov -688(%RBP),%RSP
	add $-1024, %RSP
	mov -680(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d751
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d750
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d753
uuid_000000000007d751:
#call function fragment::chain : Arrow<Cons<Fragment,Fragment>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_chain_CL_ArrowFragmentConsFragmentFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	push -336(%RSP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	movq -1024(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -1016(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -1008(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -1000(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -992(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -984(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -976(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -968(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -960(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -952(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -944(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -936(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -928(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -920(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -912(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -904(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -896(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -888(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -880(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -872(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -864(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d753:
	mov -504(%RBP),%RSP
	add $-1024, %RSP
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $152, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d754
uuid_000000000007d756:
	subq $152, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
fragment_CL__CL_expression_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007b846
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fragment_CL__CL_expression_CL_ArrowFragmentS:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $uuid_000000000007b846
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	subq $152, %rsp
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $32, %rsp
	ret
fragment_CL__CL_get_CL_ArrowSConsStringFragment:
	pushq $0
	pushq $0
	pushq $3
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d769
	jmp uuid_000000000007d76b
uuid_000000000007d769:
	push %RBP
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	jmp uuid_000000000007d766
	jmp uuid_000000000007d768
uuid_000000000007d766:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d763
	jmp uuid_000000000007d765
uuid_000000000007d763:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007d760
	jmp uuid_000000000007d762
uuid_000000000007d760:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d75d
	jmp uuid_000000000007d75f
uuid_000000000007d75d:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d75a
	jmp uuid_000000000007d75c
uuid_000000000007d75a:
	push %RBP
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007d757
	jmp uuid_000000000007d759
uuid_000000000007d757:
	movb $1, -512(%rbp)
uuid_000000000007d759:
	mov -872(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d75c:
	mov -816(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d75f:
	mov -800(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d762:
	mov -768(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d765:
	mov -560(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d768:
	mov -528(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d76b:
	mov -520(%RBP),%RSP
	add $-944, %RSP
	mov -512(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d783
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d782
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d785
uuid_000000000007d783:
uuid_000000000007d77f:
#call function non-zero : Arrow<FragmentKV,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64FragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d780
	jmp uuid_000000000007d781
uuid_000000000007d780:
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	push %RBP
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	pushq $0
	push %RBP
	mov -1048(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d775
	jmp uuid_000000000007d777
uuid_000000000007d775:
	push %RBP
	pushq -1024(%RBP)
	pushq -1032(%RBP)
	pushq -1040(%RBP)
	jmp uuid_000000000007d772
	jmp uuid_000000000007d774
uuid_000000000007d772:
	push %RBP
	mov -1016(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d76f
	jmp uuid_000000000007d771
uuid_000000000007d76f:
	push %RBP
	mov -1008(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d76c
	jmp uuid_000000000007d76e
uuid_000000000007d76c:
	movb $1, -1056(%rbp)
uuid_000000000007d76e:
	mov -1120(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d771:
	mov -1104(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d774:
	mov -1072(%RBP),%RSP
	add $-1168, %RSP
uuid_000000000007d777:
	mov -1064(%RBP),%RSP
	add $-1168, %RSP
	mov -1056(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d77c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d77b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d77e
uuid_000000000007d77c:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -1112(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d778
	movq -1168(%rbp), %r15
	movq %r15, -864(%rbp)
	movq -1160(%rbp), %r15
	movq %r15, -856(%rbp)
	movq -1152(%rbp), %r15
	movq %r15, -848(%rbp)
	movq -1144(%rbp), %r15
	movq %r15, -840(%rbp)
	movq -1136(%rbp), %r15
	movq %r15, -832(%rbp)
	movq -1128(%rbp), %r15
	movq %r15, -824(%rbp)
	jmp uuid_000000000007d77a
uuid_000000000007d778:
	movq -1096(%rbp), %r15
	movq %r15, -192(%rbp)
	movq -1088(%rbp), %r15
	movq %r15, -184(%rbp)
	movq -1080(%rbp), %r15
	movq %r15, -176(%rbp)
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	popq -864(%RBP)
	popq -856(%RBP)
	popq -848(%RBP)
	popq -840(%RBP)
	popq -832(%RBP)
	popq -824(%RBP)
uuid_000000000007d77a:
	mov -1176(%RBP),%RSP
	add $-1176, %RSP
uuid_000000000007d77e:
	mov -1000(%RBP),%RSP
	add $-1176, %RSP
	add $48, %rsp
	add $48, %rsp
	add $8, %rsp
	add $24, %rsp
	add $8, %rsp
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d77f
uuid_000000000007d781:
uuid_000000000007d785:
	mov -352(%RBP),%RSP
	add $-944, %RSP
	subq $24, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
fragment_CL__CL_label_CL_ArrowFragmentString:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007b846
	pushq $0
	pushq -8(%rbp)
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq $uuid_000000000007b7df
	pushq $0
	pushq $uuid_00000000000798bc
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
#call function t1 : Arrow<String,Type>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000798bc
	mov %RBX, %RBP
	call t1_CL_ArrowTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used24
	push -40(%RSP)
	push -40(%RSP)
	push -40(%RSP)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	subq $152, %rsp
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $16, %rsp
	ret
fragment_CL__CL_local_SB_variable_CL_ArrowFragmentConsTypeI64:
#call function fragment::new : Arrow<Nil,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_CL__CL_new_CL_ArrowFragmentNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $uuid_000000000007b846
	pushq $0
#call function to-string : Arrow<I64,String>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	mov %RBX, %RBP
	call to_SB_string_CL_ArrowStringI64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
#call function fragment::set : Arrow<Cons<Cons<Fragment,String>,S>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq $uuid_000000000007b7df
	pushq $0
	pushq $uuid_0000000000079eab
	pushq $2
	mov %RBX, %RBP
	call fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	push -216(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
#call function fragment::set-type : Arrow<Cons<Fragment,Type>,Fragment>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used152
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	push -208(%RSP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	subq $152, %rsp
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
fragment_CL__CL_new_CL_ArrowFragmentNil:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $10
#call function close : Arrow<FragmentKV+CaseNumber<1>,Array<FragmentKV+CaseNumber<1>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVCaseNumber1FragmentKVCaseNumber1
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $0
	pushq $3
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function fragment-context::new : Arrow<Nil,FContext>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call fragment_SB_context_CL__CL_new_CL_ArrowFContextNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used200
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	push -32(%RSP)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	pushq $0
	pushq $1
	pushq $0
	subq $152, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -16(%rbp)
	popq -24(%rbp)
	popq -32(%rbp)
	popq -40(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $8, %rsp
	ret
fragment_CL__CL_set_SB_context_CL_ArrowFragmentConsFContextFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -520(%rbp)
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq $0
	push %RBP
	mov -824(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d798
	jmp uuid_000000000007d79a
uuid_000000000007d798:
	push %RBP
	pushq -800(%RBP)
	pushq -808(%RBP)
	pushq -816(%RBP)
	jmp uuid_000000000007d795
	jmp uuid_000000000007d797
uuid_000000000007d795:
	push %RBP
	mov -792(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d792
	jmp uuid_000000000007d794
uuid_000000000007d792:
	push %RBP
	pushq -768(%RBP)
	pushq -776(%RBP)
	pushq -784(%RBP)
	jmp uuid_000000000007d78f
	jmp uuid_000000000007d791
uuid_000000000007d78f:
	push %RBP
	mov -760(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d78c
	jmp uuid_000000000007d78e
uuid_000000000007d78c:
	push %RBP
	mov -752(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d789
	jmp uuid_000000000007d78b
uuid_000000000007d789:
	push %RBP
	pushq -680(%RBP)
	pushq -688(%RBP)
	pushq -696(%RBP)
	pushq -704(%RBP)
	pushq -712(%RBP)
	pushq -720(%RBP)
	pushq -728(%RBP)
	pushq -736(%RBP)
	pushq -744(%RBP)
	jmp uuid_000000000007d786
	jmp uuid_000000000007d788
uuid_000000000007d786:
	movb $1, -832(%rbp)
uuid_000000000007d788:
	mov -1192(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d78b:
	mov -1136(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d78e:
	mov -1120(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d791:
	mov -1088(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d794:
	mov -880(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d797:
	mov -848(%RBP),%RSP
	add $-1264, %RSP
uuid_000000000007d79a:
	mov -840(%RBP),%RSP
	add $-1264, %RSP
	mov -832(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d79c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d79b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d79e
uuid_000000000007d79c:
	pushq -1200(%rbp)
	pushq -1208(%rbp)
	pushq -1216(%rbp)
	pushq -1224(%rbp)
	pushq -1232(%rbp)
	pushq -1240(%rbp)
	pushq -1248(%rbp)
	pushq -1256(%rbp)
	pushq -1264(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -1144(%rbp)
	pushq -1152(%rbp)
	pushq -1160(%rbp)
	pushq -1168(%rbp)
	pushq -1176(%rbp)
	pushq -1184(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -1128(%rbp)
	pushq -1096(%rbp)
	pushq -1104(%rbp)
	pushq -1112(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq $0
	popq -512(%RBP)
	popq -504(%RBP)
	popq -496(%RBP)
	popq -488(%RBP)
	popq -480(%RBP)
	popq -472(%RBP)
	popq -464(%RBP)
	popq -456(%RBP)
	popq -448(%RBP)
	popq -440(%RBP)
	popq -432(%RBP)
	popq -424(%RBP)
	popq -416(%RBP)
	popq -408(%RBP)
	popq -400(%RBP)
	popq -392(%RBP)
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
uuid_000000000007d79e:
	mov -672(%RBP),%RSP
	add $-1264, %RSP
	subq $152, %rsp
	pushq -512(%rbp)
	pushq -504(%rbp)
	pushq -496(%rbp)
	pushq -488(%rbp)
	pushq -480(%rbp)
	pushq -472(%rbp)
	pushq -464(%rbp)
	pushq -456(%rbp)
	pushq -448(%rbp)
	pushq -440(%rbp)
	pushq -432(%rbp)
	pushq -424(%rbp)
	pushq -416(%rbp)
	pushq -408(%rbp)
	pushq -400(%rbp)
	pushq -392(%rbp)
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $360, %rsp
	ret
fragment_CL__CL_set_SB_offset_CL_ArrowFragmentConsI64Fragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
	pushq -472(%rbp)
	pushq $0
	push %RBP
	mov -632(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7b1
	jmp uuid_000000000007d7b3
uuid_000000000007d7b1:
	push %RBP
	pushq -608(%RBP)
	pushq -616(%RBP)
	pushq -624(%RBP)
	jmp uuid_000000000007d7ae
	jmp uuid_000000000007d7b0
uuid_000000000007d7ae:
	push %RBP
	mov -600(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7ab
	jmp uuid_000000000007d7ad
uuid_000000000007d7ab:
	push %RBP
	pushq -576(%RBP)
	pushq -584(%RBP)
	pushq -592(%RBP)
	jmp uuid_000000000007d7a8
	jmp uuid_000000000007d7aa
uuid_000000000007d7a8:
	push %RBP
	mov -568(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d7a5
	jmp uuid_000000000007d7a7
uuid_000000000007d7a5:
	push %RBP
	mov -560(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7a2
	jmp uuid_000000000007d7a4
uuid_000000000007d7a2:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	pushq -512(%RBP)
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	pushq -544(%RBP)
	pushq -552(%RBP)
	jmp uuid_000000000007d79f
	jmp uuid_000000000007d7a1
uuid_000000000007d79f:
	movb $1, -640(%rbp)
uuid_000000000007d7a1:
	mov -1000(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d7a4:
	mov -944(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d7a7:
	mov -928(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d7aa:
	mov -896(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d7ad:
	mov -688(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d7b0:
	mov -656(%RBP),%RSP
	add $-1072, %RSP
uuid_000000000007d7b3:
	mov -648(%RBP),%RSP
	add $-1072, %RSP
	mov -640(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7b5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d7b4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d7b7
uuid_000000000007d7b5:
	pushq -1008(%rbp)
	pushq -1016(%rbp)
	pushq -1024(%rbp)
	pushq -1032(%rbp)
	pushq -1040(%rbp)
	pushq -1048(%rbp)
	pushq -1056(%rbp)
	pushq -1064(%rbp)
	pushq -1072(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -952(%rbp)
	pushq -960(%rbp)
	pushq -968(%rbp)
	pushq -976(%rbp)
	pushq -984(%rbp)
	pushq -992(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	pushq -808(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq $0
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
uuid_000000000007d7b7:
	mov -480(%RBP),%RSP
	add $-1072, %RSP
	subq $152, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
fragment_CL__CL_set_SB_term_CL_ArrowFragmentConsASTFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq $0
	push %RBP
	mov -544(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7ca
	jmp uuid_000000000007d7cc
uuid_000000000007d7ca:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007d7c7
	jmp uuid_000000000007d7c9
uuid_000000000007d7c7:
	push %RBP
	mov -512(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7c4
	jmp uuid_000000000007d7c6
uuid_000000000007d7c4:
	push %RBP
	pushq -488(%RBP)
	pushq -496(%RBP)
	pushq -504(%RBP)
	jmp uuid_000000000007d7c1
	jmp uuid_000000000007d7c3
uuid_000000000007d7c1:
	push %RBP
	mov -480(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d7be
	jmp uuid_000000000007d7c0
uuid_000000000007d7be:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7bb
	jmp uuid_000000000007d7bd
uuid_000000000007d7bb:
	push %RBP
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007d7b8
	jmp uuid_000000000007d7ba
uuid_000000000007d7b8:
	movb $1, -552(%rbp)
uuid_000000000007d7ba:
	mov -912(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d7bd:
	mov -856(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d7c0:
	mov -840(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d7c3:
	mov -808(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d7c6:
	mov -600(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d7c9:
	mov -568(%RBP),%RSP
	add $-984, %RSP
uuid_000000000007d7cc:
	mov -560(%RBP),%RSP
	add $-984, %RSP
	mov -552(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7ce
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d7cd
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d7d0
uuid_000000000007d7ce:
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -864(%rbp)
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -848(%rbp)
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -800(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d7d0:
	mov -392(%RBP),%RSP
	add $-984, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $232, %rsp
	ret
fragment_CL__CL_set_SB_type_CL_ArrowFragmentConsTypeFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7e3
	jmp uuid_000000000007d7e5
uuid_000000000007d7e3:
	push %RBP
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007d7e0
	jmp uuid_000000000007d7e2
uuid_000000000007d7e0:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7dd
	jmp uuid_000000000007d7df
uuid_000000000007d7dd:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007d7da
	jmp uuid_000000000007d7dc
uuid_000000000007d7da:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d7d7
	jmp uuid_000000000007d7d9
uuid_000000000007d7d7:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7d4
	jmp uuid_000000000007d7d6
uuid_000000000007d7d4:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	jmp uuid_000000000007d7d1
	jmp uuid_000000000007d7d3
uuid_000000000007d7d1:
	movb $1, -504(%rbp)
uuid_000000000007d7d3:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7d6:
	mov -808(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7d9:
	mov -792(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7dc:
	mov -760(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7df:
	mov -552(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7e2:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7e5:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7e7
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d7e6
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d7e9
uuid_000000000007d7e7:
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -800(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -528(%rbp)
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d7e9:
	mov -344(%RBP),%RSP
	add $-936, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
fragment_CL__CL_set_SB_vararg_CL_ArrowFragmentConsListArray_QM_FragmentFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq $0
	push %RBP
	mov -496(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d7fc
	jmp uuid_000000000007d7fe
uuid_000000000007d7fc:
	push %RBP
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq -488(%RBP)
	jmp uuid_000000000007d7f9
	jmp uuid_000000000007d7fb
uuid_000000000007d7f9:
	push %RBP
	mov -464(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7f6
	jmp uuid_000000000007d7f8
uuid_000000000007d7f6:
	push %RBP
	pushq -440(%RBP)
	pushq -448(%RBP)
	pushq -456(%RBP)
	jmp uuid_000000000007d7f3
	jmp uuid_000000000007d7f5
uuid_000000000007d7f3:
	push %RBP
	mov -432(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d7f0
	jmp uuid_000000000007d7f2
uuid_000000000007d7f0:
	push %RBP
	mov -424(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d7ed
	jmp uuid_000000000007d7ef
uuid_000000000007d7ed:
	push %RBP
	pushq -352(%RBP)
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	jmp uuid_000000000007d7ea
	jmp uuid_000000000007d7ec
uuid_000000000007d7ea:
	movb $1, -504(%rbp)
uuid_000000000007d7ec:
	mov -864(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7ef:
	mov -808(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7f2:
	mov -792(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7f5:
	mov -760(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7f8:
	mov -552(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7fb:
	mov -520(%RBP),%RSP
	add $-936, %RSP
uuid_000000000007d7fe:
	mov -512(%RBP),%RSP
	add $-936, %RSP
	mov -504(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d800
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d7ff
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d802
uuid_000000000007d800:
	pushq -872(%rbp)
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -816(%rbp)
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -800(%rbp)
	pushq -768(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -560(%rbp)
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d802:
	mov -344(%RBP),%RSP
	add $-936, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $184, %rsp
	ret
fragment_CL__CL_set_CL_ArrowFragmentConsSConsStringFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	push %RBP
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq $0
	push %RBP
	mov -504(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d815
	jmp uuid_000000000007d817
uuid_000000000007d815:
	push %RBP
	pushq -480(%RBP)
	pushq -488(%RBP)
	pushq -496(%RBP)
	jmp uuid_000000000007d812
	jmp uuid_000000000007d814
uuid_000000000007d812:
	push %RBP
	mov -472(%RBP), %RAX
	pushq 192(%RAX)
	pushq 184(%RAX)
	pushq 176(%RAX)
	pushq 168(%RAX)
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d80f
	jmp uuid_000000000007d811
uuid_000000000007d80f:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	jmp uuid_000000000007d80c
	jmp uuid_000000000007d80e
uuid_000000000007d80c:
	push %RBP
	mov -440(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d809
	jmp uuid_000000000007d80b
uuid_000000000007d809:
	push %RBP
	mov -432(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d806
	jmp uuid_000000000007d808
uuid_000000000007d806:
	push %RBP
	pushq -360(%RBP)
	pushq -368(%RBP)
	pushq -376(%RBP)
	pushq -384(%RBP)
	pushq -392(%RBP)
	pushq -400(%RBP)
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	jmp uuid_000000000007d803
	jmp uuid_000000000007d805
uuid_000000000007d803:
	movb $1, -512(%rbp)
uuid_000000000007d805:
	mov -872(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d808:
	mov -816(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d80b:
	mov -800(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d80e:
	mov -768(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d811:
	mov -560(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d814:
	mov -528(%RBP),%RSP
	add $-944, %RSP
uuid_000000000007d817:
	mov -520(%RBP),%RSP
	add $-944, %RSP
	mov -512(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d819
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d818
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d81b
uuid_000000000007d819:
	pushq -880(%rbp)
	pushq -888(%rbp)
	pushq -896(%rbp)
	pushq -904(%rbp)
	pushq -912(%rbp)
	pushq -920(%rbp)
	pushq -928(%rbp)
	pushq -936(%rbp)
	pushq -944(%rbp)
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function close : Arrow<FragmentKV,Array<FragmentKV,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -824(%rbp)
	pushq -832(%rbp)
	pushq -840(%rbp)
	pushq -848(%rbp)
	pushq -856(%rbp)
	pushq -864(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FragmentKVFragmentKV
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -808(%rbp)
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
#call function close : Arrow<FContext,Array<FContext,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -568(%rbp)
	pushq -576(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	pushq -624(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	pushq -656(%rbp)
	pushq -664(%rbp)
	pushq -672(%rbp)
	pushq -680(%rbp)
	pushq -688(%rbp)
	pushq -696(%rbp)
	pushq -704(%rbp)
	pushq -712(%rbp)
	pushq -720(%rbp)
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_FContextFContext
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq -536(%rbp)
	pushq -544(%rbp)
	pushq -552(%rbp)
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d81b:
	mov -352(%RBP),%RSP
	add $-944, %RSP
	subq $152, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	pushq -8(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	popq -232(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	popq -264(%rbp)
	popq -272(%rbp)
	popq -280(%rbp)
	popq -288(%rbp)
	popq -296(%rbp)
	popq -304(%rbp)
	popq -312(%rbp)
	popq -320(%rbp)
	popq -328(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	addq $152, %rsp
	mov %rbp, %rsp
	sub $192, %rsp
	ret
main:
	pushq $1
	pushq $0
	pushq $0
	pushq $3
uuid_000000000007d854:
	movq -32(%RBP), %RAX
	movq -8(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d855
	jmp uuid_000000000007d856
uuid_000000000007d855:
	mov -16(%RBP), %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -80(%rbp)
	pushq $uuid_000000000007d81c
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d851
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -96(%rbp)
	pushq $uuid_000000000007d81d
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d84e
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -112(%rbp)
	pushq $uuid_000000000007d81e
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d84b
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	pushq $uuid_000000000007d81f
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d848
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	pushq $uuid_000000000007d820
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d845
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq $uuid_000000000007d821
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d842
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq $uuid_000000000007d822
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d83f
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq $uuid_000000000007d823
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d83c
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	pushq $uuid_000000000007d824
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d839
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -224(%rbp)
	pushq $uuid_000000000007d825
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d836
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -240(%rbp)
	pushq $uuid_000000000007d826
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d833
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq $uuid_000000000007d827
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d830
	push %RBP
	pushq -64(%rbp)
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -272(%rbp)
	pushq $uuid_000000000007d828
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d82d
	push %RBP
	pushq -64(%rbp)
	jmp uuid_000000000007d82a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d829
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d82c
uuid_000000000007d82a:
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
#call function close : Arrow<S,Array<S,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $0
	pushq -288(%rbp)
	pushq $2
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_SS
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
uuid_000000000007d82c:
	mov -280(%RBP),%RSP
	add $-288, %RSP
	jmp uuid_000000000007d82f
uuid_000000000007d82d:
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	mov -16(%RBP), %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	movq %R15, %r15
	movq $config_SB_target_CL_String, %r14
	movq %r15, 0(%r14)
uuid_000000000007d82f:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	jmp uuid_000000000007d832
uuid_000000000007d830:
	mov $config_SB_profile_SB_invocations_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007d832:
	mov -248(%RBP),%RSP
	add $-256, %RSP
	jmp uuid_000000000007d835
uuid_000000000007d833:
	mov $config_SB_preprocess_CL_U8, %r15
	movb $0, 0(%r15)
uuid_000000000007d835:
	mov -232(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007d838
uuid_000000000007d836:
	mov $config_SB_preprocess_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007d838:
	mov -216(%RBP),%RSP
	add $-224, %RSP
	jmp uuid_000000000007d83b
uuid_000000000007d839:
	mov $config_SB_strict_CL_U8, %r15
	movb $0, 0(%r15)
uuid_000000000007d83b:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	jmp uuid_000000000007d83e
uuid_000000000007d83c:
	mov $config_SB_strict_CL_U8, %r15
	movb $1, 0(%r15)
uuid_000000000007d83e:
	mov -184(%RBP),%RSP
	add $-192, %RSP
	jmp uuid_000000000007d841
uuid_000000000007d83f:
	pushq $0
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007d841:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	jmp uuid_000000000007d844
uuid_000000000007d842:
	pushq $1
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007d844:
	mov -152(%RBP),%RSP
	add $-160, %RSP
	jmp uuid_000000000007d847
uuid_000000000007d845:
	pushq $2
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007d847:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	jmp uuid_000000000007d84a
uuid_000000000007d848:
	pushq $3
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007d84a:
	mov -120(%RBP),%RSP
	add $-128, %RSP
	jmp uuid_000000000007d84d
uuid_000000000007d84b:
	pushq $4
	movq $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %R15
	popq 0(%R15)
uuid_000000000007d84d:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	jmp uuid_000000000007d850
uuid_000000000007d84e:
	pushq $1
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
uuid_000000000007d850:
	mov -88(%RBP),%RSP
	add $-96, %RSP
	jmp uuid_000000000007d853
uuid_000000000007d851:
	pushq $0
	movq $config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1, %R15
	popq 0(%R15)
uuid_000000000007d853:
	mov -72(%RBP),%RSP
	add $-80, %RSP
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007d854
uuid_000000000007d856:
	pushq $1
uuid_000000000007d882:
	mov -64(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d883
	jmp uuid_000000000007d884
uuid_000000000007d883:
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d87f
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d85d
	jmp uuid_000000000007d85f
uuid_000000000007d85d:
	push %RBP
	mov -144(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d85a
	jmp uuid_000000000007d85c
uuid_000000000007d85a:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d857
	jmp uuid_000000000007d859
uuid_000000000007d857:
	movb $1, -160(%rbp)
uuid_000000000007d859:
	mov -208(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007d85c:
	mov -176(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007d85f:
	mov -168(%RBP),%RSP
	add $-232, %RSP
	mov -160(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d87c
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -264(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d86c
	jmp uuid_000000000007d86e
uuid_000000000007d86c:
	push %RBP
	mov -256(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d863
	jmp uuid_000000000007d865
uuid_000000000007d863:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d860
	jmp uuid_000000000007d862
uuid_000000000007d860:
	movb $1, -320(%rbp)
uuid_000000000007d862:
	mov -336(%RBP),%RSP
	add $-344, %RSP
uuid_000000000007d865:
	mov -328(%RBP),%RSP
	add $-344, %RSP
	mov -320(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d869
	jmp uuid_000000000007d86b
uuid_000000000007d869:
	push %RBP
	mov -248(%RBP), %RAX
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d866
	jmp uuid_000000000007d868
uuid_000000000007d866:
	movb $1, -272(%rbp)
uuid_000000000007d868:
	mov -352(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007d86b:
	mov -288(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007d86e:
	mov -280(%RBP),%RSP
	add $-376, %RSP
	mov -272(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d879
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq $0
	push %RBP
	mov -408(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d872
	jmp uuid_000000000007d874
uuid_000000000007d872:
	push %RBP
	mov -400(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007d86f
	jmp uuid_000000000007d871
uuid_000000000007d86f:
	movb $1, -416(%rbp)
uuid_000000000007d871:
	mov -432(%RBP),%RSP
	add $-440, %RSP
uuid_000000000007d874:
	mov -424(%RBP),%RSP
	add $-440, %RSP
	mov -416(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d876
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d875
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d878
uuid_000000000007d876:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -440(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movb $0, -64(%rbp)
uuid_000000000007d878:
	mov -384(%RBP),%RSP
	add $-440, %RSP
	jmp uuid_000000000007d87b
uuid_000000000007d879:
#call function tokenize : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -344(%rbp)
	mov %RBX, %RBP
	call tokenize_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq -376(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007d87b:
	mov -240(%RBP),%RSP
	add $-376, %RSP
	jmp uuid_000000000007d87e
uuid_000000000007d87c:
	movq -232(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -40(%rbp)
uuid_000000000007d87e:
	mov -128(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007d881
uuid_000000000007d87f:
	movb $0, -64(%rbp)
uuid_000000000007d881:
	mov -96(%RBP),%RSP
	add $-120, %RSP
	add $24, %rsp
	add $24, %rsp
	add $8, %RSP
	jmp uuid_000000000007d882
uuid_000000000007d884:
	mov $config_SB_mode_CL_CompileModeCompileModeCaseNumber0, %r15
	pushq 0(%r15)
	push %RBP
	pushq -72(%rbp)
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $4, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d896
	push %RBP
	pushq -72(%rbp)
	mov -104(%RBP), %RAX
	movq %RAX, %RAX
	movq $3, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d893
	push %RBP
	pushq -72(%rbp)
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $2, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d890
	push %RBP
	pushq -72(%rbp)
	mov -136(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d88d
	push %RBP
	pushq -72(%rbp)
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d88a
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d889
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d88c
uuid_000000000007d88a:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typecheck : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call typecheck_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function compile : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call compile_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d88c:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007d88f
uuid_000000000007d88d:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function typecheck : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call typecheck_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d88f:
	mov -128(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007d892
uuid_000000000007d890:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function preprocess : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call preprocess_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d892:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007d895
uuid_000000000007d893:
#call function parse : Arrow<Nil,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov %RBX, %RBP
	call parse_CL_ArrowNilNil
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#call function serialize-ast : Arrow<AST,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call serialize_SB_ast_CL_ArrowNilAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d895:
	mov -96(%RBP),%RSP
	add $-104, %RSP
	jmp uuid_000000000007d898
uuid_000000000007d896:
#call function print : Arrow<List<Token>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	mov $ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1, %r15
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	mov %RBX, %RBP
	call print_CL_ArrowNilListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d898:
	mov -80(%RBP),%RSP
	add $-88, %RSP
	mov %rbp, %rsp
	sub $24, %rsp
	ret
print_CL_ArrowNilListToken:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793c3
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq $0
uuid_000000000007d8ab:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d8ac
	jmp uuid_000000000007d8ad
uuid_000000000007d8ac:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq $0
	push %RBP
	mov -240(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8a1
	jmp uuid_000000000007d8a3
uuid_000000000007d8a1:
	push %RBP
	mov -232(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d89e
	jmp uuid_000000000007d8a0
uuid_000000000007d89e:
	push %RBP
	pushq -176(%RBP)
	pushq -184(%RBP)
	pushq -192(%RBP)
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	jmp uuid_000000000007d89b
	jmp uuid_000000000007d89d
uuid_000000000007d89b:
	movb $1, -248(%rbp)
uuid_000000000007d89d:
	mov -344(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007d8a0:
	mov -264(%RBP),%RSP
	add $-400, %RSP
uuid_000000000007d8a3:
	mov -256(%RBP),%RSP
	add $-400, %RSP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8a8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d8a7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d8aa
uuid_000000000007d8a8:
	push %RBP
	mov -88(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8a4
	jmp uuid_000000000007d8a6
uuid_000000000007d8a4:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007972f
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8a6:
	mov -408(%RBP),%RSP
	add $-408, %RSP
#call function print : Arrow<Token,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	mov %RBX, %RBP
	call print_CL_ArrowNilToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movb $1, -88(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -328(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -320(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -312(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -304(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -296(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -288(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -280(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -272(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d8aa:
	mov -168(%RBP),%RSP
	add $-408, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d8ab
uuid_000000000007d8ad:
#call function print : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_00000000000793c4
	mov %RBX, %RBP
	call print_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64ListToken:
	mov $1, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_SS:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FContextFContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $200
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -200(%rbp), %r15
	movq %r15, 0(%r14)
	movq -192(%rbp), %r15
	movq %r15, 8(%r14)
	movq -184(%rbp), %r15
	movq %r15, 16(%r14)
	movq -176(%rbp), %r15
	movq %r15, 24(%r14)
	movq -168(%rbp), %r15
	movq %r15, 32(%r14)
	movq -160(%rbp), %r15
	movq %r15, 40(%r14)
	movq -152(%rbp), %r15
	movq %r15, 48(%r14)
	movq -144(%rbp), %r15
	movq %r15, 56(%r14)
	movq -136(%rbp), %r15
	movq %r15, 64(%r14)
	movq -128(%rbp), %r15
	movq %r15, 72(%r14)
	movq -120(%rbp), %r15
	movq %r15, 80(%r14)
	movq -112(%rbp), %r15
	movq %r15, 88(%r14)
	movq -104(%rbp), %r15
	movq %r15, 96(%r14)
	movq -96(%rbp), %r15
	movq %r15, 104(%r14)
	movq -88(%rbp), %r15
	movq %r15, 112(%r14)
	movq -80(%rbp), %r15
	movq %r15, 120(%r14)
	movq -72(%rbp), %r15
	movq %r15, 128(%r14)
	movq -64(%rbp), %r15
	movq %r15, 136(%r14)
	movq -56(%rbp), %r15
	movq %r15, 144(%r14)
	movq -48(%rbp), %r15
	movq %r15, 152(%r14)
	movq -40(%rbp), %r15
	movq %r15, 160(%r14)
	movq -32(%rbp), %r15
	movq %r15, 168(%r14)
	movq -24(%rbp), %r15
	movq %r15, 176(%r14)
	movq -16(%rbp), %r15
	movq %r15, 184(%r14)
	movq -8(%rbp), %r15
	movq %r15, 192(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
close_CL_ArrowArray_QM_FragmentKVFragmentKV:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_FragmentKVCaseNumber1FragmentKVCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_ContextCaseNumber1ContextCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
close_CL_ArrowArray_QM_ContextContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
close_CL_ArrowArray_QM_ASTAST:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
non_SB_zero_CL_ArrowU64ListArray_QM_Fragment:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64ListFragment:
	mov $1, %RAX
	pushq %RAX
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
is_CL_ArrowU64ConsSized8Sized8:
	pushq $0
	pushq $1
uuid_000000000007d8b5:
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $8
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -32(%RBP), %RAX
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8b6
	jmp uuid_000000000007d8b7
uuid_000000000007d8b6:
	mov %RBP, %R15
	add $-8, %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	mov %RBP, %R15
	add $-16, %R15
	mov -32(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	movq -48(%RBP), %RAX
	movq -56(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8b2
	movq $0, -40(%rbp)
	jmp uuid_000000000007d8b4
uuid_000000000007d8b2:
uuid_000000000007d8b4:
	mov -64(%RBP),%RSP
	add $-64, %RSP
	movq -32(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -32(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007d8b5
uuid_000000000007d8b7:
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
close_CL_ArrowArray_QM_SCaseNumber3SCaseNumber3:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FragmentListCaseNumber1FragmentListCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_FragmentListFragmentList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_TypeType:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_StringStringListStringStringList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $32
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -32(%rbp), %r15
	movq %r15, 0(%r14)
	movq -24(%rbp), %r15
	movq %r15, 8(%r14)
	movq -16(%rbp), %r15
	movq %r15, 16(%r14)
	movq -8(%rbp), %r15
	movq %r15, 24(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $40, %rsp
	ret
reverse_CL_ArrowListTokenListToken:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007d8c9:
#call function non-zero : Arrow<List<Token>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d8ca
	jmp uuid_000000000007d8cb
uuid_000000000007d8ca:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq $0
	push %RBP
	mov -304(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8c2
	jmp uuid_000000000007d8c4
uuid_000000000007d8c2:
	push %RBP
	mov -296(%RBP), %RAX
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8bf
	jmp uuid_000000000007d8c1
uuid_000000000007d8bf:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq -280(%RBP)
	pushq -288(%RBP)
	jmp uuid_000000000007d8bc
	jmp uuid_000000000007d8be
uuid_000000000007d8bc:
	movb $1, -312(%rbp)
uuid_000000000007d8be:
	mov -408(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007d8c1:
	mov -328(%RBP),%RSP
	add $-464, %RSP
uuid_000000000007d8c4:
	mov -320(%RBP),%RSP
	add $-464, %RSP
	mov -312(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8c6
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d8c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d8c8
uuid_000000000007d8c6:
	pushq -416(%rbp)
	pushq -424(%rbp)
	pushq -432(%rbp)
	pushq -440(%rbp)
	pushq -448(%rbp)
	pushq -456(%rbp)
	pushq -464(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	movq -400(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -392(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -384(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -376(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -368(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -360(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -352(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -344(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -336(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d8c8:
	mov -232(%RBP),%RSP
	add $-464, %RSP
	add $72, %rsp
	add $72, %rsp
	add $8, %rsp
	add $72, %rsp
	add $56, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d8c9
uuid_000000000007d8cb:
	subq $72, %rsp
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_ListTokenListTokenListTokenListToken:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListTokenConsListTokenToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function close : Arrow<List<Token>,Array<List<Token>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTokenListToken
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	subq $72, %rsp
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
head_CL_ArrowTokenListToken:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8db
	push %RBP
	jmp uuid_000000000007d8d8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d8d7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d8da
uuid_000000000007d8d8:
uuid_000000000007d8da:
	mov -240(%RBP),%RSP
	add $-240, %RSP
	jmp uuid_000000000007d8dd
uuid_000000000007d8db:
#call function fail : Arrow<String,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_000000000007d8d6
	mov %RBX, %RBP
	call fail_CL_ArrowNilString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
uuid_000000000007d8dd:
	mov -160(%RBP),%RSP
	add $-232, %RSP
	pushq -8(%RBP)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	subq $56, %rsp
	pushq 56(%rsp)
	pushq 72(%rsp)
	pushq 88(%rsp)
	pushq 104(%rsp)
	pushq 120(%rsp)
	pushq 136(%rsp)
	pushq 152(%rsp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	popq -136(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_ListTypeListType:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	movq -32(%rbp), %r15
	movq %r15, 8(%r14)
	movq -24(%rbp), %r15
	movq %r15, 16(%r14)
	movq -16(%rbp), %r15
	movq %r15, 24(%r14)
	movq -8(%rbp), %r15
	movq %r15, 32(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
cons_CL_ArrowListTypeConsListTypeType:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	subq $40, %rsp
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	pushq -40(%rbp)
	pushq -32(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $72, %rsp
	ret
close_CL_ArrowArray_QM_ListTypeListTypeCaseNumber1ListTypeListTypeCaseNumber1:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $40
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -40(%rbp), %r15
	movq %r15, 0(%r14)
	movq -32(%rbp), %r15
	movq %r15, 8(%r14)
	movq -24(%rbp), %r15
	movq %r15, 16(%r14)
	movq -16(%rbp), %r15
	movq %r15, 24(%r14)
	movq -8(%rbp), %r15
	movq %r15, 32(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
close_CL_ArrowArray_QM_SfxListSfxList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
close_CL_ArrowArray_QM_MacroListMacroList:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_ASTCaseNumber9ASTCaseNumber9:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
max_CL_ArrowI64ConsI64I64:
	push %RBP
#call function < : Arrow<Cons<I64,I64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	mov %RBX, %RBP
	call _LT__CL_ArrowU64ConsI64I64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d8e9
	jmp uuid_000000000007d8eb
uuid_000000000007d8e9:
	movq -16(%rbp), %r15
	movq %r15, -8(%rbp)
	mov -16(%rbp), %r15
	mov %r15, -8(%rbp)
uuid_000000000007d8eb:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
close_CL_ArrowArray_QM_ListTokenListToken:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListStringConsListStringString:
	pushq -8(%rbp)
#call function close : Arrow<List<String>,Array<List<String>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListStringListString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
close_CL_ArrowArray_QM_ListStringListString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
non_SB_zero_CL_ArrowU64ListString:
	mov $1, %RAX
	pushq %RAX
	mov -24(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
cons_CL_ArrowListArray_QM_FragmentConsListArray_QM_FragmentArray_QM_Fragment:
	pushq -8(%rbp)
#call function close : Arrow<List<Array<Fragment,?>>,Array<List<Array<Fragment,?>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListArray_QM_FragmentListArray_QM_Fragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	subq $24, %rsp
	pushq -32(%rbp)
	pushq -24(%rbp)
	pushq -16(%rbp)
	popq -48(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $40, %rsp
	ret
close_CL_ArrowArray_QM_ListArray_QM_FragmentListArray_QM_Fragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $24
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -24(%rbp), %r15
	movq %r15, 0(%r14)
	movq -16(%rbp), %r15
	movq %r15, 8(%r14)
	movq -8(%rbp), %r15
	movq %r15, 16(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_FragmentFragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $152
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -152(%rbp), %r15
	movq %r15, 0(%r14)
	movq -144(%rbp), %r15
	movq %r15, 8(%r14)
	movq -136(%rbp), %r15
	movq %r15, 16(%r14)
	movq -128(%rbp), %r15
	movq %r15, 24(%r14)
	movq -120(%rbp), %r15
	movq %r15, 32(%r14)
	movq -112(%rbp), %r15
	movq %r15, 40(%r14)
	movq -104(%rbp), %r15
	movq %r15, 48(%r14)
	movq -96(%rbp), %r15
	movq %r15, 56(%r14)
	movq -88(%rbp), %r15
	movq %r15, 64(%r14)
	movq -80(%rbp), %r15
	movq %r15, 72(%r14)
	movq -72(%rbp), %r15
	movq %r15, 80(%r14)
	movq -64(%rbp), %r15
	movq %r15, 88(%r14)
	movq -56(%rbp), %r15
	movq %r15, 96(%r14)
	movq -48(%rbp), %r15
	movq %r15, 104(%r14)
	movq -40(%rbp), %r15
	movq %r15, 112(%r14)
	movq -32(%rbp), %r15
	movq %r15, 120(%r14)
	movq -24(%rbp), %r15
	movq %r15, 128(%r14)
	movq -16(%rbp), %r15
	movq %r15, 136(%r14)
	movq -8(%rbp), %r15
	movq %r15, 144(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $160, %rsp
	ret
_DT_length_CL_ArrowU64ListFragment:
	pushq $0
uuid_000000000007d905:
#call function non-zero : Arrow<List<Fragment>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d906
	jmp uuid_000000000007d907
uuid_000000000007d906:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	push %RBP
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq $0
	push %RBP
	mov -528(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d8fe
	jmp uuid_000000000007d900
uuid_000000000007d8fe:
	push %RBP
	mov -520(%RBP), %RAX
	pushq 160(%RAX)
	pushq 152(%RAX)
	pushq 144(%RAX)
	pushq 136(%RAX)
	pushq 128(%RAX)
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d8fb
	jmp uuid_000000000007d8fd
uuid_000000000007d8fb:
	push %RBP
	jmp uuid_000000000007d8f8
	jmp uuid_000000000007d8fa
uuid_000000000007d8f8:
	movb $1, -536(%rbp)
uuid_000000000007d8fa:
	mov -728(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007d8fd:
	mov -552(%RBP),%RSP
	add $-728, %RSP
uuid_000000000007d900:
	mov -544(%RBP),%RSP
	add $-728, %RSP
	mov -536(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d902
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d901
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d904
uuid_000000000007d902:
	movq -720(%rbp), %r15
	movq %r15, -168(%rbp)
	movq -712(%rbp), %r15
	movq %r15, -160(%rbp)
	movq -704(%rbp), %r15
	movq %r15, -152(%rbp)
	movq -696(%rbp), %r15
	movq %r15, -144(%rbp)
	movq -688(%rbp), %r15
	movq %r15, -136(%rbp)
	movq -680(%rbp), %r15
	movq %r15, -128(%rbp)
	movq -672(%rbp), %r15
	movq %r15, -120(%rbp)
	movq -664(%rbp), %r15
	movq %r15, -112(%rbp)
	movq -656(%rbp), %r15
	movq %r15, -104(%rbp)
	movq -648(%rbp), %r15
	movq %r15, -96(%rbp)
	movq -640(%rbp), %r15
	movq %r15, -88(%rbp)
	movq -632(%rbp), %r15
	movq %r15, -80(%rbp)
	movq -624(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -616(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -608(%rbp), %r15
	movq %r15, -56(%rbp)
	movq -600(%rbp), %r15
	movq %r15, -48(%rbp)
	movq -592(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -584(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -576(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -568(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -560(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d904:
	mov -360(%RBP),%RSP
	add $-728, %RSP
	movq -184(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -184(%rbp)
	add $168, %rsp
	add $168, %rsp
	add $8, %rsp
	add $168, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d905
uuid_000000000007d907:
	mov -184(%rbp), %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
cons_CL_ArrowListFragmentConsListFragmentFragment:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
#call function close : Arrow<List<Fragment>,Array<List<Fragment>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListFragmentListFragment
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	popq -184(%RBP)
	popq -176(%RBP)
	popq -168(%RBP)
	popq -160(%RBP)
	subq $168, %rsp
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	pushq -184(%rbp)
	pushq -176(%rbp)
	pushq -168(%rbp)
	pushq -160(%rbp)
	popq -336(%rbp)
	popq -344(%rbp)
	popq -352(%rbp)
	popq -360(%rbp)
	popq -368(%rbp)
	popq -376(%rbp)
	popq -384(%rbp)
	popq -392(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	addq $168, %rsp
	mov %rbp, %rsp
	sub $328, %rsp
	ret
close_CL_ArrowArray_QM_ListFragmentListFragment:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $168
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -168(%rbp), %r15
	movq %r15, 0(%r14)
	movq -160(%rbp), %r15
	movq %r15, 8(%r14)
	movq -152(%rbp), %r15
	movq %r15, 16(%r14)
	movq -144(%rbp), %r15
	movq %r15, 24(%r14)
	movq -136(%rbp), %r15
	movq %r15, 32(%r14)
	movq -128(%rbp), %r15
	movq %r15, 40(%r14)
	movq -120(%rbp), %r15
	movq %r15, 48(%r14)
	movq -112(%rbp), %r15
	movq %r15, 56(%r14)
	movq -104(%rbp), %r15
	movq %r15, 64(%r14)
	movq -96(%rbp), %r15
	movq %r15, 72(%r14)
	movq -88(%rbp), %r15
	movq %r15, 80(%r14)
	movq -80(%rbp), %r15
	movq %r15, 88(%r14)
	movq -72(%rbp), %r15
	movq %r15, 96(%r14)
	movq -64(%rbp), %r15
	movq %r15, 104(%r14)
	movq -56(%rbp), %r15
	movq %r15, 112(%r14)
	movq -48(%rbp), %r15
	movq %r15, 120(%r14)
	movq -40(%rbp), %r15
	movq %r15, 128(%r14)
	movq -32(%rbp), %r15
	movq %r15, 136(%r14)
	movq -24(%rbp), %r15
	movq %r15, 144(%r14)
	movq -16(%rbp), %r15
	movq %r15, 152(%r14)
	movq -8(%rbp), %r15
	movq %r15, 160(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $176, %rsp
	ret
close_CL_ArrowArray_QM_TContextTContext:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $120
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -120(%rbp), %r15
	movq %r15, 0(%r14)
	movq -112(%rbp), %r15
	movq %r15, 8(%r14)
	movq -104(%rbp), %r15
	movq %r15, 16(%r14)
	movq -96(%rbp), %r15
	movq %r15, 24(%r14)
	movq -88(%rbp), %r15
	movq %r15, 32(%r14)
	movq -80(%rbp), %r15
	movq %r15, 40(%r14)
	movq -72(%rbp), %r15
	movq %r15, 48(%r14)
	movq -64(%rbp), %r15
	movq %r15, 56(%r14)
	movq -56(%rbp), %r15
	movq %r15, 64(%r14)
	movq -48(%rbp), %r15
	movq %r15, 72(%r14)
	movq -40(%rbp), %r15
	movq %r15, 80(%r14)
	movq -32(%rbp), %r15
	movq %r15, 88(%r14)
	movq -24(%rbp), %r15
	movq %r15, 96(%r14)
	movq -16(%rbp), %r15
	movq %r15, 104(%r14)
	movq -8(%rbp), %r15
	movq %r15, 112(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
_DT_bind_CL_ArrowNilConsTypeConsStringArray_QM_BTreeEqTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,Type>,Array<BTreeEq<String,Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqTypeStringBTreeEqTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007d918:
	mov -64(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d919
	jmp uuid_000000000007d91a
uuid_000000000007d919:
	mov -8(%rbp), %r15
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq -56(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d915
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d912
	mov -120(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007d914
uuid_000000000007d912:
	mov -72(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -64(%rbp)
uuid_000000000007d914:
	mov -152(%RBP),%RSP
	add $-152, %RSP
	jmp uuid_000000000007d917
uuid_000000000007d915:
	push %RBP
	mov -128(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d90f
	mov -128(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007d911
uuid_000000000007d90f:
	mov -72(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -64(%rbp)
uuid_000000000007d911:
	mov -152(%RBP),%RSP
	add $-152, %RSP
uuid_000000000007d917:
	mov -144(%RBP),%RSP
	add $-152, %RSP
	add $64, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d918
uuid_000000000007d91a:
	mov %rbp, %rsp
	sub $48, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqTypeStringBTreeEqTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $64
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -64(%rbp), %r15
	movq %r15, 0(%r14)
	movq -56(%rbp), %r15
	movq %r15, 8(%r14)
	movq -48(%rbp), %r15
	movq %r15, 16(%r14)
	movq -40(%rbp), %r15
	movq %r15, 24(%r14)
	movq -32(%rbp), %r15
	movq %r15, 32(%r14)
	movq -24(%rbp), %r15
	movq %r15, 40(%r14)
	movq -16(%rbp), %r15
	movq %r15, 48(%r14)
	movq -8(%rbp), %r15
	movq %r15, 56(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
non_SB_zero_CL_ArrowU64ListStackToSpecialize:
	mov $1, %RAX
	pushq %RAX
	mov -200(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
max_CL_ArrowU64ConsU64U64:
	push %RBP
	movq -8(%RBP), %RAX
	movq -16(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d923
	jmp uuid_000000000007d925
uuid_000000000007d923:
	movq -16(%rbp), %r15
	movq %r15, -8(%rbp)
	mov -16(%rbp), %r15
	mov %r15, -8(%rbp)
uuid_000000000007d925:
	mov -32(%RBP),%RSP
	add $-32, %RSP
	mov -8(%rbp), %RAX
	mov %rbp, %rsp
	sub $24, %rsp
	ret
cons_CL_ArrowListStackToSpecializeConsListStackToSpecializeStackToSpecialize:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
#call function close : Arrow<List<StackToSpecialize>,Array<List<StackToSpecialize>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	pushq -216(%rbp)
	pushq -224(%rbp)
	pushq -232(%rbp)
	pushq -240(%rbp)
	pushq -248(%rbp)
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -280(%rbp)
	pushq -288(%rbp)
	pushq -296(%rbp)
	pushq -304(%rbp)
	pushq -312(%rbp)
	pushq -320(%rbp)
	pushq -328(%rbp)
	pushq -336(%rbp)
	pushq -344(%rbp)
	pushq -352(%rbp)
	pushq -360(%rbp)
	pushq -368(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListStackToSpecializeListStackToSpecialize
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -384(%RBP)
	popq -376(%RBP)
	popq -368(%RBP)
	popq -360(%RBP)
	popq -352(%RBP)
	popq -344(%RBP)
	popq -336(%RBP)
	popq -328(%RBP)
	popq -320(%RBP)
	popq -312(%RBP)
	popq -304(%RBP)
	popq -296(%RBP)
	popq -288(%RBP)
	popq -280(%RBP)
	popq -272(%RBP)
	popq -264(%RBP)
	popq -256(%RBP)
	popq -248(%RBP)
	popq -240(%RBP)
	popq -232(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	popq -200(%RBP)
	popq -192(%RBP)
	subq $200, %rsp
	pushq -384(%rbp)
	pushq -376(%rbp)
	pushq -368(%rbp)
	pushq -360(%rbp)
	pushq -352(%rbp)
	pushq -344(%rbp)
	pushq -336(%rbp)
	pushq -328(%rbp)
	pushq -320(%rbp)
	pushq -312(%rbp)
	pushq -304(%rbp)
	pushq -296(%rbp)
	pushq -288(%rbp)
	pushq -280(%rbp)
	pushq -272(%rbp)
	pushq -264(%rbp)
	pushq -256(%rbp)
	pushq -248(%rbp)
	pushq -240(%rbp)
	pushq -232(%rbp)
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	pushq -200(%rbp)
	pushq -192(%rbp)
	popq -400(%rbp)
	popq -408(%rbp)
	popq -416(%rbp)
	popq -424(%rbp)
	popq -432(%rbp)
	popq -440(%rbp)
	popq -448(%rbp)
	popq -456(%rbp)
	popq -464(%rbp)
	popq -472(%rbp)
	popq -480(%rbp)
	popq -488(%rbp)
	popq -496(%rbp)
	popq -504(%rbp)
	popq -512(%rbp)
	popq -520(%rbp)
	popq -528(%rbp)
	popq -536(%rbp)
	popq -544(%rbp)
	popq -552(%rbp)
	popq -560(%rbp)
	popq -568(%rbp)
	popq -576(%rbp)
	popq -584(%rbp)
	popq -592(%rbp)
	addq $200, %rsp
	mov %rbp, %rsp
	sub $392, %rsp
	ret
close_CL_ArrowArray_QM_ListStackToSpecializeListStackToSpecialize:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $200
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -200(%rbp), %r15
	movq %r15, 0(%r14)
	movq -192(%rbp), %r15
	movq %r15, 8(%r14)
	movq -184(%rbp), %r15
	movq %r15, 16(%r14)
	movq -176(%rbp), %r15
	movq %r15, 24(%r14)
	movq -168(%rbp), %r15
	movq %r15, 32(%r14)
	movq -160(%rbp), %r15
	movq %r15, 40(%r14)
	movq -152(%rbp), %r15
	movq %r15, 48(%r14)
	movq -144(%rbp), %r15
	movq %r15, 56(%r14)
	movq -136(%rbp), %r15
	movq %r15, 64(%r14)
	movq -128(%rbp), %r15
	movq %r15, 72(%r14)
	movq -120(%rbp), %r15
	movq %r15, 80(%r14)
	movq -112(%rbp), %r15
	movq %r15, 88(%r14)
	movq -104(%rbp), %r15
	movq %r15, 96(%r14)
	movq -96(%rbp), %r15
	movq %r15, 104(%r14)
	movq -88(%rbp), %r15
	movq %r15, 112(%r14)
	movq -80(%rbp), %r15
	movq %r15, 120(%r14)
	movq -72(%rbp), %r15
	movq %r15, 128(%r14)
	movq -64(%rbp), %r15
	movq %r15, 136(%r14)
	movq -56(%rbp), %r15
	movq %r15, 144(%r14)
	movq -48(%rbp), %r15
	movq %r15, 152(%r14)
	movq -40(%rbp), %r15
	movq %r15, 160(%r14)
	movq -32(%rbp), %r15
	movq %r15, 168(%r14)
	movq -24(%rbp), %r15
	movq %r15, 176(%r14)
	movq -16(%rbp), %r15
	movq %r15, 184(%r14)
	movq -8(%rbp), %r15
	movq %r15, 192(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $208, %rsp
	ret
non_SB_zero_CL_ArrowU64ListType:
	mov $1, %RAX
	pushq %RAX
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_AD__CL_ArrowListTypeConsListTypeListType:
#call function reverse : Arrow<List<Type>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call reverse_CL_ArrowListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	push -72(%RSP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
uuid_000000000007d93f:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d940
	jmp uuid_000000000007d941
uuid_000000000007d940:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d938
	jmp uuid_000000000007d93a
uuid_000000000007d938:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d935
	jmp uuid_000000000007d937
uuid_000000000007d935:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007d932
	jmp uuid_000000000007d934
uuid_000000000007d932:
	movb $1, -184(%rbp)
uuid_000000000007d934:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007d937:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007d93a:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d93c
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d93b
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d93e
uuid_000000000007d93c:
#call function cons : Arrow<Cons<Type,List<Type>>,List<Type>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call cons_CL_ArrowListTypeConsListTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
#YesIsUsed Used40
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	push -96(%RSP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	movq -240(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d93e:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d93f
uuid_000000000007d941:
	subq $40, %rsp
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	pushq -48(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $88, %rsp
	ret
reverse_CL_ArrowListTypeListType:
	pushq $0
	pushq $0
	pushq $0
	pushq $0
	pushq $1
uuid_000000000007d952:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d953
	jmp uuid_000000000007d954
uuid_000000000007d953:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq $0
	push %RBP
	mov -176(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d94c
	jmp uuid_000000000007d94e
uuid_000000000007d94c:
	push %RBP
	mov -168(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d949
	jmp uuid_000000000007d94b
uuid_000000000007d949:
	push %RBP
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq -160(%RBP)
	jmp uuid_000000000007d946
	jmp uuid_000000000007d948
uuid_000000000007d946:
	movb $1, -184(%rbp)
uuid_000000000007d948:
	mov -248(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007d94b:
	mov -200(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007d94e:
	mov -192(%RBP),%RSP
	add $-272, %RSP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d94f
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d8c5
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d951
uuid_000000000007d94f:
	pushq -256(%rbp)
	pushq -264(%rbp)
	pushq -272(%rbp)
#call function close : Arrow<List<Type>,Array<List<Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	movq -240(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -232(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d951:
	mov -136(%RBP),%RSP
	add $-272, %RSP
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $24, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d952
uuid_000000000007d954:
	subq $40, %rsp
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -56(%rbp)
	popq -64(%rbp)
	popq -72(%rbp)
	popq -80(%rbp)
	popq -88(%rbp)
	addq $40, %rsp
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_length_CL_ArrowU64ListType:
	pushq $0
uuid_000000000007d963:
#call function non-zero : Arrow<List<Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	mov %RBX, %RBP
	call non_SB_zero_CL_ArrowU64ListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d964
	jmp uuid_000000000007d965
uuid_000000000007d964:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d95d
	jmp uuid_000000000007d95f
uuid_000000000007d95d:
	push %RBP
	mov -136(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d95a
	jmp uuid_000000000007d95c
uuid_000000000007d95a:
	push %RBP
	jmp uuid_000000000007d957
	jmp uuid_000000000007d959
uuid_000000000007d957:
	movb $1, -152(%rbp)
uuid_000000000007d959:
	mov -216(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007d95c:
	mov -168(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007d95f:
	mov -160(%RBP),%RSP
	add $-216, %RSP
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d960
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d901
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d962
uuid_000000000007d960:
	movq -208(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -192(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -184(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -176(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d962:
	mov -104(%RBP),%RSP
	add $-216, %RSP
	movq -56(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d963
uuid_000000000007d965:
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_lookup_CL_ArrowTypeConsTypeConsStringBTreeEqTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007d980:
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d981
	jmp uuid_000000000007d982
uuid_000000000007d981:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -112(%RBP), %RAX
	movq -128(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d971
	jmp uuid_000000000007d973
uuid_000000000007d971:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d96e
	jmp uuid_000000000007d970
uuid_000000000007d96e:
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	movb $0, -120(%rbp)
uuid_000000000007d970:
	mov -144(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007d973:
	mov -136(%RBP),%RSP
	add $-144, %RSP
	push %RBP
	mov -120(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d97d
	jmp uuid_000000000007d97f
uuid_000000000007d97d:
	push %RBP
	movq -128(%RBP), %RAX
	movq -112(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d97a
	push %RBP
	mov -48(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d977
	mov -48(%RBP), %RAX
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007d979
uuid_000000000007d977:
	movb $0, -120(%rbp)
uuid_000000000007d979:
	mov -168(%RBP),%RSP
	add $-168, %RSP
	jmp uuid_000000000007d97c
uuid_000000000007d97a:
	push %RBP
	mov -56(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d974
	mov -56(%RBP), %RAX
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007d976
uuid_000000000007d974:
	movb $0, -120(%rbp)
uuid_000000000007d976:
	mov -168(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007d97c:
	mov -160(%RBP),%RSP
	add $-168, %RSP
uuid_000000000007d97f:
	mov -152(%RBP),%RSP
	add $-168, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d980
uuid_000000000007d982:
	subq $24, %rsp
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	popq -112(%rbp)
	popq -120(%rbp)
	popq -128(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $104, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsStringBTreeEqU64String:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007d99d:
	mov -88(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d99e
	jmp uuid_000000000007d99f
uuid_000000000007d99e:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -80(%RBP), %RAX
	movq -96(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d98e
	jmp uuid_000000000007d990
uuid_000000000007d98e:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d98b
	jmp uuid_000000000007d98d
uuid_000000000007d98b:
	mov -24(%RBP), %RAX
	movq %RAX, -64(%rbp)
	movb $0, -88(%rbp)
uuid_000000000007d98d:
	mov -112(%RBP),%RSP
	add $-112, %RSP
uuid_000000000007d990:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	mov -88(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d99a
	jmp uuid_000000000007d99c
uuid_000000000007d99a:
	push %RBP
	movq -96(%RBP), %RAX
	movq -80(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d997
	push %RBP
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d994
	mov -32(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007d996
uuid_000000000007d994:
	movb $0, -88(%rbp)
uuid_000000000007d996:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007d999
uuid_000000000007d997:
	push %RBP
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d991
	mov -40(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007d993
uuid_000000000007d991:
	movb $0, -88(%rbp)
uuid_000000000007d993:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007d999:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007d99c:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d99d
uuid_000000000007d99f:
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
_DT_lookup_CL_ArrowTupleTypeTypeConsTupleTypeTypeConsStringBTreeEqTupleTypeTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007d9c4:
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9c5
	jmp uuid_000000000007d9c6
uuid_000000000007d9c5:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -176(%RBP), %RAX
	movq -192(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9b5
	jmp uuid_000000000007d9b7
uuid_000000000007d9b5:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -104(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007d9b2
	jmp uuid_000000000007d9b4
uuid_000000000007d9b2:
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	pushq -64(%RBP)
	pushq -72(%RBP)
	popq -160(%RBP)
	popq -152(%RBP)
	popq -144(%RBP)
	popq -136(%RBP)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	movb $0, -184(%rbp)
uuid_000000000007d9b4:
	mov -208(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007d9b7:
	mov -200(%RBP),%RSP
	add $-208, %RSP
	push %RBP
	mov -184(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9c1
	jmp uuid_000000000007d9c3
uuid_000000000007d9c1:
	push %RBP
	movq -192(%RBP), %RAX
	movq -176(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9be
	push %RBP
	mov -80(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9bb
	mov -80(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007d9bd
uuid_000000000007d9bb:
	movb $0, -184(%rbp)
uuid_000000000007d9bd:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007d9c0
uuid_000000000007d9be:
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9b8
	mov -88(%RBP), %RAX
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007d9ba
uuid_000000000007d9b8:
	movb $0, -184(%rbp)
uuid_000000000007d9ba:
	mov -232(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007d9c0:
	mov -224(%RBP),%RSP
	add $-232, %RSP
uuid_000000000007d9c3:
	mov -216(%RBP),%RSP
	add $-232, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d9c4
uuid_000000000007d9c6:
	subq $56, %rsp
	pushq -160(%rbp)
	pushq -152(%rbp)
	pushq -144(%rbp)
	pushq -136(%rbp)
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	popq -216(%rbp)
	popq -224(%rbp)
	addq $56, %rsp
	mov %rbp, %rsp
	sub $168, %rsp
	ret
close_CL_ArrowArray_QM_TContextCaseNumber2TContextCaseNumber2:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $120
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -120(%rbp), %r15
	movq %r15, 0(%r14)
	movq -112(%rbp), %r15
	movq %r15, 8(%r14)
	movq -104(%rbp), %r15
	movq %r15, 16(%r14)
	movq -96(%rbp), %r15
	movq %r15, 24(%r14)
	movq -88(%rbp), %r15
	movq %r15, 32(%r14)
	movq -80(%rbp), %r15
	movq %r15, 40(%r14)
	movq -72(%rbp), %r15
	movq %r15, 48(%r14)
	movq -64(%rbp), %r15
	movq %r15, 56(%r14)
	movq -56(%rbp), %r15
	movq %r15, 64(%r14)
	movq -48(%rbp), %r15
	movq %r15, 72(%r14)
	movq -40(%rbp), %r15
	movq %r15, 80(%r14)
	movq -32(%rbp), %r15
	movq %r15, 88(%r14)
	movq -24(%rbp), %r15
	movq %r15, 96(%r14)
	movq -16(%rbp), %r15
	movq %r15, 104(%r14)
	movq -8(%rbp), %r15
	movq %r15, 112(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $128, %rsp
	ret
_DT_nth_CL_ArrowTypeConsTypeConsU64ListType:
uuid_000000000007d9db:
	movq -48(%RBP), %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	setg %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9dc
	jmp uuid_000000000007d9dd
uuid_000000000007d9dc:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9d1
	jmp uuid_000000000007d9d3
uuid_000000000007d9d1:
	push %RBP
	mov -160(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007d9ce
	jmp uuid_000000000007d9d0
uuid_000000000007d9ce:
	push %RBP
	jmp uuid_000000000007d9cb
	jmp uuid_000000000007d9cd
uuid_000000000007d9cb:
	movb $1, -176(%rbp)
uuid_000000000007d9cd:
	mov -240(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007d9d0:
	mov -192(%RBP),%RSP
	add $-240, %RSP
uuid_000000000007d9d3:
	mov -184(%RBP),%RSP
	add $-240, %RSP
	mov -176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9d8
	push %RBP
	jmp uuid_000000000007d9d5
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d9d4
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d9d7
uuid_000000000007d9d5:
uuid_000000000007d9d7:
	mov -248(%RBP),%RSP
	add $-248, %RSP
	jmp uuid_000000000007d9da
uuid_000000000007d9d8:
	movq -232(%rbp), %r15
	movq %r15, -40(%rbp)
	movq -224(%rbp), %r15
	movq %r15, -32(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -24(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -16(%rbp)
	movq -200(%rbp), %r15
	movq %r15, -8(%rbp)
uuid_000000000007d9da:
	mov -128(%RBP),%RSP
	add $-240, %RSP
	movq -48(%RBP), %RAX
	movq $1, %R14
	subq %R14, %RAX
	movq %RAX, -48(%rbp)
	add $40, %rsp
	add $40, %rsp
	add $8, %rsp
	add $40, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007d9db
uuid_000000000007d9dd:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -168(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9e4
	jmp uuid_000000000007d9e6
uuid_000000000007d9e4:
	push %RBP
	jmp uuid_000000000007d9e1
	jmp uuid_000000000007d9e3
uuid_000000000007d9e1:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	jmp uuid_000000000007d9de
	jmp uuid_000000000007d9e0
uuid_000000000007d9de:
	movb $1, -176(%rbp)
uuid_000000000007d9e0:
	mov -200(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007d9e3:
	mov -192(%RBP),%RSP
	add $-224, %RSP
uuid_000000000007d9e6:
	mov -184(%RBP),%RSP
	add $-224, %RSP
	mov -176(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9eb
	push %RBP
	jmp uuid_000000000007d9e8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007d9e7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007d9ea
uuid_000000000007d9e8:
uuid_000000000007d9ea:
	mov -232(%RBP),%RSP
	add $-232, %RSP
	jmp uuid_000000000007d9ed
uuid_000000000007d9eb:
	movq -224(%rbp), %r15
	movq %r15, -72(%rbp)
	movq -216(%rbp), %r15
	movq %r15, -64(%rbp)
	movq -208(%rbp), %r15
	movq %r15, -56(%rbp)
uuid_000000000007d9ed:
	mov -128(%RBP),%RSP
	add $-224, %RSP
	subq $24, %rsp
	pushq -72(%rbp)
	pushq -64(%rbp)
	pushq -56(%rbp)
	popq -88(%rbp)
	popq -96(%rbp)
	popq -104(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_bind_CL_ArrowNilConsTupleTypeTypeConsStringArray_QM_BTreeEqTupleTypeTypeString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,Tuple<Type,Type>>,Array<BTreeEq<String,Tuple<Type,Type>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007da00:
	mov -96(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da01
	jmp uuid_000000000007da02
uuid_000000000007da01:
	mov -8(%rbp), %r15
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq -88(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9fd
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9fa
	mov -184(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007d9fc
uuid_000000000007d9fa:
	mov -104(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -96(%rbp)
uuid_000000000007d9fc:
	mov -216(%RBP),%RSP
	add $-216, %RSP
	jmp uuid_000000000007d9ff
uuid_000000000007d9fd:
	push %RBP
	mov -192(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007d9f7
	mov -192(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007d9f9
uuid_000000000007d9f7:
	mov -104(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -96(%rbp)
uuid_000000000007d9f9:
	mov -216(%RBP),%RSP
	add $-216, %RSP
uuid_000000000007d9ff:
	mov -208(%RBP),%RSP
	add $-216, %RSP
	add $96, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007da00
uuid_000000000007da02:
	mov %rbp, %rsp
	sub $80, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $96
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -96(%rbp), %r15
	movq %r15, 0(%r14)
	movq -88(%rbp), %r15
	movq %r15, 8(%r14)
	movq -80(%rbp), %r15
	movq %r15, 16(%r14)
	movq -72(%rbp), %r15
	movq %r15, 24(%r14)
	movq -64(%rbp), %r15
	movq %r15, 32(%r14)
	movq -56(%rbp), %r15
	movq %r15, 40(%r14)
	movq -48(%rbp), %r15
	movq %r15, 48(%r14)
	movq -40(%rbp), %r15
	movq %r15, 56(%r14)
	movq -32(%rbp), %r15
	movq %r15, 64(%r14)
	movq -24(%rbp), %r15
	movq %r15, 72(%r14)
	movq -16(%rbp), %r15
	movq %r15, 80(%r14)
	movq -8(%rbp), %r15
	movq %r15, 88(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $104, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsStringArray_QM_BTreeEqU64String:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,U64>,Array<BTreeEq<String,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64StringBTreeEqU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007da19:
	mov -48(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da1a
	jmp uuid_000000000007da1b
uuid_000000000007da1a:
	mov -8(%rbp), %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da16
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da13
	mov -88(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007da15
uuid_000000000007da13:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -48(%rbp)
uuid_000000000007da15:
	mov -120(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007da18
uuid_000000000007da16:
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da10
	mov -96(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007da12
uuid_000000000007da10:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -48(%rbp)
uuid_000000000007da12:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007da18:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007da19
uuid_000000000007da1b:
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64StringBTreeEqU64String:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_DT_lookup_CL_ArrowStringConsStringConsStringBTreeEqStringString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007da3c:
	mov -88(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da3d
	jmp uuid_000000000007da3e
uuid_000000000007da3d:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -80(%RBP), %RAX
	movq -96(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da2d
	jmp uuid_000000000007da2f
uuid_000000000007da2d:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -56(%rbp)
	mov -16(%RBP), %RAX
	push %RAX
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da2a
	jmp uuid_000000000007da2c
uuid_000000000007da2a:
	mov -24(%RBP), %RAX
	movq %RAX, -64(%rbp)
	movb $0, -88(%rbp)
uuid_000000000007da2c:
	mov -112(%RBP),%RSP
	add $-112, %RSP
uuid_000000000007da2f:
	mov -104(%RBP),%RSP
	add $-112, %RSP
	push %RBP
	mov -88(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da39
	jmp uuid_000000000007da3b
uuid_000000000007da39:
	push %RBP
	movq -96(%RBP), %RAX
	movq -80(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da36
	push %RBP
	mov -32(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da33
	mov -32(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007da35
uuid_000000000007da33:
	movb $0, -88(%rbp)
uuid_000000000007da35:
	mov -136(%RBP),%RSP
	add $-136, %RSP
	jmp uuid_000000000007da38
uuid_000000000007da36:
	push %RBP
	mov -40(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da30
	mov -40(%RBP), %RAX
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007da32
uuid_000000000007da30:
	movb $0, -88(%rbp)
uuid_000000000007da32:
	mov -136(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007da38:
	mov -128(%RBP),%RSP
	add $-136, %RSP
uuid_000000000007da3b:
	mov -120(%RBP),%RSP
	add $-136, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007da3c
uuid_000000000007da3e:
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $72, %rsp
	ret
_DT_bind_CL_ArrowNilConsStringConsStringArray_QM_BTreeEqStringString:
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<String,String>,Array<BTreeEq<String,String>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -40(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqStringStringBTreeEqStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007da4a:
	mov -48(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da4b
	jmp uuid_000000000007da4c
uuid_000000000007da4b:
	mov -8(%rbp), %r15
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq -40(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da47
	push %RBP
	mov -88(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da44
	mov -88(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007da46
uuid_000000000007da44:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -48(%rbp)
uuid_000000000007da46:
	mov -120(%RBP),%RSP
	add $-120, %RSP
	jmp uuid_000000000007da49
uuid_000000000007da47:
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da41
	mov -96(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007da43
uuid_000000000007da41:
	mov -56(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -48(%rbp)
uuid_000000000007da43:
	mov -120(%RBP),%RSP
	add $-120, %RSP
uuid_000000000007da49:
	mov -112(%RBP),%RSP
	add $-120, %RSP
	add $48, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007da4a
uuid_000000000007da4c:
	mov %rbp, %rsp
	sub $32, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqStringStringBTreeEqStringString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $48
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -48(%rbp), %r15
	movq %r15, 0(%r14)
	movq -40(%rbp), %r15
	movq %r15, 8(%r14)
	movq -32(%rbp), %r15
	movq %r15, 16(%r14)
	movq -24(%rbp), %r15
	movq %r15, 24(%r14)
	movq -16(%rbp), %r15
	movq %r15, 32(%r14)
	movq -8(%rbp), %r15
	movq %r15, 40(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsTupleTypeStringBTreeEqU64TupleTypeString:
#call function deep-hash : Arrow<Tuple<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007da79:
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da7a
	jmp uuid_000000000007da7b
uuid_000000000007da7a:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -144(%RBP), %RAX
	movq -160(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da6a
	jmp uuid_000000000007da6c
uuid_000000000007da6a:
	push %RBP
#call function == : Arrow<Cons<Tuple<String,Type>,Tuple<String,Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleTypeStringTupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007da67
	jmp uuid_000000000007da69
uuid_000000000007da67:
	mov -56(%RBP), %RAX
	movq %RAX, -128(%rbp)
	movb $0, -152(%rbp)
uuid_000000000007da69:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007da6c:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	push %RBP
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da76
	jmp uuid_000000000007da78
uuid_000000000007da76:
	push %RBP
	movq -160(%RBP), %RAX
	movq -144(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da73
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da70
	mov -64(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007da72
uuid_000000000007da70:
	movb $0, -152(%rbp)
uuid_000000000007da72:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007da75
uuid_000000000007da73:
	push %RBP
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da6d
	mov -72(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007da6f
uuid_000000000007da6d:
	movb $0, -152(%rbp)
uuid_000000000007da6f:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007da75:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007da78:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007da79
uuid_000000000007da7b:
	mov -128(%rbp), %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleTypeStringTupleTypeString:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da9e
	jmp uuid_000000000007daa0
uuid_000000000007da9e:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da8c
	jmp uuid_000000000007da8e
uuid_000000000007da8c:
	push %RBP
	pushq -320(%RBP)
	pushq -328(%RBP)
	pushq -336(%RBP)
	jmp uuid_000000000007da89
	jmp uuid_000000000007da8b
uuid_000000000007da89:
	push %RBP
	mov -312(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007da86
	jmp uuid_000000000007da88
uuid_000000000007da86:
	movb $1, -352(%rbp)
uuid_000000000007da88:
	mov -400(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007da8b:
	mov -368(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007da8e:
	mov -360(%RBP),%RSP
	add $-408, %RSP
	mov -352(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da9b
	jmp uuid_000000000007da9d
uuid_000000000007da9b:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da95
	jmp uuid_000000000007da97
uuid_000000000007da95:
	push %RBP
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq -448(%RBP)
	jmp uuid_000000000007da92
	jmp uuid_000000000007da94
uuid_000000000007da92:
	push %RBP
	mov -424(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007da8f
	jmp uuid_000000000007da91
uuid_000000000007da8f:
	movb $1, -464(%rbp)
uuid_000000000007da91:
	mov -512(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007da94:
	mov -480(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007da97:
	mov -472(%RBP),%RSP
	add $-520, %RSP
	mov -464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007da98
	jmp uuid_000000000007da9a
uuid_000000000007da98:
	movb $1, -288(%rbp)
uuid_000000000007da9a:
	mov -416(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007da9d:
	mov -304(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007daa0:
	mov -296(%RBP),%RSP
	add $-520, %RSP
	mov -288(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daa8
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007daa7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007daaa
uuid_000000000007daa8:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -520(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007daa4
	jmp uuid_000000000007daa6
uuid_000000000007daa4:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -488(%rbp)
	pushq -496(%rbp)
	pushq -504(%rbp)
	pushq -376(%rbp)
	pushq -384(%rbp)
	pushq -392(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007daa1
	jmp uuid_000000000007daa3
uuid_000000000007daa1:
	movq $1, -96(%rbp)
uuid_000000000007daa3:
	mov -536(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007daa6:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007daaa:
	mov -192(%RBP),%RSP
	add $-536, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleTypeString:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dab5
	jmp uuid_000000000007dab7
uuid_000000000007dab5:
	push %RBP
	pushq -120(%RBP)
	pushq -128(%RBP)
	pushq -136(%RBP)
	jmp uuid_000000000007dab2
	jmp uuid_000000000007dab4
uuid_000000000007dab2:
	push %RBP
	mov -112(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007daaf
	jmp uuid_000000000007dab1
uuid_000000000007daaf:
	movb $1, -152(%rbp)
uuid_000000000007dab1:
	mov -200(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007dab4:
	mov -168(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007dab7:
	mov -160(%RBP),%RSP
	add $-208, %RSP
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dab9
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007dab8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dabb
uuid_000000000007dab9:
#call function deep-hash : Arrow<Type,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64Type
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -208(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007dabb:
	mov -104(%RBP),%RSP
	add $-208, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsTupleTypeStringArray_QM_BTreeEqU64TupleTypeString:
#call function deep-hash : Arrow<Tuple<String,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<Tuple<String,Type>,U64>,Array<BTreeEq<Tuple<String,Type>,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007dad0:
	mov -80(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dad1
	jmp uuid_000000000007dad2
uuid_000000000007dad1:
	mov -8(%rbp), %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq -72(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dacd
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007daca
	mov -152(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007dacc
uuid_000000000007daca:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -80(%rbp)
uuid_000000000007dacc:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007dacf
uuid_000000000007dacd:
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dac7
	mov -160(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007dac9
uuid_000000000007dac7:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -80(%rbp)
uuid_000000000007dac9:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007dacf:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	add $80, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007dad0
uuid_000000000007dad2:
	mov %rbp, %rsp
	sub $64, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $80
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -80(%rbp), %r15
	movq %r15, 0(%r14)
	movq -72(%rbp), %r15
	movq %r15, 8(%r14)
	movq -64(%rbp), %r15
	movq %r15, 16(%r14)
	movq -56(%rbp), %r15
	movq %r15, 24(%r14)
	movq -48(%rbp), %r15
	movq %r15, 32(%r14)
	movq -40(%rbp), %r15
	movq %r15, 40(%r14)
	movq -32(%rbp), %r15
	movq %r15, 48(%r14)
	movq -24(%rbp), %r15
	movq %r15, 56(%r14)
	movq -16(%rbp), %r15
	movq %r15, 64(%r14)
	movq -8(%rbp), %r15
	movq %r15, 72(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
_DT_lookup_CL_ArrowU64ConsU64ConsTupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String:
#call function deep-hash : Arrow<Tuple<Tuple<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007db10:
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db11
	jmp uuid_000000000007db12
uuid_000000000007db11:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -144(%RBP), %RAX
	movq -160(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db01
	jmp uuid_000000000007db03
uuid_000000000007db01:
	push %RBP
#call function == : Arrow<Cons<Tuple<Tuple<String,U64>,U64>,Tuple<Tuple<String,U64>,U64>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleU64TupleU64StringTupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dafe
	jmp uuid_000000000007db00
uuid_000000000007dafe:
	mov -56(%RBP), %RAX
	movq %RAX, -128(%rbp)
	movb $0, -152(%rbp)
uuid_000000000007db00:
	mov -176(%RBP),%RSP
	add $-176, %RSP
uuid_000000000007db03:
	mov -168(%RBP),%RSP
	add $-176, %RSP
	push %RBP
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db0d
	jmp uuid_000000000007db0f
uuid_000000000007db0d:
	push %RBP
	movq -160(%RBP), %RAX
	movq -144(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db0a
	push %RBP
	mov -64(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db07
	mov -64(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007db09
uuid_000000000007db07:
	movb $0, -152(%rbp)
uuid_000000000007db09:
	mov -200(%RBP),%RSP
	add $-200, %RSP
	jmp uuid_000000000007db0c
uuid_000000000007db0a:
	push %RBP
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db04
	mov -72(%RBP), %RAX
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007db06
uuid_000000000007db04:
	movb $0, -152(%rbp)
uuid_000000000007db06:
	mov -200(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007db0c:
	mov -192(%RBP),%RSP
	add $-200, %RSP
uuid_000000000007db0f:
	mov -184(%RBP),%RSP
	add $-200, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007db10
uuid_000000000007db12:
	mov -128(%rbp), %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleU64TupleU64StringTupleU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db3e
	jmp uuid_000000000007db40
uuid_000000000007db3e:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	pushq $0
	push %RBP
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db2c
	jmp uuid_000000000007db2e
uuid_000000000007db2c:
	push %RBP
	mov -336(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db29
	jmp uuid_000000000007db2b
uuid_000000000007db29:
	push %RBP
	pushq -312(%RBP)
	pushq -320(%RBP)
	pushq -328(%RBP)
	jmp uuid_000000000007db26
	jmp uuid_000000000007db28
uuid_000000000007db26:
	movb $1, -352(%rbp)
uuid_000000000007db28:
	mov -384(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007db2b:
	mov -368(%RBP),%RSP
	add $-408, %RSP
uuid_000000000007db2e:
	mov -360(%RBP),%RSP
	add $-408, %RSP
	mov -352(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db3b
	jmp uuid_000000000007db3d
uuid_000000000007db3b:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	pushq $0
	push %RBP
	mov -456(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db35
	jmp uuid_000000000007db37
uuid_000000000007db35:
	push %RBP
	mov -448(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db32
	jmp uuid_000000000007db34
uuid_000000000007db32:
	push %RBP
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	jmp uuid_000000000007db2f
	jmp uuid_000000000007db31
uuid_000000000007db2f:
	movb $1, -464(%rbp)
uuid_000000000007db31:
	mov -496(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007db34:
	mov -480(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007db37:
	mov -472(%RBP),%RSP
	add $-520, %RSP
	mov -464(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db38
	jmp uuid_000000000007db3a
uuid_000000000007db38:
	movb $1, -288(%rbp)
uuid_000000000007db3a:
	mov -416(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007db3d:
	mov -304(%RBP),%RSP
	add $-520, %RSP
uuid_000000000007db40:
	mov -296(%RBP),%RSP
	add $-520, %RSP
	mov -288(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db47
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007daa7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db49
uuid_000000000007db47:
	push %RBP
#call function == : Arrow<Cons<Tuple<String,U64>,Tuple<String,U64>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -504(%rbp)
	pushq -512(%rbp)
	pushq -520(%rbp)
	pushq -392(%rbp)
	pushq -400(%rbp)
	pushq -408(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTupleU64StringTupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db44
	jmp uuid_000000000007db46
uuid_000000000007db44:
	push %RBP
	movq -488(%RBP), %RAX
	movq -376(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db41
	jmp uuid_000000000007db43
uuid_000000000007db41:
	movq $1, -96(%rbp)
uuid_000000000007db43:
	mov -536(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007db46:
	mov -528(%RBP),%RSP
	add $-536, %RSP
uuid_000000000007db49:
	mov -192(%RBP),%RSP
	add $-536, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsTupleU64StringTupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq $0
	push %RBP
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq $0
	push %RBP
	mov -184(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db6c
	jmp uuid_000000000007db6e
uuid_000000000007db6c:
	push %RBP
	pushq -160(%RBP)
	pushq -168(%RBP)
	pushq -176(%RBP)
	pushq $0
	push %RBP
	mov -232(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db5a
	jmp uuid_000000000007db5c
uuid_000000000007db5a:
	push %RBP
	mov -224(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db57
	jmp uuid_000000000007db59
uuid_000000000007db57:
	push %RBP
	mov -216(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db54
	jmp uuid_000000000007db56
uuid_000000000007db54:
	movb $1, -240(%rbp)
uuid_000000000007db56:
	mov -272(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007db59:
	mov -256(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007db5c:
	mov -248(%RBP),%RSP
	add $-280, %RSP
	mov -240(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db69
	jmp uuid_000000000007db6b
uuid_000000000007db69:
	push %RBP
	pushq -136(%RBP)
	pushq -144(%RBP)
	pushq -152(%RBP)
	pushq $0
	push %RBP
	mov -312(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db63
	jmp uuid_000000000007db65
uuid_000000000007db63:
	push %RBP
	mov -304(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db60
	jmp uuid_000000000007db62
uuid_000000000007db60:
	push %RBP
	mov -296(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db5d
	jmp uuid_000000000007db5f
uuid_000000000007db5d:
	movb $1, -320(%rbp)
uuid_000000000007db5f:
	mov -352(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007db62:
	mov -336(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007db65:
	mov -328(%RBP),%RSP
	add $-360, %RSP
	mov -320(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db66
	jmp uuid_000000000007db68
uuid_000000000007db66:
	movb $1, -192(%rbp)
uuid_000000000007db68:
	mov -288(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007db6b:
	mov -208(%RBP),%RSP
	add $-360, %RSP
uuid_000000000007db6e:
	mov -200(%RBP),%RSP
	add $-360, %RSP
	mov -192(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db75
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007daa7
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db77
uuid_000000000007db75:
	push %RBP
#call function == : Arrow<Cons<String,String>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -360(%rbp)
	pushq -280(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007db72
	jmp uuid_000000000007db74
uuid_000000000007db72:
	push %RBP
	movq -344(%RBP), %RAX
	movq -264(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db6f
	jmp uuid_000000000007db71
uuid_000000000007db6f:
	movq $1, -64(%rbp)
uuid_000000000007db71:
	mov -376(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007db74:
	mov -368(%RBP),%RSP
	add $-376, %RSP
uuid_000000000007db77:
	mov -128(%RBP),%RSP
	add $-376, %RSP
	mov -64(%rbp), %RAX
	mov %rbp, %rsp
	sub $56, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	push %RBP
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq $0
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db86
	jmp uuid_000000000007db88
uuid_000000000007db86:
	push %RBP
	mov -136(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db83
	jmp uuid_000000000007db85
uuid_000000000007db83:
	push %RBP
	pushq -112(%RBP)
	pushq -120(%RBP)
	pushq -128(%RBP)
	jmp uuid_000000000007db80
	jmp uuid_000000000007db82
uuid_000000000007db80:
	movb $1, -152(%rbp)
uuid_000000000007db82:
	mov -184(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007db85:
	mov -168(%RBP),%RSP
	add $-208, %RSP
uuid_000000000007db88:
	mov -160(%RBP),%RSP
	add $-208, %RSP
	mov -152(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db89
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007dab8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db8b
uuid_000000000007db89:
#call function deep-hash : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -176(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<Tuple<String,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -208(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -56(%rbp)
uuid_000000000007db8b:
	mov -104(%RBP),%RSP
	add $-208, %RSP
	mov -56(%rbp), %RAX
	mov %rbp, %rsp
	sub $48, %rsp
	ret
deep_SB_hash_CL_ArrowU64TupleU64String:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	push %RBP
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq $0
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db96
	jmp uuid_000000000007db98
uuid_000000000007db96:
	push %RBP
	mov -88(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db93
	jmp uuid_000000000007db95
uuid_000000000007db93:
	push %RBP
	mov -80(%RBP), %RAX
	push %RAX
	jmp uuid_000000000007db90
	jmp uuid_000000000007db92
uuid_000000000007db90:
	movb $1, -104(%rbp)
uuid_000000000007db92:
	mov -136(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007db95:
	mov -120(%RBP),%RSP
	add $-144, %RSP
uuid_000000000007db98:
	mov -112(%RBP),%RSP
	add $-144, %RSP
	mov -104(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007db99
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007dab8
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007db9b
uuid_000000000007db99:
#call function deep-hash : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -128(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	pushq %RAX
#call function deep-hash : Arrow<String,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -144(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %RAX
	popq %R14
	addq %R14, %RAX
	movq %RAX, -40(%rbp)
uuid_000000000007db9b:
	mov -72(%RBP),%RSP
	add $-144, %RSP
	mov -40(%rbp), %RAX
	mov %rbp, %rsp
	sub $32, %rsp
	ret
_DT_bind_CL_ArrowNilConsU64ConsTupleU64TupleU64StringArray_QM_BTreeEqU64TupleU64TupleU64String:
#call function deep-hash : Arrow<Tuple<Tuple<String,U64>,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	mov %RBX, %RBP
	call deep_SB_hash_CL_ArrowU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,Array<BTreeEq<Tuple<Tuple<String,U64>,U64>,U64>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -72(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007dbb9:
	mov -80(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbba
	jmp uuid_000000000007dbbb
uuid_000000000007dbba:
	mov -8(%rbp), %r15
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -96(%RBP), %RAX
	movq %RAX, %RAX
	movq -72(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbb6
	push %RBP
	mov -152(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbb3
	mov -152(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007dbb5
uuid_000000000007dbb3:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -80(%rbp)
uuid_000000000007dbb5:
	mov -184(%RBP),%RSP
	add $-184, %RSP
	jmp uuid_000000000007dbb8
uuid_000000000007dbb6:
	push %RBP
	mov -160(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbb0
	mov -160(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007dbb2
uuid_000000000007dbb0:
	mov -88(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -80(%rbp)
uuid_000000000007dbb2:
	mov -184(%RBP),%RSP
	add $-184, %RSP
uuid_000000000007dbb8:
	mov -176(%RBP),%RSP
	add $-184, %RSP
	add $80, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007dbb9
uuid_000000000007dbbb:
	mov %rbp, %rsp
	sub $64, %rsp
	ret
close_CL_ArrowArray_QM_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64String:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $80
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -80(%rbp), %r15
	movq %r15, 0(%r14)
	movq -72(%rbp), %r15
	movq %r15, 8(%r14)
	movq -64(%rbp), %r15
	movq %r15, 16(%r14)
	movq -56(%rbp), %r15
	movq %r15, 24(%r14)
	movq -48(%rbp), %r15
	movq %r15, 32(%r14)
	movq -40(%rbp), %r15
	movq %r15, 40(%r14)
	movq -32(%rbp), %r15
	movq %r15, 48(%r14)
	movq -24(%rbp), %r15
	movq %r15, 56(%r14)
	movq -16(%rbp), %r15
	movq %r15, 64(%r14)
	movq -8(%rbp), %r15
	movq %r15, 72(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
non_SB_zero_CL_ArrowU64ListTupleTypeTupleStringString:
	mov $1, %RAX
	pushq %RAX
	mov -72(%RBP), %RAX
	movq %RAX, %RAX
	popq %R14
	cmpq %R14, %RAX
	setne %AL
	andq $1, %RAX
	mov	%RAX,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
cons_CL_ArrowListTupleTypeTupleStringStringConsListTupleTypeTupleStringStringTupleTypeTupleStringString:
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
#call function close : Arrow<List<Tuple<Tuple<String,String>,Type>>,Array<List<Tuple<Tuple<String,String>,Type>>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_ListTupleTypeTupleStringStringListTupleTypeTupleStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $0
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	subq $72, %rsp
	pushq -128(%rbp)
	pushq -120(%rbp)
	pushq -112(%rbp)
	pushq -104(%rbp)
	pushq -96(%rbp)
	pushq -88(%rbp)
	pushq -80(%rbp)
	pushq -72(%rbp)
	pushq -64(%rbp)
	popq -144(%rbp)
	popq -152(%rbp)
	popq -160(%rbp)
	popq -168(%rbp)
	popq -176(%rbp)
	popq -184(%rbp)
	popq -192(%rbp)
	popq -200(%rbp)
	popq -208(%rbp)
	addq $72, %rsp
	mov %rbp, %rsp
	sub $136, %rsp
	ret
close_CL_ArrowArray_QM_ListTupleTypeTupleStringStringListTupleTypeTupleStringString:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -72(%rbp), %r15
	movq %r15, 0(%r14)
	movq -64(%rbp), %r15
	movq %r15, 8(%r14)
	movq -56(%rbp), %r15
	movq %r15, 16(%r14)
	movq -48(%rbp), %r15
	movq %r15, 24(%r14)
	movq -40(%rbp), %r15
	movq %r15, 32(%r14)
	movq -32(%rbp), %r15
	movq %r15, 40(%r14)
	movq -24(%rbp), %r15
	movq %r15, 48(%r14)
	movq -16(%rbp), %r15
	movq %r15, 56(%r14)
	movq -8(%rbp), %r15
	movq %r15, 64(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_bind_CL_ArrowNilConsTypeConsASTArray_QM_BTreeIsTypeAST:
#call function hash : Arrow<Sized<72>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	mov %RBX, %RBP
	call hash_CL_ArrowU64Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
#call function close : Arrow<BTreeIs<AST,Type>,Array<BTreeIs<AST,Type>,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -120(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq -88(%rbp)
	pushq -96(%rbp)
	pushq -104(%rbp)
	pushq $0
	pushq $0
	pushq $1
	mov %RBX, %RBP
	call close_CL_ArrowArray_QM_BTreeIsTypeASTBTreeIsTypeAST
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
uuid_000000000007dc07:
	mov -128(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc08
	jmp uuid_000000000007dc09
uuid_000000000007dc08:
	mov -8(%rbp), %r15
	pushq 120(%r15)
	pushq 112(%r15)
	pushq 104(%r15)
	pushq 96(%r15)
	pushq 88(%r15)
	pushq 80(%r15)
	pushq 72(%r15)
	pushq 64(%r15)
	pushq 56(%r15)
	pushq 48(%r15)
	pushq 40(%r15)
	pushq 32(%r15)
	pushq 24(%r15)
	pushq 16(%r15)
	pushq 8(%r15)
	pushq 0(%r15)
	push %RBP
	mov -144(%RBP), %RAX
	movq %RAX, %RAX
	movq -120(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc04
	push %RBP
	mov -248(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc01
	mov -248(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007dc03
uuid_000000000007dc01:
	mov -136(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 16(%R15)
	movb $0, -128(%rbp)
uuid_000000000007dc03:
	mov -280(%RBP),%RSP
	add $-280, %RSP
	jmp uuid_000000000007dc06
uuid_000000000007dc04:
	push %RBP
	mov -256(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dbfe
	mov -256(%RBP), %RAX
	movq %RAX, -8(%rbp)
	jmp uuid_000000000007dc00
uuid_000000000007dbfe:
	mov -136(%rbp), %R8
	mov -8(%RBP), %R15
	mov %R8, 8(%R15)
	movb $0, -128(%rbp)
uuid_000000000007dc00:
	mov -280(%RBP),%RSP
	add $-280, %RSP
uuid_000000000007dc06:
	mov -272(%RBP),%RSP
	add $-280, %RSP
	add $128, %rsp
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007dc07
uuid_000000000007dc09:
	mov %rbp, %rsp
	sub $112, %rsp
	ret
close_CL_ArrowArray_QM_BTreeIsTypeASTBTreeIsTypeAST:
#call function malloc : Arrow<U64,Array<?,?>>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $128
	mov %RBX, %RBP
	call malloc_CL_ArrowArray_QM__QM_U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	mov	%RAX, %R8
	mov %R8, %r14
	add $0, %r14
	movq -128(%rbp), %r15
	movq %r15, 0(%r14)
	movq -120(%rbp), %r15
	movq %r15, 8(%r14)
	movq -112(%rbp), %r15
	movq %r15, 16(%r14)
	movq -104(%rbp), %r15
	movq %r15, 24(%r14)
	movq -96(%rbp), %r15
	movq %r15, 32(%r14)
	movq -88(%rbp), %r15
	movq %r15, 40(%r14)
	movq -80(%rbp), %r15
	movq %r15, 48(%r14)
	movq -72(%rbp), %r15
	movq %r15, 56(%r14)
	movq -64(%rbp), %r15
	movq %r15, 64(%r14)
	movq -56(%rbp), %r15
	movq %r15, 72(%r14)
	movq -48(%rbp), %r15
	movq %r15, 80(%r14)
	movq -40(%rbp), %r15
	movq %r15, 88(%r14)
	movq -32(%rbp), %r15
	movq %r15, 96(%r14)
	movq -24(%rbp), %r15
	movq %r15, 104(%r14)
	movq -16(%rbp), %r15
	movq %r15, 112(%r14)
	movq -8(%rbp), %r15
	movq %r15, 120(%r14)
	mov	%R8,%RAX
	push %RAX
	pop %RAX
	mov %rbp, %rsp
	sub $136, %rsp
	ret
hash_CL_ArrowU64Sized72:
	pushq $0
	pushq $0
uuid_000000000007dc10:
#call function not : Arrow<U64,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -88(%RBP), %RAX
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	push %RAX
	mov %RBX, %RBP
	call not_CL_ArrowU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc11
	jmp uuid_000000000007dc12
uuid_000000000007dc11:
	mov %RBP, %R15
	add $-72, %R15
	mov -88(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	movq %R15, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	movq -88(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -88(%rbp)
	mov -96(%RBP),%RAX
	shl $10,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shr $6,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -96(%rbp)
	jmp uuid_000000000007dc10
uuid_000000000007dc12:
	mov -96(%RBP),%RAX
	shl $3,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shr $11,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	xorq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%RBP),%RAX
	shl $15,%RAX
	movq %RAX, %R14
	movq -96(%RBP), %RAX
	addq %R14, %RAX
	movq %RAX, -96(%rbp)
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $80, %rsp
	ret
_DT_lookup_CL_ArrowTypeConsTypeConsASTBTreeIsTypeAST:
#call function hash : Arrow<Sized<72>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	mov %RBX, %RBP
	call hash_CL_ArrowU64Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	push %RAX
	pushq $1
uuid_000000000007dc2d:
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc2e
	jmp uuid_000000000007dc2f
uuid_000000000007dc2e:
	mov -8(%RBP), %RAX
	push %RAX
	push %RBP
	movq -240(%RBP), %RAX
	movq -256(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc1e
	jmp uuid_000000000007dc20
uuid_000000000007dc1e:
	push %RBP
#call function is : Arrow<Cons<Sized<72>,Sized<72>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq -192(%rbp)
	pushq -200(%rbp)
	pushq -16(%RBP)
	pushq -24(%RBP)
	pushq -32(%RBP)
	pushq -40(%RBP)
	pushq -48(%RBP)
	pushq -56(%RBP)
	pushq -64(%RBP)
	pushq -72(%RBP)
	pushq -80(%RBP)
	mov %RBX, %RBP
	call is_CL_ArrowU64ConsSized72Sized72
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc1b
	jmp uuid_000000000007dc1d
uuid_000000000007dc1b:
	pushq -88(%RBP)
	pushq -96(%RBP)
	pushq -104(%RBP)
	popq -224(%RBP)
	popq -216(%RBP)
	popq -208(%RBP)
	movb $0, -248(%rbp)
uuid_000000000007dc1d:
	mov -272(%RBP),%RSP
	add $-272, %RSP
uuid_000000000007dc20:
	mov -264(%RBP),%RSP
	add $-272, %RSP
	push %RBP
	mov -248(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc2a
	jmp uuid_000000000007dc2c
uuid_000000000007dc2a:
	push %RBP
	movq -256(%RBP), %RAX
	movq -240(%RBP), %R14
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc27
	push %RBP
	mov -112(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc24
	mov -112(%RBP), %RAX
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007dc26
uuid_000000000007dc24:
	movb $0, -248(%rbp)
uuid_000000000007dc26:
	mov -296(%RBP),%RSP
	add $-296, %RSP
	jmp uuid_000000000007dc29
uuid_000000000007dc27:
	push %RBP
	mov -120(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc21
	mov -120(%RBP), %RAX
	pushq 120(%RAX)
	pushq 112(%RAX)
	pushq 104(%RAX)
	pushq 96(%RAX)
	pushq 88(%RAX)
	pushq 80(%RAX)
	pushq 72(%RAX)
	pushq 64(%RAX)
	pushq 56(%RAX)
	pushq 48(%RAX)
	pushq 40(%RAX)
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	popq -128(%RBP)
	popq -120(%RBP)
	popq -112(%RBP)
	popq -104(%RBP)
	popq -96(%RBP)
	popq -88(%RBP)
	popq -80(%RBP)
	popq -72(%RBP)
	popq -64(%RBP)
	popq -56(%RBP)
	popq -48(%RBP)
	popq -40(%RBP)
	popq -32(%RBP)
	popq -24(%RBP)
	popq -16(%RBP)
	popq -8(%RBP)
	jmp uuid_000000000007dc23
uuid_000000000007dc21:
	movb $0, -248(%rbp)
uuid_000000000007dc23:
	mov -296(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007dc29:
	mov -288(%RBP),%RSP
	add $-296, %RSP
uuid_000000000007dc2c:
	mov -280(%RBP),%RSP
	add $-296, %RSP
	add $8, %rsp
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	add $8, %RSP
	jmp uuid_000000000007dc2d
uuid_000000000007dc2f:
	subq $24, %rsp
	pushq -224(%rbp)
	pushq -216(%rbp)
	pushq -208(%rbp)
	popq -240(%rbp)
	popq -248(%rbp)
	popq -256(%rbp)
	addq $24, %rsp
	mov %rbp, %rsp
	sub $232, %rsp
	ret
is_CL_ArrowU64ConsSized72Sized72:
	pushq $0
	pushq $1
uuid_000000000007dc33:
#call function / : Arrow<Cons<U64,U64>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $72
	pushq $8
	mov %RBX, %RBP
	call _DV__CL_ArrowU64ConsU64U64
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	movq %RAX, %R14
	movq -160(%RBP), %RAX
	cmpq %R14, %RAX
	setl %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc34
	jmp uuid_000000000007dc35
uuid_000000000007dc34:
	mov %RBP, %R15
	add $-72, %R15
	mov -160(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	mov %RBP, %R15
	add $-144, %R15
	mov -160(%RBP), %R14
	shl $3, %R14
	add %R14, %R15
	mov 0(%R15), %R15
	push %R15
	push %RBP
	movq -176(%RBP), %RAX
	movq -184(%RBP), %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc30
	movq $0, -168(%rbp)
	jmp uuid_000000000007dc32
uuid_000000000007dc30:
uuid_000000000007dc32:
	mov -192(%RBP),%RSP
	add $-192, %RSP
	movq -160(%RBP), %RAX
	movq $1, %R14
	addq %R14, %RAX
	movq %RAX, -160(%rbp)
	add $8, %rsp
	add $8, %rsp
	add $8, %RSP
	jmp uuid_000000000007dc33
uuid_000000000007dc35:
	mov -168(%rbp), %RAX
	mov %rbp, %rsp
	sub $152, %rsp
	ret
_EQ__EQ__CL_ArrowU64ConsListTypeListType:
	pushq $0
	pushq -8(%rbp)
	pushq -16(%rbp)
	pushq -24(%rbp)
	pushq -32(%rbp)
	pushq -40(%rbp)
	pushq -48(%rbp)
	pushq -56(%rbp)
	pushq -64(%rbp)
	pushq -72(%rbp)
	pushq -80(%rbp)
	pushq $0
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -280(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc41
	jmp uuid_000000000007dc43
uuid_000000000007dc41:
	push %RBP
	pushq -240(%RBP)
	pushq -248(%RBP)
	pushq -256(%RBP)
	pushq -264(%RBP)
	pushq -272(%RBP)
	mov -344(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc3e
	jmp uuid_000000000007dc40
uuid_000000000007dc3e:
	push %RBP
	pushq -200(%RBP)
	pushq -208(%RBP)
	pushq -216(%RBP)
	pushq -224(%RBP)
	pushq -232(%RBP)
	mov -392(%RBP), %RAX
	movq %RAX, %RAX
	movq $1, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc3b
	jmp uuid_000000000007dc3d
uuid_000000000007dc3b:
	movb $1, -288(%rbp)
uuid_000000000007dc3d:
	mov -352(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007dc40:
	mov -304(%RBP),%RSP
	add $-392, %RSP
uuid_000000000007dc43:
	mov -296(%RBP),%RSP
	add $-392, %RSP
	mov -288(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc6c
	push %RBP
	pushq -104(%rbp)
	pushq -112(%rbp)
	pushq -120(%rbp)
	pushq -128(%rbp)
	pushq -136(%rbp)
	pushq -144(%rbp)
	pushq -152(%rbp)
	pushq -160(%rbp)
	pushq -168(%rbp)
	pushq -176(%rbp)
	pushq -184(%rbp)
	pushq $0
	push %RBP
	mov -488(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc5c
	jmp uuid_000000000007dc5e
uuid_000000000007dc5c:
	push %RBP
	pushq -448(%RBP)
	pushq -456(%RBP)
	pushq -464(%RBP)
	pushq -472(%RBP)
	pushq -480(%RBP)
	pushq $0
	push %RBP
	mov -552(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc4a
	jmp uuid_000000000007dc4c
uuid_000000000007dc4a:
	push %RBP
	mov -544(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc47
	jmp uuid_000000000007dc49
uuid_000000000007dc47:
	push %RBP
	pushq -520(%RBP)
	pushq -528(%RBP)
	pushq -536(%RBP)
	jmp uuid_000000000007dc44
	jmp uuid_000000000007dc46
uuid_000000000007dc44:
	movb $1, -560(%rbp)
uuid_000000000007dc46:
	mov -624(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007dc49:
	mov -576(%RBP),%RSP
	add $-648, %RSP
uuid_000000000007dc4c:
	mov -568(%RBP),%RSP
	add $-648, %RSP
	mov -560(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc59
	jmp uuid_000000000007dc5b
uuid_000000000007dc59:
	push %RBP
	pushq -408(%RBP)
	pushq -416(%RBP)
	pushq -424(%RBP)
	pushq -432(%RBP)
	pushq -440(%RBP)
	pushq $0
	push %RBP
	mov -696(%RBP), %RAX
	movq %RAX, %RAX
	movq $0, %R14
	cmpq %R14, %RAX
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc53
	jmp uuid_000000000007dc55
uuid_000000000007dc53:
	push %RBP
	mov -688(%RBP), %RAX
	pushq 32(%RAX)
	pushq 24(%RAX)
	pushq 16(%RAX)
	pushq 8(%RAX)
	pushq 0(%RAX)
	jmp uuid_000000000007dc50
	jmp uuid_000000000007dc52
uuid_000000000007dc50:
	push %RBP
	pushq -664(%RBP)
	pushq -672(%RBP)
	pushq -680(%RBP)
	jmp uuid_000000000007dc4d
	jmp uuid_000000000007dc4f
uuid_000000000007dc4d:
	movb $1, -704(%rbp)
uuid_000000000007dc4f:
	mov -768(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007dc52:
	mov -720(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007dc55:
	mov -712(%RBP),%RSP
	add $-792, %RSP
	mov -704(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc56
	jmp uuid_000000000007dc58
uuid_000000000007dc56:
	movb $1, -496(%rbp)
uuid_000000000007dc58:
	mov -656(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007dc5b:
	mov -512(%RBP),%RSP
	add $-792, %RSP
uuid_000000000007dc5e:
	mov -504(%RBP),%RSP
	add $-792, %RSP
	mov -496(%RBP), %AL
	mov $1, %R14B
	cmpb %R14B, %AL
	sete %AL
	andq $1, %RAX
	cmp $0, %RAX
	jne uuid_000000000007dc69
	push %RBP
	jmp uuid_000000000007dc66
#call function fail : Arrow<Cons<String,String>,Nil>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq $uuid_0000000000079338
	pushq $uuid_000000000007dc65
	mov %RBX, %RBP
	call fail_CL_ArrowNilConsStringString
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	jmp uuid_000000000007dc68
uuid_000000000007dc66:
uuid_000000000007dc68:
	mov -800(%RBP),%RSP
	add $-800, %RSP
	jmp uuid_000000000007dc6b
uuid_000000000007dc69:
	push %RBP
#call function == : Arrow<Cons<List<Type>,List<Type>>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -728(%rbp)
	pushq -736(%rbp)
	pushq -744(%rbp)
	pushq -752(%rbp)
	pushq -760(%rbp)
	pushq -584(%rbp)
	pushq -592(%rbp)
	pushq -600(%rbp)
	pushq -608(%rbp)
	pushq -616(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsListTypeListType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc62
	jmp uuid_000000000007dc64
uuid_000000000007dc62:
	push %RBP
#call function == : Arrow<Cons<Type,Type>,U64>+GlobalVariable
	push %RBX
	push %RBP
	mov %RSP, %RBX
	pushq -776(%rbp)
	pushq -784(%rbp)
	pushq -792(%rbp)
	pushq -632(%rbp)
	pushq -640(%rbp)
	pushq -648(%rbp)
	mov %RBX, %RBP
	call _EQ__EQ__CL_ArrowU64ConsTypeType
	mov %RBP, %RSP
	pop %RBP
	pop %RBX
	cmp $0, %RAX
	jne uuid_000000000007dc5f
	jmp uuid_000000000007dc61
uuid_000000000007dc5f:
	movq $1, -96(%rbp)
uuid_000000000007dc61:
	mov -808(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007dc64:
	mov -800(%RBP),%RSP
	add $-808, %RSP
uuid_000000000007dc6b:
	mov -400(%RBP),%RSP
	add $-808, %RSP
	jmp uuid_000000000007dc6e
uuid_000000000007dc6c:
	movq $1, -96(%rbp)
uuid_000000000007dc6e:
	mov -192(%RBP),%RSP
	add $-392, %RSP
	mov -96(%rbp), %RAX
	mov %rbp, %rsp
	sub $88, %rsp
	ret
.data
uuid_0000000000079338:
	.ascii "Pattern Match Failure"
	.zero 1
uuid_0000000000079339:
	.ascii "File: LIB/default-stdlib.lm Line: 74 Column: 5"
	.zero 1
uuid_000000000007939a:
	.ascii "File: LIB/default-stdlib.lm Line: 90 Column: 5"
	.zero 1
uuid_00000000000793aa:
	.ascii "()"
	.zero 1
uuid_00000000000793ba:
	.ascii "("
	.zero 1
uuid_00000000000793bb:
	.ascii " "
	.zero 1
uuid_00000000000793bc:
	.ascii ")"
	.zero 1
uuid_00000000000793c3:
	.ascii "["
	.zero 1
uuid_00000000000793c4:
	.ascii "]"
	.zero 1
uuid_00000000000793c5:
	.ascii "File: LIB/default-stdlib.lm Line: 112 Column: 5"
	.zero 1
uuid_00000000000793d2:
	.ascii " at "
	.zero 1
uuid_00000000000793e2:
	.ascii "Unable to open file: "
	.zero 1
uuid_00000000000793e3:
	.ascii "\n"
	.zero 1
uuid_00000000000793e7:
	.ascii "File Read Error ["
	.zero 1
uuid_00000000000793e8:
	.ascii "]: "
	.zero 1
uuid_000000000007940a:
	.ascii "File: LIB/default-stdlib.lm Line: 410 Column: 5"
	.zero 1
uuid_000000000007941a:
	.ascii "0"
	.zero 1
uuid_000000000007941e:
	.ascii "-"
	.zero 1
uuid_000000000007942e:
	.ascii "File: LIB/default-stdlib.lm Line: 519 Column: 8"
	.zero 1
uuid_0000000000079453:
	.ascii "1"
	.zero 1
uuid_0000000000079454:
	.ascii "2"
	.zero 1
uuid_0000000000079455:
	.ascii "3"
	.zero 1
uuid_0000000000079456:
	.ascii "4"
	.zero 1
uuid_0000000000079457:
	.ascii "5"
	.zero 1
uuid_0000000000079458:
	.ascii "6"
	.zero 1
uuid_0000000000079459:
	.ascii "7"
	.zero 1
uuid_000000000007945a:
	.ascii "8"
	.zero 1
uuid_000000000007945b:
	.ascii "9"
	.zero 1
uuid_000000000007945c:
	.ascii "a"
	.zero 1
uuid_000000000007945d:
	.ascii "b"
	.zero 1
uuid_000000000007945e:
	.ascii "c"
	.zero 1
uuid_000000000007945f:
	.ascii "d"
	.zero 1
uuid_0000000000079460:
	.ascii "e"
	.zero 1
uuid_0000000000079461:
	.ascii "f"
	.zero 1
uuid_0000000000079462:
	.ascii "File: LIB/default-stdlib.lm Line: 552 Column: 8"
	.zero 1
uuid_0000000000079496:
	.ascii ""
	.zero 1
malloc_SB_block_SB_head_CL_U64:
.zero 8
malloc_SB_block_SB_tail_CL_U64:
.zero 8
malloc_SB_first_SB_free_CL_U64:
.zero 8
malloc_SB_page_SB_tail_CL_U64:
.zero 8
malloc_SB_large_SB_size_CL_U64:
.zero 8
point_SB_of_SB_interest_CL_U64:
.zero 8
rc_SB_magic_SB_number_CL_U64:
.zero 8
assemble_SB_text_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_init_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_data_SB_section_CL_SSCaseNumber3:
.zero 24
assemble_SB_profile_SB_onexit_CL_SSCaseNumber3:
.zero 24
assemble_SB_final_CL_String:
.zero 8
assemble_SB_argv_SB_referenced_CL_U8:
.zero 8
main_SB_with_SB_argv_CL_U8:
.zero 8
main_SB_with_CL_U8:
.zero 8
config_SB_profile_SB_invocations_CL_U8:
.zero 8
config_SB_strict_CL_U8:
.zero 8
config_SB_preprocess_CL_U8:
.zero 8
config_SB_target_CL_String:
.zero 8
uuid_000000000007950c:
	.ascii "tmp.s"
	.zero 1
config_SB_assemble_SB_mode_CL_AssembleModeAssembleModeCaseNumber1:
.zero 8
config_SB_mode_CL_CompileModeCompileModeCaseNumber0:
.zero 8
preprocess_SB_macros_CL_MacroListMacroListCaseNumber1:
.zero 168
ast_SB_tokenized_SB_program_CL_ListTokenListTokenCaseNumber1:
.zero 72
ast_SB_parsed_SB_program_CL_ASTASTCaseNumber10:
.zero 72
global_SB_type_SB_context_CL_TContextTContextCaseNumber2:
.zero 120
global_SB_ctx_CL_FContextFContextCaseNumber1:
.zero 200
parse_SB_suffixes_CL_SfxListSfxListCaseNumber1:
.zero 48
stack_SB_to_SB_specialize_CL_ListStackToSpecializeListStackToSpecializeCaseNumber1:
.zero 200
uuid_0000000000079511:
	.ascii "_EX_"
	.zero 1
uuid_0000000000079512:
	.ascii "_DL_"
	.zero 1
uuid_0000000000079513:
	.ascii "_MD_"
	.zero 1
uuid_0000000000079514:
	.ascii "_AM_"
	.zero 1
uuid_0000000000079515:
	.ascii "_ML_"
	.zero 1
uuid_0000000000079516:
	.ascii "_AD_"
	.zero 1
uuid_0000000000079517:
	.ascii "_SB_"
	.zero 1
uuid_0000000000079518:
	.ascii "_DT_"
	.zero 1
uuid_0000000000079519:
	.ascii "_DV_"
	.zero 1
uuid_000000000007951a:
	.ascii "_CL_"
	.zero 1
uuid_000000000007951b:
	.ascii "_SC_"
	.zero 1
uuid_000000000007951c:
	.ascii "_LT_"
	.zero 1
uuid_000000000007951d:
	.ascii "_EQ_"
	.zero 1
uuid_000000000007951e:
	.ascii "_GT_"
	.zero 1
uuid_000000000007951f:
	.ascii "_QM_"
	.zero 1
uuid_0000000000079520:
	.ascii "_AT_"
	.zero 1
uuid_0000000000079521:
	.ascii "_LB_"
	.zero 1
uuid_0000000000079522:
	.ascii "_RB_"
	.zero 1
uuid_0000000000079523:
	.ascii "_HT_"
	.zero 1
uuid_0000000000079524:
	.ascii "_US_"
	.zero 1
uuid_0000000000079525:
	.ascii "_TK_"
	.zero 1
uuid_0000000000079526:
	.ascii "_BR_"
	.zero 1
uuid_0000000000079527:
	.ascii "_TL_"
	.zero 1
uuid_0000000000079528:
	.ascii "File: SRC/mangle-identifier.lm Line: 10 Column: 8"
	.zero 1
uuid_0000000000079574:
	.ascii "?"
	.zero 1
uuid_000000000007958d:
	.ascii "File: SRC/mangle-identifier.lm Line: 55 Column: 32"
	.zero 1
uuid_000000000007959d:
	.ascii "File: SRC/mangle-identifier.lm Line: 49 Column: 5"
	.zero 1
uuid_00000000000795aa:
	.ascii "\\"
	.zero 1
uuid_00000000000795ab:
	.ascii "Illegal Character: "
	.zero 1
uuid_00000000000795ac:
	.ascii "Illegal Escape Sequence In String "
	.zero 1
uuid_00000000000795ad:
	.ascii "File: SRC/escape-string.lm Line: 12 Column: 11"
	.zero 1
uuid_00000000000795d2:
	.ascii "\\\\\""
	.zero 1
uuid_00000000000795d3:
	.ascii ";"
	.zero 1
uuid_00000000000795d4:
	.ascii "\\\\\\\\"
	.zero 1
uuid_00000000000795d5:
	.ascii "'"
	.zero 1
uuid_00000000000795d6:
	.ascii "λ"
	.zero 1
uuid_00000000000795d7:
	.ascii "\\\\n"
	.zero 1
uuid_00000000000795d8:
	.ascii "#"
	.zero 1
uuid_00000000000795d9:
	.ascii "	"
	.zero 1
uuid_00000000000795da:
	.ascii "File: SRC/escape-string.lm Line: 50 Column: 14"
	.zero 1
uuid_00000000000795fc:
	.ascii "\\\\"
	.zero 1
uuid_0000000000079600:
	.ascii "\\n"
	.zero 1
uuid_0000000000079601:
	.ascii "File: SRC/escape-string.lm Line: 45 Column: 8"
	.zero 1
uuid_0000000000079620:
	.ascii "File: SRC/escape-string.lm Line: 85 Column: 5"
	.zero 1
uuid_0000000000079639:
	.ascii "as"
	.zero 1
uuid_000000000007964c:
	.ascii "In Coercion\n"
	.zero 1
uuid_000000000007964d:
	.ascii ":\n"
	.zero 1
uuid_000000000007964e:
	.ascii "As: "
	.zero 1
uuid_0000000000079658:
	.ascii "In Function Application\n"
	.zero 1
uuid_0000000000079659:
	.ascii "Return:\n"
	.zero 1
uuid_000000000007965a:
	.ascii "File: SRC/error-formatting.lm Line: 12 Column: 5"
	.zero 1
uuid_0000000000079664:
	.ascii "."
	.zero 1
uuid_000000000007966e:
	.ascii "File: SRC/is-variable.lm Line: 9 Column: 5"
	.zero 1
uuid_0000000000079702:
	.ascii "@"
	.zero 1
uuid_0000000000079706:
	.ascii "Used"
	.zero 1
uuid_0000000000079707:
	.ascii "Unused"
	.zero 1
uuid_0000000000079708:
	.ascii "Return"
	.zero 1
uuid_0000000000079709:
	.ascii "Tail"
	.zero 1
uuid_000000000007970a:
	.ascii "Call"
	.zero 1
uuid_000000000007970b:
	.ascii "File: SRC/to-string.lm Line: 9 Column: 5"
	.zero 1
uuid_000000000007972f:
	.ascii ","
	.zero 1
uuid_0000000000079730:
	.ascii "File: SRC/to-string.lm Line: 27 Column: 5"
	.zero 1
uuid_0000000000079749:
	.ascii "+"
	.zero 1
uuid_000000000007975c:
	.ascii "..."
	.zero 1
uuid_000000000007976f:
	.ascii "<"
	.zero 1
uuid_0000000000079770:
	.ascii ">"
	.zero 1
uuid_0000000000079771:
	.ascii "File: SRC/to-string.lm Line: 46 Column: 5"
	.zero 1
uuid_00000000000797e4:
	.ascii "File: SRC/is-equal.lm Line: 4 Column: 5"
	.zero 1
type_SB_index_CL_BTreeIsTypeASTBTreeIsTypeASTCaseNumber0:
.zero 128
uuid_0000000000079800:
	.ascii "Nil"
	.zero 1
uuid_000000000007981c:
	.ascii "GlobalVariable"
	.zero 1
uuid_000000000007981d:
	.ascii "mov"
	.zero 1
uuid_000000000007981e:
	.ascii "Cons"
	.zero 1
uuid_000000000007983d:
	.ascii ":"
	.zero 1
uuid_0000000000079868:
	.ascii "File: SRC/infer-expr.lm Line: 28 Column: 11"
	.zero 1
uuid_0000000000079899:
	.ascii "File: SRC/infer-expr.lm Line: 57 Column: 14"
	.zero 1
uuid_00000000000798a9:
	.ascii "gensym-label"
	.zero 1
uuid_00000000000798bc:
	.ascii "Label"
	.zero 1
uuid_00000000000798c6:
	.ascii "label"
	.zero 1
uuid_00000000000798d9:
	.ascii "if"
	.zero 1
uuid_000000000007992b:
	.ascii "Reg8"
	.zero 1
uuid_000000000007992f:
	.ascii "Reg16"
	.zero 1
uuid_0000000000079933:
	.ascii "Reg32"
	.zero 1
uuid_0000000000079937:
	.ascii "Reg64"
	.zero 1
uuid_000000000007993b:
	.ascii "File: SRC/infer-expr.lm Line: 89 Column: 11"
	.zero 1
uuid_0000000000079945:
	.ascii "AsOnly"
	.zero 1
uuid_0000000000079955:
	.ascii "sizeof"
	.zero 1
uuid_0000000000079968:
	.ascii "U64"
	.zero 1
uuid_0000000000079972:
	.ascii "File: SRC/infer-expr.lm Line: 117 Column: 11"
	.zero 1
uuid_0000000000079976:
	.ascii "scope"
	.zero 1
uuid_0000000000079989:
	.ascii "open"
	.zero 1
uuid_000000000007999c:
	.ascii "Array"
	.zero 1
uuid_00000000000799d3:
	.ascii "push-deref"
	.zero 1
uuid_00000000000799d4:
	.ascii "StackVariable"
	.zero 1
uuid_00000000000799d5:
	.ascii "File: SRC/infer-expr.lm Line: 129 Column: 11"
	.zero 1
uuid_00000000000799fd:
	.ascii "Variable Name Is Already Bound In Outer Scope"
	.zero 1
uuid_0000000000079a04:
	.ascii "Unable to infer type of expression"
	.zero 1
uuid_0000000000079a1d:
	.ascii "File: SRC/infer-expr.lm Line: 153 Column: 11"
	.zero 1
uuid_0000000000079a21:
	.ascii "del"
	.zero 1
uuid_0000000000079a37:
	.ascii "Rc"
	.zero 1
uuid_0000000000079a38:
	.ascii "inc"
	.zero 1
uuid_0000000000079a39:
	.ascii "Tuple"
	.zero 1
uuid_0000000000079a46:
	.ascii "Constructor"
	.zero 1
uuid_0000000000079a47:
	.ascii "CaseNumber"
	.zero 1
uuid_0000000000079a48:
	.ascii "Sized"
	.zero 1
uuid_0000000000079a49:
	.ascii "FieldsSized"
	.zero 1
uuid_0000000000079a4a:
	.ascii "push"
	.zero 1
uuid_0000000000079a4b:
	.ascii "File: SRC/infer-expr.lm Line: 193 Column: 14"
	.zero 1
uuid_0000000000079a82:
	.ascii "File: SRC/infer-expr.lm Line: 211 Column: 14"
	.zero 1
uuid_0000000000079a89:
	.ascii "Arrow"
	.zero 1
uuid_0000000000079a8a:
	.ascii "cdecl::return"
	.zero 1
uuid_0000000000079ab2:
	.ascii "Unknown Term In Type Inference\n"
	.zero 1
uuid_0000000000079ab3:
	.ascii "File: SRC/infer-expr.lm Line: 8 Column: 5"
	.zero 1
alias_SB_index_CL_ListTupleTypeTupleStringStringListTupleTypeTupleStringStringCaseNumber1:
.zero 72
uuid_0000000000079b4d:
	.ascii "File: SRC/alias.lm Line: 11 Column: 8"
	.zero 1
uuid_0000000000079b51:
	.ascii "File: SRC/alias.lm Line: 10 Column: 5"
	.zero 1
uuid_0000000000079b85:
	.ascii "File: SRC/alias.lm Line: 29 Column: 8"
	.zero 1
uuid_0000000000079b89:
	.ascii "File: SRC/alias.lm Line: 28 Column: 5"
	.zero 1
class_SB_exists_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
parameter_SB_is_SB_flat_SB_index_CL_BTreeEqU64TupleU64TupleU64StringBTreeEqU64TupleU64TupleU64StringCaseNumber0:
.zero 80
is_SB_special_SB_index_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0:
.zero 80
lone_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_is_SB_fragment_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
global_SB_symbol_SB_registry_CL_BTreeEqU64TupleTypeStringBTreeEqU64TupleTypeStringCaseNumber0:
.zero 80
uuid_0000000000079bdc:
	.ascii "Hook"
	.zero 1
uuid_0000000000079bdd:
	.ascii "Duplicate Global Symbol "
	.zero 1
uuid_0000000000079bde:
	.ascii " : "
	.zero 1
class_SB_to_SB_only_SB_child_CL_BTreeEqStringStringBTreeEqStringStringCaseNumber0:
.zero 48
tag_SB_to_SB_index_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
unknown_SB_index_SB_of_SB_tag_CL_U64:
.zero 8
class_SB_to_SB_size_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_to_SB_class_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0:
.zero 64
uuid_0000000000079c1f:
	.ascii "Unexpected Class In index-class-of-tag: "
	.zero 1
uuid_0000000000079c20:
	.ascii "File: SRC/class-of-tag.lm Line: 6 Column: 5"
	.zero 1
class_SB_to_SB_yes_SB_index_CL_BTreeEqU64StringBTreeEqU64StringCaseNumber0:
.zero 48
tag_SB_to_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0:
.zero 96
uuid_0000000000079c5f:
	.ascii "Tag"
	.zero 1
uuid_0000000000079c7b:
	.ascii "File: SRC/fields-of-tag.lm Line: 17 Column: 64"
	.zero 1
uuid_0000000000079c82:
	.ascii "Invalid Tag In fields-of-tag "
	.zero 1
uuid_0000000000079c83:
	.ascii "File: SRC/fields-of-tag.lm Line: 15 Column: 5"
	.zero 1
uuid_0000000000079c8a:
	.ascii "Fields"
	.zero 1
type_SB_constructors_SB_index_CL_BTreeEqTypeStringBTreeEqTypeStringCaseNumber0:
.zero 64
type_SB_complex_SB_fields_SB_index_CL_BTreeEqTupleTypeTypeStringBTreeEqTupleTypeTypeStringCaseNumber0:
.zero 96
uuid_0000000000079ca2:
	.ascii "ERROR: set-type-fields\n"
	.zero 1
uuid_0000000000079ca3:
	.ascii "File: SRC/type-complex-fields.lm Line: 6 Column: 5"
	.zero 1
uuid_0000000000079ccb:
	.ascii "File: SRC/get-vararg-inner.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079cf9:
	.ascii "File: SRC/is-constructor.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079d1b:
	.ascii "File: SRC/is-constructor.lm Line: 17 Column: 5"
	.zero 1
uuid_0000000000079d37:
	.ascii "File: SRC/is-constructor.lm Line: 28 Column: 5"
	.zero 1
uuid_0000000000079d9e:
	.ascii "Field"
	.zero 1
uuid_0000000000079dbd:
	.ascii "File: SRC/is-open.lm Line: 16 Column: 11"
	.zero 1
uuid_0000000000079dc4:
	.ascii "File: SRC/is-open.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079dfb:
	.ascii "File: SRC/is-parameterized.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079e29:
	.ascii "File: SRC/is-sized.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079e45:
	.ascii "Constant"
	.zero 1
uuid_0000000000079e7c:
	.ascii "File: SRC/has-representation.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079e95:
	.ascii "File: SRC/guess-representation.lm Line: 5 Column: 8"
	.zero 1
uuid_0000000000079eab:
	.ascii "LocalVariable"
	.zero 1
uuid_0000000000079eca:
	.ascii "File: SRC/deep-hash.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079ee2:
	.ascii "File: SRC/deep-hash.lm Line: 26 Column: 5"
	.zero 1
uuid_0000000000079ee9:
	.ascii " != "
	.zero 1
uuid_0000000000079eea:
	.ascii "Type Ascription Inequality"
	.zero 1
uuid_0000000000079f03:
	.ascii "File: SRC/typeof.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079f13:
	.ascii "Var"
	.zero 1
uuid_0000000000079f1d:
	.ascii "Lit"
	.zero 1
uuid_0000000000079f69:
	.ascii "App"
	.zero 1
uuid_0000000000079f76:
	.ascii "Abs"
	.zero 1
uuid_0000000000079f77:
	.ascii "File: SRC/to-s.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079fa2:
	.ascii "File: SRC/p.lm Line: 3 Column: 5"
	.zero 1
uuid_0000000000079fbb:
	.ascii "File: SRC/and.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079fd4:
	.ascii "File: SRC/union.lm Line: 4 Column: 5"
	.zero 1
uuid_0000000000079fed:
	.ascii "File: SRC/union.lm Line: 21 Column: 8"
	.zero 1
uuid_000000000007a006:
	.ascii "program"
	.zero 1
uuid_000000000007a007:
	.ascii "File: SRC/union.lm Line: 36 Column: 28"
	.zero 1
uuid_000000000007a01a:
	.ascii "File: SRC/tag-of.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a050:
	.ascii "File: SRC/can-unify.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a06c:
	.ascii "Meta"
	.zero 1
uuid_000000000007a1de:
	.ascii "GT"
	.zero 1
uuid_000000000007a215:
	.ascii "File: SRC/can-unify.lm Line: 21 Column: 5"
	.zero 1
uuid_000000000007a2b8:
	.ascii "File: SRC/unify.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007a2f8:
	.ascii "File: SRC/unify.lm Line: 47 Column: 11"
	.zero 1
uuid_000000000007a458:
	.ascii "File: SRC/unify.lm Line: 12 Column: 5"
	.zero 1
uuid_000000000007a4af:
	.ascii "File: SRC/unify.lm Line: 130 Column: 5"
	.zero 1
uuid_000000000007a4dc:
	.ascii "File: SRC/fields-of-type.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a591:
	.ascii "File: SRC/sizeof-type.lm Line: 25 Column: 11"
	.zero 1
uuid_000000000007a5a4:
	.ascii "Unexpected Type sizeof-type "
	.zero 1
uuid_000000000007a5a5:
	.ascii "File: SRC/sizeof-type.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a5d9:
	.ascii "File: SRC/has-infinite.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007a631:
	.ascii "File: SRC/has-infinite.lm Line: 26 Column: 5"
	.zero 1
uuid_000000000007a652:
	.ascii "File: SRC/has-forward.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a6a3:
	.ascii "File: SRC/has-forward.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007a6b6:
	.ascii "AL"
	.zero 1
uuid_000000000007a6b7:
	.ascii "BL"
	.zero 1
uuid_000000000007a6b8:
	.ascii "CL"
	.zero 1
uuid_000000000007a6b9:
	.ascii "DL"
	.zero 1
uuid_000000000007a6ba:
	.ascii "SIL"
	.zero 1
uuid_000000000007a6bb:
	.ascii "DIL"
	.zero 1
uuid_000000000007a6bc:
	.ascii "BPL"
	.zero 1
uuid_000000000007a6bd:
	.ascii "SPL"
	.zero 1
uuid_000000000007a6be:
	.ascii "R8B"
	.zero 1
uuid_000000000007a6bf:
	.ascii "R9B"
	.zero 1
uuid_000000000007a6c0:
	.ascii "R10B"
	.zero 1
uuid_000000000007a6c1:
	.ascii "R11B"
	.zero 1
uuid_000000000007a6c2:
	.ascii "R12B"
	.zero 1
uuid_000000000007a6c3:
	.ascii "R13B"
	.zero 1
uuid_000000000007a6c4:
	.ascii "R14B"
	.zero 1
uuid_000000000007a6c5:
	.ascii "R15B"
	.zero 1
uuid_000000000007a6c6:
	.ascii "File: SRC/is-reg8.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a70c:
	.ascii "File: SRC/is-reg8.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007a716:
	.ascii "AX"
	.zero 1
uuid_000000000007a717:
	.ascii "BX"
	.zero 1
uuid_000000000007a718:
	.ascii "CX"
	.zero 1
uuid_000000000007a719:
	.ascii "DX"
	.zero 1
uuid_000000000007a71a:
	.ascii "SI"
	.zero 1
uuid_000000000007a71b:
	.ascii "DI"
	.zero 1
uuid_000000000007a71c:
	.ascii "BP"
	.zero 1
uuid_000000000007a71d:
	.ascii "SP"
	.zero 1
uuid_000000000007a71e:
	.ascii "R8W"
	.zero 1
uuid_000000000007a71f:
	.ascii "R9W"
	.zero 1
uuid_000000000007a720:
	.ascii "R10W"
	.zero 1
uuid_000000000007a721:
	.ascii "R11W"
	.zero 1
uuid_000000000007a722:
	.ascii "R12W"
	.zero 1
uuid_000000000007a723:
	.ascii "R13W"
	.zero 1
uuid_000000000007a724:
	.ascii "R14W"
	.zero 1
uuid_000000000007a725:
	.ascii "R15W"
	.zero 1
uuid_000000000007a726:
	.ascii "File: SRC/is-reg16.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a76c:
	.ascii "File: SRC/is-reg16.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007a776:
	.ascii "EAX"
	.zero 1
uuid_000000000007a777:
	.ascii "EBX"
	.zero 1
uuid_000000000007a778:
	.ascii "ECX"
	.zero 1
uuid_000000000007a779:
	.ascii "EDX"
	.zero 1
uuid_000000000007a77a:
	.ascii "ESI"
	.zero 1
uuid_000000000007a77b:
	.ascii "EDI"
	.zero 1
uuid_000000000007a77c:
	.ascii "EBP"
	.zero 1
uuid_000000000007a77d:
	.ascii "ESP"
	.zero 1
uuid_000000000007a77e:
	.ascii "R8D"
	.zero 1
uuid_000000000007a77f:
	.ascii "R9D"
	.zero 1
uuid_000000000007a780:
	.ascii "R10D"
	.zero 1
uuid_000000000007a781:
	.ascii "R11D"
	.zero 1
uuid_000000000007a782:
	.ascii "R12D"
	.zero 1
uuid_000000000007a783:
	.ascii "R13D"
	.zero 1
uuid_000000000007a784:
	.ascii "R14D"
	.zero 1
uuid_000000000007a785:
	.ascii "R15D"
	.zero 1
uuid_000000000007a786:
	.ascii "File: SRC/is-reg32.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a7cc:
	.ascii "File: SRC/is-reg32.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007a7d6:
	.ascii "RAX"
	.zero 1
uuid_000000000007a7d7:
	.ascii "RBX"
	.zero 1
uuid_000000000007a7d8:
	.ascii "RCX"
	.zero 1
uuid_000000000007a7d9:
	.ascii "RDX"
	.zero 1
uuid_000000000007a7da:
	.ascii "RSI"
	.zero 1
uuid_000000000007a7db:
	.ascii "RDI"
	.zero 1
uuid_000000000007a7dc:
	.ascii "RBP"
	.zero 1
uuid_000000000007a7dd:
	.ascii "RSP"
	.zero 1
uuid_000000000007a7de:
	.ascii "R8"
	.zero 1
uuid_000000000007a7df:
	.ascii "R9"
	.zero 1
uuid_000000000007a7e0:
	.ascii "R10"
	.zero 1
uuid_000000000007a7e1:
	.ascii "R11"
	.zero 1
uuid_000000000007a7e2:
	.ascii "R12"
	.zero 1
uuid_000000000007a7e3:
	.ascii "R13"
	.zero 1
uuid_000000000007a7e4:
	.ascii "R14"
	.zero 1
uuid_000000000007a7e5:
	.ascii "R15"
	.zero 1
uuid_000000000007a7e6:
	.ascii "File: SRC/is-reg64.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007a82c:
	.ascii "File: SRC/is-reg64.lm Line: 29 Column: 5"
	.zero 1
uuid_000000000007a842:
	.ascii "File: SRC/with-tag.lm Line: 5 Column: 8"
	.zero 1
uuid_000000000007a86a:
	.ascii "File: SRC/with-size.lm Line: 8 Column: 5"
	.zero 1
uuid_000000000007a87c:
	.ascii "File: SRC/with-size.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007a8c2:
	.ascii "File: SRC/with-size.lm Line: 30 Column: 5"
	.zero 1
uuid_000000000007a8e7:
	.ascii "File: SRC/with-fields.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a912:
	.ascii "File: SRC/without-tag.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007a940:
	.ascii "File: SRC/without-tag.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a95e:
	.ascii "File: SRC/without-tag.lm Line: 27 Column: 5"
	.zero 1
uuid_000000000007a986:
	.ascii "File: SRC/without-constructor.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a99e:
	.ascii "File: SRC/without-representation.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007a9c0:
	.ascii "Literal"
	.zero 1
uuid_000000000007aa18:
	.ascii "File: SRC/without-representation.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007aa4b:
	.ascii "File: SRC/without-size-unless-class.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007aa73:
	.ascii "File: SRC/without-size-unless-class.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007aab3:
	.ascii "File: SRC/without-size-unless-class.lm Line: 46 Column: 5"
	.zero 1
uuid_000000000007aad1:
	.ascii "File: SRC/without-size.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007ab0b:
	.ascii "File: SRC/without-size.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007ab36:
	.ascii "File: SRC/with-only-tag.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ab5e:
	.ascii "File: SRC/with-only-class.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ab73:
	.ascii "File: SRC/with-only-representation.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007abec:
	.ascii "File: SRC/with-only-representation.lm Line: 19 Column: 5"
	.zero 1
uuid_000000000007ac23:
	.ascii "File: SRC/normalize.lm Line: 12 Column: 5"
	.zero 1
uuid_000000000007ac5d:
	.ascii "Malformed Type Definition"
	.zero 1
uuid_000000000007ac5e:
	.ascii "File: SRC/type-of-s.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ac86:
	.ascii "Mark Field "
	.zero 1
uuid_000000000007ac87:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007aca9:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 25 Column: 11"
	.zero 1
uuid_000000000007accb:
	.ascii "File: SRC/type-of-s-with-fields.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ad23:
	.ascii "Unknown LHS"
	.zero 1
uuid_000000000007ad24:
	.ascii "File: SRC/typeof-lhs.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ad54:
	.ascii "File: SRC/cons-head.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ad76:
	.ascii "File: SRC/cons-tail.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ad86:
	.ascii "File: SRC/parameter-number.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ada3:
	.ascii "File: SRC/parameter-number.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007adad:
	.ascii "Function Application Yielded No Matches\n"
	.zero 1
uuid_000000000007adae:
	.ascii "\nWith Argument : "
	.zero 1
uuid_000000000007adaf:
	.ascii "Options: "
	.zero 1
uuid_000000000007adb3:
	.ascii "Function Application Yielded An Irreducible Plurality Of Matches\n"
	.zero 1
uuid_000000000007adb4:
	.ascii "With Argument "
	.zero 1
uuid_000000000007adb5:
	.ascii "Matched "
	.zero 1
uuid_000000000007adbf:
	.ascii "File: SRC/apply.lm Line: 31 Column: 11"
	.zero 1
uuid_000000000007aded:
	.ascii "Application Did Not Close Before Specialization:\n"
	.zero 1
uuid_000000000007adee:
	.ascii "Function "
	.zero 1
uuid_000000000007adef:
	.ascii "Argument "
	.zero 1
uuid_000000000007adf6:
	.ascii "Function Not Simple Arrow: "
	.zero 1
uuid_000000000007adf7:
	.ascii "File: SRC/apply.lm Line: 43 Column: 8"
	.zero 1
uuid_000000000007adfe:
	.ascii "File: SRC/apply.lm Line: 42 Column: 5"
	.zero 1
uuid_000000000007ae2c:
	.ascii "File: SRC/apply.lm Line: 81 Column: 33"
	.zero 1
uuid_000000000007ae66:
	.ascii "File: SRC/apply.lm Line: 72 Column: 5"
	.zero 1
uuid_000000000007aeae:
	.ascii "File: SRC/apply-plural.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007aec8:
	.ascii "File: SRC/reduce-plural.lm Line: 5 Column: 41"
	.zero 1
uuid_000000000007aeea:
	.ascii "File: SRC/reduce-plural.lm Line: 19 Column: 11"
	.zero 1
uuid_000000000007aef4:
	.ascii "File: SRC/reduce-plural.lm Line: 15 Column: 27"
	.zero 1
uuid_000000000007af13:
	.ascii "File: SRC/reduce-plural.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007af1d:
	.ascii "File: SRC/reduce-plural.lm Line: 33 Column: 27"
	.zero 1
uuid_000000000007af39:
	.ascii "Blob"
	.zero 1
uuid_000000000007af56:
	.ascii "File: SRC/try-specialize.lm Line: 17 Column: 20"
	.zero 1
uuid_000000000007af66:
	.ascii "File: SRC/try-specialize.lm Line: 5 Column: 35"
	.zero 1
uuid_000000000007afa0:
	.ascii "File: SRC/unify-hint.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007afb5:
	.ascii "File: SRC/unify-hint.lm Line: 24 Column: 5"
	.zero 1
uuid_000000000007afbf:
	.ascii "|"
	.zero 1
uuid_000000000007aff6:
	.ascii "File: SRC/infer-type-definition.lm Line: 18 Column: 14"
	.zero 1
uuid_000000000007b009:
	.ascii "File: SRC/infer-type-definition.lm Line: 25 Column: 17"
	.zero 1
uuid_000000000007b013:
	.ascii "File: SRC/infer-type-definition.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007b025:
	.ascii "File: SRC/arity.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b035:
	.ascii "File: SRC/arity.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007b057:
	.ascii "File: SRC/cons-arity.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b07f:
	.ascii "File: SRC/implicit-tail.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b086:
	.ascii "Unknown Referenced Variable"
	.zero 1
uuid_000000000007b0a5:
	.ascii "File: SRC/typeof-var-raw.lm Line: 4 Column: 28"
	.zero 1
types_SB_have_SB_changed_CL_U8:
.zero 8
uuid_000000000007b0b8:
	.ascii "File: SRC/typecheck.lm Line: 7 Column: 25"
	.zero 1
uuid_000000000007b0c8:
	.ascii "File: SRC/typecheck.lm Line: 14 Column: 42"
	.zero 1
uuid_000000000007b0ef:
	.ascii "File: SRC/typecheck.lm Line: 22 Column: 43"
	.zero 1
uuid_000000000007b132:
	.ascii "File: SRC/substitute.lm Line: 4 Column: 27"
	.zero 1
uuid_000000000007b14d:
	.ascii "File: SRC/substitute.lm Line: 27 Column: 5"
	.zero 1
uuid_000000000007b16c:
	.ascii "File: SRC/substitute.lm Line: 44 Column: 34"
	.zero 1
uuid_000000000007b188:
	.ascii "File: SRC/substitute.lm Line: 41 Column: 5"
	.zero 1
uuid_000000000007b1a0:
	.ascii "File: SRC/substitute.lm Line: 73 Column: 5"
	.zero 1
uuid_000000000007b1e9:
	.ascii "File: SRC/substitute.lm Line: 90 Column: 34"
	.zero 1
uuid_000000000007b20b:
	.ascii "File: SRC/substitute.lm Line: 87 Column: 5"
	.zero 1
uuid_000000000007b290:
	.ascii "Unexpected Substitute LHS"
	.zero 1
uuid_000000000007b291:
	.ascii "File: SRC/substitute.lm Line: 128 Column: 5"
	.zero 1
uuid_000000000007b2e0:
	.ascii "File: SRC/substitute.lm Line: 168 Column: 34"
	.zero 1
uuid_000000000007b326:
	.ascii "File: SRC/substitute.lm Line: 187 Column: 34"
	.zero 1
uuid_000000000007b378:
	.ascii "Unexpected Substitution Term:"
	.zero 1
uuid_000000000007b379:
	.ascii "File: SRC/substitute.lm Line: 159 Column: 5"
	.zero 1
uuid_000000000007b3b6:
	.ascii "File: SRC/substitute.lm Line: 247 Column: 34"
	.zero 1
uuid_000000000007b3c6:
	.ascii "File: SRC/substitute.lm Line: 243 Column: 5"
	.zero 1
uuid_000000000007b3f4:
	.ascii "File: SRC/specialize.lm Line: 14 Column: 20"
	.zero 1
uuid_000000000007b401:
	.ascii "File: SRC/specialize.lm Line: 7 Column: 38"
	.zero 1
uuid_000000000007b420:
	.ascii "File: SRC/mark-constructor-flat-parameters.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b451:
	.ascii "File: SRC/mark-constructor-flat-parameters.lm Line: 16 Column: 5"
	.zero 1
uuid_000000000007b479:
	.ascii "Size Of Type Cannot Be Determined Due To Forward Reference: "
	.zero 1
uuid_000000000007b47d:
	.ascii "Size Of Type Is Infinite: "
	.zero 1
uuid_000000000007b481:
	.ascii "File: SRC/infer-type-constructor.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b4a6:
	.ascii "File: SRC/infer-global-context.lm Line: 9 Column: 11"
	.zero 1
uuid_000000000007b4f2:
	.ascii "Hooks Must Not Return Values."
	.zero 1
uuid_000000000007b535:
	.ascii "Global Bindings Must Be Ascripted"
	.zero 1
uuid_000000000007b536:
	.ascii "File: SRC/infer-global-context.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b54f:
	.ascii "File: SRC/assert-well-typed.lm Line: 3 Column: 26"
	.zero 1
uuid_000000000007b61c:
	.ascii "set"
	.zero 1
uuid_000000000007b698:
	.ascii "Unknown Term In Assert Well Typed "
	.zero 1
uuid_000000000007b699:
	.ascii "File: SRC/assert-well-typed.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007b739:
	.ascii "Invalid LHS"
	.zero 1
uuid_000000000007b73a:
	.ascii "File: SRC/infer-ctx.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b752:
	.ascii "File: SRC/infer-tctx.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007b771:
	.ascii "File: SRC/infer-tctx.lm Line: 15 Column: 5"
	.zero 1
uuid_000000000007b77e:
	.ascii "	mov $60, %rax\n"
	.zero 1
uuid_000000000007b77f:
	.ascii "	mov $0, %rdi\n"
	.zero 1
uuid_000000000007b780:
	.ascii "	syscall\n"
	.zero 1
uuid_000000000007b781:
	.ascii ".data\n"
	.zero 1
uuid_000000000007b782:
	.ascii ".global _start\n"
	.zero 1
uuid_000000000007b783:
	.ascii ".text\n"
	.zero 1
uuid_000000000007b784:
	.ascii "_start:\n"
	.zero 1
uuid_000000000007b785:
	.ascii "	mov %rsp,%rbp\n"
	.zero 1
uuid_000000000007b786:
	.ascii "	mov %rbp,%rsp\n"
	.zero 1
uuid_000000000007b78a:
	.ascii "	popq %r8\n"
	.zero 1
uuid_000000000007b78b:
	.ascii "	movq %rsp, %r9\n"
	.zero 1
uuid_000000000007b78f:
	.ascii "	push %rbp\n"
	.zero 1
uuid_000000000007b790:
	.ascii "	mov %rsp, %rbp\n"
	.zero 1
uuid_000000000007b791:
	.ascii "	pushq %r8\n"
	.zero 1
uuid_000000000007b792:
	.ascii "	pushq %r9\n"
	.zero 1
uuid_000000000007b796:
	.ascii "	call main\n"
	.zero 1
uuid_000000000007b797:
	.ascii "	mov %rbp, %rsp\n"
	.zero 1
uuid_000000000007b798:
	.ascii "	pop %rbp\n"
	.zero 1
uuid_000000000007b79c:
	.ascii "File: SRC/compile.lm Line: 2 Column: 20"
	.zero 1
uuid_000000000007b7df:
	.ascii "fragment-type"
	.zero 1
uuid_000000000007b7e0:
	.ascii "Function"
	.zero 1
uuid_000000000007b7e1:
	.ascii "File: SRC/compile-blob.lm Line: 10 Column: 11"
	.zero 1
uuid_000000000007b7f1:
	.ascii "File: SRC/compile-blob.lm Line: 4 Column: 39"
	.zero 1
uuid_000000000007b846:
	.ascii "expression"
	.zero 1
uuid_000000000007b847:
	.ascii "File: SRC/compile-blob.lm Line: 31 Column: 39"
	.zero 1
uuid_000000000007b875:
	.ascii "main"
	.zero 1
uuid_000000000007b879:
	.ascii "Global"
	.zero 1
uuid_000000000007b87a:
	.ascii "->"
	.zero 1
uuid_000000000007b884:
	.ascii "File: SRC/compile-gnu.lm Line: 19 Column: 17"
	.zero 1
uuid_000000000007b8ac:
	.ascii "File: SRC/compile-gnu.lm Line: 4 Column: 39"
	.zero 1
uuid_000000000007b8c8:
	.ascii "File: SRC/compile-program-ordered.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007b8f9:
	.ascii "File: SRC/compile-program-ordered.lm Line: 11 Column: 5"
	.zero 1
uuid_000000000007b936:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 15 Column: 14"
	.zero 1
uuid_000000000007b940:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 11 Column: 27"
	.zero 1
uuid_000000000007b947:
	.ascii "Context::lookup "
	.zero 1
uuid_000000000007b948:
	.ascii "\nCandidates:\n"
	.zero 1
uuid_000000000007b95b:
	.ascii "File: SRC/fragment-context::lookup.lm Line: 45 Column: 30"
	.zero 1
uuid_000000000007b962:
	.ascii "Context::lookup Could Not Find Symbol"
	.zero 1
uuid_000000000007b9b0:
	.ascii "File: SRC/fragment-context::lookups.lm Line: 14 Column: 14"
	.zero 1
uuid_000000000007b9ba:
	.ascii "File: SRC/fragment-context::lookups.lm Line: 10 Column: 27"
	.zero 1
uuid_000000000007b9c1:
	.ascii "Context::lookups "
	.zero 1
uuid_000000000007b9d7:
	.ascii "File: SRC/fragment-context::lookup-vararg.lm Line: 4 Column: 27"
	.zero 1
uuid_000000000007ba2f:
	.ascii "File: SRC/with-location.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ba5a:
	.ascii "File: SRC/with-location.lm Line: 57 Column: 5"
	.zero 1
uuid_000000000007baa6:
	.ascii "File: SRC/without-location.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bad1:
	.ascii "File: SRC/without-location.lm Line: 52 Column: 5"
	.zero 1
uuid_000000000007bae1:
	.ascii "File: SRC/with-key.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007bae5:
	.ascii "Unknown"
	.zero 1
uuid_000000000007bb37:
	.ascii "File: SRC/location-of.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bb5c:
	.ascii "File: SRC/unique.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007bb6c:
	.ascii "File: SRC/print-verbose.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007bb7f:
	.ascii "File: SRC/non-zero.lm Line: 4 Column: 5"
	.zero 1
already_SB_tokenized_CL_ListStringListStringCaseNumber1:
.zero 24
uuid_000000000007bb95:
	.ascii "File: SRC/tokenize.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007bba3:
	.ascii "File: SRC/tokenize.lm Line: 25 Column: 8"
	.zero 1
uuid_000000000007bc08:
	.ascii "File: SRC/tokenize.lm Line: 35 Column: 8"
	.zero 1
uuid_000000000007bc32:
	.ascii "Hanging Parentheses In File: "
	.zero 1
uuid_000000000007bc33:
	.ascii " Count: "
	.zero 1
uuid_000000000007bc49:
	.ascii "File: SRC/is-nil.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bc5c:
	.ascii "File: SRC/is-seq.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bc75:
	.ascii "File: SRC/is-arrow.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bc91:
	.ascii "File: SRC/is-hook.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bcad:
	.ascii "File: SRC/is-blob.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bcc9:
	.ascii "File: SRC/is-cons.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bcdc:
	.ascii "ImpureCtx"
	.zero 1
uuid_000000000007bce6:
	.ascii "File: SRC/is-impure-ctx.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bcf9:
	.ascii "String"
	.zero 1
uuid_000000000007bd03:
	.ascii "File: SRC/is-string.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bd16:
	.ascii "OntoStack"
	.zero 1
uuid_000000000007bd32:
	.ascii "File: SRC/is-onto-stack.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bd45:
	.ascii "ImpureOffset"
	.zero 1
uuid_000000000007bd61:
	.ascii "File: SRC/is-impure-offset.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bd74:
	.ascii "BranchConditional"
	.zero 1
uuid_000000000007bd7e:
	.ascii "File: SRC/is-branchconditional.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007bd91:
	.ascii "File: SRC/plus.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007bda7:
	.ascii "File: SRC/print.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007bdb7:
	.ascii " = "
	.zero 1
uuid_000000000007bdb8:
	.ascii ";\n"
	.zero 1
uuid_000000000007bdb9:
	.ascii "File: SRC/print.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007bdd2:
	.ascii "File: SRC/print.lm Line: 25 Column: 5"
	.zero 1
uuid_000000000007bddc:
	.ascii "EOF"
	.zero 1
uuid_000000000007be04:
	.ascii "type "
	.zero 1
uuid_000000000007be0e:
	.ascii " := "
	.zero 1
uuid_000000000007be2d:
	.ascii "File: SRC/print.lm Line: 40 Column: 5"
	.zero 1
uuid_000000000007be4f:
	.ascii "Fragment Context:\n"
	.zero 1
uuid_000000000007be5f:
	.ascii "File: SRC/print.lm Line: 84 Column: 27"
	.zero 1
uuid_000000000007be7b:
	.ascii "Fragment\n"
	.zero 1
uuid_000000000007be7c:
	.ascii "	Offset = "
	.zero 1
uuid_000000000007be89:
	.ascii "File: SRC/print.lm Line: 99 Column: 33"
	.zero 1
uuid_000000000007be90:
	.ascii "File: SRC/print.lm Line: 94 Column: 5"
	.zero 1
uuid_000000000007be9d:
	.ascii "File: SRC/print.lm Line: 111 Column: 5"
	.zero 1
uuid_000000000007beb0:
	.ascii "In File "
	.zero 1
uuid_000000000007beb1:
	.ascii " Line "
	.zero 1
uuid_000000000007beb2:
	.ascii " Column "
	.zero 1
uuid_000000000007beb3:
	.ascii "File: SRC/print.lm Line: 122 Column: 5"
	.zero 1
uuid_000000000007becf:
	.ascii " +\n"
	.zero 1
uuid_000000000007bed0:
	.ascii " + "
	.zero 1
uuid_000000000007bedd:
	.ascii "File: SRC/print.lm Line: 135 Column: 29"
	.zero 1
uuid_000000000007bf01:
	.ascii "File: SRC/print.lm Line: 159 Column: 35"
	.zero 1
uuid_000000000007bf14:
	.ascii "File: SRC/reverse.lm Line: 4 Column: 26"
	.zero 1
uuid_000000000007bf2a:
	.ascii "(Variable "
	.zero 1
uuid_000000000007bf34:
	.ascii "(Literal "
	.zero 1
uuid_000000000007bf44:
	.ascii "(Type ("
	.zero 1
uuid_000000000007bf45:
	.ascii "))"
	.zero 1
uuid_000000000007bf4f:
	.ascii "(Global ("
	.zero 1
uuid_000000000007bf59:
	.ascii "(App ("
	.zero 1
uuid_000000000007bf66:
	.ascii "(Lambda ("
	.zero 1
uuid_000000000007bf79:
	.ascii "File: SRC/serialize-ast.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007bfb2:
	.ascii "File: SRC/serialize-ast.lm Line: 59 Column: 43"
	.zero 1
uuid_000000000007bfbc:
	.ascii "(Variable ?)"
	.zero 1
uuid_000000000007bfcc:
	.ascii "(Literal And) "
	.zero 1
uuid_000000000007bfdf:
	.ascii ") "
	.zero 1
uuid_000000000007bfe0:
	.ascii "File: SRC/serialize-ast.lm Line: 72 Column: 37"
	.zero 1
uuid_000000000007c008:
	.ascii "File: SRC/slot.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007c027:
	.ascii "File: SRC/slot.lm Line: 30 Column: 14"
	.zero 1
uuid_000000000007c03d:
	.ascii "File: SRC/slot.lm Line: 26 Column: 5"
	.zero 1
uuid_SB_counter_CL_U64:
.zero 8
uuid_000000000007c047:
	.ascii "uuid_"
	.zero 1
uuid_000000000007c05a:
	.ascii "File: SRC/var-name-if-var.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c092:
	.ascii "File: SRC/parse-lambda.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c0b6:
	.ascii "File: SRC/parse-lambda.lm Line: 16 Column: 38"
	.zero 1
uuid_000000000007c0c3:
	.ascii "File: SRC/parse-lambda.lm Line: 14 Column: 5"
	.zero 1
uuid_000000000007c0e5:
	.ascii "File: SRC/parse-lambda.lm Line: 33 Column: 14"
	.zero 1
uuid_000000000007c0f2:
	.ascii "Expected Dot For Lambda Body\n"
	.zero 1
uuid_000000000007c0fc:
	.ascii "File: SRC/parse-lambda.lm Line: 30 Column: 8"
	.zero 1
uuid_000000000007c146:
	.ascii "File: SRC/parse-many-expressions.lm Line: 18 Column: 14"
	.zero 1
uuid_000000000007c14a:
	.ascii "File: SRC/parse-many-expressions.lm Line: 6 Column: 8"
	.zero 1
uuid_000000000007c179:
	.ascii "File: SRC/parse-one-expression.lm Line: 12 Column: 11"
	.zero 1
uuid_000000000007c192:
	.ascii "Unexpected Closing Parentheses"
	.zero 1
uuid_000000000007c1b1:
	.ascii "File: SRC/parse-one-expression.lm Line: 24 Column: 11"
	.zero 1
uuid_000000000007c1df:
	.ascii "File: SRC/parse-one-expression.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007c209:
	.ascii "macro"
	.zero 1
uuid_000000000007c23a:
	.ascii "File: SRC/parse-toplevel.lm Line: 18 Column: 26"
	.zero 1
uuid_000000000007c241:
	.ascii "File: SRC/parse-toplevel.lm Line: 14 Column: 20"
	.zero 1
uuid_000000000007c245:
	.ascii "File: SRC/parse-toplevel.lm Line: 11 Column: 14"
	.zero 1
uuid_000000000007c249:
	.ascii "meta"
	.zero 1
uuid_000000000007c268:
	.ascii "File: SRC/parse-toplevel.lm Line: 36 Column: 14"
	.zero 1
uuid_000000000007c26c:
	.ascii "type"
	.zero 1
uuid_000000000007c282:
	.ascii "fragment"
	.zero 1
uuid_000000000007c2aa:
	.ascii "File: SRC/parse-toplevel.lm Line: 50 Column: 34"
	.zero 1
uuid_000000000007c2ae:
	.ascii "File: SRC/parse-toplevel.lm Line: 48 Column: 14"
	.zero 1
uuid_000000000007c2d9:
	.ascii "File: SRC/parse-toplevel.lm Line: 70 Column: 34"
	.zero 1
uuid_000000000007c2dd:
	.ascii "File: SRC/parse-toplevel.lm Line: 68 Column: 14"
	.zero 1
uuid_000000000007c30b:
	.ascii "suffix"
	.zero 1
uuid_000000000007c321:
	.ascii "atom"
	.zero 1
uuid_000000000007c369:
	.ascii "size"
	.zero 1
uuid_000000000007c394:
	.ascii "import"
	.zero 1
uuid_000000000007c3c8:
	.ascii "zero"
	.zero 1
uuid_000000000007c3de:
	.ascii "non-zero"
	.zero 1
uuid_000000000007c3df:
	.ascii "t"
	.zero 1
uuid_000000000007c3e0:
	.ascii "!="
	.zero 1
uuid_000000000007c3e1:
	.ascii ".0"
	.zero 1
uuid_000000000007c3e2:
	.ascii ":="
	.zero 1
uuid_000000000007c40a:
	.ascii "File: SRC/parse-toplevel.lm Line: 150 Column: 14"
	.zero 1
uuid_000000000007c417:
	.ascii "File: SRC/parse-toplevel.lm Line: 162 Column: 14"
	.zero 1
uuid_000000000007c41b:
	.ascii "File: SRC/parse-toplevel.lm Line: 5 Column: 8"
	.zero 1
uuid_000000000007c442:
	.ascii "File: SRC/parse-type-comma-sep.lm Line: 7 Column: 8"
	.zero 1
uuid_000000000007c475:
	.ascii "File: SRC/parse-type-single.lm Line: 9 Column: 11"
	.zero 1
uuid_000000000007c47f:
	.ascii "File: SRC/parse-type-single.lm Line: 59 Column: 11"
	.zero 1
uuid_000000000007c4a1:
	.ascii "Unexpected Parameterized Type: "
	.zero 1
uuid_000000000007c4a2:
	.ascii "File: SRC/parse-type-single.lm Line: 86 Column: 25"
	.zero 1
uuid_000000000007c4ac:
	.ascii "File: SRC/parse-type-single.lm Line: 68 Column: 14"
	.zero 1
uuid_000000000007c4cc:
	.ascii "File: SRC/parse-type.lm Line: 12 Column: 8"
	.zero 1
uuid_000000000007c4e5:
	.ascii "File: SRC/parse-type.lm Line: 22 Column: 14"
	.zero 1
uuid_000000000007c4fe:
	.ascii "File: SRC/parse-type.lm Line: 51 Column: 8"
	.zero 1
uuid_000000000007c54c:
	.ascii "File: SRC/remove-parens.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007c556:
	.ascii "File: SRC/remove-parens.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c599:
	.ascii "File: SRC/take-one-expr.lm Line: 19 Column: 11"
	.zero 1
uuid_000000000007c5a3:
	.ascii "File: SRC/take-one-expr.lm Line: 6 Column: 30"
	.zero 1
uuid_000000000007c5ad:
	.ascii "src"
	.zero 1
cstring_SB_cache_CL_StringStringListStringStringListCaseNumber1:
.zero 32
uuid_000000000007c5bd:
	.ascii "File: SRC/compile-declare-cstring.lm Line: 10 Column: 32"
	.zero 1
uuid_000000000007c5c4:
	.ascii ":\n	.ascii \""
	.zero 1
uuid_000000000007c5c5:
	.ascii "\"\n	.zero 1\n"
	.zero 1
uuid_000000000007c62c:
	.ascii "File: SRC/compile-destructure-args.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c654:
	.ascii "True"
	.zero 1
uuid_000000000007c655:
	.ascii "False"
	.zero 1
uuid_000000000007c656:
	.ascii "\\t"
	.zero 1
uuid_000000000007c657:
	.ascii "10"
	.zero 1
uuid_000000000007c658:
	.ascii "\\s"
	.zero 1
uuid_000000000007c659:
	.ascii "32"
	.zero 1
uuid_000000000007c65a:
	.ascii "\\o"
	.zero 1
uuid_000000000007c65b:
	.ascii "35"
	.zero 1
uuid_000000000007c65c:
	.ascii "\\`"
	.zero 1
uuid_000000000007c65d:
	.ascii "39"
	.zero 1
uuid_000000000007c65e:
	.ascii "\\["
	.zero 1
uuid_000000000007c65f:
	.ascii "40"
	.zero 1
uuid_000000000007c660:
	.ascii "\\]"
	.zero 1
uuid_000000000007c661:
	.ascii "41"
	.zero 1
uuid_000000000007c662:
	.ascii "\\:"
	.zero 1
uuid_000000000007c663:
	.ascii "59"
	.zero 1
uuid_000000000007c664:
	.ascii "File: SRC/compile-expr-direct.lm Line: 36 Column: 20"
	.zero 1
uuid_000000000007c740:
	.ascii "File: SRC/compile-expr-direct.lm Line: 81 Column: 11"
	.zero 1
uuid_000000000007c7a7:
	.ascii "into-branch-conditional"
	.zero 1
uuid_000000000007c7a8:
	.ascii "rsp-offset"
	.zero 1
uuid_000000000007c7a9:
	.ascii "end-offset"
	.zero 1
uuid_000000000007c7aa:
	.ascii "return-size"
	.zero 1
uuid_000000000007c7ab:
	.ascii "ImplicitContext"
	.zero 1
uuid_000000000007c7ac:
	.ascii "ictx"
	.zero 1
uuid_000000000007c7ad:
	.ascii "primitive::if"
	.zero 1
uuid_000000000007c7e7:
	.ascii "File: SRC/compile-expr-direct.lm Line: 166 Column: 11"
	.zero 1
uuid_000000000007c7eb:
	.ascii "unframe"
	.zero 1
uuid_000000000007c7ec:
	.ascii "	add $"
	.zero 1
uuid_000000000007c7ed:
	.ascii ", %rsp\n"
	.zero 1
uuid_000000000007c85d:
	.ascii "File: SRC/compile-expr-direct.lm Line: 196 Column: 14"
	.zero 1
uuid_000000000007c870:
	.ascii "File: SRC/compile-expr-direct.lm Line: 6 Column: 5"
	.zero 1
uuid_000000000007c89b:
	.ascii "File: SRC/compile-expr.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c8cf:
	.ascii "File: SRC/compile-fragment-args.lm Line: 7 Column: 11"
	.zero 1
uuid_000000000007c8d6:
	.ascii "File: SRC/compile-fragment-args.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007c8e9:
	.ascii "cdecl::args-size"
	.zero 1
uuid_000000000007c8ea:
	.ascii "File: SRC/compile-global.lm Line: 22 Column: 14"
	.zero 1
uuid_000000000007c8f4:
	.ascii "_COUNTER"
	.zero 1
uuid_000000000007c8f5:
	.ascii ":\n.zero 8\n"
	.zero 1
uuid_000000000007c8f6:
	.ascii "_LABEL:\n	.ascii	\"\\\\t"
	.zero 1
uuid_000000000007c8f7:
	.ascii "\\\\n\"\n	.zero 1\n"
	.zero 1
uuid_000000000007c8f8:
	.ascii "	mov $"
	.zero 1
uuid_000000000007c8f9:
	.ascii ", %RBX\n	mov 0(%RBX), %RAX\n"
	.zero 1
uuid_000000000007c8fa:
	.ascii "	inc %RAX\n	mov %RAX, 0(%RBX)\n"
	.zero 1
uuid_000000000007c8fb:
	.ascii "	push %RBP\n	mov %RSP, %RBP\n	push %RAX\n	call print_CL_ArrowNilU64\n	mov %RBP, %RSP\n	pop %RBP\n"
	.zero 1
uuid_000000000007c8fc:
	.ascii "	push %RBP\n	mov %RSP, %RBP\n	push $"
	.zero 1
uuid_000000000007c8fd:
	.ascii "_LABEL\n"
	.zero 1
uuid_000000000007c8fe:
	.ascii "	call print_CL_ArrowNilString\n	mov %RBP, %RSP\n	pop %RBP\n"
	.zero 1
uuid_000000000007c902:
	.ascii "frame"
	.zero 1
uuid_000000000007c903:
	.ascii "	sub $"
	.zero 1
uuid_000000000007c904:
	.ascii "	ret\n"
	.zero 1
uuid_000000000007c929:
	.ascii ":\n.zero "
	.zero 1
uuid_000000000007c92a:
	.ascii "File: SRC/compile-global.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007c93d:
	.ascii "File: SRC/compile-maybe-push-stack.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007c96e:
	.ascii "File: SRC/compile-push-rvalue.lm Line: 11 Column: 11"
	.zero 1
uuid_000000000007c97b:
	.ascii "File: SRC/compile-push-rvalue.lm Line: 8 Column: 5"
	.zero 1
uuid_000000000007c988:
	.ascii "FunctionArguments"
	.zero 1
uuid_000000000007c989:
	.ascii "function-id"
	.zero 1
uuid_000000000007c98a:
	.ascii "function-name"
	.zero 1
uuid_000000000007c98b:
	.ascii "function-type"
	.zero 1
uuid_000000000007c98c:
	.ascii "args-size"
	.zero 1
uuid_000000000007c98d:
	.ascii "used"
	.zero 1
uuid_000000000007c98e:
	.ascii "args"
	.zero 1
uuid_000000000007c98f:
	.ascii "primitive::call"
	.zero 1
uuid_000000000007c9a2:
	.ascii "File: SRC/compile-stack-calls.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007c9c4:
	.ascii "File: SRC/translate-local-variables.lm Line: 11 Column: 17"
	.zero 1
uuid_000000000007c9c8:
	.ascii "File: SRC/translate-local-variables.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007c9cf:
	.ascii "File: SRC/translate-local-variables.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007c9e2:
	.ascii "L"
	.zero 1
uuid_000000000007c9e6:
	.ascii "File: SRC/cc-blob.lm Line: 7 Column: 5"
	.zero 1
uuid_000000000007c9f6:
	.ascii "File: SRC/cc-blob.lm Line: 30 Column: 5"
	.zero 1
uuid_000000000007ca4b:
	.ascii "File: SRC/cc-args.lm Line: 9 Column: 14"
	.zero 1
uuid_000000000007ca9d:
	.ascii "Codegen Unexpected RHS"
	.zero 1
uuid_000000000007caa1:
	.ascii "File: SRC/cc-args.lm Line: 75 Column: 14"
	.zero 1
uuid_000000000007cab4:
	.ascii "File: SRC/cc-args.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007cb2d:
	.ascii "for-arg-i"
	.zero 1
uuid_000000000007cb6d:
	.ascii "for-arg"
	.zero 1
uuid_000000000007cba4:
	.ascii "File: SRC/blob-render.lm Line: 37 Column: 11"
	.zero 1
uuid_000000000007cbd8:
	.ascii "for-atom"
	.zero 1
uuid_000000000007cc0f:
	.ascii "File: SRC/blob-render.lm Line: 53 Column: 34"
	.zero 1
uuid_000000000007cc22:
	.ascii "range"
	.zero 1
uuid_000000000007cc38:
	.ascii "uuid"
	.zero 1
uuid_000000000007cc4b:
	.ascii "align"
	.zero 1
uuid_000000000007cc67:
	.ascii "=="
	.zero 1
uuid_000000000007cca4:
	.ascii "/"
	.zero 1
uuid_000000000007ccc0:
	.ascii "*"
	.zero 1
uuid_000000000007ccdc:
	.ascii "%"
	.zero 1
uuid_000000000007cd4f:
	.ascii "File: SRC/blob-render.lm Line: 151 Column: 11"
	.zero 1
uuid_000000000007cd89:
	.ascii "File: SRC/blob-render.lm Line: 175 Column: 14"
	.zero 1
uuid_000000000007cd90:
	.ascii "Unknown Render Term "
	.zero 1
uuid_000000000007cd91:
	.ascii "File: SRC/blob-render.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007ce2b:
	.ascii "File: SRC/blob-render.lm Line: 205 Column: 5"
	.zero 1
uuid_000000000007ce9b:
	.ascii "File: SRC/extract-uuids.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007ced8:
	.ascii "File: SRC/index-typedefs.lm Line: 3 Column: 31"
	.zero 1
uuid_000000000007cf51:
	.ascii "Invalid Typedef"
	.zero 1
uuid_000000000007cf52:
	.ascii "File: SRC/index-typedefs.lm Line: 17 Column: 5"
	.zero 1
uuid_000000000007cfce:
	.ascii "Unrecognized Macro Pattern\n"
	.zero 1
uuid_000000000007cfcf:
	.ascii "File: SRC/is-macro-head.lm Line: 5 Column: 30"
	.zero 1
uuid_000000000007d021:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 11 Column: 11"
	.zero 1
uuid_000000000007d02b:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 25 Column: 14"
	.zero 1
uuid_000000000007d035:
	.ascii "File: SRC/preprocess-apply-hard.lm Line: 6 Column: 30"
	.zero 1
uuid_000000000007d03f:
	.ascii "Invalid Macro Application\n"
	.zero 1
uuid_000000000007d094:
	.ascii "_t"
	.zero 1
uuid_000000000007d095:
	.ascii "Token"
	.zero 1
uuid_000000000007d096:
	.ascii "Literal+Constant+String"
	.zero 1
uuid_000000000007d097:
	.ascii "_"
	.zero 1
uuid_000000000007d0d7:
	.ascii "File: SRC/preprocess-apply-literals.lm Line: 5 Column: 5"
	.zero 1
uuid_000000000007d0f6:
	.ascii ":Location:"
	.zero 1
uuid_000000000007d100:
	.ascii "p"
	.zero 1
uuid_000000000007d113:
	.ascii "Location Unknown"
	.zero 1
uuid_000000000007d120:
	.ascii "File: "
	.zero 1
uuid_000000000007d121:
	.ascii " Line: "
	.zero 1
uuid_000000000007d122:
	.ascii " Column: "
	.zero 1
uuid_000000000007d123:
	.ascii "File: SRC/preprocess-apply-locations.lm Line: 8 Column: 11"
	.zero 1
uuid_000000000007d169:
	.ascii "File: SRC/preprocess-apply-locations.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d2b7:
	.ascii "File: SRC/preprocess-apply.lm Line: 38 Column: 38"
	.zero 1
uuid_000000000007d2d6:
	.ascii "File: SRC/preprocess-apply.lm Line: 56 Column: 38"
	.zero 1
uuid_000000000007d337:
	.ascii "File: SRC/preprocess-apply.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d37a:
	.ascii "File: SRC/preprocess-is-suffixed.lm Line: 5 Column: 32"
	.zero 1
uuid_000000000007d3ab:
	.ascii "File: SRC/substitute-uuids.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007d3fd:
	.ascii "File: SRC/substitute-uuids.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d4ac:
	.ascii ":Literal:"
	.zero 1
uuid_000000000007d51f:
	.ascii "File: SRC/try-destructure-macro.lm Line: 13 Column: 14"
	.zero 1
uuid_000000000007d577:
	.ascii ":Any:"
	.zero 1
uuid_000000000007d608:
	.ascii ":Variable:"
	.zero 1
uuid_000000000007d66c:
	.ascii ":Tag:"
	.zero 1
uuid_000000000007d691:
	.ascii "Constant+Literal+U64"
	.zero 1
uuid_000000000007d692:
	.ascii "Tag<"
	.zero 1
uuid_000000000007d6a8:
	.ascii "File: SRC/try-destructure-macro.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d6f4:
	.ascii "Fragment Has No Type:\n"
	.zero 1
uuid_000000000007d6f8:
	.ascii "File: SRC/destructure-lhs.lm Line: 7 Column: 11"
	.zero 1
uuid_000000000007d735:
	.ascii "File: SRC/destructure-lhs.lm Line: 24 Column: 11"
	.zero 1
uuid_000000000007d739:
	.ascii "Unexpected Destructure LHS: "
	.zero 1
uuid_000000000007d73a:
	.ascii "File: SRC/destructure-lhs.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d750:
	.ascii "File: SRC/fragment::chain.lm Line: 27 Column: 36"
	.zero 1
uuid_000000000007d77b:
	.ascii "File: SRC/fragment::get.lm Line: 7 Column: 33"
	.zero 1
uuid_000000000007d782:
	.ascii "File: SRC/fragment::get.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d79b:
	.ascii "File: SRC/fragment::set-context.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d7b4:
	.ascii "File: SRC/fragment::set-offset.lm Line: 4 Column: 5"
	.zero 1
uuid_000000000007d7cd:
	.ascii "File: SRC/fragment::set-term.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d7e6:
	.ascii "File: SRC/fragment::set-type.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d7ff:
	.ascii "File: SRC/fragment::set-vararg.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d818:
	.ascii "File: SRC/fragment::set.lm Line: 3 Column: 5"
	.zero 1
uuid_000000000007d81c:
	.ascii "--blob"
	.zero 1
uuid_000000000007d81d:
	.ascii "--gnu"
	.zero 1
uuid_000000000007d81e:
	.ascii "--tokenize"
	.zero 1
uuid_000000000007d81f:
	.ascii "--parse"
	.zero 1
uuid_000000000007d820:
	.ascii "--preprocess"
	.zero 1
uuid_000000000007d821:
	.ascii "--typecheck"
	.zero 1
uuid_000000000007d822:
	.ascii "--compile"
	.zero 1
uuid_000000000007d823:
	.ascii "--strict"
	.zero 1
uuid_000000000007d824:
	.ascii "--gradual"
	.zero 1
uuid_000000000007d825:
	.ascii "--macro"
	.zero 1
uuid_000000000007d826:
	.ascii "--nomacro"
	.zero 1
uuid_000000000007d827:
	.ascii "--profile-invocations"
	.zero 1
uuid_000000000007d828:
	.ascii "-o"
	.zero 1
uuid_000000000007d829:
	.ascii "File: SRC/main.lm Line: 6 Column: 8"
	.zero 1
uuid_000000000007d875:
	.ascii "File: SRC/main.lm Line: 35 Column: 37"
	.zero 1
uuid_000000000007d889:
	.ascii "File: SRC/main.lm Line: 43 Column: 5"
	.zero 1
uuid_000000000007d8a7:
	.ascii "File: LIB/default-list.lm Line: 57 Column: 25"
	.zero 1
uuid_000000000007d8c5:
	.ascii "File: LIB/default-list.lm Line: 44 Column: 25"
	.zero 1
uuid_000000000007d8d6:
	.ascii "List::head is fallible\n"
	.zero 1
uuid_000000000007d8d7:
	.ascii "File: LIB/default-list.lm Line: 10 Column: 5"
	.zero 1
uuid_000000000007d901:
	.ascii "File: LIB/default-list.lm Line: 33 Column: 8"
	.zero 1
uuid_000000000007d93b:
	.ascii "File: LIB/default-list.lm Line: 20 Column: 26"
	.zero 1
uuid_000000000007d9d4:
	.ascii "File: LIB/default-list.lm Line: 71 Column: 8"
	.zero 1
uuid_000000000007d9e7:
	.ascii "File: LIB/default-list.lm Line: 78 Column: 5"
	.zero 1
uuid_000000000007daa7:
	.ascii "File: LIB/default-stdlib.lm Line: 20 Column: 5"
	.zero 1
uuid_000000000007dab8:
	.ascii "File: LIB/default-stdlib.lm Line: 52 Column: 5"
	.zero 1
uuid_000000000007dc65:
	.ascii "File: LIB/default-stdlib.lm Line: 35 Column: 5"
	.zero 1
